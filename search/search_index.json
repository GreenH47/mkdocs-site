{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"CSS/CSS_note_menu/","title":"CSS  note navigation","text":"<p>Create time: 2022-12-06  Last update: 2022-12-06</p>"},{"location":"CSS/CSS_note_menu/#navigation-of-all-css-note","title":"Navigation of all CSS note","text":""},{"location":"Git/Git/","title":"Git branching learning","text":""},{"location":"Git/Git/#git-reset-to-removed-from-the-staging-area","title":"git reset to removed from the staging area","text":""},{"location":"Git/Git/#git-branching-learning","title":"Git branching learning","text":"<p>https://learngitbranching.js.org/?demo=&amp;locale=zh_CN  </p> <pre><code>\u57fa\u7840\ngit help &lt;command&gt;: \u83b7\u53d6 git \u547d\u4ee4\u7684\u5e2e\u52a9\u4fe1\u606f\ngit init: \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 git \u4ed3\u5e93\uff0c\u5176\u6570\u636e\u4f1a\u5b58\u653e\u5728\u4e00\u4e2a\u540d\u4e3a .git \u7684\u76ee\u5f55\u4e0b\ngit status: \u663e\u793a\u5f53\u524d\u7684\u4ed3\u5e93\u72b6\u6001\ngit add &lt;filename&gt;: \u6dfb\u52a0\u6587\u4ef6\u5230\u6682\u5b58\u533a\ngit commit: \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u63d0\u4ea4\ngit log: \u663e\u793a\u5386\u53f2\u65e5\u5fd7\ngit log --all --graph --decorate: \u53ef\u89c6\u5316\u5386\u53f2\u8bb0\u5f55\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\ngit diff &lt;filename&gt;: \u663e\u793a\u4e0e\u6682\u5b58\u533a\u6587\u4ef6\u7684\u5dee\u5f02\ngit diff &lt;revision&gt; &lt;filename&gt;: \u663e\u793a\u67d0\u4e2a\u6587\u4ef6\u4e24\u4e2a\u7248\u672c\u4e4b\u95f4\u7684\u5dee\u5f02\ngit checkout &lt;revision&gt;: \u66f4\u65b0 HEAD \u548c\u76ee\u524d\u7684\u5206\u652f\n\n</code></pre> <pre><code>\u5206\u652f\u548c\u5408\u5e76\ngit branch: \u663e\u793a\u5206\u652f\ngit branch &lt;name&gt;: \u521b\u5efa\u5206\u652f\ngit checkout -b &lt;name&gt;: \u521b\u5efa\u5206\u652f\u5e76\u5207\u6362\u5230\u8be5\u5206\u652f\n\u76f8\u5f53\u4e8e git branch &lt;name&gt;; git checkout &lt;name&gt;\ngit merge &lt;revision&gt;: \u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\ngit mergetool: \u4f7f\u7528\u5de5\u5177\u6765\u5904\u7406\u5408\u5e76\u51b2\u7a81\ngit rebase: \u5c06\u4e00\u7cfb\u5217\u8865\u4e01\u53d8\u57fa\uff08rebase\uff09\u4e3a\u65b0\u7684\u57fa\u7ebf\n\n</code></pre> <pre><code>\u8fdc\u7aef\u64cd\u4f5c\ngit remote: \u5217\u51fa\u8fdc\u7aef\ngit remote add &lt;name&gt; &lt;url&gt;: \u6dfb\u52a0\u4e00\u4e2a\u8fdc\u7aef\ngit push &lt;remote&gt; &lt;local branch&gt;:&lt;remote branch&gt;: \u5c06\u5bf9\u8c61\u4f20\u9001\u81f3\u8fdc\u7aef\u5e76\u66f4\u65b0\u8fdc\u7aef\u5f15\u7528\ngit branch --set-upstream-to=&lt;remote&gt;/&lt;remote branch&gt;: \u521b\u5efa\u672c\u5730\u548c\u8fdc\u7aef\u5206\u652f\u7684\u5173\u8054\u5173\u7cfb\ngit fetch: \u4ece\u8fdc\u7aef\u83b7\u53d6\u5bf9\u8c61/\u7d22\u5f15\ngit pull: \u76f8\u5f53\u4e8e git fetch; git merge\ngit clone: \u4ece\u8fdc\u7aef\u4e0b\u8f7d\u4ed3\u5e93\n</code></pre> <pre><code>\u64a4\u9500\ngit commit --amend: \u7f16\u8f91\u63d0\u4ea4\u7684\u5185\u5bb9\u6216\u4fe1\u606f\ngit reset HEAD &lt;file&gt;: \u6062\u590d\u6682\u5b58\u7684\u6587\u4ef6\ngit checkout -- &lt;file&gt;: \u4e22\u5f03\u4fee\u6539\ngit restore: git2.32\u7248\u672c\u540e\u53d6\u4ee3git reset \u8fdb\u884c\u8bb8\u591a\u64a4\u9500\u64cd\u4f5c\n</code></pre> <pre><code>Git \u9ad8\u7ea7\u64cd\u4f5c\ngit config: Git \u662f\u4e00\u4e2a \u9ad8\u5ea6\u53ef\u5b9a\u5236\u7684 \u5de5\u5177\ngit clone --depth=1: \u6d45\u514b\u9686\uff08shallow clone\uff09\uff0c\u4e0d\u5305\u62ec\u5b8c\u6574\u7684\u7248\u672c\u5386\u53f2\u4fe1\u606f\ngit add -p: \u4ea4\u4e92\u5f0f\u6682\u5b58\ngit rebase -i: \u4ea4\u4e92\u5f0f\u53d8\u57fa\ngit blame: \u67e5\u770b\u6700\u540e\u4fee\u6539\u67d0\u884c\u7684\u4eba\ngit stash: \u6682\u65f6\u79fb\u9664\u5de5\u4f5c\u76ee\u5f55\u4e0b\u7684\u4fee\u6539\u5185\u5bb9\ngit bisect: \u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u641c\u7d22\u5386\u53f2\u8bb0\u5f55\n.gitignore: \u6307\u5b9a \u6545\u610f\u4e0d\u8ffd\u8e2a\u7684\u6587\u4ef6\n</code></pre>"},{"location":"Git/Git/#git-branch","title":"Git Branch","text":"<p>Git \u7684\u5206\u652f\u4e5f\u975e\u5e38\u8f7b\u91cf\u3002\u5b83\u4eec\u53ea\u662f\u7b80\u5355\u5730\u6307\u5411\u67d0\u4e2a\u63d0\u4ea4\u7eaa\u5f55.\u8fd9\u662f\u56e0\u4e3a\u5373\u4f7f\u521b\u5efa\u518d\u591a\u7684\u5206\u652f\u4e5f\u4e0d\u4f1a\u9020\u6210\u50a8\u5b58\u6216\u5185\u5b58\u4e0a\u7684\u5f00\u9500\uff0c\u5e76\u4e14\u6309\u903b\u8f91\u5206\u89e3\u5de5\u4f5c\u5230\u4e0d\u540c\u7684\u5206\u652f\u8981\u6bd4\u7ef4\u62a4\u90a3\u4e9b\u7279\u522b\u81c3\u80bf\u7684\u5206\u652f\u7b80\u5355\u591a\u4e86</p> <ul> <li> <p>\u5efa\u4e00\u4e2a\u5230\u540d\u4e3a newImage \u7684\u5206\u652f\u3002 <code>git branch newImage</code> </p> </li> <li> <p>\u5f80\u65b0\u5206\u652f\u91cc\u63d0\u4ea4\u4e00\u4e9b\u4e1c\u897f <code>git commit</code> \u4e3a\u4ec0\u4e48 main \u5206\u652f\u524d\u8fdb\u4e86\uff0c\u4f46 newImage \u5206\u652f\u8fd8\u5f85\u5728\u539f\u5730\u5462 \u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u201c\u5728\u201d\u8fd9\u4e2a\u65b0\u5206\u652f\u4e0a\uff0c\u770b\u5230 main \u5206\u652f\u4e0a\u7684\u90a3\u4e2a\u661f\u53f7\uff08*\uff09\u4e86\u5417\uff1f\u8fd9\u8868\u793a\u5f53\u524d\u6240\u5728\u7684\u5206\u652f\u662f main\u3002  </p> </li> </ul> <p></p> <ul> <li>Git \u6211\u4eec\u60f3\u8981\u5207\u6362\u5230\u65b0\u7684\u5206\u652f\u4e0a <code>git checkout &lt;name&gt;</code>  \u4e0b\u9762\u7684\u547d\u4ee4\u4f1a\u8ba9\u6211\u4eec\u5728\u63d0\u4ea4\u4fee\u6539\u4e4b\u524d\u5148\u5207\u6362\u5230\u65b0\u7684\u5206\u652f\u4e0a <code>git checkout newImage; git commit</code>  \u8fd9\u5c31\u5bf9\u4e86\uff01\u6211\u4eec\u7684\u4fee\u6539\u5df2\u7ecf\u4fdd\u5b58\u5230\u65b0\u7684\u5206\u652f\u91cc\u4e86\u3002  </li> </ul> <p></p> <pre><code>git branch bugFix;\ngit checkout bugFix;\n</code></pre>"},{"location":"Git/Git/#git-merge","title":"Git Merge","text":"<p>\u5982\u4f55\u5c06\u4e24\u4e2a\u5206\u652f\u5408\u5e76\u5230\u4e00\u8d77\u3002\u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u5728\u5176\u4e0a\u5f00\u53d1\u67d0\u4e2a\u65b0\u529f\u80fd\uff0c\u5f00\u53d1\u5b8c\u6210\u540e\u518d\u5408\u5e76\u56de\u4e3b\u7ebf\u3002  </p> <ul> <li>\u6211\u4eec\u51c6\u5907\u4e86\u4e24\u4e2a\u5206\u652f\uff0c\u6bcf\u4e2a\u5206\u652f\u4e0a\u5404\u6709\u4e00\u4e2a\u72ec\u6709\u7684\u63d0\u4ea4\u3002\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u4e00\u4e2a\u5206\u652f\u5305\u542b\u4e86\u6211\u4eec\u4fee\u6539\u7684\u6240\u6709\u5185\u5bb9\u3002 \u54b1\u4eec\u901a\u8fc7\u5408\u5e76\u8fd9\u4e24\u4e2a\u5206\u652f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 <code>git merge bugFix</code> </li> </ul> <p>\u6211\u4eec\u8981\u628a bugFix \u5408 main \u73b0\u5728\u6307\u5411\u4e86\u4e00\u4e2a\u62e5\u6709\u4e24\u4e2a\u7236\u8282\u70b9\u7684\u63d0\u4ea4\u8bb0\u5f55\u3002\u5047\u5982\u4ece main \u5f00\u59cb\u6cbf\u7740\u7bad\u5934\u5411\u4e0a\u770b\uff0c  \u5728\u5230\u8fbe\u8d77\u70b9\u7684\u8def\u4e0a\u4f1a\u7ecf\u8fc7\u6240\u6709\u7684\u63d0\u4ea4\u8bb0\u5f55\u3002\u8fd9\u610f\u5473\u7740 main \u5305\u542b\u4e86\u5bf9\u4ee3\u7801\u5e93\u7684\u6240\u6709\u4fee\u6539\u3002  </p> <ul> <li>\u628a main \u5206\u652f\u5408\u5e76\u5230 bugFix\uff1a git checkout bugFix; git merge main \u56e0\u4e3a main \u7ee7\u627f\u81ea bugFix\uff0cGit \u4ec0\u4e48\u90fd\u4e0d\u7528\u505a\uff0c\u53ea\u662f\u7b80\u5355\u5730\u628a bugFix \u79fb\u52a8\u5230 main \u6240\u6307\u5411\u7684\u90a3\u4e2a\u63d0\u4ea4\u8bb0\u5f55 </li> </ul> <pre><code>git checkout -b bugFix;\ngit commit;\ngit checkout master;\ngit commit;\ngit merge bugFix;\n</code></pre>"},{"location":"Git/Git/#git-rebase","title":"Git Rebase","text":"<p>\u7b2c\u4e8c\u79cd\u5408\u5e76\u5206\u652f\u7684\u65b9\u6cd5\u662f git rebase\u3002Rebase \u5b9e\u9645\u4e0a\u5c31\u662f\u53d6\u51fa\u4e00\u7cfb\u5217\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u201c\u590d\u5236\u201d\u5b83\u4eec\uff0c\u7136\u540e\u5728\u53e6\u5916\u4e00\u4e2a\u5730\u65b9\u9010\u4e2a\u7684\u653e\u4e0b\u53bb\u3002Rebase \u7684\u4f18\u52bf\u5c31\u662f\u53ef\u4ee5\u521b\u9020\u66f4\u7ebf\u6027\u7684\u63d0\u4ea4\u5386\u53f2  </p> <ul> <li> <p>\u628a bugFix \u5206\u652f\u91cc\u7684\u5de5\u4f5c\u76f4\u63a5\u79fb\u5230 main \u5206\u652f\u4e0a\u3002\u4f7f\u5f97\u4e24\u4e2a\u5206\u652f\u7684\u529f\u80fd\u6309\u987a\u5e8f\u5f00\u53d1\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u4eec\u662f\u5e76\u884c\u5f00\u53d1\u7684\u3002 <code>git rebase main</code> \u73b0\u5728 bugFix \u5206\u652f\u4e0a\u7684\u5de5\u4f5c\u5728 main \u7684\u6700\u9876\u7aef\uff0c\u540c\u65f6\u6211\u4eec\u4e5f\u5f97\u5230\u4e86\u4e00\u4e2a\u66f4\u7ebf\u6027\u7684\u63d0\u4ea4\u5e8f\u5217 </p> </li> <li> <p>\u5207\u6362\u5230\u4e86 main \u4e0a\u3002\u628a\u5b83 rebase \u5230 bugFix \u5206\u652f\u4e0a git rebase bugFix \u597d\u4e86\uff01\u7531\u4e8e bugFix \u7ee7\u627f\u81ea main\uff0c\u6240\u4ee5 Git \u53ea\u662f\u7b80\u5355\u7684\u628a main \u5206\u652f\u7684\u5f15\u7528\u5411\u524d\u79fb\u52a8\u4e86\u4e00\u4e0b\u800c\u5df2 </p> </li> </ul> <pre><code>git checkout -b bugFix;\ngit commit;\ngit checkout master;\ngit commit;\ngit checkout bugFix;\ngit rebase master;\n</code></pre>"},{"location":"Git/Git/#git","title":"\u5728 Git \u63d0\u4ea4\u6811\u4e0a\u79fb\u52a8","text":""},{"location":"Git/Git/#head","title":"HEAD","text":"<p>HEAD \u662f\u4e00\u4e2a\u5bf9\u5f53\u524d\u68c0\u51fa\u8bb0\u5f55\u7684\u7b26\u53f7\u5f15\u7528 \u2014\u2014 \u4e5f\u5c31\u662f\u6307\u5411\u4f60\u6b63\u5728\u5176\u57fa\u7840\u4e0a\u8fdb\u884c\u5de5\u4f5c\u7684\u63d0\u4ea4\u8bb0\u5f55 HEAD \u603b\u662f\u6307\u5411\u5f53\u524d\u5206\u652f\u4e0a\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u8bb0\u5f55\u3002\u5927\u591a\u6570\u4fee\u6539\u63d0\u4ea4\u6811\u7684 Git \u547d\u4ee4\u90fd\u662f\u4ece\u6539\u53d8 HEAD \u7684\u6307\u5411\u5f00\u59cb\u7684\u3002HEAD \u901a\u5e38\u60c5\u51b5\u4e0b\u662f\u6307\u5411\u5206\u652f\u540d\u7684\uff08\u5982 bugFix\uff09\u3002\u5728\u4f60\u63d0\u4ea4\u65f6\uff0c\u6539\u53d8\u4e86 bugFix \u7684\u72b6\u6001\uff0c\u8fd9\u4e00\u53d8\u5316\u901a\u8fc7 HEAD \u53d8\u5f97\u53ef\u89c1\u3002 </p> <ul> <li>\u63d0\u4ea4\u524d\u540e HEAD \u7684\u4f4d\u7f6e  </li> </ul> <pre><code>git checkout C1; \ngit checkout main; \ngit commit; \ngit checkout C2  \n</code></pre> <p></p> <p>HEAD \u6307\u5411\u4e86 main\uff0c\u968f\u7740\u63d0\u4ea4\u5411\u524d\u79fb\u52a8\u3002 \uff08\u8fd9\u4e9b\u547d\u4ee4\u5e76\u4e0d\u662f\u771f\u7684\u5728\u67e5\u770b HEAD \u6307\u5411\uff0c\u5982\u679c\u60f3\u770b HEAD \u6307\u5411\uff0c\u53ef\u4ee5\u901a\u8fc7 cat .git/HEAD \u67e5\u770b\uff0c \u5982\u679c HEAD \u6307\u5411\u7684\u662f\u4e00\u4e2a\u5f15\u7528\uff0c\u8fd8\u53ef\u4ee5\u7528 git symbolic-ref HEAD \u67e5\u770b\u5b83\u7684\u6307\u5411\u3002\uff09  </p> <ul> <li>\u5206\u79bb\u7684 HEAD \u5206\u79bb\u7684 HEAD \u5c31\u662f\u8ba9\u5176\u6307\u5411\u4e86\u67d0\u4e2a\u5177\u4f53\u7684\u63d0\u4ea4\u8bb0\u5f55\u800c\u4e0d\u662f\u5206\u652f\u540d\u3002\u5728\u547d\u4ee4\u6267\u884c\u4e4b\u524d\u7684\u72b6\u6001\u5982\u4e0b\u6240\u793a HEAD -&gt; main -&gt; C1;  HEAD \u6307\u5411 main\uff0c main \u6307\u5411 C1 <code>git checkout C1</code> </li> </ul> <p>\u73b0\u5728\u53d8\u6210\u4e86HEAD -&gt; C1  </p> <ul> <li>\u76f8\u5bf9\u5f15\u7528 \u4f7f\u7528\u76f8\u5bf9\u5f15\u7528\u7684\u8bdd\uff0c\u4f60\u5c31\u53ef\u4ee5\u4ece\u4e00\u4e2a\u6613\u4e8e\u8bb0\u5fc6\u7684\u5730\u65b9\uff08\u6bd4\u5982 bugFix \u5206\u652f\u6216 HEAD\uff09\u5f00\u59cb\u8ba1\u7b97 \u76f8\u5bf9\u5f15\u7528\u975e\u5e38\u7ed9\u529b\uff0c\u8fd9\u91cc\u6211\u4ecb\u7ecd\u4e24\u4e2a\u7b80\u5355\u7684\u7528\u6cd5\uff1a <code>\u4f7f\u7528 ^ \u5411\u4e0a\u79fb\u52a8 1 \u4e2a\u63d0\u4ea4\u8bb0\u5f55    \u4f7f\u7528 ~&lt;num&gt; \u5411\u4e0a\u79fb\u52a8\u591a\u4e2a\u63d0\u4ea4\u8bb0\u5f55\uff0c\u5982 ~3</code> </li> <li>\u64cd\u4f5c\u7b26 (^) \u628a\u8fd9\u4e2a\u7b26\u53f7\u52a0\u5728\u5f15\u7528\u540d\u79f0\u7684\u540e\u9762\uff0c\u8868\u793a\u8ba9 Git \u5bfb\u627e\u6307\u5b9a\u63d0\u4ea4\u8bb0\u5f55\u7684\u7236\u63d0\u4ea4\u3002 \u6240\u4ee5 main^ \u76f8\u5f53\u4e8e\u201cmain \u7684\u7236\u8282\u70b9\u201d\u3002main^^ \u662f main \u7684\u7b2c\u4e8c\u4e2a\u7236\u8282\u70b9 \u73b0\u5728\u54b1\u4eec\u5207\u6362\u5230 main \u7684\u7236\u8282\u70b9 <code>git checkout main^</code> </li> </ul> <p>\u591a\u6b21\u79fb\u52a8\u5f15\u7528\u53c2\u7167  </p> <pre><code>git checkout C3; \ngit checkout HEAD^; \ngit checkout HEAD^; \ngit checkout HEAD^  \n</code></pre> <p></p> <ul> <li> <p>\u201c~\u201d\u64cd\u4f5c\u7b26 \u5982\u679c\u4f60\u60f3\u5728\u63d0\u4ea4\u6811\u4e2d\u5411\u4e0a\u79fb\u52a8\u5f88\u591a\u6b65\u7684\u8bdd\uff0c\u8be5\u64cd\u4f5c\u7b26\u540e\u9762\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u6570\u5b57\uff08\u53ef\u9009\uff0c\u4e0d\u8ddf\u6570\u5b57\u65f6\u4e0e ^ \u76f8\u540c\uff0c\u5411\u4e0a\u79fb\u52a8\u4e00\u6b21\uff09\uff0c\u6307\u5b9a\u5411\u4e0a\u79fb\u52a8\u591a\u5c11\u6b21\u3002 \u54b1\u4eec\u7528 ~ \u4e00\u6b21\u540e\u9000\u56db\u6b65\u3002 <code>git checkout HEAD~4</code> <li> <p>\u5f3a\u5236\u4fee\u6539\u5206\u652f\u4f4d\u7f6e \u79fb\u52a8\u5206\u652f\u3002\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 -f \u9009\u9879\u8ba9\u5206\u652f\u6307\u5411\u53e6\u4e00\u4e2a\u63d0\u4ea4\u3002\u4f8b\u5982: <code>git branch -f main HEAD~3</code> \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u5c06 main \u5206\u652f\u5f3a\u5236\u6307\u5411 HEAD \u7684\u7b2c 3 \u7ea7\u7236\u63d0\u4ea4\u3002 </p> </li> <pre><code>git branch -f master C6;\ngit branch -f bugFix C0;\ngit checkout C1;\n</code></pre>"},{"location":"Git/Git/#_1","title":"\u64a4\u9500\u53d8\u66f4","text":"<p>\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u6cd5\u7528\u6765\u64a4\u9500\u53d8\u66f4 \u2014\u2014 \u4e00\u662f git reset\uff0c\u8fd8\u6709\u5c31\u662f git revert  </p>"},{"location":"Git/Git/#git-reset","title":"Git Reset","text":"<p>\u901a\u8fc7\u628a\u5206\u652f\u8bb0\u5f55\u56de\u9000\u51e0\u4e2a\u63d0\u4ea4\u8bb0\u5f55\u6765\u5b9e\u73b0\u64a4\u9500\u6539\u52a8\u3002git reset \u5411\u4e0a\u79fb\u52a8\u5206\u652f\uff0c\u539f\u6765\u6307\u5411\u7684\u63d0\u4ea4\u8bb0\u5f55\u5c31\u8ddf\u4ece\u6765\u6ca1\u6709\u63d0\u4ea4\u8fc7\u4e00\u6837 <code>git reset HEAD~1</code> </p> <p>Git \u628a main \u5206\u652f\u79fb\u56de\u5230 C1\uff1b\u73b0\u5728\u6211\u4eec\u7684\u672c\u5730\u4ee3\u7801\u5e93\u6839\u672c\u5c31\u4e0d\u77e5\u9053\u6709 C2 \u8fd9\u4e2a\u63d0\u4ea4\u4e86\u3002 \uff08\u5728reset\u540e\uff0c C2 \u6240\u505a\u7684\u53d8\u66f4\u8fd8\u5728\uff0c\u4f46\u662f\u5904\u4e8e\u672a\u52a0\u5165\u6682\u5b58\u533a\u72b6\u6001\u3002\uff09  </p>"},{"location":"Git/Git/#git-revert","title":"Git revert","text":"<p>\u4e3a\u4e86\u64a4\u9500\u66f4\u6539\u5e76\u5206\u4eab\u7ed9\u522b\u4eba\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 git revert\u3002 <code>git revert HEAD</code> </p> <p>\u5728\u6211\u4eec\u8981\u64a4\u9500\u7684\u63d0\u4ea4\u8bb0\u5f55\u540e\u9762\u5c45\u7136\u591a\u4e86\u4e00\u4e2a\u65b0\u63d0\u4ea4\uff01\u8fd9\u662f\u56e0\u4e3a\u65b0\u63d0\u4ea4\u8bb0\u5f55 C2' \u5f15\u5165\u4e86\u66f4\u6539 \u8fd9\u4e9b\u66f4\u6539\u521a\u597d\u662f\u7528\u6765\u64a4\u9500 C2 \u8fd9\u4e2a\u63d0\u4ea4\u7684\u3002\u4e5f\u5c31\u662f\u8bf4 C2' \u7684\u72b6\u6001\u4e0e C1 \u662f\u76f8\u540c\u7684\u3002  revert \u4e4b\u540e\u5c31\u53ef\u4ee5\u628a\u4f60\u7684\u66f4\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93  </p> <pre><code>git reset local~1;\ngit checkout pushed;\ngit revert pushed;\n</code></pre>"},{"location":"Git/Git/#_2","title":"\u6574\u7406\u63d0\u4ea4\u8bb0\u5f55","text":""},{"location":"Git/Git/#git-cherry-pick","title":"Git Cherry-pick","text":"<p>\u547d\u4ee4\u5f62\u5f0f\u4e3a:git cherry-pick &lt;\u63d0\u4ea4\u53f7&gt;... \u5982\u679c\u4f60\u60f3\u5c06\u4e00\u4e9b\u63d0\u4ea4\u590d\u5236\u5230\u5f53\u524d\u6240\u5728\u7684\u4f4d\u7f6e\uff08HEAD\uff09\u4e0b\u9762\u7684\u8bdd\uff0c Cherry-pick \u662f\u6700\u76f4\u63a5\u7684\u65b9\u5f0f\u4e86  </p> <p>\u5efa\u7acbside\u4ed3\u5e93\u590d\u5236\u5230main\u5206\u652f\uff0c\u5e76\u7528</p>"},{"location":"HTML/HTML_note_menu/","title":"HTML note navigation","text":"<p>Create time: 2022-12-06  Last update: 2022-12-06</p>"},{"location":"HTML/HTML_note_menu/#navigation-of-all-html-note","title":"Navigation of all HTML note","text":"<p>HTML get started </p>"},{"location":"HTML/HTML_started/","title":"HTML get started","text":""},{"location":"HTML/HTML_started/#reference","title":"reference","text":"<p>https://www.w3schools.com/html/ https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started https://www.codecademy.com/courses/learn-html/lessons/intro-to-html/exercises/intro  </p>"},{"location":"HTML/HTML_started/#what-is-html","title":"what is html","text":"<p>HTML (HyperText Markup Language) is a markup language that tells web browsers how to structure the web pages you visit. \u5b83\u544a\u8bc9\u7f51\u7edc\u6d4f\u89c8\u5668\u5982\u4f55\u6784\u5efa\u60a8\u8bbf\u95ee\u7684\u7f51\u9875 It can be as complicated or as simple as the web developer wants it to be. HTML consists of a series of elements, which you use to enclose, wrap, or mark up different parts of content to make it appear or act in a certain way. The enclosing tags can make content into a hyperlink to connect to another page, italicize words, and so on.\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5143\u7d20\u6765\u5305\u56f4\u3001\u5305\u88c5\u6216\u6807\u8bb0\u5185\u5bb9\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u4ee5\u4f7f\u5176\u4ee5\u67d0\u79cd\u65b9\u5f0f\u51fa\u73b0\u6216\u8fd0\u884c  </p> <pre><code>&lt;p&gt;My cat is very grumpy&lt;/p&gt;\n</code></pre> <p>Tags in HTML are not case-sensitive. This means they can be written in uppercase or lowercase. For example, a\u00a0<code>&lt;title&gt;</code>\u00a0tag could be written as\u00a0<code>&lt;title&gt;</code>,\u00a0<code>&lt;TITLE&gt;</code>,\u00a0<code>&lt;Title&gt;</code>,\u00a0<code>&lt;TiTlE&gt;</code>, etc., and it will work. However, it is best practice to write all tags in lowercase for consistency and readability.\u6700\u597d\u5c06\u6240\u6709\u6807\u7b7e\u90fd\u5199\u6210\u5c0f\u5199\u3002</p>"},{"location":"HTML/HTML_started/#anatomy-of-an-html-element","title":"Anatomy of an HTML element","text":""},{"location":"Javascript/Javascript_note_menu/","title":"javascript  note navigation","text":"<p>Create time: 2022-12-06  Last update: 2022-12-06</p>"},{"location":"Javascript/Javascript_note_menu/#navigation-of-all-javascript-note","title":"Navigation of all javascript note","text":""},{"location":"K8s/CKA%20learning%20note/","title":"CKA learning note","text":"<p>Getting started | Kubernetes Introduction to Kubernetes (LFS158) - The Linux Foundation </p>"},{"location":"K8s/CKA%20learning%20note/#exam-scope","title":"exam scope","text":"<p>A Certified Kubernetes Administrator (CKA) will be able to:\u00a0 \u8ba4\u8bc1 Kubernetes \u7ba1\u7406\u5458 (CKA) \u5c06\u80fd\u591f\uff1a</p> <ul> <li>Demonstrate their ability to do basic installation as well as configuring and managing production-grade Kubernetes clusters.     \u5c55\u793a\u4ed6\u4eec\u8fdb\u884c\u57fa\u672c\u5b89\u88c5\u4ee5\u53ca\u914d\u7f6e\u548c\u7ba1\u7406\u751f\u4ea7\u7ea7 Kubernetes \u96c6\u7fa4\u7684\u80fd\u529b\u3002</li> <li>Understand key concepts such as Kubernetes networking, storage, security, maintenance, logging and monitoring, application lifecycle, troubleshooting, API object primitives.     \u4e86\u89e3 Kubernetes \u7f51\u7edc\u3001\u5b58\u50a8\u3001\u5b89\u5168\u6027\u3001\u7ef4\u62a4\u3001\u65e5\u5fd7\u8bb0\u5f55\u548c\u76d1\u63a7\u3001\u5e94\u7528\u7a0b\u5e8f\u751f\u547d\u5468\u671f\u3001\u6545\u969c\u6392\u9664\u3001API \u5bf9\u8c61\u539f\u8bed\u7b49\u5173\u952e\u6982\u5ff5\u3002</li> <li>Ability to establish basic use-cases for end users.     \u80fd\u591f\u4e3a\u6700\u7ec8\u7528\u6237\u5efa\u7acb\u57fa\u672c\u7528\u4f8b\u3002</li> </ul>"},{"location":"K8s/CKA%20learning%20note/#storage-10-10","title":"Storage \u2013 10%\u00a0\u00a0\u5b58\u50a8 \u2013 10%**","text":"<ul> <li>Implement storage classes and dynamic volume provisioning     \u5b9e\u65bd\u5b58\u50a8\u7c7b\u522b\u548c\u52a8\u6001\u5377\u914d\u7f6e</li> <li>Configure volume types, access modes and reclaim policies     \u914d\u7f6e\u5377\u7c7b\u578b\u3001\u8bbf\u95ee\u6a21\u5f0f\u548c\u56de\u6536\u7b56\u7565</li> <li>Manage persistent volumes and persistent volume claims     \u7ba1\u7406\u6301\u4e45\u5377\u548c\u6301\u4e45\u5377\u58f0\u660e</li> </ul>"},{"location":"K8s/CKA%20learning%20note/#troubleshooting-30-30","title":"Troubleshooting \u2013 30%\u00a0\u00a0\u6545\u969c\u6392\u9664 \u2013 30%**","text":"<ul> <li>Troubleshoot clusters and nodes     \u96c6\u7fa4\u548c\u8282\u70b9\u6545\u969c\u6392\u9664</li> <li>Troubleshoot cluster components     \u5bf9\u96c6\u7fa4\u7ec4\u4ef6\u8fdb\u884c\u6545\u969c\u6392\u9664</li> <li>Monitor cluster and application resource usage     \u76d1\u63a7\u96c6\u7fa4\u548c\u5e94\u7528\u7a0b\u5e8f\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5</li> <li>Manage and evaluate container output streams     \u7ba1\u7406\u548c\u8bc4\u4f30\u5bb9\u5668\u8f93\u51fa\u6d41</li> <li>Troubleshoot services and networking     \u6392\u9664\u670d\u52a1\u548c\u7f51\u7edc\u6545\u969c</li> </ul>"},{"location":"K8s/CKA%20learning%20note/#workloads-and-scheduling-15","title":"Workloads and Scheduling \u2013 15%","text":"<p>\u5de5\u4f5c\u8d1f\u8f7d\u548c\u8c03\u5ea6 \u2013 15%**</p> <ul> <li>Understand application deployments and how to perform rolling update and rollbacks     \u4e86\u89e3\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u4ee5\u53ca\u5982\u4f55\u6267\u884c\u6eda\u52a8\u66f4\u65b0\u548c\u56de\u6eda</li> <li>Use ConfigMaps and Secrets to configure applications     \u4f7f\u7528 ConfigMap \u548c Secrets \u6765\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f</li> <li>Configure workload autoscaling     \u914d\u7f6e\u5de5\u4f5c\u8d1f\u8f7d\u81ea\u52a8\u7f29\u653e</li> <li>Understand the primitives used to create robust, self-healing, application deployments     \u4e86\u89e3\u7528\u4e8e\u521b\u5efa\u5065\u58ee\u7684\u3001\u81ea\u6211\u4fee\u590d\u7684\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u7684\u539f\u8bed</li> <li>Configure Pod admission and scheduling (limits, node affinity, etc.)     \u914d\u7f6e Pod \u51c6\u5165\u548c\u8c03\u5ea6\uff08\u9650\u5236\u3001\u8282\u70b9\u5173\u8054\u6027\u7b49\uff09</li> </ul>"},{"location":"K8s/CKA%20learning%20note/#cluster-architecture-installation-and-configuration-25","title":"Cluster Architecture, Installation and Configuration \u2013 25%","text":"<p>\u96c6\u7fa4\u67b6\u6784\u3001\u5b89\u88c5\u548c\u914d\u7f6e \u2013 25%**</p> <ul> <li>Manage role based access control (RBAC)     \u7ba1\u7406\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236 (RBAC)</li> <li>Prepare underlying infrastructure for installing a Kubernetes cluster     \u51c6\u5907\u7528\u4e8e\u5b89\u88c5 Kubernetes \u96c6\u7fa4\u7684\u5e95\u5c42\u57fa\u7840\u8bbe\u65bd</li> <li>Create and manage Kubernetes clusters using kubeadm     \u4f7f\u7528 kubeadm \u521b\u5efa\u548c\u7ba1\u7406 Kubernetes \u96c6\u7fa4</li> <li>Manage the lifecycle of Kubernetes clusters     \u7ba1\u7406 Kubernetes \u96c6\u7fa4\u7684\u751f\u547d\u5468\u671f</li> <li>Implement and configure a highly-available control plane     \u5b9e\u65bd\u548c\u914d\u7f6e\u9ad8\u53ef\u7528\u6027\u63a7\u5236\u5e73\u9762</li> <li>Use Helm and Kustomize to install cluster components     \u4f7f\u7528 Helm \u548c Kustomize \u5b89\u88c5\u96c6\u7fa4\u7ec4\u4ef6</li> <li>Understand extension interfaces (CNI, CSI, CRI, etc.)     \u4e86\u89e3\u6269\u5c55\u63a5\u53e3\uff08CNI\u3001CSI\u3001CRI \u7b49\uff09</li> <li>Understand CRDs, install and configure operators     \u4e86\u89e3 CRD\u3001\u5b89\u88c5\u548c\u914d\u7f6e\u64cd\u4f5c\u5458</li> </ul>"},{"location":"K8s/CKA%20learning%20note/#servicing-and-networking-20","title":"Servicing and Networking \u2013 20%","text":"<p>\u670d\u52a1\u548c\u7f51\u7edc \u2013 20%**</p> <ul> <li>Understand connectivity between Pods     \u4e86\u89e3 Pod \u4e4b\u95f4\u7684\u8fde\u63a5</li> <li>Define and enforce Network Policies     \u5b9a\u4e49\u548c\u5b9e\u65bd\u7f51\u7edc\u7b56\u7565</li> <li>Use ClusterIP, NodePort, LoadBalancer service types and endpoints     \u4f7f\u7528 ClusterIP\u3001NodePort\u3001LoadBalancer \u670d\u52a1\u7c7b\u578b\u548c\u7aef\u70b9</li> <li>Use the Gateway API to manage Ingress traffic     \u4f7f\u7528\u7f51\u5173 API \u7ba1\u7406\u5165\u53e3\u6d41\u91cf</li> <li>Know how to use Ingress controllers and Ingress resources     \u4e86\u89e3\u5982\u4f55\u4f7f\u7528 Ingress \u63a7\u5236\u5668\u548c Ingress \u8d44\u6e90</li> <li>Understand and use CoreDNS     \u4e86\u89e3\u5e76\u4f7f\u7528 CoreDNS</li> </ul>"},{"location":"K8s/CKA%20learning%20note/#basic-concept","title":"Basic concept","text":""},{"location":"K8s/CKA%20learning%20note/#container-orchestration","title":"Container Orchestration\u5bb9\u5668\u7f16\u6392","text":"<p>To enable these functionalities you need an underlying platform with a set of resources. The platform needs to orchestrate the connectivity between the containers and automatically scale up or down based on the load. This whole process of automatically deploying and managing containers is known as Container Orchestration. \u8981\u542f\u7528\u8fd9\u4e9b\u529f\u80fd\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u5177\u6709\u4e00\u7ec4\u8d44\u6e90\u7684\u5e95\u5c42\u5e73\u53f0\u3002\u8be5\u5e73\u53f0\u9700\u8981\u7f16\u6392\u5bb9\u5668\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u5e76\u6839\u636e\u8d1f\u8f7d\u81ea\u52a8\u6269\u5c55\u6216\u7f29\u5c0f\u3002\u81ea\u52a8\u90e8\u7f72\u548c\u7ba1\u7406\u5bb9\u5668\u7684\u6574\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u5bb9\u5668\u7f16\u6392\u3002 There are various advantages of container orchestration. Your application is now highly available as hardware failures do not bring your application down because you have multiple instances of your application running on different nodes. The user traffic is load balanced across the various containers. When demand increases, deploy more instances of the application seamlessly and within a matter of second and we have the ability to do that at a service level. When we run out of hardware resources, scale the number of nodes up/down without having to take down the application. And do all of these easily with a set of declarative object configuration file\u5bb9\u5668\u7f16\u6392\u6709\u591a\u79cd\u4f18\u70b9\u3002\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u73b0\u5728\u5177\u6709\u9ad8\u53ef\u7528\u6027\uff0c\u56e0\u4e3a\u786c\u4ef6\u6545\u969c\u4e0d\u4f1a\u5bfc\u81f4\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u505c\u673a\uff0c\u56e0\u4e3a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u591a\u4e2a\u5b9e\u4f8b\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\u8fd0\u884c\u3002\u7528\u6237\u6d41\u91cf\u5728\u5404\u4e2a\u5bb9\u5668\u4e4b\u95f4\u8fdb\u884c\u8d1f\u8f7d\u5e73\u8861\u3002\u5f53\u9700\u6c42\u589e\u52a0\u65f6\uff0c\u53ea\u9700\u51e0\u79d2\u949f\u5373\u53ef\u65e0\u7f1d\u90e8\u7f72\u66f4\u591a\u5e94\u7528\u7a0b\u5e8f\u5b9e\u4f8b\uff0c\u6211\u4eec\u6709\u80fd\u529b\u5728\u670d\u52a1\u7ea7\u522b\u4e0a\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5f53\u6211\u4eec\u7528\u5b8c\u786c\u4ef6\u8d44\u6e90\u65f6\uff0c\u53ef\u4ee5\u589e\u52a0/\u51cf\u5c11\u8282\u70b9\u6570\u91cf\uff0c\u800c\u65e0\u9700\u5173\u95ed\u5e94\u7528\u7a0b\u5e8f\u3002\u5e76\u4f7f\u7528\u4e00\u7ec4\u58f0\u660e\u6027\u5bf9\u8c61\u914d\u7f6e\u6587\u4ef6\u8f7b\u677e\u5b8c\u6210\u6240\u6709\u8fd9\u4e9b  </p>"},{"location":"K8s/CKA%20learning%20note/#nodesminions","title":"Nodes(Minions)","text":"<p>A node is a machine \u2013 physical or virtual \u2013 on which kubernetes is installed. A node is a worker machine and this is were containers will be launched by kubernetes. \u8282\u70b9\u662f\u5b89\u88c5\u4e86 kubernetes \u7684\u7269\u7406\u6216\u865a\u62df\u673a\u5668\u3002\u8282\u70b9\u662f\u4e00\u53f0\u5de5\u4f5c\u673a\u5668\uff0c\u8fd9\u662f kubernetes \u542f\u52a8\u7684\u5bb9\u5668\u3002</p>"},{"location":"K8s/CKA%20learning%20note/#cluster","title":"Cluster","text":"<p>A cluster is a set of nodes grouped together. This way even if one node fails you have your application still accessible from the other nodes. Moreover having multiple nodes helps in sharing load as well \u96c6\u7fa4\u662f\u4e00\u7ec4\u805a\u96c6\u5728\u4e00\u8d77\u7684\u8282\u70b9\u3002\u8fd9\u6837\uff0c\u5373\u4f7f\u4e00\u4e2a\u8282\u70b9\u53d1\u751f\u6545\u969c\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u4ece\u5176\u4ed6\u8282\u70b9\u8bbf\u95ee\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u6b64\u5916\uff0c\u62e5\u6709\u591a\u4e2a\u8282\u70b9\u4e5f\u6709\u52a9\u4e8e\u5206\u62c5\u8d1f\u8f7d  </p>"},{"location":"LeetCode/4sum/","title":"4sum","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform iven an array\u00a0<code>nums</code>\u00a0of\u00a0<code>n</code>\u00a0integers, return\u00a0an array of all the\u00a0unique\u00a0quadruplets <code>[nums[a], nums[b], nums[c], nums[d]]</code>\u00a0such that: \u7ed9\u5b9a\u4e00\u4e2a\u00a0<code>n</code>\u00a0\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u6709\u552f\u4e00\u56db\u80de\u80ce\u00a0<code>[nums[a], nums[b], nums[c], nums[d]]</code>\u00a0\u7684\u6570\u7ec4\u00a0<code>nums</code>\u00a0\uff0c\u4f7f\u5f97\uff1a</p> <ul> <li><code>0 &lt;= a, b, c, d\u00a0&lt; n</code></li> <li><code>a</code>,\u00a0<code>b</code>,\u00a0<code>c</code>, and\u00a0<code>d</code>\u00a0are\u00a0distinct. <code>a</code>\u00a0\u3001\u00a0<code>b</code> <code>c</code>\u00a0\u548c\u00a0<code>d</code>\u00a0\u662f\u4e0d\u540c\u7684\u3002</li> <li><code>nums[a] + nums[b] + nums[c] + nums[d] == target</code></li> </ul> <p>You may return the answer in\u00a0any order. \u60a8\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: nums = [1,0,-1,0,-2,2], target = 0 Output: [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: nums = [2,2,2,2,2], target = 8 Output: [[2,2,2,2]]</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 200</code></li> <li><code>-109 &lt;= nums[i] &lt;= 109</code></li> <li><code>-109 &lt;= target &lt;= 109</code></li> </ul>"},{"location":"LeetCode/FizzBuzz/","title":"FizzBuzz","text":"<p>Given a number n, for each integer iin the range from Ito n inclusive, print one value per line as follows: \u2022 If iis a multiple of both 3and 5, print FizzBuzz. \u2022 If iis a multiple of 3(but not 5), print Fizz. \u2022 If iis a multiple of 5(but not 3), print BUZZ. \u2022 If iis nota multiple of 30r 5, print the value of i.</p> <p>Function Description Complete the function fizzBuzz in he editor below. izzBuzz has the following parameter(s): intn: upper limit of values to test inclusive) Returns: NONE Prints: The function must print the ppropriate response for each value iin the set {1, 2, ... n} in ascending order, each on a separate line. Constraints \u2022 007&lt;2 x 105</p>"},{"location":"LeetCode/LeetCode_note_menu/","title":"LeetCode note navigation","text":"<p>Create time: 2022-11-29  Last update: 2022-11-30</p>"},{"location":"LeetCode/LeetCode_note_menu/#leetcode-note-navigation","title":"LeetCode note navigation","text":""},{"location":"LeetCode/add-two-numbers/","title":"Add two numbers","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform  You are given two\u00a0non-empty\u00a0linked lists representing two non-negative integers. The digits are stored in\u00a0reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum\u00a0as a linked list. \u60a8\u5c06\u83b7\u5f97\u4e24\u4e2a\u975e\u7a7a\u94fe\u8868\uff0c\u4ee3\u8868\u4e24\u4e2a\u975e\u8d1f\u6574\u6570\u3002\u6570\u5b57\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u5b58\u50a8\uff0c\u5176\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u4e00\u4e2a\u6570\u5b57\u3002\u5c06\u4e24\u4e2a\u6570\u5b57\u76f8\u52a0\uff0c\u5e76\u5c06\u603b\u548c\u4f5c\u4e3a\u94fe\u8868\u8fd4\u56de\u3002</p> <p>You may assume the two numbers do not contain any leading zero, except the number 0 itself. \u60a8\u53ef\u4ee5\u5047\u8bbe\u8fd9\u4e24\u4e2a\u6570\u5b57\u4e0d\u5305\u542b\u4efb\u4f55\u524d\u5bfc\u96f6\uff0c\u9664\u4e86\u6570\u5b57 0 \u672c\u8eab\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p></p> <p>Input: l1 = [2,4,3], l2 = [5,6,4] Output: [7,0,8] Explanation: 342 + 465 = 807.</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: l1 = [0], l2 = [0] Output: [0]</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9] Output: [8,9,9,9,0,0,0,1]</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li>The number of nodes in each linked list is in the range\u00a0<code>[1, 100]</code>.     \u6bcf\u4e2a\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u6570\u5728\u00a0<code>[1, 100]</code>\u00a0\u8303\u56f4\u5185\u3002</li> <li><code>0 &lt;= Node.val &lt;= 9</code></li> <li>It is guaranteed that the list represents a number that does not have leading zeros.     \u4fdd\u8bc1\u5217\u8868\u8868\u793a\u6ca1\u6709\u524d\u5bfc\u96f6\u7684\u6570\u5b57\u3002</li> </ul> <pre><code># Definition for singly-linked list.  \nclass ListNode(object):  \n    def __init__(self, val=0, next=None):  \n        self.val = val  \n        self.next = next  \n\nclass Solution(object):  \n    def addTwoNumbers(self, l1, l2):  \n        \"\"\"  \n        :type l1: ListNode        :type l2: ListNode        :rtype: ListNode  \n        \"\"\"        head = ListNode(0)  # Dummy head node  \n        current = head  # Pointer to the current node  \n        carry = 0  # Variable to store the carry value  \n\n        while l1 or l2 or carry:  \n            # Get the values of the current nodes, or 0 if one of them is None  \n            val1 = l1.val if l1 else 0  \n            val2 = l2.val if l2 else 0  \n\n            # Calculate the sum of the current digits and the carry value  \n            total = val1 + val2 + carry  \n\n            # Calculate the carry for the next iteration  \n            carry = total // 10  \n\n            # Create a new node with the units digit of the sum  \n            current.next = ListNode(total % 10)  \n\n            # Move the pointers of the linked lists to the next nodes  \n            l1 = l1.next if l1 else None  \n            l2 = l2.next if l2 else None  \n\n            # Move the current pointer to the next node  \n            current = current.next  \n\n        return head.next\n</code></pre> <ol> <li>Create a dummy head node and initialize a pointer\u00a0<code>current</code>\u00a0to it.     \u521b\u5efa\u4e00\u4e2a\u865a\u62df\u5934\u8282\u70b9\u5e76\u521d\u59cb\u5316\u6307\u5411\u5b83\u7684\u6307\u9488\u00a0<code>current</code>\u00a0\u3002</li> <li>Initialize a variable\u00a0<code>carry</code>\u00a0to 0 to store the carry value.     \u5c06\u53d8\u91cf\u00a0<code>carry</code>\u00a0\u521d\u59cb\u5316\u4e3a 0 \u4ee5\u5b58\u50a8\u8fdb\u4f4d\u503c\u3002</li> <li>Iterate through both linked lists simultaneously using a while loop while either of the linked lists or the carry value exists.     \u5f53\u94fe\u8868\u6216\u8fdb\u4f4d\u503c\u5b58\u5728\u65f6\uff0c\u4f7f\u7528 while \u5faa\u73af\u540c\u65f6\u5faa\u73af\u8bbf\u95ee\u4e24\u4e2a\u94fe\u8868\u3002</li> <li>Get the values of the current nodes\u00a0<code>val1</code>\u00a0and\u00a0<code>val2</code>, or 0 if one of them is None.     \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u00a0<code>val2</code>\u00a0\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\u00a0<code>val1</code>\u00a0\u4e3a None\uff0c\u5219\u4e3a 0\u3002</li> <li>Calculate the sum of the current digits and the carry value, and store it in\u00a0<code>total</code>.     \u8ba1\u7b97\u5f53\u524d\u6570\u5b57\u548c\u8d26\u4f4d\u4ef7\u503c\u7684\u603b\u548c\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u00a0<code>total</code>\u00a0.</li> <li>Calculate the carry for the next iteration by dividing\u00a0<code>total</code>\u00a0by 10.     \u9664\u4ee5\u00a0<code>total</code>\u00a010 \u8ba1\u7b97\u4e0b\u4e00\u6b21\u8fed\u4ee3\u7684\u8fdb\u4f4d\u3002</li> <li>Create a new node with the units digit of\u00a0<code>total</code>\u00a0and set the next pointer of the\u00a0<code>current</code>\u00a0node to it.     \u521b\u5efa\u4e00\u4e2a\u5355\u4f4d\u6570\u5b57\u4e3a \u7684\u65b0\u00a0<code>total</code>\u00a0\u8282\u70b9\uff0c\u5e76\u5c06\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u6307\u9488\u8bbe\u7f6e\u4e3a\u8be5\u00a0<code>current</code>\u00a0\u8282\u70b9\u3002</li> <li>Move the pointers of the linked lists to the next nodes if they exist.     \u5c06\u94fe\u8868\u7684\u6307\u9488\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\uff08\u5982\u679c\u5b58\u5728\uff09\u3002</li> <li>Move the\u00a0<code>current</code>\u00a0pointer to the next node.     \u5c06\u00a0<code>current</code>\u00a0\u6307\u9488\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002</li> <li>Once the while loop finishes, return the next pointer of the dummy head node.     while \u5faa\u73af\u5b8c\u6210\u540e\uff0c\u8fd4\u56de\u865a\u62df\u5934\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u6307\u9488\u3002</li> </ol>"},{"location":"LeetCode/best-time-to-buy-and-sell-stock-with-transaction-fee/","title":"Best time to buy and sell stock with transaction fee","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform </p> <p>Companies\u00a0\u516c\u53f8</p> <p>You are given an array\u00a0<code>prices</code>\u00a0where\u00a0<code>prices[i]</code>\u00a0is the price of a given stock on the\u00a0<code>ith</code>\u00a0day, and an integer\u00a0<code>fee</code>\u00a0representing a transaction fee. \u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u6570\u7ec4\u00a0<code>prices</code>\u00a0\uff0c\u5176\u4e2d\u00a0<code>prices[i]</code>\u00a0\u662f\u7ed9\u5b9a\u80a1\u7968\u00a0<code>ith</code>\u00a0\u5f53\u5929\u7684\u4ef7\u683c\uff0c\u4ee5\u53ca\u4e00\u4e2a\u00a0<code>fee</code>\u00a0\u8868\u793a\u4ea4\u6613\u8d39\u7528\u7684\u6574\u6570\u3002</p> <p>Find the maximum profit you can achieve. You may complete as many transactions as you like, but you need to pay the transaction fee for each transaction. \u627e\u5230\u60a8\u53ef\u4ee5\u5b9e\u73b0\u7684\u6700\u5927\u5229\u6da6\u3002\u60a8\u53ef\u4ee5\u5b8c\u6210\u4efb\u610f\u6570\u91cf\u7684\u4ea4\u6613\uff0c\u4f46\u60a8\u9700\u8981\u4e3a\u6bcf\u7b14\u4ea4\u6613\u652f\u4ed8\u4ea4\u6613\u8d39\u7528\u3002</p> <p>Note:\u00a0\u6ce8\u610f\uff1a</p> <ul> <li>You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).     \u60a8\u4e0d\u5f97\u540c\u65f6\u8fdb\u884c\u591a\u7b14\u4ea4\u6613\uff08\u5373\uff0c\u60a8\u5fc5\u987b\u5728\u518d\u6b21\u4e70\u5165\u4e4b\u524d\u5356\u51fa\u80a1\u7968\uff09\u3002</li> <li>The transaction fee is only charged once for each stock purchase and sale.     \u6bcf\u6b21\u80a1\u7968\u4e70\u5356\u53ea\u6536\u53d6\u4e00\u6b21\u4ea4\u6613\u8d39\u3002</li> </ul> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: prices = [1,3,2,8,4,9], fee = 2 Output: 8 Explanation: The maximum profit can be achieved by: - Buying at prices[0] = 1 - Selling at prices[3] = 8 - Buying at prices[4] = 4 - Selling at prices[5] = 9 The total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: prices = [1,3,7,5,10,3], fee = 3 Output: 6</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= prices.length &lt;= 5 * 104</code></li> <li><code>1 &lt;= prices[i] &lt; 5 * 104</code></li> <li><code>0 &lt;= fee &lt; 5 * 104</code></li> </ul> <pre><code>package org.leetcode;  \n\npublic class MaxProfit {  \n    public int maxProfit(int[] prices, int fee) {  \n        int n = prices.length;  \n        int buy = -prices[0];  \n        // Max money we can have if we have bought a stock on the ith day  \n        int sell = 0;  \n        // Max money we can have if we have sold a stock on the ith day  \n\n        for (int i = 1; i &lt; n; i++) {  \n            int prevBuy = buy;  \n            int prevSell = sell;  \n\n            // Calculate the maximum money we can have if we buy a stock on the current day  \n            buy = Math.max(prevSell - prices[i], prevBuy);  \n            // Calculate the maximum money we can have if we sell a stock on the current day  \n            sell = Math.max(prevBuy + prices[i] - fee, prevSell);  \n        }  \n\n        return sell;  \n\n    }  \n    public static void main(String[] args) {  \n        MaxProfit maxProfit = new MaxProfit();  \n\n        int[] prices1 = {1, 3, 2, 8, 4, 9};  \n        int fee1 = 2;  \n        int result1 = maxProfit.maxProfit(prices1, fee1);  \n        int expect1 = 8;  \n        if (result1 == expect1) {  \n            System.out.println(\"Pass Max Profit 1: \" + result1);  \n        } else {  \n            System.out.println(\"Fail expected: \" + expect1 + \" but got: \" + result1);  \n        }  \n\n        int[] prices2 = {1, 3, 7, 5, 10, 3};  \n        int fee2 = 3;  \n        int result2 = maxProfit.maxProfit(prices2, fee2);  \n        int expect2 = 6;  \n        if (result2 == expect2) {  \n            System.out.println(\"Pass Max Profit 2: \" + result2);  \n        } else {  \n            System.out.println(\"Fail expected: \" + expect2 + \" but got: \" + result2);  \n        }  \n\n        int[] prices3 = {4, 6, 2, 8, 3, 10, 14};  \n        int fee3 = 3;  \n        int result3 = maxProfit.maxProfit(prices3, fee3);  \n        int expect3 = 11;  \n        if (result3 == expect3) {  \n            System.out.println(\"Pass Max Profit 3: \" + result3);  \n        } else {  \n            System.out.println(\"Fail expected: \" + expect3 + \" but got: \" + result3);  \n        }  \n    }  \n\n}\n</code></pre>"},{"location":"LeetCode/combinations/","title":"Combinations","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given two integers\u00a0<code>n</code>\u00a0and\u00a0<code>k</code>, return\u00a0all possible combinations of <code>k</code> numbers chosen from the range <code>[1, n]</code>. \u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\u00a0<code>n</code>\u00a0\u548c\u00a0<code>k</code>\u00a0\uff0c\u8fd4\u56de\u4ece\u8303\u56f4\u00a0<code>[1, n]</code>\u00a0\u4e2d\u9009\u62e9\u00a0<code>k</code>\u00a0\u7684\u6240\u6709\u53ef\u80fd\u7684\u6570\u5b57\u7ec4\u5408\u3002</p> <p>You may return the answer in\u00a0any order. \u60a8\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: n = 4, k = 2 Output: [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]] Explanation: There are 4 choose 2 = 6 total combinations. Note that combinations are unordered, i.e., [1,2] and [2,1] are considered to be the same combination.</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: n = 1, k = 1 Output: [[1]] Explanation: There is 1 choose 1 = 1 total combination.</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= n &lt;= 20</code></li> <li><code>1 &lt;= k &lt;= n</code></li> </ul> <pre><code>class Solution(object):\n    def combine(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: List[List[int]]\n        \"\"\"\n        results = []  # List to store the combinations\n        current = []  # List to store the current combination\n\n        def track(start,current):\n            if len(current) == k:\n                results.append(current[:])\n                return\n\n            for i in range(start, n + 1):\n                current.append(i)\n                track(i + 1, current)\n                current.pop()\n\n        track(1, current)\n\n        return results\n\n</code></pre> <ol> <li>Create an empty list\u00a0<code>result</code>\u00a0to store the combinations and an empty list\u00a0<code>current</code>\u00a0to store the current combination.     \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u7ec4\u5408\uff0c\u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u00a0<code>result</code> <code>current</code>\u00a0\u6765\u5b58\u50a8\u5f53\u524d\u7ec4\u5408\u3002</li> <li>Define a helper function\u00a0<code>backtrack</code>\u00a0that takes a starting number and the current combination as arguments.     \u5b9a\u4e49\u4e00\u4e2a\u5e2e\u52a9\u7a0b\u5e8f\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u00a0<code>backtrack</code>\u00a0\u5c06\u8d77\u59cb\u6570\u5b57\u548c\u5f53\u524d\u7ec4\u5408\u4f5c\u4e3a\u53c2\u6570\u3002</li> <li>If the length of the current combination is equal to\u00a0<code>k</code>, add a copy of the current combination to the\u00a0<code>result</code>\u00a0list.     \u5982\u679c\u5f53\u524d\u7ec4\u5408\u7684\u957f\u5ea6\u7b49\u4e8e\u00a0<code>k</code>\u00a0\uff0c\u5219\u5c06\u5f53\u524d\u7ec4\u5408\u7684\u526f\u672c\u6dfb\u52a0\u5230\u00a0<code>result</code>\u00a0\u5217\u8868\u4e2d\u3002</li> <li>Otherwise, iterate from the starting number to\u00a0<code>n</code>\u00a0(inclusive) and do the following:     \u5426\u5219\uff0c\u4ece\u8d77\u59cb\u7f16\u53f7\u8fed\u4ee3\u5230\u00a0<code>n</code>\u00a0\uff08\u542b\uff09\u5e76\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a<ul> <li>Add the current number to the\u00a0<code>current</code>\u00a0combination.     \u5c06\u5f53\u524d\u6570\u5b57\u6dfb\u52a0\u5230\u7ec4\u5408\u4e2d\u00a0<code>current</code>\u00a0\u3002</li> <li>Recursively call the\u00a0<code>backtrack</code>\u00a0function with the next number as the starting number.     \u9012\u5f52\u8c03\u7528\u51fd\u6570\uff0c\u00a0<code>backtrack</code>\u00a0\u5c06\u4e0b\u4e00\u4e2a\u6570\u5b57\u4f5c\u4e3a\u8d77\u59cb\u6570\u5b57\u3002</li> <li>After the recursive call, remove the last element from the\u00a0<code>current</code>\u00a0combination to backtrack.     \u9012\u5f52\u8c03\u7528\u540e\uff0c\u4ece\u00a0<code>current</code>\u00a0\u7ec4\u5408\u4e2d\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ee5\u8fdb\u884c\u56de\u6eaf\u3002</li> </ul> </li> <li>Call the\u00a0<code>backtrack</code>\u00a0function initially with a starting number of 1 and an empty\u00a0<code>current</code>\u00a0combination.     \u6700\u521d\u4f7f\u7528\u8d77\u59cb\u7f16\u53f7 1 \u548c\u7a7a\u00a0<code>current</code>\u00a0\u7ec4\u5408\u8c03\u7528\u00a0<code>backtrack</code>\u00a0\u51fd\u6570\u3002</li> <li>Return the\u00a0<code>result</code>\u00a0list containing all the combinations generated.     \u8fd4\u56de\u5305\u542b\u751f\u6210\u7684\u6240\u6709\u7ec4\u5408\u00a0<code>result</code>\u00a0\u7684\u5217\u8868\u3002</li> </ol>"},{"location":"LeetCode/confirmation-rate/","title":"Confirmation rate","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Table:\u00a0<code>Confirmations</code></p> <p>+----------------+----------+ | Column Name    | Type     | +----------------+----------+ | user_id        | int      | | time_stamp     | datetime | | action         | ENUM     | +----------------+----------+ (user_id, time_stamp) is the primary key (combination of columns with unique values) for this table. user_id is a foreign key (reference column) to the Signups table. action is an ENUM (category) of the type ('confirmed', 'timeout') Each row of this table indicates that the user with ID user_id requested a confirmation message at time_stamp and that confirmation message was either confirmed ('confirmed') or expired without confirming ('timeout').</p> <p>The\u00a0confirmation rate\u00a0of a user is the number of\u00a0<code>'confirmed'</code>\u00a0messages divided by the total number of requested confirmation messages. The confirmation rate of a user that did not request any confirmation messages is\u00a0<code>0</code>. Round the confirmation rate to\u00a0two decimal\u00a0places.</p> <p>Write a solution to find the\u00a0confirmation rate\u00a0of each user.</p> <p>Return the result table in\u00a0any order.</p> <p>The result format is in the following example.</p> <pre><code># Write your MySQL query statement below\nSELECT \nS.user_id,\nROUND(IFNULL(SUM(CASE WHEN c.action = 'confirmed' THEN 1 ELSE 0 END) / COUNT(c.action), 0), 2) AS confirmation_rate\n\nFROM Signups S\nLEFT JOIN Confirmations C\nON S.user_id = C.user_id\n\nGROUP BY user_id\n</code></pre>"},{"location":"LeetCode/container-with-most-water/","title":"Container with most water","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform You are given an integer array\u00a0<code>height</code>\u00a0of length\u00a0<code>n</code>. There are\u00a0<code>n</code>\u00a0vertical lines drawn such that the two endpoints of the\u00a0<code>ith</code>\u00a0line are\u00a0<code>(i, 0)</code>\u00a0and\u00a0<code>(i, height[i])</code>. \u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u957f\u5ea6\u00a0<code>n</code>\u00a0\u7684\u6574\u6570\u6570\u7ec4\u00a0<code>height</code>\u00a0\u3002\u7ed8\u5236\u4e86\u00a0<code>n</code>\u00a0\u5782\u76f4\u7ebf\uff0c\u4f7f\u5f97\u00a0<code>ith</code>\u00a0\u7ebf\u7684\u4e24\u4e2a\u7aef\u70b9\u662f\u00a0<code>(i, 0)</code>\u00a0\u548c\u00a0<code>(i, height[i])</code>\u00a0\u3002</p> <p>Find two lines that together with the x-axis form a container, such that the container contains the most water. \u627e\u5230\u4e24\u6761\u4e0e x \u8f74\u4e00\u8d77\u5f62\u6210\u5bb9\u5668\u7684\u7ebf\uff0c\u8fd9\u6837\u5bb9\u5668\u5305\u542b\u7684\u6c34\u6700\u591a\u3002</p> <p>Return\u00a0the maximum amount of water a container can store. \u8fd4\u56de\u5bb9\u5668\u53ef\u4ee5\u50a8\u5b58\u7684\u6700\u5927\u6c34\u91cf\u3002</p> <p>Notice\u00a0that you may not slant the container. \u8bf7\u6ce8\u610f\uff0c\u60a8\u4e0d\u80fd\u503e\u659c\u5bb9\u5668\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p></p> <p>Input: height = [1,8,6,2,5,4,8,3,7] Output: 49 Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: height = [1,1] Output: 1</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>n == height.length</code></li> <li><code>2 &lt;= n &lt;= 105</code></li> <li><code>0 &lt;= height[i] &lt;= 104</code></li> </ul> <pre><code>package org.leetcode;  \n\npublic class ContainerWithMostWater {  \n    public int maxArea(int[] height) {  \n        int area = 0;  \n        int left = 0;  \n        int right = height.length - 1;  \n        while(left &lt; right) {  \n            int currentHeight = Math.min(height[left], height[right]);  \n            int currentWidth = right - left;  \n            int currentArea = currentHeight * currentWidth;  \n            if(currentArea &gt; area) {  \n                area = currentArea;  \n            }  \n            if(height[left] &lt; height[right]) {  \n                left++;  \n            } else {  \n                right--;  \n            }  \n        }  \n\n        return area;  \n    }  \n\n    public static void main(String[] args) {  \n        ContainerWithMostWater containerWithMostWater = new ContainerWithMostWater();  \n        int[] height1 = {1,8,6,2,5,4,8,3,7};  \n        int result1 = containerWithMostWater.maxArea(height1);  \n        int expected1 = 49;  \n        if(result1 == expected1) {  \n            System.out.println(\"Test 1 passed\");  \n        } else {  \n            System.out.println(\"Test 1 failed expected: \" + expected1 + \" actual: \" + result1);  \n        }  \n    }  \n}\n</code></pre>"},{"location":"LeetCode/count-good-nodes-in-binary-tree/","title":"Count good nodes in binary tree","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given a binary tree\u00a0<code>root</code>, a node\u00a0X\u00a0in the tree is named\u00a0good\u00a0if in the path from root to\u00a0X\u00a0there are no nodes with a value\u00a0greater than\u00a0X. \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5982\u679c\u4ece\u6839\u5230X\u7684\u8def\u5f84\u4e2d\u6ca1\u6709\u503c\u5927\u4e8eX\u7684\u8282\u70b9\uff0c\u5219\u6811\u00a0<code>root</code>\u00a0\u4e2d\u7684\u8282\u70b9X\u88ab\u547d\u540d\u4e3a\u597d\u3002</p> <p>Return the number of\u00a0good\u00a0nodes in the binary tree. \u8fd4\u56de\u4e8c\u53c9\u6811\u4e2d\u826f\u597d\u8282\u70b9\u7684\u6570\u91cf\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p></p> <p>Input: root = [3,1,4,3,null,1,5] Output: 4 Explanation: Nodes in blue are good. Root Node (3) is always a good node. Node 4 -&gt; (3,4) is the maximum value in the path starting from the root. Node 5 -&gt; (3,4,5) is the maximum value in the path Node 3 -&gt; (3,1,3) is the maximum value in the path.</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p></p> <p>Input: root = [3,3,null,4,2] Output: 3 Explanation: Node 2 -&gt; (3, 3, 2) is not good, because \"3\" is higher than it.</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: root = [1] Output: 1 Explanation: Root is considered as good.</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li>The number of nodes in the binary tree is in the range\u00a0<code>[1, 10^5]</code>.     \u4e8c\u53c9\u6811\u4e2d\u7684\u8282\u70b9\u6570\u5728\u00a0<code>[1, 10^5]</code>\u00a0\u8303\u56f4\u5185\u3002</li> <li>Each node's value is between\u00a0<code>[-10^4, 10^4]</code>.     \u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u4ecb\u4e8e\u00a0<code>[-10^4, 10^4]</code>\u00a0.</li> </ul>"},{"location":"LeetCode/counting-bits/","title":"Counting bits","text":"<p>Given an integer\u00a0<code>n</code>, return\u00a0an array <code>ans</code> of length <code>n + 1</code> such that for each <code>i</code>\u00a0(<code>0 &lt;= i &lt;= n</code>), <code>ans[i]</code> is the\u00a0number of <code>1</code>'s\u00a0in the binary representation of <code>i</code>. \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u957f\u5ea6\u7684\u6570\u7ec4\u00a0<code>n</code>\u00a0\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u6bcf\u4e2a\u00a0<code>i</code>\u00a0\uff08\u00a0<code>0 &lt;= i &lt;= n</code>\u00a0\uff09\uff0c\u00a0<code>ans[i]</code>\u00a0\u662f \u7684\u00a0<code>i</code>\u00a0\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684\u00a0<code>1</code>\u00a0\u7684\u00a0<code>ans</code>\u00a0\u4e2a\u00a0<code>n + 1</code>\u00a0\u6570\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: n = 2 Output: [0,1,1] Explanation: 0 --&gt; 0 1 --&gt; 1 2 --&gt; 10</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: n = 5 Output: [0,1,1,2,1,2] Explanation: 0 --&gt; 0 1 --&gt; 1 2 --&gt; 10 3 --&gt; 11 4 --&gt; 100 5 --&gt; 101</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>0 &lt;= n &lt;= 105</code></li> </ul> <p>Follow up:\u00a0\u8ddf\u8fdb\uff1a</p> <ul> <li>It is very easy to come up with a solution with a runtime of\u00a0<code>O(n log n)</code>. Can you do it in linear time\u00a0<code>O(n)</code>\u00a0and possibly in a single pass?     \u5f88\u5bb9\u6613\u63d0\u51fa\u8fd0\u884c\u65f6\u4e3a .\u00a0<code>O(n log n)</code>\u00a0\u4f60\u80fd\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u00a0<code>O(n)</code>\u00a0\u5b8c\u6210\uff0c\u4e5f\u53ef\u80fd\u5728\u4e00\u6b21\u901a\u8fc7\u4e2d\u5b8c\u6210\u5417\uff1f</li> <li>Can you do it without using any built-in function (i.e., like\u00a0<code>__builtin_popcount</code>\u00a0in C++)?     \u60a8\u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528\u4efb\u4f55\u5185\u7f6e\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\u505a\u5230\u8fd9\u4e00\u70b9\uff08\u5373\uff0c\u5c31\u50cf\u5728C++\u4e2d\u4e00\u6837\u00a0<code>__builtin_popcount</code>\u00a0\uff09\u5417\uff1f</li> </ul> <pre><code>package org.leetcode;  \n\npublic class CountBits {  \n    public int[] countBits(int n) {  \n        int[] result = new int[n+1];  \n        for(int i = 1 ; i &lt;= n ; i++){  \n            result[i] = result[i/2] + i%2;  \n        }  \n        return result;  \n    }  \n    public boolean compare(int[] result, int[] expected) {  \n        if (result.length != expected.length) {  \n            return false;  \n        } else {  \n            boolean status = true;  \n            for (int i = 0; i &lt; result.length; i++) {  \n                if (result[i] != expected[i]) {  \n                    status = false;  \n                    break;                }  \n            }  \n            return status;  \n        }  \n    }  \n\n    public static void main(String[] args) {  \n        CountBits obj = new CountBits();  \n        int input1 = 2;  \n        int[] result1 = obj.countBits(input1);  \n        int[] expected1 = {0, 1, 1};  \n        // compare result1 and expected1 value  \n        boolean status1 = obj.compare(result1, expected1);  \n        if (status1) {  \n            System.out.println(\"Test1 passed\");  \n        } else {  \n            System.out.println(\"Test1 failed\");  \n        }  \n\n        int input2 = 5;  \n        int[] result2 = obj.countBits(input2);  \n        int[] expected2 = {0, 1, 1, 2, 1, 2};  \n        // compare result2 and expected2 value  \n        boolean status2 = obj.compare(result2, expected2);  \n        if (status2) {  \n            System.out.println(\"Test2 passed\");  \n        } else {  \n            System.out.println(\"Test2 failed\");  \n        }  \n    }  \n}\n</code></pre>"},{"location":"LeetCode/determine-if-two-strings-are-close/","title":"Determine if two strings are close","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Two strings are considered\u00a0close\u00a0if you can attain one from the other using the following operations: \u5982\u679c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u64cd\u4f5c\u4ece\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u83b7\u53d6\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8ba4\u4e3a\u4e24\u4e2a\u5b57\u7b26\u4e32\u63a5\u8fd1\uff1a</p> <ul> <li>Operation 1: Swap any two\u00a0existing\u00a0characters.     \u64cd\u4f5c 1\uff1a\u4ea4\u6362\u4efb\u610f\u4e24\u4e2a\u73b0\u6709\u5b57\u7b26\u3002<ul> <li>For example,\u00a0<code>abcde -&gt; aecdb</code>\u00a0\u4f8b\u5982\u00a0<code>abcde -&gt; aecdb</code></li> </ul> </li> <li>Operation 2: Transform\u00a0every\u00a0occurrence of one\u00a0existing\u00a0character into another\u00a0existing\u00a0character, and do the same with the other character.     \u64cd\u4f5c 2\uff1a\u5c06\u4e00\u4e2a\u73b0\u6709\u5b57\u7b26\u7684\u6bcf\u6b21\u51fa\u73b0\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u73b0\u6709\u5b57\u7b26\uff0c\u5e76\u5bf9\u53e6\u4e00\u4e2a\u5b57\u7b26\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002<ul> <li>For example,\u00a0<code>aacabb -&gt; bbcbaa</code>\u00a0(all\u00a0<code>a</code>'s turn into\u00a0<code>b</code>'s, and all\u00a0<code>b</code>'s turn into\u00a0<code>a</code>'s)     \u4f8b\u5982\uff0c\uff08\u6240\u6709 \u90fd\u53d8\u6210 's\uff0c\u00a0<code>aacabb -&gt; bbcbaa</code>\u00a0\u6240\u6709\u00a0<code>a</code> <code>b</code>\u00a0\u53d8\u6210\u00a0<code>b</code>\u00a0'\u00a0<code>a</code>\u00a0s\uff09</li> </ul> </li> </ul> <p>You can use the operations on either string as many times as necessary. \u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u591a\u6b21\u5bf9\u4efb\u4e00\u5b57\u7b26\u4e32\u4f7f\u7528\u64cd\u4f5c\u3002</p> <p>Given two strings,\u00a0<code>word1</code>\u00a0and\u00a0<code>word2</code>, return\u00a0<code>true</code> if <code>word1</code> and <code>word2</code> are\u00a0close, and <code>false</code> otherwise. \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u548c \uff0c\u5982\u679c \u548c\u00a0<code>word2</code> <code>word2</code>\u00a0\u63a5\u8fd1\u00a0<code>false</code>\u00a0\uff0c\u00a0<code>word1</code>\u00a0\u5219\u00a0<code>word1</code>\u00a0\u8fd4\u56de\u00a0<code>true</code>\u00a0\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: word1 = \"abc\", word2 = \"bca\" Output: true Explanation: You can attain word2 from word1 in 2 operations. Apply Operation 1: \"abc\" -&gt; \"acb\" Apply Operation 1: \"acb\" -&gt; \"bca\"</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: word1 = \"a\", word2 = \"aa\" Output: false Explanation: It is impossible to attain word2 from word1, or vice versa, in any number of operations.</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: word1 = \"cabbba\", word2 = \"abbccc\" Output: true Explanation: You can attain word2 from word1 in 3 operations. Apply Operation 1: \"cabbba\" -&gt; \"caabbb\" <code>Apply Operation 2: \"</code>caabbb\" -&gt; \"baaccc\" Apply Operation 2: \"baaccc\" -&gt; \"abbccc\"</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= word1.length, word2.length &lt;= 105</code></li> <li><code>word1</code>\u00a0and\u00a0<code>word2</code>\u00a0contain only lowercase English letters. <code>word1</code>\u00a0\u5e76\u4e14\u00a0<code>word2</code>\u00a0\u4ec5\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002</li> </ul> <pre><code>package org.leetcode;  \n\nimport java.util.ArrayList;  \nimport java.util.Collections;  \nimport java.util.HashMap;  \nimport java.util.List;  \nimport java.util.Map;  \n\npublic class DetermineTwoStrClose {  \n    public boolean closeStrings(String word1, String word2) {  \n        //boolean status = false;  \n        if (word1.length() != word2.length()) {  \n            return false;  \n        }  \n\n\n        HashMap&lt;Character, Integer&gt; map = new HashMap&lt;&gt;();  \n        HashMap&lt;Character, Integer&gt; map2 = new HashMap&lt;&gt;();  \n\n        for(int i = 0 ; i &lt; word1.length() ; i++){  \n            map.put(word1.charAt(i), map.getOrDefault(word1.charAt(i), 0)+1);  \n            map2.put(word2.charAt(i), map2.getOrDefault(word2.charAt(i), 0)+1);  \n        }  \n\n        for(int j= 0 ; j &lt; word2.length() ;j++ ){  \n            if(!map.containsKey(word2.charAt(j))){  \n                return false;  \n            }  \n            if(!map2.containsKey(word1.charAt(j))){  \n                return false;  \n            }  \n        }  \n\n\n\n        ArrayList&lt;Integer&gt; list1 = new  ArrayList&lt;&gt;();  \n        ArrayList&lt;Integer&gt; list2 = new ArrayList&lt;&gt;();  \n\n        for(Map.Entry&lt;Character,Integer&gt; entry : map.entrySet()){  \n            list1.add(entry.getValue());  \n        }  \n        for(Map.Entry&lt;Character,Integer&gt; entry : map2.entrySet()){  \n            list2.add(entry.getValue());  \n        }  \n\n        Collections.sort(list1);  \n        Collections.sort(list2);  \n\n        return list1.equals(list2);  \n\n    }  \n\n    public static void main(String[] args) {  \n        DetermineTwoStrClose obj = new DetermineTwoStrClose();  \n        String word1_1 = \"abc\";  \n        String word1_2 = \"bca\";  \n        boolean result1 = obj.closeStrings(word1_1, word1_2);  \n        boolean expected1 = true;  \n        if (result1 == expected1) {  \n            System.out.println(\"Test1 passed\");  \n        } else {  \n            System.out.println(\"Test1 failed result is \" + result1 + \" but expected is \" + expected1);  \n        }  \n\n        String word2_1 = \"cabbba\";  \n        String word2_2 = \"abbccc\";  \n        boolean result2 = obj.closeStrings(word2_1, word2_2);  \n        boolean expected2 = true;  \n        if (result2 == expected2) {  \n            System.out.println(\"Test2 passed\");  \n        } else {  \n            System.out.println(\"Test2 failed result is \" + result2 + \" but expected is \" + expected2);  \n        }  \n    }  \n}\n</code></pre>"},{"location":"LeetCode/factorial-trailing-zeroes/","title":"Factorial trailing zeroes","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given an integer\u00a0<code>n</code>, return\u00a0the number of trailing zeroes in <code>n!</code>. \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u00a0<code>n</code>\u00a0\uff0c\u8fd4\u56de \u4e2d\u00a0<code>n!</code>\u00a0\u5c3e\u968f\u96f6\u7684\u4e2a\u6570\u3002</p> <p>Note that\u00a0<code>n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1</code>.\u00a0\u8bf7\u6ce8\u610f\u3002\u00a0<code>n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1</code></p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: n = 3 Output: 0 Explanation: 3! = 6, no trailing zero.</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: n = 5 Output: 1 Explanation: 5! = 120, one trailing zero.</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: n = 0 Output: 0</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>0 &lt;= n &lt;= 104</code></li> </ul> <p>Follow up:\u00a0Could you write a solution that works in logarithmic time complexity? \u8ffd\u95ee\uff1a\u4f60\u80fd\u5199\u4e00\u4e2a\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u89e3\u51b3\u65b9\u6848\u5417\uff1f  </p>"},{"location":"LeetCode/greatest-common-divisor-of-strings/","title":"Greatest common divisor of strings","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform For two strings\u00a0<code>s</code>\u00a0and\u00a0<code>t</code>, we say \"<code>t</code>\u00a0divides\u00a0<code>s</code>\" if and only if\u00a0<code>s = t + ... + t</code>\u00a0(i.e.,\u00a0<code>t</code>\u00a0is concatenated with itself one or more times). \u5bf9\u4e8e\u4e24\u4e2a\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\u548c\u00a0<code>t</code>\u00a0\uff0c\u6211\u4eec\u8bf4\u201c\u00a0<code>t</code>\u00a0\u9664\u6cd5\u00a0<code>s</code>\u00a0\u201d\u5f53\u4e14\u4ec5\u5f53\u00a0<code>s = t + ... + t</code>\u00a0\uff08\u5373\u4e0e\u00a0<code>t</code>\u00a0\u81ea\u8eab\u8fde\u63a5\u4e00\u6b21\u6216\u591a\u6b21\uff09\u3002</p> <p>Given two strings\u00a0<code>str1</code>\u00a0and\u00a0<code>str2</code>, return\u00a0the largest string <code>x</code> such that <code>x</code> divides both <code>str1</code> and <code>str2</code>. \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 \u548c \uff0c\u8fd4\u56de\u6700\u5927\u7684\u5b57\u7b26\u4e32\u00a0<code>str1</code> <code>x</code>\u00a0\uff0c\u4ee5\u4fbf\u00a0<code>x</code>\u00a0\u5c06\u4e24\u8005\u00a0<code>str1</code>\u00a0\u9664\u4ee5 \u548c\u00a0<code>str2</code> <code>str2</code>\u00a0\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: str1 = \"ABCABC\", str2 = \"ABC\" Output: \"ABC\"</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: str1 = \"ABABAB\", str2 = \"ABAB\" Output: \"AB\"</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: str1 = \"LEET\", str2 = \"CODE\" Output: \"\"</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= str1.length, str2.length &lt;= 1000</code></li> <li><code>str1</code>\u00a0and\u00a0<code>str2</code>\u00a0consist of English uppercase letters. <code>str1</code>\u00a0\u7531\u00a0<code>str2</code>\u00a0\u82f1\u6587\u5927\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li> </ul> <pre><code>class Solution(object):  \n    def gcdOfStrings(self, str1, str2):  \n        \"\"\"  \n        :type str1: str        :type str2: str        :rtype: str  \n        \"\"\"  \n        # if str1 or str2 == \"\":  \n        #     print(\"One of the strings is empty.\")        #     return \"\"  \n        if len(str1) &lt; len(str2):  \n            print(\"str1 is shorter than str2.\")  \n            str1, str2 = str2, str1  \n\n        gcd_final = \"\"  \n        # find if the length has comman divisor  \n        divisor = 1  \n        for i in range(1, len(str2) + 1):  \n            if len(str1) % i == 0 and len(str2) % i == 0:  \n                divisor = i  \n                print(\"one potential divisor: %d\" % divisor)  \n                gcd_str = self.gcd(str1, str2, divisor)  \n                if gcd_str != \"\":  \n                    gcd_final = gcd_str  \n                else:  \n                    print(\"divisor %d is not a common divisor.\" % divisor)  \n                    divisor = 1  \n\n        return gcd_final  \n\n\n        # if yes, then check if the string has common divisor  \n    def gcd(self, str1, str2, divisor):  \n        gcd_str = str1[:divisor]  \n        for i in range(0, len(str1), divisor):  \n            if str1[i:i + divisor] != gcd_str:  \n                return \"\"  \n        for i in range(0, len(str2), divisor):  \n            if str2[i:i + divisor] != gcd_str:  \n                return \"\"  \n        return gcd_str  \n\n\n\n    def test(self):  \n        str1 = \"ABABABAB\"  \n        str2 = \"ABAB\"  \n        expected = \"ABAB\"  \n        result = self.gcdOfStrings(str1, str2)  \n        if result != expected:  \n            print(\"Test failed. %s != %s\" % (result, expected))  \n        if result == expected:  \n            print(\"Test passed. common divisor is %s\" % result)  \n\nif __name__ == \"__main__\":  \n    Solution().test()\n</code></pre>"},{"location":"LeetCode/is-subsequence/","title":"Is subsequence","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given two strings\u00a0<code>s</code>\u00a0and\u00a0<code>t</code>, return\u00a0<code>true</code> if <code>s</code> is a\u00a0subsequence\u00a0of <code>t</code>, or <code>false</code> otherwise. \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\u548c\u00a0<code>t</code>\u00a0\uff0c\u8fd4\u56de\u00a0<code>true</code>\u00a0if\u00a0<code>s</code>\u00a0\u662f \u7684\u00a0<code>t</code>\u00a0\u5b50\u5e8f\u5217\uff0c\u5426\u5219\u00a0<code>false</code>\u00a0\u3002</p> <p>A\u00a0subsequence\u00a0of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e.,\u00a0<code>\"ace\"</code>\u00a0is a subsequence of\u00a0<code>\"abcde\"</code>\u00a0while\u00a0<code>\"aec\"</code>\u00a0is not). \u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u662f\u901a\u8fc7\u5220\u9664\u67d0\u4e9b\uff08\u53ef\u4ee5\u662f\u65e0\uff09\u5b57\u7b26\u800c\u4e0d\u5e72\u6270\u5176\u4f59\u5b57\u7b26\u7684\u76f8\u5bf9\u4f4d\u7f6e\u800c\u4ece\u539f\u59cb\u5b57\u7b26\u4e32\u5f62\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002\uff08\u5373\uff0c\u00a0<code>\"ace\"</code>\u00a0\u662f while\u00a0<code>\"aec\"</code>\u00a0\u7684\u00a0<code>\"abcde\"</code>\u00a0\u5b50\u5e8f\u5217\u4e0d\u662f\uff09\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: s = \"abc\", t = \"ahbgdc\" Output: true</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: s = \"axc\", t = \"ahbgdc\" Output: false</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>0 &lt;= s.length &lt;= 100</code></li> <li><code>0 &lt;= t.length &lt;= 104</code></li> <li><code>s</code>\u00a0and\u00a0<code>t</code>\u00a0consist only of lowercase English letters. <code>s</code>\u00a0\u5e76\u4e14\u00a0<code>t</code>\u00a0\u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li> </ul> <p>Follow up:\u00a0\u8ddf\u8fdb\uff1a\u00a0Suppose there are lots of incoming\u00a0<code>s</code>, say\u00a0<code>s1, s2, ..., sk</code>\u00a0where\u00a0<code>k &gt;= 109</code>, and you want to check one by one to see if\u00a0<code>t</code>\u00a0has its subsequence. In this scenario, how would you change your code? \u5047\u8bbe\u6709\u5f88\u591a\u4f20\u5165\u00a0<code>s</code>\u00a0\u7684\uff0c\u6bd4\u5982\u00a0<code>s1, s2, ..., sk</code>\u00a0\u8bf4\u5728\u54ea\u91cc\u00a0<code>k &gt;= 109</code>\u00a0\uff0c\u4f60\u60f3\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u68c0\u67e5\u662f\u5426\u6709\u00a0<code>t</code>\u00a0\u5b83\u7684\u5b50\u5e8f\u5217\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u5c06\u5982\u4f55\u66f4\u6539\u4ee3\u7801\uff1f</p> <pre><code>package org.leetcode;  \n\npublic class IsSubsequence {  \n    public boolean isSubsequence(String s, String t) {  \n        boolean isSubsequence = false;  \n\n        if (s.length() &gt; t.length()) {  \n            return isSubsequence;  \n        }  \n        if (s.length() == 0) {  \n            return true;  \n        }  \n        int sIndex = 0;  \n        int tIndex = 0;  \n\n        while (tIndex &lt; t.length()) {  \n            if (s.charAt(sIndex) == t.charAt(tIndex)) {  \n                sIndex++;  \n                if (sIndex == s.length()) {  \n                    isSubsequence = true;  \n                    break;                }  \n            }  \n            tIndex++;  \n        }  \n\n\n\n        return isSubsequence;  \n    }  \n\n    public static void main(String[] args) {  \n        IsSubsequence obj = new IsSubsequence();  \n        String s1 = \"abc\";  \n        String t1 = \"ahbgdc\";  \n        boolean expect1 = obj.isSubsequence(s1, t1);  \n        boolean result1 = true;  \n        if (expect1 == result1) {  \n            System.out.println(\"test 1 Pass\");  \n        } else {  \n            System.out.println(\"Fail expected: \" + expect1 + \" but got: \" + result1);  \n        }  \n\n        String s2 = \"axc\";  \n        String t2 = \"ahbgdc\";  \n        boolean expect2 = obj.isSubsequence(s2, t2);  \n        boolean result2 = false;  \n        if (expect2 == result2) {  \n            System.out.println(\"test 2 Pass\");  \n        } else {  \n            System.out.println(\"Fail expected: \" + expect2 + \" but got: \" + result2);  \n        }  \n    }  \n}\n</code></pre>"},{"location":"LeetCode/jump-game-vii/","title":"Jump game vii","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform You are given a\u00a00-indexed\u00a0binary string\u00a0<code>s</code>\u00a0and two integers\u00a0<code>minJump</code>\u00a0and\u00a0<code>maxJump</code>. In the beginning, you are standing at index\u00a0<code>0</code>, which is equal to\u00a0<code>'0'</code>. You can move from index\u00a0<code>i</code>\u00a0to index\u00a0<code>j</code>\u00a0if the following conditions are fulfilled: \u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a 0 \u7d22\u5f15\u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\u548c\u4e24\u4e2a\u6574\u6570\u00a0<code>minJump</code>\u00a0\u548c\u00a0<code>maxJump</code>\u00a0.\u4e00\u5f00\u59cb\uff0c\u60a8\u7ad9\u5728\u7d22\u5f15\u00a0<code>0</code>\u00a0\uff0c\u5b83\u7b49\u4e8e\u00a0<code>'0'</code>\u00a0\u3002\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff0c\u5219\u53ef\u4ee5\u4ece\u4e00\u4e2a\u7d22\u5f15\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u7d22\u5f15\u00a0<code>i</code> <code>j</code>\u00a0\uff1a</p> <ul> <li><code>i + minJump &lt;= j &lt;= min(i + maxJump, s.length - 1)</code>, and\u00a0\u00a0<code>i + minJump &lt;= j &lt;= min(i + maxJump, s.length - 1)</code>\u00a0\u548c</li> <li><code>s[j] == '0'</code>.</li> </ul> <p>Return\u00a0<code>true</code> if you can reach index <code>s.length - 1</code> in <code>s</code>, or <code>false</code> otherwise. \u5982\u679c\u53ef\u4ee5\u8fbe\u5230 \u4e2d\u7684\u00a0<code>s</code> <code>false</code>\u00a0\u7d22\u5f15\u00a0<code>s.length - 1</code>\u00a0\uff0c\u5219\u8fd4\u56de\u00a0<code>true</code>\u00a0\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: s = \"011010\", minJump = 2, maxJump = 3 Output: true Explanation: In the first step, move from index 0 to index 3.  In the second step, move from index 3 to index 5.</p>"},{"location":"LeetCode/jump-game-vii/#first-version","title":"first version","text":"<pre><code>class Solution(object):  \n    def canReach(self, s, minJump, maxJump):  \n        \"\"\"  \n        :type s: str        :type minJump: int        :type maxJump: int        :rtype: bool  \n        \"\"\"        n = len(s)  \n        index = []  \n        reach_indicate = False  \n\n        for i in range(n):  \n            if s[i] == \"0\":  \n                index.append(i)  \n            else:  \n                continue  \n\n        dp = [False] * n  \n        dp[0] = True  \n\n        for i in range(1, n):  \n            for j in range(i - minJump, i - maxJump - 1, -1):  \n                if j &gt;= 0 and s[j] == \"0\" and dp[j]:  \n                    dp[i] = True  \n                    break  \n        return dp[-1]  \n\n    def test(self):  \n        s = \"011010\"  \n        minJump = 2  \n        maxJump = 3  \n        assert self.canReach(s, minJump, maxJump) == True  \n\n        s = \"01101110\"  \n        minJump = 2  \n        maxJump = 3  \n        assert self.canReach(s, minJump, maxJump) == False  \n\n        s = \"01\"  \n        minJump = 1  \n        maxJump = 1  \n        assert self.canReach(s, minJump, maxJump) == False  \n\n\nif __name__ == '__main__':  \n    Solution().test()\n</code></pre> <p>it failed with the third test case</p>"},{"location":"LeetCode/jump-game-vii/#second-version","title":"second version","text":"<pre><code>class Solution(object):\n    def canReach(self, s, minJump, maxJump):\n        \"\"\"\n        :type s: str\n        :type minJump: int\n         maxJump: int\n        :rtype: bool\n        \"\"\"\n        dp = [c == '0' for c in s]\n        pre = 0\n        for i in range(1, len(s)):\n            if i &gt;= minJump:\n                pre += dp[i - minJump]\n            if i &gt; maxJump:\n                pre -= dp[i - maxJump - 1]\n            dp[i] &amp;= pre &gt; 0\n        return dp[-1]\n</code></pre>"},{"location":"LeetCode/kids-with-the-greatest-number-of-candies/","title":"Kids with the greatest number of candies","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform There are\u00a0<code>n</code>\u00a0kids with candies. You are given an integer array\u00a0<code>candies</code>, where each\u00a0<code>candies[i]</code>\u00a0represents the number of candies the\u00a0<code>ith</code>\u00a0kid has, and an integer\u00a0<code>extraCandies</code>, denoting the number of extra candies that you have. \u6709\u00a0<code>n</code>\u00a0\u5b69\u5b50\u62ff\u7cd6\u679c\u3002\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e2a\u00a0<code>candies[i]</code>\u00a0\u4ee3\u8868\u00a0<code>ith</code> <code>candies</code>\u00a0\u5b69\u5b50\u62e5\u6709\u7684\u7cd6\u679c\u6570\u91cf\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6574\u6570\u00a0<code>extraCandies</code>\u00a0\uff0c\u8868\u793a\u60a8\u62e5\u6709\u7684\u989d\u5916\u7cd6\u679c\u6570\u91cf\u3002</p> <p>Return\u00a0a boolean array <code>result</code> of length <code>n</code>, where <code>result[i]</code> is <code>true</code> if, after giving the <code>ith</code> kid all the <code>extraCandies</code>, they will have the\u00a0greatest\u00a0number of candies among all the kids__, or <code>false</code> otherwise. \u8fd4\u56de\u4e00\u4e2a\u957f\u5ea6\u7684\u5e03\u5c14\u6570\u7ec4\u00a0<code>result</code>\u00a0\uff0c\u5176\u4e2d\u00a0<code>result[i]</code>\u00a0is \u5982\u679c\u00a0<code>true</code>\u00a0\uff0c\u5728\u7ed9\u5b69\u5b50\u6240\u6709\u4e4b\u540e\uff0c\u4ed6\u4eec\u5c06\u62e5\u6709\u6240\u6709\u00a0<code>ith</code>\u00a0\u5b69\u5b50\u4e2d\u6700\u591a\u7684\u7cd6\u679c\u00a0<code>extraCandies</code>\u00a0\uff0c\u5426\u5219\u00a0<code>false</code>\u00a0\u3002\u00a0<code>n</code></p> <p>Note that\u00a0multiple\u00a0kids can have the\u00a0greatest\u00a0number of candies. \u8bf7\u6ce8\u610f\uff0c\u591a\u4e2a\u5b69\u5b50\u53ef\u4ee5\u62e5\u6709\u6700\u591a\u7684\u7cd6\u679c\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: candies = [2,3,5,1,3], extraCandies = 3 Output: [true,true,true,false,true]  Explanation: If you give all extraCandies to: - Kid 1, they will have 2 + 3 = 5 candies, which is the greatest among the kids. - Kid 2, they will have 3 + 3 = 6 candies, which is the greatest among the kids. - Kid 3, they will have 5 + 3 = 8 candies, which is the greatest among the kids. - Kid 4, they will have 1 + 3 = 4 candies, which is not the greatest among the kids. - Kid 5, they will have 3 + 3 = 6 candies, which is the greatest among the kids.</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: candies = [4,2,1,1,2], extraCandies = 1 Output: [true,false,false,false,false]  Explanation: There is only 1 extra candy. Kid 1 will always have the greatest number of candies, even if a different kid is given the extra candy.</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: candies = [12,1,12], extraCandies = 10 Output: [true,false,true]</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>n == candies.length</code></li> <li><code>2 &lt;= n &lt;= 100</code></li> <li><code>1 &lt;= candies[i] &lt;= 100</code></li> <li><code>1 &lt;= extraCandies &lt;= 50</code></li> </ul> <pre><code>class Solution(object):\n    def kidsWithCandies(self, candies, extraCandies):\n        \"\"\"\n        :type candies: List[int]\n        :type extraCandies: int\n        :rtype: List[bool]\n        \"\"\"\n        result = []\n\n        max_candies = max(candies)\n\n        for i in candies:\n            if i + extraCandies &gt;= max_candies:\n                result.append(True)\n            else:\n                result.append(False)\n        return result\n\n    def test(self):\n        candies = [2, 3, 5, 1, 3]\n        extraCandies = 3\n        expected = [True, True, True, False, True]\n        result = self.kidsWithCandies(candies, extraCandies)\n        if result == expected:\n            print(\"Passed\")\n        else:\n            print(\"Failed result: \", result, \" expected: \", expected)\n\n\nif __name__ == \"__main__\":\n    Solution().test()\n</code></pre>"},{"location":"LeetCode/koko-eating-bananas/","title":"Koko eating bananas","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Koko loves to eat bananas. There are\u00a0<code>n</code>\u00a0piles of bananas, the\u00a0<code>ith</code>\u00a0pile has\u00a0<code>piles[i]</code>\u00a0bananas. The guards have gone and will come back in\u00a0<code>h</code>\u00a0hours. \u79d1\u79d1\u559c\u6b22\u5403\u9999\u8549\u3002\u6709\u00a0<code>n</code>\u00a0\u4e00\u5806\u9999\u8549\uff0c\u90a3\u00a0<code>ith</code>\u00a0\u5806\u6709\u00a0<code>piles[i]</code>\u00a0\u9999\u8549\u3002\u8b66\u536b\u5df2\u7ecf\u8d70\u4e86\uff0c\u51e0\u4e2a\u5c0f\u65f6\u540e\u00a0<code>h</code>\u00a0\u5c31\u4f1a\u56de\u6765\u3002</p> <p>Koko can decide her bananas-per-hour eating speed of\u00a0<code>k</code>. Each hour, she chooses some pile of bananas and eats\u00a0<code>k</code>\u00a0bananas from that pile. If the pile has less than\u00a0<code>k</code>\u00a0bananas, she eats all of them instead and will not eat any more bananas during this hour. \u79d1\u79d1\u53ef\u4ee5\u51b3\u5b9a\u5979\u6bcf\u5c0f\u65f6\u5403\u9999\u8549\u7684\u901f\u5ea6\u00a0<code>k</code>\u00a0\u3002\u6bcf\u4e2a\u5c0f\u65f6\uff0c\u5979\u90fd\u4f1a\u6311\u9009\u4e00\u5806\u9999\u8549\uff0c\u7136\u540e\u4ece\u90a3\u5806\u9999\u8549\u4e2d\u5403\u00a0<code>k</code>\u00a0\u9999\u8549\u3002\u5982\u679c\u9999\u8549\u5806\u00a0<code>k</code>\u00a0\u5c11\uff0c\u5979\u5c31\u628a\u9999\u8549\u5168\u90e8\u5403\u6389\uff0c\u5728\u8fd9\u4e2a\u5c0f\u65f6\u5185\u4e0d\u4f1a\u518d\u5403\u9999\u8549\u4e86\u3002</p> <p>Koko likes to eat slowly but still wants to finish eating all the bananas before the guards return. \u79d1\u79d1\u559c\u6b22\u6162\u6162\u5403\uff0c\u4f46\u8fd8\u662f\u60f3\u5728\u8b66\u536b\u56de\u6765\u4e4b\u524d\u628a\u6240\u6709\u7684\u9999\u8549\u90fd\u5403\u5b8c\u3002</p> <p>Return\u00a0the minimum integer <code>k</code> such that she can eat all the bananas within <code>h</code> hours. \u8fd4\u56de\u6700\u5c0f\u6574\u6570\u00a0<code>k</code>\u00a0\uff0c\u4ee5\u4fbf\u5979\u53ef\u4ee5\u5728\u00a0<code>h</code>\u00a0\u6570\u5c0f\u65f6\u5185\u5403\u5b8c\u6240\u6709\u9999\u8549\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: piles = [3,6,7,11], h = 8 Output: 4</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: piles = [30,11,23,4,20], h = 5 Output: 30</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: piles = [30,11,23,4,20], h = 6 Output: 23</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= piles.length &lt;= 104</code></li> <li><code>piles.length &lt;= h &lt;= 109</code></li> <li><code>1 &lt;= piles[i] &lt;= 109</code></li> </ul> <pre><code>\n</code></pre>"},{"location":"LeetCode/kth-largest-element-in-an-array/","title":"Kth largest element in an array","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given an integer array\u00a0<code>nums</code>\u00a0and an integer\u00a0<code>k</code>, return\u00a0the <code>kth</code> largest element in the array. \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570\u00a0<code>k</code>\u00a0\uff0c\u8fd4\u56de\u6570\u7ec4\u00a0<code>nums</code>\u00a0\u4e2d\u00a0<code>kth</code>\u00a0\u6700\u5927\u7684\u5143\u7d20\u3002</p> <p>Note that it is the\u00a0<code>kth</code>\u00a0largest element in the sorted order, not the\u00a0<code>kth</code>\u00a0distinct element. \u8bf7\u6ce8\u610f\uff0c\u5b83\u662f\u6392\u5e8f\u987a\u5e8f\u4e2d\u00a0<code>kth</code>\u00a0\u6700\u5927\u7684\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u00a0<code>kth</code>\u00a0\u975e\u91cd\u590d\u5143\u7d20\u3002</p> <p>Can you solve it without sorting? \u4f60\u80fd\u5728\u4e0d\u6392\u5e8f\u7684\u60c5\u51b5\u4e0b\u89e3\u51b3\u5b83\u5417\uff1f</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: nums = [3,2,1,5,6,4], k = 2 Output: 5</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: nums = [3,2,3,1,2,4,5,5,6], k = 4 Output: 4</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= k &lt;= nums.length &lt;= 105</code></li> <li><code>-104 &lt;= nums[i] &lt;= 104</code></li> </ul> <pre><code>package org.leetcode;  \nimport java.util.*;  \npublic class FindKthLargest {  \n    public int findKthLargest(int[] nums, int k) {  \n        PriorityQueue&lt;Integer&gt; minHeap = new PriorityQueue&lt;&gt;();  \n        for (int num : nums) {  \n            minHeap.add(num);  \n            if (minHeap.size() &gt; k) {  \n                // remove the smallest element  \n                minHeap.remove();  \n            }  \n        }  \n        // the kth largest element is at the top of the heap  \n        return minHeap.peek();  \n\n    }  \n\n    public static void main(String[] args){  \n        FindKthLargest obj = new FindKthLargest();  \n        int[] nums1 = {3,2,1,5,6,4};  \n        int k1 = 2;  \n        int expect1 = 5;  \n        int result1 = obj.findKthLargest(nums1, k1);  \n        if (expect1 == result1) {  \n            System.out.println(\"Pass test 1\");  \n        } else {  \n            System.out.println(\"Fail test 1, expect: \" + expect1 + \" but got: \" + result1);  \n        }  \n\n        int[] nums2 = {3,2,3,1,2,4,5,5,6};  \n        int k2 = 4;  \n        int expect2 = 4;  \n        int result2 = obj.findKthLargest(nums2, k2);  \n        if (expect2 == result2) {  \n            System.out.println(\"Pass test 2\");  \n        } else {  \n            System.out.println(\"Fail test 2, expect: \" + expect2 + \" but got: \" + result2);  \n        }  \n    }  \n}\n</code></pre>"},{"location":"LeetCode/maximum-average-subarray-i/","title":"Maximum average subarray i","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform You are given an integer array\u00a0<code>nums</code>\u00a0consisting of\u00a0<code>n</code>\u00a0elements, and an integer\u00a0<code>k</code>. \u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u7531\u00a0<code>n</code>\u00a0\u5143\u7d20\u7ec4\u6210\u7684\u6574\u6570\u6570\u7ec4\u00a0<code>nums</code>\u00a0\u548c\u4e00\u4e2a\u6574\u6570\u00a0<code>k</code>\u00a0.</p> <p>Find a contiguous subarray whose\u00a0length is equal to <code>k</code>\u00a0that has the maximum average value and return\u00a0this value. Any answer with a calculation error less than\u00a0<code>10-5</code>\u00a0will be accepted. \u627e\u5230\u4e00\u4e2a\u957f\u5ea6\u7b49\u4e8e\u5177\u6709\u6700\u5927\u5e73\u5747\u503c\u00a0<code>k</code>\u00a0\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5e76\u8fd4\u56de\u6b64\u503c\u3002\u4efb\u4f55\u8ba1\u7b97\u8bef\u5dee\u5c0f\u4e8e\u00a0<code>10-5</code>\u00a0\u7684\u7b54\u6848\u90fd\u5c06\u88ab\u63a5\u53d7\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: nums = [1,12,-5,-6,50,3], k = 4 Output: 12.75000 Explanation: Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: nums = [5], k = 1 Output: 5.00000</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>n == nums.length</code></li> <li><code>1 &lt;= k &lt;= n &lt;= 105</code></li> <li><code>-104 &lt;= nums[i] &lt;= 104</code></li> </ul> <pre><code>package org.leetcode;  \n\npublic class MaximumAverageSubarrayI {  \n    public double findMaxAverage(int[] nums, int k) {  \n\n        int sum = 0;  \n        for(int i = 0; i &lt; k; i++) {  \n            sum = sum + nums[i];  \n        }  \n\n        int i = k;  \n        int j = 0;  \n        double result = sum/k;  \n        while(i &lt; nums.length) {  \n            sum += nums[i];  \n            sum -= nums[j];  \n            result = Math.max(result, sum/k);  \n            i++;  \n            j++;  \n        }  \n        return result;  \n    }  \n\n    public static void main(String[] args) {  \n        MaximumAverageSubarrayI maximumAverageSubarrayI = new MaximumAverageSubarrayI();  \n        int[] nums1 = {1,12,-5,-6,50,3};  \n        int k1 = 4;  \n        double result1 = maximumAverageSubarrayI.findMaxAverage(nums1, k1);  \n        double expected1 = 12.75;  \n        if(result1 == expected1) {  \n            System.out.println(\"Test 1 passed\");  \n        } else {  \n            System.out.println(\"Test 1 failed expected: \" + expected1 + \" actual: \" + result1);  \n        }  \n\n        int[] nums2 = {5};  \n        int k2 = 1;  \n        double result2 = maximumAverageSubarrayI.findMaxAverage(nums2, k2);  \n        double expected2 = 5;  \n        if(result2 == expected2) {  \n            System.out.println(\"Test 2 passed\");  \n        } else {  \n            System.out.println(\"Test 2 failed expected: \" + expected2 + \" actual: \" + result2);  \n        }  \n    }  \n}\n</code></pre>"},{"location":"LeetCode/merge-strings-alternately/","title":"Merge strings alternately","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform You are given two strings\u00a0<code>word1</code>\u00a0and\u00a0<code>word2</code>. Merge the strings by adding letters in alternating order, starting with\u00a0<code>word1</code>. If a string is longer than the other, append the additional letters onto the end of the merged string. \u60a8\u5c06\u83b7\u5f97\u4e24\u4e2a\u5b57\u7b26\u4e32\u00a0<code>word1</code>\u00a0\u548c\u00a0<code>word2</code>\u00a0.\u901a\u8fc7\u4ea4\u66ff\u6dfb\u52a0\u5b57\u6bcd\uff08\u4ece \u5f00\u59cb\u00a0<code>word1</code>\u00a0\uff09\u6765\u5408\u5e76\u5b57\u7b26\u4e32\u3002\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6bd4\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u957f\uff0c\u8bf7\u5c06\u5176\u4ed6\u5b57\u6bcd\u9644\u52a0\u5230\u5408\u5e76\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002</p> <p>Return\u00a0the merged string. \u8fd4\u56de\u5408\u5e76\u7684\u5b57\u7b26\u4e32\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: word1 = \"abc\", word2 = \"pqr\" Output: \"apbqcr\" Explanation:\u00a0The merged string will be merged as so: word1:  a   b   c word2:    p   q   r merged: a p b q c r</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: word1 = \"ab\", word2 = \"pqrs\" Output: \"apbqrs\" Explanation:\u00a0Notice that as word2 is longer, \"rs\" is appended to the end. word1:  a   b  word2:    p   q   r   s merged: a p b q   r   s</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: word1 = \"abcd\", word2 = \"pq\" Output: \"apbqcd\" Explanation:\u00a0Notice that as word1 is longer, \"cd\" is appended to the end. word1:  a   b   c   d word2:    p   q  merged: a p b q c   d</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= word1.length, word2.length &lt;= 100</code></li> <li><code>word1</code>\u00a0and\u00a0<code>word2</code>\u00a0consist of lowercase English letters. <code>word1</code>\u00a0\u7531\u00a0<code>word2</code>\u00a0\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li> </ul> <pre><code>class Solution(object):  \n    def mergeAlternately(self, word1, word2):  \n        \"\"\"  \n        :type word1: str        :type word2: str        :rtype: str  \n        \"\"\"        mergeString = \"\"  \n        i=0  \n        j=0  \n        while i &lt; len(word1) and j &lt; len(word2):  \n            mergeString += word1[i]  \n            mergeString += word2[j]  \n            i += 1  \n            j += 1  \n\n        if i &lt; len(word1):  \n            mergeString += word1[i:]  \n        if j &lt; len(word2):  \n            mergeString += word2[j:]  \n        return mergeString  \n\n    def test(self):  \n        word1 = \"abc\"  \n        word2 = \"pqr\"  \n        expected = \"apbqcr\"  \n        actual = self.mergeAlternately(word1, word2)  \n        if actual == expected:  \n            print(\"Test passed.\")  \n        else:  \n            print(\"Test failed. %s != %s\" % (actual, expected))  \n\n\n\nif __name__ == \"__main__\":  \n    Solution().test()\n</code></pre>"},{"location":"LeetCode/palindrome-number/","title":"Palindrome number","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given an integer\u00a0<code>x</code>, return\u00a0<code>true</code> if <code>x</code> is a \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u00a0<code>x</code>\u00a0\uff0c\u5219\u00a0<code>x</code>\u00a0\u8fd4\u56de\u00a0<code>true</code>\u00a0if \u662f</p> <p>palindrome\u00a0\u56de\u6587</p> <p>, and\u00a0\u00a0\u548c<code>false</code> otherwise.\u00a0\u00a0<code>false</code>\u00a0\u5426\u5219\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: x = 121 Output: true Explanation: 121 reads as 121 from left to right and from right to left.</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: x = -121 Output: false Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: x = 10 Output: false Explanation: Reads 01 from right to left. Therefore it is not a palindrome.</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>-231\u00a0&lt;= x &lt;= 231\u00a0- 1</code></li> </ul> <p>Follow up:\u00a0\u8ddf\u8fdb\uff1a\u00a0Could you solve it without converting the integer to a string? \u4f60\u80fd\u5728\u4e0d\u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\u4e0b\u89e3\u51b3\u5b83\u5417\uff1f</p> <pre><code>class Solution(object):\n    def isPalindrome(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: bool\n        \"\"\"\n        if x &lt;0:\n            return False\n\n        temp = str(x)\n        n = len(temp)\n        for i in range(n):\n            if temp[i] != temp[n - i - 1]:\n                return False\n        return True\n\n\n    def test(self):\n        x = 121\n        assert self.isPalindrome(x) == True\n\n        x = -121\n        assert self.isPalindrome(x) == False\n\nif __name__ == '__main__':\n    Solution().test()\n</code></pre>"},{"location":"LeetCode/path-sum-ii/","title":"Path sum ii","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given the\u00a0<code>root</code>\u00a0of a binary tree and an integer\u00a0<code>targetSum</code>, return\u00a0all\u00a0root-to-leaf\u00a0paths where the sum of the node values in the path equals <code>targetSum</code>. Each path should be returned as a list of the node\u00a0values, not node references. <code>root</code>\u00a0\u7ed9\u5b9a\u4e8c\u53c9\u6811\u548c\u6574\u6570\u00a0<code>targetSum</code>\u00a0\u7684 \uff0c\u8fd4\u56de\u8def\u5f84\u4e2d\u8282\u70b9\u503c\u4e4b\u548c\u7b49\u4e8e\u00a0<code>targetSum</code>\u00a0\u7684\u6240\u6709\u6839\u5230\u53f6\u8def\u5f84\u3002\u6bcf\u4e2a\u8def\u5f84\u90fd\u5e94\u4f5c\u4e3a\u8282\u70b9\u503c\u7684\u5217\u8868\u8fd4\u56de\uff0c\u800c\u4e0d\u662f\u8282\u70b9\u5f15\u7528\u3002</p> <p>A\u00a0root-to-leaf\u00a0path is a path starting from the root and ending at any leaf node. A\u00a0leaf\u00a0is a node with no children. \u6839\u5230\u53f6\u8def\u5f84\u662f\u4ece\u6839\u5f00\u59cb\u5e76\u5728\u4efb\u4f55\u53f6\u8282\u70b9\u7ed3\u675f\u7684\u8def\u5f84\u3002\u53f6\u662f\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p></p> <p>Input: root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22 Output: [[5,4,11,2],[5,8,4,5]] Explanation: There are two paths whose sum equals targetSum: 5 + 4 + 11 + 2 = 22 5 + 8 + 4 + 5 = 22</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p></p> <p>Input: root = [1,2,3], targetSum = 5 Output: []</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: root = [1,2], targetSum = 0 Output: []</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li>The number of nodes in the tree is in the range\u00a0<code>[0, 5000]</code>.     \u6811\u4e2d\u7684\u8282\u70b9\u6570\u5728\u00a0<code>[0, 5000]</code>\u00a0\u8303\u56f4\u5185\u3002</li> <li><code>-1000 &lt;= Node.val &lt;= 1000</code></li> <li><code>-1000 &lt;= targetSum &lt;= 1000</code></li> </ul>"},{"location":"LeetCode/removing-stars-from-a-string/","title":"Removing stars from a string","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform You are given a string\u00a0<code>s</code>, which contains stars\u00a0<code>*</code>. \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\uff0c\u5176\u4e2d\u5305\u542b\u661f\u53f7\u00a0<code>*</code>\u00a0\u3002</p> <p>In one operation, you can: \u5728\u4e00\u4e2a\u64cd\u4f5c\u4e2d\uff0c\u60a8\u53ef\u4ee5\uff1a</p> <ul> <li>Choose a star in\u00a0<code>s</code>.     \u5728 \u4e2d\u00a0<code>s</code>\u00a0\u9009\u62e9\u4e00\u4e2a\u661f\u53f7\u3002</li> <li>Remove the closest\u00a0non-star\u00a0character to its\u00a0left, as well as remove the star itself.     \u5220\u9664\u6700\u9760\u8fd1\u5176\u5de6\u4fa7\u7684\u975e\u661f\u53f7\u5b57\u7b26\uff0c\u4ee5\u53ca\u5220\u9664\u661f\u53f7\u672c\u8eab\u3002</li> </ul> <p>Return\u00a0the string after\u00a0all\u00a0stars have been removed. \u5220\u9664\u6240\u6709\u661f\u53f7\u540e\u8fd4\u56de\u5b57\u7b26\u4e32\u3002</p> <p>Note:\u00a0\u6ce8\u610f\uff1a</p> <ul> <li>The input will be generated such that the operation is always possible.     \u5c06\u751f\u6210\u8f93\u5165\uff0c\u4ee5\u4fbf\u64cd\u4f5c\u59cb\u7ec8\u662f\u53ef\u80fd\u7684\u3002</li> <li>It can be shown that the resulting string will always be unique.     \u53ef\u4ee5\u8bc1\u660e\uff0c\u751f\u6210\u7684\u5b57\u7b26\u4e32\u5c06\u59cb\u7ec8\u662f\u552f\u4e00\u7684\u3002</li> </ul> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: s = \"leetcode\" Output: \"lecoe\" Explanation: Performing the removals from left to right: - The closest character to the 1st star is 't' in \"lee**tcode\". s becomes \"leecode\". - The closest character to the 2nd star is 'e' in \"leecode\". s becomes \"lecode\". - The closest character to the 3rd star is 'd' in \"lecod**e\". s becomes \"lecoe\". There are no more stars, so we return \"lecoe\".</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: s = \"erase*\" Output: \"\" Explanation:** The entire string is removed, so we return an empty string.</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= s.length &lt;= 105</code></li> <li><code>s</code>\u00a0consists of lowercase English letters and stars\u00a0<code>*</code>. <code>s</code>\u00a0\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u548c\u661f\u661f\u00a0<code>*</code>\u00a0\u7ec4\u6210\u3002</li> <li>The operation above can be performed on\u00a0<code>s</code>.     \u4e0a\u8ff0\u64cd\u4f5c\u53ef\u4ee5\u5728 \u4e0a\u00a0<code>s</code>\u00a0\u6267\u884c\u3002  </li> </ul> <pre><code>package org.leetcode;  \n\npublic class RemovingStarsFromString {  \n    public static String removeStars(String s) {  \n        String result = \"\";  \n        for (int i = 0; i &lt; s.length(); i++) {  \n            if (s.charAt(i) != '*') {  \n                result += s.charAt(i);  \n            }  \n            // if the current character is a star  \n            // and the result string is not empty            // then remove the last character from the result string            else{  \n                if(result.length() &gt; 0){  \n                    result = result.substring(0, result.length() - 1);  \n                }  \n            }  \n        }  \n\n        return result;  \n    }  \n\n\n    public static void main(String[] args) {  \n        String s1 = \"leet**cod*e\";  \n        String result1 = removeStars(s1);  \n        String expected1 = \"lecoe\";  \n        if (result1.equals(expected1)) {  \n            System.out.println(\"Test 1 passed\");  \n        } else {  \n            System.out.println(\"Test 1 failed expected: \" + expected1 + \" but got: \" + result1);  \n        }  \n\n        String s2 = \"erase*****\";  \n        String result2 = removeStars(s2);  \n        String expected2 = \"\";  \n        if (result2.equals(expected2)) {  \n            System.out.println(\"Test 2 passed\");  \n        } else {  \n            System.out.println(\"Test 2 failed expected: \" + expected2 + \" but got: \" + result2);  \n        }  \n    }  \n}\n</code></pre>"},{"location":"LeetCode/reverse-linked-list/","title":"Reverse linked list","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given the\u00a0<code>head</code>\u00a0of a singly linked list, reverse the list, and return\u00a0the reversed list. \u7ed9\u5b9a\u5355\u5411\u94fe\u8868\u7684 \uff0c\u00a0<code>head</code>\u00a0\u53cd\u8f6c\u5217\u8868\uff0c\u5e76\u8fd4\u56de\u53cd\u8f6c\u5217\u8868\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p></p> <p>Input: head = [1,2,3,4,5] Output: [5,4,3,2,1]</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p></p> <p>Input: head = [1,2] Output: [2,1]</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: head = [] Output: []</p> <p>[Constraints:\u00a0\u7ea6\u675f](&lt;Constraints: \u7ea6\u675f\uff1a</p> <p>The number of nodes in the list is the range [0, 5000]. \u5217\u8868\u4e2d\u7684\u8282\u70b9\u6570\u662f\u8303\u56f4 [0, 5000] \u3002 -5000 %3C= Node.val &lt;= 5000</p> <p>Follow up: A linked list can be reversed either iteratively or recursively. Could you implement both? \u8ddf\u8fdb\uff1a\u94fe\u8868\u53ef\u4ee5\u8fed\u4ee3\u6216\u9012\u5f52\u5730\u53cd\u8f6c\u3002\u4f60\u80fd\u540c\u65f6\u5b9e\u73b0\u4e24\u8005\u5417\uff1f&gt;)</p>"},{"location":"LeetCode/reverse-vowels-of-a-string/","title":"Reverse vowels of a string","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given a string\u00a0<code>s</code>, reverse only all the vowels in the string and return it. \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ea\u53cd\u8f6c\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\u4e2d\u7684\u6240\u6709\u5143\u97f3\u5e76\u8fd4\u56de\u5b83\u3002</p> <p>The vowels are\u00a0<code>'a'</code>,\u00a0<code>'e'</code>,\u00a0<code>'i'</code>,\u00a0<code>'o'</code>, and\u00a0<code>'u'</code>, and they can appear in both lower and upper cases, more than once. \u5143\u97f3\u662f\u00a0<code>'a'</code>\u00a0\u3001\u3001\u00a0<code>'e'</code> <code>'i'</code>\u00a0\u548c\u00a0<code>'o'</code> <code>'u'</code>\u00a0\uff0c\u5b83\u4eec\u53ef\u4ee5\u591a\u6b21\u51fa\u73b0\u5728\u5c0f\u5199\u548c\u5927\u5199\u4e2d\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: s = \"hello\" Output: \"holle\"</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: s = \"leetcode\" Output: \"leotcede\"</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= s.length &lt;= 3 * 105</code></li> <li><code>s</code>\u00a0consist of\u00a0printable ASCII\u00a0characters. <code>s</code>\u00a0\u7531\u53ef\u6253\u5370\u7684 ASCII \u5b57\u7b26\u7ec4\u6210\u3002</li> </ul> <pre><code>class Solution(object):\n    def reverseVowels(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        vowels = \"aeiouAEIOU\"\n        s = list(s)\n        left = 0\n        right = len(s) - 1\n\n        while left &lt; right:\n            if s[left] in vowels and s[right] in vowels:\n                s[left], s[right] = s[right], s[left]\n                left += 1\n                right -= 1\n            elif s[left] not in vowels:\n                left += 1\n            elif s[right] not in vowels:\n                right -= 1\n\n        return \"\".join(s)\n\n    def test(self):\n        s = \"hello\"\n        expected = \"holle\"\n        actual = self.reverseVowels(s)\n        if actual == expected:\n            print(\"Test passed.\")\n        else:\n            print(\"Test failed. %s != %s\" % (actual, expected))\n\nif __name__ == \"__main__\":\n    Solution().test()\n\n</code></pre>"},{"location":"LeetCode/reverse-words-in-a-string/","title":"Reverse words in a string","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given an input string\u00a0<code>s</code>, reverse the order of the\u00a0words. \u7ed9\u5b9a\u4e00\u4e2a\u8f93\u5165\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\uff0c\u98a0\u5012\u5355\u8bcd\u7684\u987a\u5e8f\u3002</p> <p>A\u00a0word\u00a0is defined as a sequence of non-space characters. The\u00a0words\u00a0in\u00a0<code>s</code>\u00a0will be separated by at least one space. \u5355\u8bcd\u5b9a\u4e49\u4e3a\u975e\u7a7a\u683c\u5b57\u7b26\u5e8f\u5217\u3002\u4e2d\u7684\u00a0<code>s</code>\u00a0\u5b57\u8bcd\u5c06\u81f3\u5c11\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u9694\u3002</p> <p>Return\u00a0a string of the words in reverse order concatenated by a single space. \u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u8fd4\u56de\u7531\u5355\u4e2a\u7a7a\u683c\u8fde\u63a5\u7684\u5355\u8bcd\u5b57\u7b26\u4e32\u3002</p> <p>Note\u00a0that\u00a0<code>s</code>\u00a0may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces. \u8bf7\u6ce8\u610f\uff0c\u53ef\u80fd\u5305\u542b\u00a0<code>s</code>\u00a0\u524d\u5bfc\u6216\u5c3e\u968f\u7a7a\u683c\u6216\u4e24\u4e2a\u5355\u8bcd\u4e4b\u95f4\u7684\u591a\u4e2a\u7a7a\u683c\u3002\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u7a7a\u683c\u6765\u5206\u9694\u5355\u8bcd\u3002\u4e0d\u8981\u5305\u542b\u4efb\u4f55\u591a\u4f59\u7684\u7a7a\u683c\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: s = \"the sky is blue\" Output: \"blue is sky the\"</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: s = \"  hello world  \" Output: \"world hello\" Explanation: Your reversed string should not contain leading or trailing spaces.</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: s = \"a good   example\" Output: \"example good a\" Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= s.length &lt;= 104</code></li> <li><code>s</code>\u00a0contains English letters (upper-case and lower-case), digits, and spaces\u00a0<code>' '</code>. <code>s</code>\u00a0\u5305\u542b\u82f1\u6587\u5b57\u6bcd\uff08\u5927\u5199\u548c\u5c0f\u5199\uff09\u3001\u6570\u5b57\u548c\u7a7a\u683c\u00a0<code>' '</code>\u00a0\u3002</li> <li>There is\u00a0at least one\u00a0word in\u00a0<code>s</code>.     \u4e2d\u00a0<code>s</code>\u00a0\u81f3\u5c11\u6709\u4e00\u4e2a\u5355\u8bcd\u3002</li> </ul> <p>Follow-up:\u00a0If the string data type is mutable in your language, can\u00a0you solve it\u00a0in-place\u00a0with\u00a0<code>O(1)</code>\u00a0extra space? \u8ddf\u8fdb\uff1a\u5982\u679c\u5b57\u7b26\u4e32\u6570\u636e\u7c7b\u578b\u5728\u60a8\u7684\u8bed\u8a00\u4e2d\u662f\u53ef\u53d8\u7684\uff0c\u4f60\u80fd\u7528\u989d\u5916\u7684\u7a7a\u95f4\u5c31\u00a0<code>O(1)</code>\u00a0\u5730\u89e3\u51b3\u5b83\u5417\uff1f</p> <pre><code>package org.leetcode;  \n\npublic class ReverseWordsInString {  \n    public String reverseWords(String s) {  \n        String[] words = s.split(\"\\\\s+\");  \n\n\n        String[] reversedWords = new String[words.length];  \n        for (int i = 0; i &lt; words.length; i++) {  \n            reversedWords[i] = words[words.length - 1 - i];  \n        }  \n\n        String reversedSentence = String.join(\" \", reversedWords);  \n        // delete the last space  \n        return reversedSentence.trim();  \n    }  \n\n    public static void main(String[] args) {  \n        String sentence1 = \"The dog is the best\";  \n        String reversedSentence1 = new ReverseWordsInString().reverseWords(sentence1);  \n        System.out.println(\"Reversed sentence1: \" + reversedSentence1); // Expected output: \"best the is dog The\"  \n\n        String sentence2 = \"  hello world  \";  \n        String reversedSentence2 = new ReverseWordsInString().reverseWords(sentence2);  \n        System.out.println(\"Reversed sentence2: \" + reversedSentence2); // Expected output: \"full so am I thanksgiving, Happy\"  \n\n\n        String sentence3 = \"a good   example\";  \n        String reversedSentence3 = new ReverseWordsInString().reverseWords(sentence3);  \n        System.out.println(\"Reversed sentence3: \" + reversedSentence3); // Expected output: \"example good a\"  \n    }  \n}\n</code></pre>"},{"location":"LeetCode/search-suggestions-system/","title":"Search suggestions system","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform You are given an array of strings\u00a0<code>products</code>\u00a0and a string\u00a0<code>searchWord</code>. \u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u00a0<code>products</code> <code>searchWord</code>\u00a0\u3002</p> <p>Design a system that suggests at most three product names from\u00a0<code>products</code>\u00a0after each character of\u00a0<code>searchWord</code>\u00a0is typed. Suggested products should have common prefix with\u00a0<code>searchWord</code>. If there are more than three products with a common prefix return the three lexicographically minimums products. \u8bbe\u8ba1\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5728\u952e\u5165\u6bcf\u4e2a\u00a0<code>searchWord</code>\u00a0\u5b57\u7b26\u540e\u5efa\u8bae\u00a0<code>products</code>\u00a0\u6700\u591a\u4e09\u4e2a\u4ea7\u54c1\u540d\u79f0\u3002\u5efa\u8bae\u7684\u4ea7\u54c1\u5e94\u5177\u6709\u4e0e .\u00a0<code>searchWord</code>\u00a0\u5982\u679c\u6709\u4e09\u4e2a\u4ee5\u4e0a\u7684\u4ea7\u54c1\u5177\u6709\u516c\u5171\u524d\u7f00\uff0c\u5219\u8fd4\u56de\u4e09\u4e2a\u6309\u5b57\u5178\u987a\u5e8f\u6392\u5217\u7684\u6700\u5c0f\u4ea7\u54c1\u3002</p> <p>Return\u00a0a list of lists of the suggested products after each character of <code>searchWord</code> is typed. \u952e\u5165\u6bcf\u4e2a\u00a0<code>searchWord</code>\u00a0\u5b57\u7b26\u540e\u8fd4\u56de\u5efa\u8bae\u4ea7\u54c1\u7684\u5217\u8868\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: products = [\"mobile\",\"mouse\",\"moneypot\",\"monitor\",\"mousepad\"], searchWord = \"mouse\" Output: [[\"mobile\",\"moneypot\",\"monitor\"],[\"mobile\",\"moneypot\",\"monitor\"],[\"mouse\",\"mousepad\"],[\"mouse\",\"mousepad\"],[\"mouse\",\"mousepad\"]] Explanation: products sorted lexicographically = [\"mobile\",\"moneypot\",\"monitor\",\"mouse\",\"mousepad\"]. After typing m and mo all products match and we show user [\"mobile\",\"moneypot\",\"monitor\"]. After typing mou, mous and mouse the system suggests [\"mouse\",\"mousepad\"].</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: products = [\"havana\"], searchWord = \"havana\" Output: [[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"]] Explanation: The only word \"havana\" will be always suggested while typing the search word.</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= products.length &lt;= 1000</code></li> <li><code>1 &lt;= products[i].length &lt;= 3000</code></li> <li><code>1 &lt;= sum(products[i].length) &lt;= 2 * 104</code></li> <li>All the strings of\u00a0<code>products</code>\u00a0are\u00a0unique.     \u7684\u6240\u6709\u00a0<code>products</code>\u00a0\u5b57\u7b26\u4e32\u90fd\u662f\u552f\u4e00\u7684\u3002</li> <li><code>products[i]</code>\u00a0consists of lowercase English letters. <code>products[i]</code>\u00a0\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li> <li><code>1 &lt;= searchWord.length &lt;= 1000</code></li> <li><code>searchWord</code>\u00a0consists of lowercase English letters. <code>searchWord</code>\u00a0\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li> </ul> <pre><code>package org.leetcode;  \n\nimport java.util.*;  \n\npublic class SuggestedProducts {  \n    public List&lt;List&lt;String&gt;&gt; suggestedProducts(String[] products, String searchWord) {  \n        //transfer the products array to a list  \n        List&lt;String&gt; productsList = Arrays.asList(products);  \n        //Sort the products array  \n        Arrays.sort(products);  \n        //initialize the result list  \n        List&lt;List&lt;String&gt;&gt; result = new ArrayList&lt;&gt;();  \n        //index of the products array  \n        TreeMap&lt;String,Integer&gt; map = new TreeMap&lt;&gt;();  \n\n        //loop through the search word  \n        // if product only have one character, then add the product to the result list        if (products.length == 1) {  \n            map.put(products[0],0);  \n        }else{  \n            int productLength = products.length;  \n            int mapRange = Math.min(searchWord.length(),productLength);  \n            for(int i = 0; i &lt; mapRange; i++){  \n                map.put(products[i],i);  \n            }  \n        }  \n\n\n\n\n        String prefix = \"\";  \n        for(char c : searchWord.toCharArray()){  \n            prefix += c;  \n            String ceiling = map.ceilingKey(prefix);  \n            String floor = map.floorKey(prefix + \"~\");  \n            if(ceiling == null || floor == null){  \n                break;  \n            }  \n            result.add(productsList.subList(map.get(ceiling),Math.min(map.get(ceiling) + 3, map.get(floor) + 1)));  \n        }  \n\n        while(result.size() &lt; searchWord.length()){  \n            result.add(new ArrayList&lt;&gt;());  \n        }  \n        return result;  \n    }  \n\n    public static void main(String[] args) {  \n        SuggestedProducts obj = new SuggestedProducts();  \n        String[] products1 = {\"mobile\", \"mouse\", \"moneypot\", \"monitor\", \"mousepad\"};  \n        String searchWord1 = \"monl\";  \n        List&lt;List&lt;String&gt;&gt; result1 = obj.suggestedProducts(products1, searchWord1);  \n        //Expected output: [[\"mobile\", \"moneypot\", \"monitor\"], [\"mobile\", \"moneypot\", \"monitor\"], [\"mouse\", \"mousepad\"], [\"mouse\", \"mousepad\"], [\"mouse\", \"mousepad\"]]  \n        System.out.println(result1);  \n\n        String[] products2 = {\"havana\"};  \n        String searchWord2 = \"havana\";  \n        List&lt;List&lt;String&gt;&gt; result2 = obj.suggestedProducts(products2, searchWord2);  \n        //Expected output: [[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"]]  \n        System.out.println(result2);  \n\n        //[\"code\",\"codephone\",\"coddle\",\"coddles\",\"codes\"]  \n        String[] products3 = {\"code\",\"codephone\",\"coddle\",\"coddles\",\"codes\"};  \n        String searchWord3 = \"coddle\";  \n        List&lt;List&lt;String&gt;&gt; result3 = obj.suggestedProducts(products3, searchWord3);  \n        System.out.println(result3);  \n\n\n    }  \n}\n</code></pre>"},{"location":"LeetCode/single-number/","title":"Single number","text":"<p>Given a\u00a0non-empty\u00a0array of integers\u00a0<code>nums</code>, every element appears\u00a0twice\u00a0except for one. Find that single one. \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u6574\u6570\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u4e24\u6b21\u00a0<code>nums</code>\u00a0\uff0c\u9664\u4e86\u4e00\u4e2a\u3002\u627e\u5230\u90a3\u4e2a\u3002</p> <p>You must\u00a0implement a solution with a linear runtime complexity and use\u00a0only constant\u00a0extra space. \u60a8\u5fc5\u987b\u5b9e\u73b0\u5177\u6709\u7ebf\u6027\u8fd0\u884c\u65f6\u590d\u6742\u6027\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u4e14\u4ec5\u4f7f\u7528\u5e38\u91cf\u7684\u989d\u5916\u7a7a\u95f4\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: nums = [2,2,1] Output: 1</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: nums = [4,1,2,1,2] Output: 4</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: nums = [1] Output: 1</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 3 * 104</code></li> <li><code>-3 * 104 &lt;= nums[i] &lt;= 3 * 104</code></li> <li>Each element in the array appears twice except for one element which appears only once.     \u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u4e24\u6b21\uff0c\u4f46\u4e00\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u3002</li> </ul> <pre><code>package org.leetcode;  \n\npublic class SingleNumber {  \n    public int singleNumber(int[] nums) {  \n        int result = 0;  \n        for (int i = 0 ; i &lt; nums.length ; i++) {  \n            result ^= nums[i];  \n        }  \n        return result;  \n    }  \n\n    public static void main(String[] args) {  \n        SingleNumber obj = new SingleNumber();  \n        int[] nums1 = {2,2,1};  \n        int result1 = obj.singleNumber(nums1);  \n        int expected1 = 1;  \n        if (result1 == expected1) {  \n            System.out.println(\"Test1 passed\");  \n        } else {  \n            System.out.println(\"Test1 failed\");  \n        }  \n\n        int[] nums2 = {4,1,2,1,2};  \n        int result2 = obj.singleNumber(nums2);  \n        int expected2 = 4;  \n        if (result2 == expected2) {  \n            System.out.println(\"Test2 passed\");  \n        } else {  \n            System.out.println(\"Test2 failed\");  \n        }  \n    }  \n}\n</code></pre>"},{"location":"LeetCode/string-compression/","title":"String compression","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given an array of characters\u00a0<code>chars</code>, compress it using the following algorithm: \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u00a0<code>chars</code>\u00a0\u6570\u7ec4\uff0c\u4f7f\u7528\u4ee5\u4e0b\u7b97\u6cd5\u5bf9\u5176\u8fdb\u884c\u538b\u7f29\uff1a</p> <p>Begin with an empty string\u00a0<code>s</code>. For each group of\u00a0consecutive repeating characters\u00a0in\u00a0<code>chars</code>: \u4ee5\u7a7a\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\u5f00\u5934\u3002\u5bf9\u4e8e \u4e2d\u7684\u00a0<code>chars</code>\u00a0\u6bcf\u7ec4\u8fde\u7eed\u91cd\u590d\u5b57\u7b26\uff1a</p> <ul> <li>If the group's length is\u00a0<code>1</code>, append the character to\u00a0<code>s</code>.     \u5982\u679c\u7ec4\u7684\u957f\u5ea6\u4e3a\u00a0<code>1</code>\u00a0\uff0c\u5219\u5c06\u5b57\u7b26\u8ffd\u52a0\u5230\u00a0<code>s</code>\u00a0\u3002</li> <li>Otherwise, append the character followed by the group's length.     \u5426\u5219\uff0c\u9644\u52a0\u5b57\u7b26\u540e\u8ddf\u7ec4\u7684\u957f\u5ea6\u3002</li> </ul> <p>The compressed string\u00a0<code>s</code> should not be returned separately, but instead, be stored\u00a0in the input character array\u00a0<code>chars</code>. Note that group lengths that are\u00a0<code>10</code>\u00a0or longer will be split into multiple characters in\u00a0<code>chars</code>. \u538b\u7f29\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\u4e0d\u5e94\u5355\u72ec\u8fd4\u56de\uff0c\u800c\u5e94\u5b58\u50a8\u5728\u8f93\u5165\u5b57\u7b26\u6570\u7ec4\u00a0<code>chars</code>\u00a0\u4e2d\u3002\u8bf7\u6ce8\u610f\uff0c\u7ec4\u957f\u5ea6\u4e3a \u6216\u66f4\u957f\u7684\u7ec4\u957f\u5ea6\u5c06\u5728 \u4e2d\u00a0<code>chars</code>\u00a0\u62c6\u5206\u4e3a\u00a0<code>10</code>\u00a0\u591a\u4e2a\u5b57\u7b26\u3002</p> <p>After you are done\u00a0modifying the input array,\u00a0return\u00a0the new length of the array. \u4fee\u6539\u5b8c\u8f93\u5165\u6570\u7ec4\u540e\uff0c\u8fd4\u56de\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002</p> <p>You must write an algorithm that uses only constant extra space. \u60a8\u5fc5\u987b\u7f16\u5199\u4ec5\u4f7f\u7528\u5e38\u91cf\u989d\u5916\u7a7a\u95f4\u7684\u7b97\u6cd5\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"] Output: Return 6, and the first 6 characters of the input array should be: [\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"] Explanation: The groups are \"aa\", \"bb\", and \"ccc\". This compresses to \"a2b2c3\".</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: chars = [\"a\"] Output: Return 1, and the first character of the input array should be: [\"a\"] Explanation: The only group is \"a\", which remains uncompressed since it's a single character.</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"] Output: Return 4, and the first 4 characters of the input array should be: [\"a\",\"b\",\"1\",\"2\"]. Explanation: The groups are \"a\" and \"bbbbbbbbbbbb\". This compresses to \"ab12\".</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= chars.length &lt;= 2000</code></li> <li><code>chars[i]</code>\u00a0is a lowercase English letter, uppercase English letter, digit, or symbol. <code>chars[i]</code>\u00a0\u662f\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3001\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u6216\u7b26\u53f7\u3002</li> </ul>"},{"location":"LeetCode/two-sum/","title":"Two sum","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform Given an array of integers\u00a0<code>nums</code>\u00a0and an integer\u00a0<code>target</code>, return\u00a0indices of the two numbers such that they add up to\u00a0<code>target</code>. \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u00a0<code>target</code>\u00a0\u548c\u4e00\u4e2a\u6574\u6570\u00a0<code>nums</code>\u00a0\uff0c\u8fd4\u56de\u8fd9\u4e24\u4e2a\u6570\u5b57\u7684\u7d22\u5f15\uff0c\u4f7f\u5f97\u5b83\u4eec\u52a0\u8d77\u6765\u4e3a\u00a0<code>target</code>\u00a0\u3002</p> <p>You may assume that each input would have\u00a0exactly\u00a0one solution, and you may not use the\u00a0same\u00a0element twice. \u60a8\u53ef\u4ee5\u5047\u8bbe\u6bcf\u4e2a\u8f93\u5165\u53ea\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u4e14\u60a8\u53ef\u80fd\u4e0d\u4f1a\u4e24\u6b21\u4f7f\u7528\u540c\u4e00\u4e2a\u5143\u7d20\u3002</p> <p>You can return the answer in any order. \u60a8\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: nums = [2,7,11,15], target = 9 Output: [0,1] Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: nums = [3,2,4], target = 6 Output: [1,2]</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: nums = [3,3], target = 6 Output: [0,1]</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>2 &lt;= nums.length &lt;= 104</code></li> <li><code>-109 &lt;= nums[i] &lt;= 109</code></li> <li><code>-109 &lt;= target &lt;= 109</code></li> <li>Only one valid answer exists.     \u53ea\u6709\u4e00\u4e2a\u6709\u6548\u7684\u7b54\u6848\u5b58\u5728\u3002</li> </ul> <p>Follow-up:\u00a0\u00a0\u968f\u8bbf\uff1aCan you come up with an algorithm that is less than\u00a0<code>O(n2)</code>\u00a0time complexity? \u4f60\u80fd\u60f3\u51fa\u4e00\u4e2a\u5c0f\u4e8e\u00a0<code>O(n2)</code>\u00a0\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u5417\uff1f</p> <pre><code>class Solution(object):  \n    def twoSum(self, nums, target):  \n        \"\"\"  \n        :type nums: List[int]        :type target: int        :rtype: List[int]  \n        \"\"\"        num_dict = {}  # Dictionary to store the visited numbers  \n        for i, num in enumerate(nums):  \n            complement = target - num  \n            if complement in num_dict:  \n                return [num_dict[complement], i]  \n            num_dict[num] = i  \n\n        return []  # No two numbers found that add up to the target  \n\n    def twoSum_test(self):  \n        nums = [2, 7, 11, 15]  \n        target = 9  \n        output = [0, 1]  \n        assert self.twoSum(nums, target) == output  \n        print(\"Test 1: Passed\")  \n\n\nif __name__ == '__main__':  \n    sol = Solution()  \n    sol.twoSum_test()\n</code></pre> <ol> <li>Create an empty dictionary to store the visited numbers along with their indices.     \u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u5178\u6765\u5b58\u50a8\u8bbf\u95ee\u7684\u53f7\u7801\u53ca\u5176\u7d22\u5f15\u3002</li> <li>Iterate through the array\u00a0<code>nums</code>\u00a0using the\u00a0<code>enumerate</code>\u00a0function.     \u4f7f\u7528\u8be5\u00a0<code>enumerate</code>\u00a0\u51fd\u6570\u5faa\u73af\u8bbf\u95ee\u6570\u7ec4\u00a0<code>nums</code>\u00a0\u3002</li> <li>For each number\u00a0<code>num</code>, calculate the complement by subtracting\u00a0<code>num</code>\u00a0from the target.     \u5bf9\u4e8e\u6bcf\u4e2a\u6570\u00a0<code>num</code>\u00a0\uff0c\u901a\u8fc7\u00a0<code>num</code>\u00a0\u4ece\u76ee\u6807\u4e2d\u51cf\u53bb\u6765\u8ba1\u7b97\u8865\u7801\u3002</li> <li>Check if the complement exists in the dictionary\u00a0<code>num_dict</code>.     \u68c0\u67e5\u5b57\u5178\u4e2d\u662f\u5426\u5b58\u5728\u8865\u7801\u00a0<code>num_dict</code>\u00a0\u3002</li> <li>If the complement exists, return the indices of\u00a0<code>num</code>\u00a0and the complement.     \u5982\u679c\u8865\u7801\u5b58\u5728\uff0c\u5219\u8fd4\u56de \u548c\u8865\u7801\u7684\u00a0<code>num</code>\u00a0\u7d22\u5f15\u3002</li> <li>If the complement doesn't exist, add\u00a0<code>num</code>\u00a0to the dictionary with its index as the value.     \u5982\u679c\u8865\u7801\u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u5176\u00a0<code>num</code>\u00a0\u7d22\u5f15\u4f5c\u4e3a\u503c\u6dfb\u52a0\u5230\u5b57\u5178\u4e2d\u3002</li> <li>If no two numbers are found that add up to the target, return an empty list.     \u5982\u679c\u672a\u627e\u5230\u4e24\u4e2a\u52a0\u8d77\u6765\u4e0e\u76ee\u6807\u76f8\u52a0\u7684\u6570\u5b57\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5217\u8868\u3002</li> </ol> <p>Python Tutor code visualizer: Visualize code in Python, JavaScript, C, C++, and Java </p>"},{"location":"LeetCode/zigzag-conversion/","title":"Zigzag conversion","text":"<p>LeetCode - The World's Leading Online Programming Learning Platform pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility) \u5b57\u7b26\u4e32\u00a0<code>\"PAYPALISHIRING\"</code>\u00a0\u4ee5\u952f\u9f7f\u5f62\u6a21\u5f0f\u5199\u5728\u7ed9\u5b9a\u6570\u91cf\u7684\u884c\u4e0a\uff0c\u5982\u4e0b\u6240\u793a\uff1a\uff08\u60a8\u53ef\u80fd\u5e0c\u671b\u4ee5\u56fa\u5b9a\u5b57\u4f53\u663e\u793a\u6b64\u6a21\u5f0f\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u53ef\u8bfb\u6027\uff09</p> <p>P   A   H   N A P L S I I G Y   I   R</p> <p>And then read line by line:\u00a0<code>\"PAHNAPLSIIGYIR\"</code> \u7136\u540e\u9010\u884c\u9605\u8bfb\uff1a\u00a0<code>\"PAHNAPLSIIGYIR\"</code></p> <p>Write the code that will take a string and make this conversion given a number of rows: \u7f16\u5199\u5c06\u63a5\u53d7\u5b57\u7b26\u4e32\u7684\u4ee3\u7801\uff0c\u5e76\u5728\u7ed9\u5b9a\u884c\u6570\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u6b64\u8f6c\u6362\uff1a</p> <p>string convert(string s, int numRows);</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: s = \"PAYPALISHIRING\", numRows = 3 Output: \"PAHNAPLSIIGYIR\"</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: s = \"PAYPALISHIRING\", numRows = 4 Output: \"PINALSIGYAHRPI\" Explanation: P     I    N A   L S  I G Y A   H R P     I</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: s = \"A\", numRows = 1 Output: \"A\"</p> <p>Constraints:\u00a0\u7ea6\u675f\uff1a</p> <ul> <li><code>1 &lt;= s.length &lt;= 1000</code></li> <li><code>s</code>\u00a0consists of English letters (lower-case and upper-case),\u00a0<code>','</code>\u00a0and\u00a0<code>'.'</code>. <code>s</code>\u00a0\u7531\u82f1\u6587\u5b57\u6bcd\uff08\u5c0f\u5199\u548c\u5927\u5199\uff09\u00a0<code>','</code>\u00a0\u548c\u00a0<code>'.'</code>\u00a0.</li> <li><code>1 &lt;= numRows &lt;= 1000</code></li> </ul> <pre><code>package org.leetcode;  \n\npublic class ZigzagConversion {  \n    public String convert(String s, int numRows) {  \n\n        int length = s.length();  \n        if (numRows == 1 || length &lt;= numRows) {  \n            return s;  \n        }  \n\n        StringBuilder[] rows = new StringBuilder[numRows];  \n        for (int i = 0; i &lt; numRows; i++) {  \n            rows[i] = new StringBuilder();  \n        }  \n\n        int currentRow = 0;  \n        boolean goingDown = false;  \n\n        for (char c : s.toCharArray()) {  \n            rows[currentRow].append(c);  \n\n            if (currentRow == 0 || currentRow == numRows - 1) {  \n                goingDown = !goingDown;  \n            }  \n\n            currentRow += goingDown ? 1 : -1;  \n        }  \n\n        StringBuilder result = new StringBuilder();  \n        for (StringBuilder row : rows) {  \n            result.append(row);  \n        }  \n\n        return result.toString();  \n    }  \n\n    public String convertMatrix(String s, int numRows) {  \n\n        int length = s.length();  \n        if (numRows == 1 || length &lt;= numRows) {  \n            return s;  \n        }  \n        char[][] result = new char[numRows][s.length()];  \n\n        int currentRow = 0;  \n        boolean goingDown = false;  \n        int index = 0;  \n\n        for (char c : s.toCharArray()) {  \n            result[currentRow][index] = c;  \n\n            if (currentRow == 0 || currentRow == numRows - 1) {  \n                goingDown = !goingDown;  \n            }  \n\n            currentRow += goingDown ? 1 : -1;  \n            index++;  \n        }  \n\n        StringBuilder sb = new StringBuilder();  \n        for (int i = 0; i &lt; numRows; i++) {  \n            for (int j = 0; j &lt; index; j++) {  \n                if (result[i][j] != '\\0') {  \n                    sb.append(result[i][j]);  \n                }  \n            }  \n        }  \n\n        return sb.toString();  \n    }  \n\n    public static void main(String[] args) {  \n        ZigzagConversion zigzagConversion = new ZigzagConversion();  \n        String s1 = \"PAYPALISHIRING\";  \n        int numRows1 = 3;  \n        String result1 = zigzagConversion.convert(s1, numRows1);  \n        String expected1 = \"PAHNAPLSIIGYIR\";  \n        if (!result1.equals(expected1)) {  \n            System.out.println(\"Test failed for \" + s1 + \" with result \" + result1);  \n        }  \n        else {  \n            System.out.println(\"Test passed for \" + s1);  \n        }  \n\n        String s2 = \"PAYPALISHIRING\";  \n        int numRows2 = 4;  \n        String result2 = zigzagConversion.convertMatrix(s2, numRows2);  \n        String expected2 = \"PINALSIGYAHRPI\";  \n        if (!result2.equals(expected2)) {  \n            System.out.println(\"Test failed for \" + s2 + \" with result \" + result2);  \n        }  \n        else {  \n            System.out.println(\"Test passed for \" + s2);  \n        }  \n\n\n    }  \n}\n</code></pre>"},{"location":"about/about_copyright/","title":"Power by and copyright","text":"<p>Create time: 2022-10-29  Last update: 2022-11-28</p>"},{"location":"about/about_copyright/#copyright","title":"copyright","text":"<p>You may be able to use portions of copyright material without permission for the purpose of: - research or study - criticism or review - parody or satire - reporting news,  - enabling a person with a disability to access the material  </p>"},{"location":"about/about_copyright/#power-by","title":"power by","text":"<p>This blog is build on Markdown file written by GreenH47 and transferred to html page by Mkdocs and Material  The information about how to build this website can be found in How to build this site This website is hosting on Gitpages</p>"},{"location":"about/about_index/","title":"blog index","text":"<p>Create time: 2022-11-29  Last update: 2022-11-30</p>"},{"location":"about/about_index/#navigation-for-the-blog-site","title":"Navigation for the blog site","text":""},{"location":"about/about_index/#fit-note","title":"FIT NOTE","text":"<p>click FIT note navigation for further details. </p>"},{"location":"about/about_index/#green-chat","title":"Green  chat","text":"<p>click green chat navigation for further details. </p>"},{"location":"about/about_index/#programming-note","title":"Programming Note","text":""},{"location":"about/about_index/#css","title":"CSS","text":"<p>click CSS note navigation for further details.   </p>"},{"location":"about/about_index/#html","title":"HTML","text":"<p>click HTML note navigation for further details.   </p>"},{"location":"about/about_index/#javascript","title":"Javascript","text":"<p>click Javascript note navigation for further details.    </p>"},{"location":"about/about_index/#git","title":"Git","text":"<p>click git command note for further details. </p>"},{"location":"about/about_index/#reactjs","title":"reactJS","text":"<p>click reactJS note navigation for further details. </p>"},{"location":"about/about_index/#leetcode","title":"Leetcode","text":"<p>click LeetCode note navigation for further details. </p>"},{"location":"about/about_index/#career-note","title":"Career Note","text":"<p>click career note navigation for further details. </p>"},{"location":"about/about_me/","title":"FIT5032 Week 1 Notes","text":"<p>Create time: 2022-10-29 Last update: {{ git_revision_date }}</p>"},{"location":"about/about_me/#hi-there","title":"Hi there \ud83d\udc4b","text":"<pre><code>class Me:\n  def __init__(self):\n    self.name = 'GreenH47'\n    self.languages = ['Chinese','English','Mongolian']\n    self.direction = ['fullstack','forntend','backend','aws']\n    self.status= 'Monash Uni Master of IT'\n    self.email = 'greenhuang47@gmail.com'\n    self.website = 'https://greenh47.github.io/mynote/'\n</code></pre> <p>My programming language stack \u00a0</p> <p></p> <p>My Web application framework \u00a0</p> <p></p> <p>My Database side \u00a0</p> <p></p> <p>Other Tools and Frameworks \u00a0</p> <p></p>"},{"location":"about/about_me/#github-stats","title":"\u2699\ufe0f GitHub Stats","text":""},{"location":"about/about_me/#programming-languages","title":"\ud83d\udee0 Programming Languages","text":""},{"location":"about/about_site_building/","title":"How to build this site","text":"<p>Create time: 2022-10-29 Last update: {{ git_revision_date }}</p>"},{"location":"about/about_site_building/#site_building","title":"site_building","text":"<p>This blog is build on Markdown file written by GreenH47 and transferred to html page by Mkdocs and Material  The information about how to build this website can be found in How to build this site This website is hosting on Gitpages </p> <p>https://teddywarner.org/Projects/ProjectPortfolioSite/#</p> <p>https://stackoverflow.com/questions/63438788/how-to-add-a-landing-page-to-a-mkdocs-doc-site-using-mkdocs-material</p> <p>https://github.com/squidfunk/mkdocs-material/issues/1996</p>"},{"location":"about/about_site_building/#project-folder-layout","title":"Project folder layout","text":"<pre><code>mkdocs.yml    # The configuration file.\n.github/      # github auto deployment of your project (not include in the source file)  \nsite/         # build up webpage from md files\ndocs/\n    index.md  # The homepage.\n    xxx.md    # Other markdown pages\n    img/      # images and other attachment.\n</code></pre>"},{"location":"about/about_site_building/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"career/career_note_menu/","title":"career note navigation","text":"<p>Create time: 2022-11-29  Last update: 2022-11-30</p>"},{"location":"career/career_note_menu/#career-note-navigation","title":"career note navigation","text":""},{"location":"chat/20230809_AWSProduct/","title":"20230809 AWSProduct","text":"<p>SaaS provides ready-to-use applications, PaaS abstracts the underlying infrastructure to streamline application deployment, and IaaS provides virtualized infrastructure resources for greater control and flexibility. SaaS \u63d0\u4f9b\u5373\u7528\u578b\u5e94\u7528\u7a0b\u5e8f\uff0cPaaS \u62bd\u8c61\u5316\u5e95\u5c42\u57fa\u7840\u67b6\u6784\u4ee5\u7b80\u5316\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\uff0cIaaS \u63d0\u4f9b\u865a\u62df\u5316\u57fa\u7840\u67b6\u6784\u8d44\u6e90\u4ee5\u5b9e\u73b0\u66f4\u597d\u7684\u63a7\u5236\u548c\u7075\u6d3b\u6027\u3002 </p>"},{"location":"chat/20230809_AWSProduct/#saas","title":"Saas","text":"<p>Software-as-a-Service (SaaS) is a cloud computing model where software applications are delivered over the internet as a service. This approach eliminates the need for you to install, manage, and maintain the software locally on your own infrastructure. AWS offers a variety of SaaS products and services that are fully managed and can be easily integrated into your existing infrastructure. \u8f6f\u4ef6\u5373\u670d\u52a1 \uff08SaaS\uff09 \u662f\u4e00\u79cd\u4e91\u8ba1\u7b97\u6a21\u578b\uff0c\u5176\u4e2d\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u4e92\u8054\u7f51\u5373\u670d\u52a1\u4ea4\u4ed8\u3002\u8fd9\u79cd\u65b9\u6cd5\u6d88\u9664\u4e86\u60a8\u5728\u81ea\u5df1\u7684\u57fa\u7840\u7ed3\u6784\u4e0a\u672c\u5730\u5b89\u88c5\u3001\u7ba1\u7406\u548c\u7ef4\u62a4\u8f6f\u4ef6\u7684\u9700\u8981\u3002AWS \u63d0\u4f9b\u5404\u79cd\u5b8c\u5168\u6258\u7ba1\u7684 SaaS \u4ea7\u54c1\u548c\u670d\u52a1\uff0c\u53ef\u4ee5\u8f7b\u677e\u96c6\u6210\u5230\u60a8\u73b0\u6709\u7684\u57fa\u7840\u8bbe\u65bd\u4e2d\u3002 1. Amazon S3 (Simple Storage Service):     Amazon S3\uff08\u7b80\u5355\u5b58\u50a8\u670d\u52a1\uff09\uff1a     Amazon S3 provides scalable object storage for storing and retrieving data. It is highly durable, secure, and offers various storage classes catered to different use cases. You can find more information and documentation about Amazon S3 here:     Amazon S3 \u63d0\u4f9b\u53ef\u6269\u5c55\u7684\u5bf9\u8c61\u5b58\u50a8\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u68c0\u7d22\u6570\u636e\u3002\u5b83\u975e\u5e38\u8010\u7528\u3001\u5b89\u5168\uff0c\u5e76\u63d0\u4f9b\u5404\u79cd\u5b58\u50a8\u7c7b\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u7528\u4f8b\u3002\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u6709\u5173 Amazon S3 \u7684\u66f4\u591a\u4fe1\u606f\u548c\u6587\u6863\uff1a</p> <pre><code>- Documentation:\u00a0[https://aws.amazon.com/documentation/s3/](https://aws.amazon.com/documentation/s3/)\n</code></pre> <ol> <li> <p>Amazon RDS (Relational Database Service):     Amazon RDS\uff08\u5173\u7cfb\u6570\u636e\u5e93\u670d\u52a1\uff09\uff1a     Amazon RDS is a managed database service that supports popular database engines such as MySQL, PostgreSQL, Oracle, and more. It simplifies the provisioning, scaling, and high availability of databases. Learn more about Amazon RDS and its documentation here:     Amazon RDS \u662f\u4e00\u79cd\u6258\u7ba1\u6570\u636e\u5e93\u670d\u52a1\uff0c\u652f\u6301\u6d41\u884c\u7684\u6570\u636e\u5e93\u5f15\u64ce\uff0c\u5982 MySQL\u3001PostgreSQL\u3001Oracle \u7b49\u3002\u5b83\u7b80\u5316\u4e86\u6570\u636e\u5e93\u7684\u9884\u914d\u3001\u6269\u5c55\u548c\u9ad8\u53ef\u7528\u6027\u3002\u5728\u6b64\u5904\u4e86\u89e3\u6709\u5173 Amazon RDS \u53ca\u5176\u6587\u6863\u7684\u66f4\u591a\u4fe1\u606f\uff1a</p> <ul> <li>Documentation:\u00a0https://aws.amazon.com/documentation/rds/</li> </ul> </li> <li> <p>Amazon WorkSpaces:\u00a0\u4e9a\u9a6c\u900a\u5de5\u4f5c\u533a\uff1a     Amazon WorkSpaces is a fully managed desktop-as-a-service (DaaS) offering, delivering virtual desktops to users anywhere, anytime. It provides a secure, scalable, and customizable desktop computing experience in the cloud. Explore Amazon WorkSpaces documentation for more details:     Amazon WorkSpaces \u662f\u4e00\u79cd\u5b8c\u5168\u6258\u7ba1\u7684\u684c\u9762\u5373\u670d\u52a1 \uff08DaaS\uff09 \u4ea7\u54c1\uff0c\u53ef\u968f\u65f6\u968f\u5730\u5411\u7528\u6237\u4ea4\u4ed8\u865a\u62df\u684c\u9762\u3002\u5b83\u5728\u4e91\u4e2d\u63d0\u4f9b\u5b89\u5168\u3001\u53ef\u6269\u5c55\u4e14\u53ef\u81ea\u5b9a\u4e49\u7684\u684c\u9762\u8ba1\u7b97\u4f53\u9a8c\u3002\u6d4f\u89c8 Amazon WorkSpaces \u6587\u6863\uff0c\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff1a</p> <ul> <li>Documentation:\u00a0https://aws.amazon.com/documentation/workspaces/</li> </ul> </li> </ol>"},{"location":"chat/20230809_AWSProduct/#paas","title":"Paas","text":"<p>Platform-as-a-Service (PaaS) is a cloud computing model that provides a platform for developing, deploying, and managing applications without the need to worry about the underlying infrastructure. AWS offers various PaaS services that abstract away the complexities of infrastructure management, allowing you to focus on application development and deployment. \u5e73\u53f0\u5373\u670d\u52a1 \uff08PaaS\uff09 \u662f\u4e00\u79cd\u4e91\u8ba1\u7b97\u6a21\u578b\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u5f00\u53d1\u3001\u90e8\u7f72\u548c\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u5e73\u53f0\uff0c\u800c\u65e0\u9700\u62c5\u5fc3\u5e95\u5c42\u57fa\u7840\u7ed3\u6784\u3002AWS \u63d0\u4f9b\u5404\u79cd PaaS \u670d\u52a1\uff0c\u8fd9\u4e9b\u670d\u52a1\u6d88\u9664\u4e86\u57fa\u7840\u8bbe\u65bd\u7ba1\u7406\u7684\u590d\u6742\u6027\uff0c\u4f7f\u60a8\u80fd\u591f\u4e13\u6ce8\u4e8e\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u548c\u90e8\u7f72\u3002 1. AWS Elastic Beanstalk:\u00a0AWS Elastic Beanstalk\uff1a     AWS Elastic Beanstalk is a fully managed platform that makes it easy to deploy and scale applications. You simply upload your code, and Elastic Beanstalk handles the deployment, capacity provisioning, load balancing, and health monitoring of your application. Learn more about Elastic Beanstalk and its documentation here:     AWS Elastic Beanstalk \u662f\u4e00\u4e2a\u5b8c\u5168\u6258\u7ba1\u7684\u5e73\u53f0\uff0c\u53ef\u4ee5\u8f7b\u677e\u90e8\u7f72\u548c\u6269\u5c55\u5e94\u7528\u7a0b\u5e8f\u3002\u60a8\u53ea\u9700\u4e0a\u4f20\u4ee3\u7801\uff0cElastic Beanstalk \u5c31\u4f1a\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u3001\u5bb9\u91cf\u9884\u7f6e\u3001\u8d1f\u8f7d\u5747\u8861\u548c\u8fd0\u884c\u72b6\u51b5\u76d1\u63a7\u3002\u5728\u6b64\u5904\u4e86\u89e3\u6709\u5173 Elastic Beanstalk \u53ca\u5176\u6587\u6863\u7684\u66f4\u591a\u4fe1\u606f\uff1a</p> <pre><code>- Documentation:\u00a0[https://aws.amazon.com/documentation/elastic-beanstalk/](https://aws.amazon.com/documentation/elastic-beanstalk/)\n</code></pre> <ol> <li> <p>AWS Lambda:\u00a0AWS Lambda\uff1a     AWS Lambda is a serverless compute service that lets you run your code without provisioning or managing servers. It allows you to execute your code in response to events or via direct invocation, and scales automatically based on the incoming workload. Explore more about Lambda and its documentation here:     AWS Lambda \u662f\u4e00\u79cd\u65e0\u670d\u52a1\u5668\u8ba1\u7b97\u670d\u52a1\uff0c\u53ef\u8ba9\u60a8\u5728\u4e0d\u9884\u7f6e\u6216\u7ba1\u7406\u670d\u52a1\u5668\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u4ee3\u7801\u3002\u5b83\u5141\u8bb8\u60a8\u6267\u884c\u4ee3\u7801\u4ee5\u54cd\u5e94\u4e8b\u4ef6\u6216\u901a\u8fc7\u76f4\u63a5\u8c03\u7528\uff0c\u5e76\u6839\u636e\u4f20\u5165\u7684\u5de5\u4f5c\u8d1f\u8f7d\u81ea\u52a8\u7f29\u653e\u3002\u5728\u6b64\u5904\u63a2\u7d22\u6709\u5173 Lambda \u53ca\u5176\u6587\u6863\u7684\u66f4\u591a\u4fe1\u606f\uff1a</p> <ul> <li>Documentation:\u00a0https://aws.amazon.com/documentation/lambda/</li> </ul> </li> <li> <p>AWS API Gateway:\u00a0AWS API Gateway\uff1a     AWS API Gateway is a fully managed service that makes it easy to create, publish, and manage APIs at any scale. It provides features like authentication, caching, and request throttling, making it convenient to build robust and scalable APIs. Learn more about AWS API Gateway and its documentation here:     AWS API Gateway \u662f\u4e00\u9879\u5b8c\u5168\u6258\u7ba1\u7684\u670d\u52a1\uff0c\u53ef\u8ba9\u60a8\u8f7b\u677e\u521b\u5efa\u3001\u53d1\u5e03\u548c\u7ba1\u7406\u4efb\u4f55\u89c4\u6a21\u7684 API\u3002\u5b83\u63d0\u4f9b\u8eab\u4efd\u9a8c\u8bc1\u3001\u7f13\u5b58\u548c\u8bf7\u6c42\u9650\u5236\u7b49\u529f\u80fd\uff0c\u4fbf\u4e8e\u6784\u5efa\u53ef\u9760\u4e14\u53ef\u6269\u5c55\u7684 API\u3002\u5728\u6b64\u5904\u4e86\u89e3\u6709\u5173 AWS API \u7f51\u5173\u53ca\u5176\u6587\u6863\u7684\u66f4\u591a\u4fe1\u606f\uff1a</p> <ul> <li>Documentation:\u00a0https://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html</li> </ul> </li> </ol>"},{"location":"chat/20230809_AWSProduct/#iaas","title":"Iaas","text":"<p>Infrastructure-as-a-Service (IaaS) is a cloud computing model that provides virtualized computing resources over the internet. With IaaS, you can provision and manage virtualized infrastructure components such as virtual machines, storage, networks, and security. AWS offers a comprehensive set of IaaS products that allow you to build, secure, and scale your infrastructure efficiently. \u57fa\u7840\u67b6\u6784\u5373\u670d\u52a1 \uff08IaaS\uff09 \u662f\u4e00\u79cd\u4e91\u8ba1\u7b97\u6a21\u578b\uff0c\u53ef\u901a\u8fc7\u4e92\u8054\u7f51\u63d0\u4f9b\u865a\u62df\u5316\u8ba1\u7b97\u8d44\u6e90\u3002\u501f\u52a9 IaaS\uff0c\u60a8\u53ef\u4ee5\u914d\u7f6e\u548c\u7ba1\u7406\u865a\u62df\u5316\u57fa\u7840\u67b6\u6784\u7ec4\u4ef6\uff0c\u4f8b\u5982\u865a\u62df\u673a\u3001\u5b58\u50a8\u3001\u7f51\u7edc\u548c\u5b89\u5168\u6027\u3002AWS \u63d0\u4f9b\u4e86\u4e00\u5957\u5168\u9762\u7684 IaaS \u4ea7\u54c1\uff0c\u4f7f\u60a8\u80fd\u591f\u9ad8\u6548\u5730\u6784\u5efa\u3001\u4fdd\u62a4\u548c\u6269\u5c55\u57fa\u7840\u8bbe\u65bd\u3002 1. Amazon EC2 (Elastic Compute Cloud):     Amazon EC2\uff08Elastic Compute Cloud\uff09\uff1a     Amazon EC2 provides resizable compute capacity in the cloud. It allows you to provision virtual servers (instances) on-demand with various configurations, scale up or down as needed, and have full administrative access to the underlying operating system. Learn more about EC2 and its documentation here:     Amazon EC2 \u5728\u4e91\u4e2d\u63d0\u4f9b\u53ef\u8c03\u6574\u5927\u5c0f\u7684\u8ba1\u7b97\u5bb9\u91cf\u3002\u5b83\u5141\u8bb8\u60a8\u4f7f\u7528\u5404\u79cd\u914d\u7f6e\u6309\u9700\u914d\u7f6e\u865a\u62df\u670d\u52a1\u5668\uff08\u5b9e\u4f8b\uff09\uff0c\u6839\u636e\u9700\u8981\u8fdb\u884c\u6269\u5c55\u6216\u7f29\u51cf\uff0c\u5e76\u5177\u6709\u5bf9\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b8c\u5168\u7ba1\u7406\u8bbf\u95ee\u6743\u9650\u3002\u5728\u6b64\u5904\u4e86\u89e3\u6709\u5173 EC2 \u53ca\u5176\u6587\u6863\u7684\u66f4\u591a\u4fe1\u606f\uff1a</p> <pre><code>- Documentation:\u00a0[https://aws.amazon.com/documentation/ec2/](https://aws.amazon.com/documentation/ec2/)\n</code></pre> <ol> <li> <p>Amazon S3 (Simple Storage Service):     Amazon S3\uff08\u7b80\u5355\u5b58\u50a8\u670d\u52a1\uff09\uff1a     Amazon S3 is a scalable object storage service designed to store and retrieve large amounts of unstructured data. It provides durability, availability, and security for your data. With S3, you can store and retrieve any amount of data from anywhere on the web. Explore Amazon S3 documentation for more details:     Amazon S3 \u662f\u4e00\u79cd\u53ef\u6269\u5c55\u7684\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u65e8\u5728\u5b58\u50a8\u548c\u68c0\u7d22\u5927\u91cf\u975e\u7ed3\u6784\u5316\u6570\u636e\u3002\u5b83\u4e3a\u60a8\u7684\u6570\u636e\u63d0\u4f9b\u6301\u4e45\u6027\u3001\u53ef\u7528\u6027\u548c\u5b89\u5168\u6027\u3002\u4f7f\u7528 S3\uff0c\u60a8\u53ef\u4ee5\u4ece Web \u4e0a\u7684\u4efb\u4f55\u4f4d\u7f6e\u5b58\u50a8\u548c\u68c0\u7d22\u4efb\u610f\u6570\u91cf\u7684\u6570\u636e\u3002\u6d4f\u89c8 Amazon S3 \u6587\u6863\uff0c\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff1a</p> <ul> <li>Documentation:\u00a0https://aws.amazon.com/documentation/s3/</li> <li> <p>Amazon VPC (Virtual Private Cloud): Amazon VPC\uff08\u865a\u62df\u79c1\u6709\u4e91\uff09\uff1a Amazon VPC allows you to create a private and isolated virtual network in the AWS cloud. It gives you control over networking resources, including IP address ranges, subnets, route tables, and security groups. Understand more about VPC and its capabilities through the documentation: Amazon VPC \u5141\u8bb8\u60a8\u5728 AWS \u4e91\u4e2d\u521b\u5efa\u79c1\u6709\u548c\u9694\u79bb\u7684\u865a\u62df\u7f51\u7edc\u3002\u5b83\u4f7f\u60a8\u53ef\u4ee5\u63a7\u5236\u7f51\u7edc\u8d44\u6e90\uff0c\u5305\u62ec IP \u5730\u5740\u8303\u56f4\u3001\u5b50\u7f51\u3001\u8def\u7531\u8868\u548c\u5b89\u5168\u7ec4\u3002\u901a\u8fc7\u6587\u6863\u4e86\u89e3\u6709\u5173 VPC \u53ca\u5176\u529f\u80fd\u7684\u66f4\u591a\u4fe1\u606f\uff1a</p> </li> <li> <p>Documentation:\u00a0https://aws.amazon.com/documentation/vpc/</p> </li> <li> <p>AWS Auto Scaling:\u00a0AWS Auto Scaling\uff1a AWS Auto Scaling enables you to automatically adjust your resource capacity based on demand. It provides unified scaling across multiple services like EC2 instances, DynamoDB tables, and more. You can define scaling policies and let AWS Auto Scaling handle the scaling for you. Learn more about AWS Auto Scaling here: AWS Auto Scaling \u4f7f\u60a8\u80fd\u591f\u6839\u636e\u9700\u6c42\u81ea\u52a8\u8c03\u6574\u8d44\u6e90\u5bb9\u91cf\u3002\u5b83\u63d0\u4f9b\u8de8\u591a\u4e2a\u670d\u52a1\uff08\u5982 EC2 \u5b9e\u4f8b\u3001DynamoDB \u8868\u7b49\uff09\u7684\u7edf\u4e00\u6269\u5c55\u3002\u60a8\u53ef\u4ee5\u5b9a\u4e49\u6269\u5c55\u7b56\u7565\uff0c\u8ba9 AWS Auto Scaling \u4e3a\u60a8\u5904\u7406\u6269\u5c55\u3002\u5728\u6b64\u5904\u4e86\u89e3\u6709\u5173 AWS Auto Scaling \u7684\u66f4\u591a\u4fe1\u606f\uff1a</p> </li> <li> <p>Documentation:\u00a0https://aws.amazon.com/documentation/autoscaling/</p> </li> </ul> </li> </ol>"},{"location":"chat/221206_ChatGPT/","title":"221206_ChatGPT","text":"<p>Create time: 2022-12-06  Last update: 2022-12-06</p> <p>https://openai.com/blog/chatgpt/ so incredible it can answer anything! goodbye google!  </p>"},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/","title":"230521_serverless,microservices,RESTFUL","text":""},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/#what-is-serverless-and-microservices","title":"what is serverless and microservices","text":"<p>Serverless and microservices are two architectural styles for building modern applications, but they have some differences and similarities. \u65e0\u670d\u52a1\u5668\u548c\u5fae\u670d\u52a1\u662f\u7528\u4e8e\u6784\u5efa\u73b0\u4ee3\u5e94\u7528\u7a0b\u5e8f\u7684\u4e24\u79cd\u4f53\u7cfb\u7ed3\u6784\u6837\u5f0f\uff0c\u4f46\u5b83\u4eec\u6709\u4e00\u4e9b\u5dee\u5f02\u548c\u76f8\u4f3c\u4e4b\u5904\u3002</p>"},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/#serverless","title":"Serverless:","text":"<p>Serverless computing is a model of cloud computing that abstracts away the infrastructure layer, allowing developers to focus on writing code without worrying about managing the infrastructure. Instead of dealing with servers and operating systems, developers write functions using a serverless platform such as AWS Lambda, Google Cloud Functions, or Azure Functions. The code runs in response to events, and the platform automatically scales the compute resources, managing the infrastructure and automatically allocating resources as needed. Therefore, serverless refers to the idea that you don't have to manage servers or infrastructure yourself. \u65e0\u670d\u52a1\u5668\u8ba1\u7b97\u662f\u4e00\u79cd\u4e91\u8ba1\u7b97\u6a21\u578b\uff0c\u5b83\u62bd\u8c61\u51fa\u57fa\u7840\u67b6\u6784\u5c42\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u4e13\u6ce8\u4e8e\u7f16\u5199\u4ee3\u7801\uff0c\u800c\u65e0\u9700\u62c5\u5fc3\u7ba1\u7406\u57fa\u7840\u67b6\u6784\u3002\u5f00\u53d1\u4eba\u5458\u4e0d\u4f7f\u7528\u670d\u52a1\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u662f\u4f7f\u7528\u65e0\u670d\u52a1\u5668\u5e73\u53f0\uff08\u5982AWS Lambda\uff0cGoogle Cloud Functions\u6216Azure Functions\uff09\u7f16\u5199\u51fd\u6570\u3002\u4ee3\u7801\u8fd0\u884c\u4ee5\u54cd\u5e94\u4e8b\u4ef6\uff0c\u5e73\u53f0\u4f1a\u81ea\u52a8\u7f29\u653e\u8ba1\u7b97\u8d44\u6e90\uff0c\u7ba1\u7406\u57fa\u7840\u7ed3\u6784\u5e76\u6839\u636e\u9700\u8981\u81ea\u52a8\u5206\u914d\u8d44\u6e90\u3002\u56e0\u6b64\uff0c\u65e0\u670d\u52a1\u5668\u662f\u6307\u60a8\u4e0d\u5fc5\u81ea\u5df1\u7ba1\u7406\u670d\u52a1\u5668\u6216\u57fa\u7840\u7ed3\u6784\u7684\u60f3\u6cd5\u3002</p>"},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/#microservices","title":"Microservices:","text":"<p>Microservices is an architectural style that structures applications as a collection of small, independent services that communicate with each other through APIs. Each service is loosely coupled and can be independently developed and deployed. This architecture helps to promote the modularity of applications, enabling developers to build complex applications by composing small reusable services. Each service does one thing well and can be scaled independently, which makes applications more agile and maintainable. \u5fae\u670d\u52a1\u662f\u4e00\u79cd\u67b6\u6784\u98ce\u683c\uff0c\u5b83\u5c06\u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u4e3a\u901a\u8fc7 API \u76f8\u4e92\u901a\u4fe1\u7684\u5c0f\u578b\u72ec\u7acb\u670d\u52a1\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u670d\u52a1\u90fd\u662f\u677e\u6563\u8026\u5408\u7684\uff0c\u53ef\u4ee5\u72ec\u7acb\u5f00\u53d1\u548c\u90e8\u7f72\u3002\u6b64\u4f53\u7cfb\u7ed3\u6784\u6709\u52a9\u4e8e\u4fc3\u8fdb\u5e94\u7528\u7a0b\u5e8f\u7684\u6a21\u5757\u5316\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u901a\u8fc7\u7ec4\u5408\u5c0f\u578b\u53ef\u91cd\u7528\u670d\u52a1\u6765\u6784\u5efa\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u6bcf\u4e2a\u670d\u52a1\u90fd\u505a\u597d\u4e00\u4ef6\u4e8b\uff0c\u5e76\u4e14\u53ef\u4ee5\u72ec\u7acb\u6269\u5c55\uff0c\u8fd9\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u66f4\u52a0\u654f\u6377\u548c\u53ef\u7ef4\u62a4\u3002</p>"},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/#similarities","title":"Similarities:","text":"<p>Both serverless and microservices aim to promote the modularity and composability of applications. The two architectures are designed to make applications more agile, flexible, and responsive to changing business needs. Both architectures are often used with cloud-based technologies to enable scalability and high availability. \u65e0\u670d\u52a1\u5668\u548c\u5fae\u670d\u52a1\u90fd\u65e8\u5728\u4fc3\u8fdb\u5e94\u7528\u7a0b\u5e8f\u7684\u6a21\u5757\u5316\u548c\u53ef\u7ec4\u5408\u6027\u3002\u8fd9\u4e24\u79cd\u4f53\u7cfb\u7ed3\u6784\u65e8\u5728\u4f7f\u5e94\u7528\u7a0b\u5e8f\u66f4\u52a0\u654f\u6377\u3001\u7075\u6d3b\uff0c\u5e76\u80fd\u54cd\u5e94\u4e0d\u65ad\u53d8\u5316\u7684\u4e1a\u52a1\u9700\u6c42\u3002\u8fd9\u4e24\u79cd\u4f53\u7cfb\u7ed3\u6784\u901a\u5e38\u4e0e\u57fa\u4e8e\u4e91\u7684\u6280\u672f\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u5b9e\u73b0\u53ef\u4f38\u7f29\u6027\u548c\u9ad8\u53ef\u7528\u6027\u3002</p>"},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/#differences","title":"Differences:","text":"<ul> <li> <p>Serverless refers to the idea that you don't have to manage servers or infrastructure yourself, while microservices refer to an architectural style that structures applications as a collection of independent services.     \u65e0\u670d\u52a1\u5668\u662f\u6307\u60a8\u4e0d\u5fc5\u81ea\u5df1\u7ba1\u7406\u670d\u52a1\u5668\u6216\u57fa\u7840\u7ed3\u6784\u7684\u60f3\u6cd5\uff0c\u800c\u5fae\u670d\u52a1\u662f\u6307\u5c06\u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u4e3a\u72ec\u7acb\u670d\u52a1\u96c6\u5408\u7684\u4f53\u7cfb\u7ed3\u6784\u6837\u5f0f\u3002</p> </li> <li> <p>In the case of serverless, the infrastructure layer is abstracted away, and the developer cannot directly manage it. On the contrary, in the case of microservices, developers have more control over deploying and managing the infrastructure that is running the services.     \u5728\u65e0\u670d\u52a1\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u7840\u7ed3\u6784\u5c42\u88ab\u62bd\u8c61\u51fa\u6765\uff0c\u5f00\u53d1\u4eba\u5458\u65e0\u6cd5\u76f4\u63a5\u7ba1\u7406\u5b83\u3002\u76f8\u53cd\uff0c\u5bf9\u4e8e\u5fae\u670d\u52a1\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u66f4\u597d\u5730\u63a7\u5236\u90e8\u7f72\u548c\u7ba1\u7406\u8fd0\u884c\u670d\u52a1\u7684\u57fa\u7840\u7ed3\u6784\u3002</p> </li> <li> <p>Serverless typically refers to the use of Functions as a Service (FaaS), while microservices are not limited to a specific technology or platform.     \u65e0\u670d\u52a1\u5668\u901a\u5e38\u662f\u6307\u4f7f\u7528\u529f\u80fd\u5373\u670d\u52a1 \uff08FaaS\uff09\uff0c\u800c\u5fae\u670d\u52a1\u4e0d\u9650\u4e8e\u7279\u5b9a\u7684\u6280\u672f\u6216\u5e73\u53f0\u3002</p> </li> </ul> <p>In summary, while both serverless and microservices promote application modularity and scalability, they differ in their approach to architecture and infrastructure management. \u603b\u4e4b\uff0c\u867d\u7136\u65e0\u670d\u52a1\u5668\u548c\u5fae\u670d\u52a1\u90fd\u4fc3\u8fdb\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u6a21\u5757\u5316\u548c\u53ef\u4f38\u7f29\u6027\uff0c\u4f46\u5b83\u4eec\u5728\u67b6\u6784\u548c\u57fa\u7840\u67b6\u6784\u7ba1\u7406\u65b9\u6cd5\u4e0a\u6709\u6240\u4e0d\u540c\u3002</p>"},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/#what-is-rest-what-is-restful-api-what-is-restful-web-service","title":"what is REST, what is restful api, what is restful web service","text":"<p>REST, or Representational State Transfer, is an architectural style for building distributed systems based on HTTP and other web standards. RESTful APIs and RESTful web services are two common methods of implementing REST. REST\u6216\u5177\u8c61\u72b6\u6001\u4f20\u8f93\u662f\u4e00\u79cd\u57fa\u4e8eHTTP\u548c\u5176\u4ed6Web\u6807\u51c6\u6784\u5efa\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u67b6\u6784\u98ce\u683c\u3002RESTful API \u548c RESTful Web \u670d\u52a1\u662f\u5b9e\u73b0 REST \u7684\u4e24\u79cd\u5e38\u7528\u65b9\u6cd5\u3002</p>"},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/#restful-api","title":"RESTful API:","text":"<p>A RESTful API is an application programming interface (API) that follows REST principles. A RESTful API provides a uniform interface for interacting with resources or data elements, using HTTP methods such as GET, POST, PUT, DELETE, and PATCH. These methods allow clients to perform operations on a web server by sending a request to a specific URL and receiving a response. Many applications use RESTful APIs as a way to interact with other services, such as social media networks or cloud services. RESTful API \u662f\u9075\u5faa REST \u539f\u5219\u7684\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3 \uff08API\uff09\u3002RESTful API \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u7528\u4e8e\u4f7f\u7528 GET\u3001POST\u3001PUT\u3001DELETE \u548c PATCH \u7b49 HTTP \u65b9\u6cd5\u4e0e\u8d44\u6e90\u6216\u6570\u636e\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5141\u8bb8\u5ba2\u6237\u7aef\u901a\u8fc7\u5411\u7279\u5b9a URL \u53d1\u9001\u8bf7\u6c42\u5e76\u63a5\u6536\u54cd\u5e94\u6765\u5728 Web \u670d\u52a1\u5668\u4e0a\u6267\u884c\u64cd\u4f5c\u3002\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528 RESTful API \u4f5c\u4e3a\u4e0e\u5176\u4ed6\u670d\u52a1\uff08\u5982\u793e\u4ea4\u5a92\u4f53\u7f51\u7edc\u6216\u4e91\u670d\u52a1\uff09\u4ea4\u4e92\u7684\u4e00\u79cd\u65b9\u5f0f\u3002</p>"},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/#restful-web-service-restful-web-service","title":"RESTful Web Service: RESTful Web Service\uff1a","text":"<p>A RESTful Web Service is a service that adheres to the REST architecture. A RESTful Web Service is a way to expose data or functionality as a web service, in which operations are performed on a set of resources through HTTP methods, like GET, POST, PUT, DELETE, and other web standards. RESTful Web Services use HTTP requests to GET, PUT, POST, and DELETE data typically in JSON or XML format. These services are designed to provide interoperability between different systems, languages, and platforms. RESTful Web Services are stateless, meaning that the client maintains no session information with the server and all required information must be included in each request. RESTful Web \u670d\u52a1\u662f\u4e00\u79cd\u9075\u5faa REST \u4f53\u7cfb\u7ed3\u6784\u7684\u670d\u52a1\u3002RESTful Web \u670d\u52a1\u662f\u4e00\u79cd\u5c06\u6570\u636e\u6216\u529f\u80fd\u516c\u5f00\u4e3a Web \u670d\u52a1\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u901a\u8fc7 HTTP \u65b9\u6cd5\uff08\u5982 GET\u3001POST\u3001PUT\u3001DELETE \u548c\u5176\u4ed6 Web \u6807\u51c6\uff09\u5bf9\u4e00\u7ec4\u8d44\u6e90\u6267\u884c\u64cd\u4f5c\u3002RESTful Web Services \u4f7f\u7528 HTTP \u8bf7\u6c42\u6765\u83b7\u53d6\u3001\u653e\u7f6e\u3001\u53d1\u5e03\u548c\u5220\u9664\u6570\u636e\uff0c\u901a\u5e38\u91c7\u7528 JSON \u6216 XML \u683c\u5f0f\u3002\u8fd9\u4e9b\u670d\u52a1\u65e8\u5728\u63d0\u4f9b\u4e0d\u540c\u7cfb\u7edf\u3001\u8bed\u8a00\u548c\u5e73\u53f0\u4e4b\u95f4\u7684\u4e92\u64cd\u4f5c\u6027\u3002RESTful Web \u670d\u52a1\u662f\u65e0\u72b6\u6001\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5ba2\u6237\u7aef\u4e0d\u7ef4\u62a4\u4e0e\u670d\u52a1\u5668\u7684\u4f1a\u8bdd\u4fe1\u606f\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u5fc5\u987b\u5305\u542b\u6240\u6709\u5fc5\u9700\u7684\u4fe1\u606f\u3002</p> <p>In summary, REST is an architectural style for building distributed systems based on HTTP and other web standards that promotes scalability, modifiability, and reliability. RESTful APIs and RESTful Web Services are two different forms of REST architecture that use HTTP methods to interact with web resources, while RESTful web services expose data or functionality through a web service, and RESTful APIs provide a standard interface for interacting with resources. \u603b\u4e4b\uff0cREST \u662f\u4e00\u79cd\u57fa\u4e8e HTTP \u548c\u5176\u4ed6 Web \u6807\u51c6\u6784\u5efa\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u67b6\u6784\u98ce\u683c\uff0c\u53ef\u63d0\u9ad8\u53ef\u4f38\u7f29\u6027\u3001\u53ef\u4fee\u6539\u6027\u548c\u53ef\u9760\u6027\u3002RESTful API \u548c RESTful Web Services \u662f\u4e24\u79cd\u4e0d\u540c\u5f62\u5f0f\u7684 REST \u67b6\u6784\uff0c\u5b83\u4eec\u4f7f\u7528 HTTP \u65b9\u6cd5\u4e0e Web \u8d44\u6e90\u4ea4\u4e92\uff0c\u800c RESTful Web \u670d\u52a1\u901a\u8fc7 Web \u670d\u52a1\u516c\u5f00\u6570\u636e\u6216\u529f\u80fd\uff0cRESTful API \u63d0\u4f9b\u4e0e\u8d44\u6e90\u4ea4\u4e92\u7684\u6807\u51c6\u63a5\u53e3\u3002</p>"},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/#what-are-the-architectural-constraints-of-rest","title":"What are the architectural constraints of REST","text":"<ol> <li> <p>Client-server: Separation of concerns between the client and server, allowing for independent development and evolution.     \u5ba2\u6237\u7aef-\u670d\u52a1\u5668\uff1a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u5173\u6ce8\u70b9\u5206\u79bb\uff0c\u5141\u8bb8\u72ec\u7acb\u5f00\u53d1\u548c\u6f14\u53d8\u3002</p> </li> <li> <p>Statelessness: Communication between the client and server is done in a stateless manner, where each request carries the necessary information required to process that request. The server does not store any client context.     \u65e0\u72b6\u6001\uff1a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u4ee5\u65e0\u72b6\u6001\u65b9\u5f0f\u5b8c\u6210\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u643a\u5e26\u5904\u7406\u8be5\u8bf7\u6c42\u6240\u9700\u7684\u5fc5\u8981\u4fe1\u606f\u3002\u670d\u52a1\u5668\u4e0d\u5b58\u50a8\u4efb\u4f55\u5ba2\u6237\u7aef\u4e0a\u4e0b\u6587\u3002</p> </li> <li> <p>Cacheability: Responses from server-side should be cacheable to improve network efficiency, and reducing server-side workload when a cached response can be used.     \u53ef\u7f13\u5b58\u6027\uff1a\u6765\u81ea\u670d\u52a1\u5668\u7aef\u7684\u54cd\u5e94\u5e94\u8be5\u662f\u53ef\u7f13\u5b58\u7684\uff0c\u4ee5\u63d0\u9ad8\u7f51\u7edc\u6548\u7387\uff0c\u5e76\u5728\u53ef\u4ee5\u4f7f\u7528\u7f13\u5b58\u7684\u54cd\u5e94\u65f6\u51cf\u5c11\u670d\u52a1\u5668\u7aef\u5de5\u4f5c\u8d1f\u8f7d\u3002</p> </li> <li> <p>Layered System: System decomposition into a set of connected layers, each of which has a specific role and communicates only with the immediately adjacent layer(s).     \u5206\u5c42\u7cfb\u7edf\uff1a\u7cfb\u7edf\u5206\u89e3\u4e3a\u4e00\u7ec4\u8fde\u63a5\u5c42\uff0c\u6bcf\u4e2a\u5c42\u90fd\u6709\u7279\u5b9a\u7684\u89d2\u8272\uff0c\u5e76\u4e14\u4ec5\u4e0e\u7d27\u90bb\u7684\u5c42\u901a\u4fe1\u3002</p> </li> <li> <p>Code on demand (optional): The ability to transfer executable code from the server to the client as a part of the response payload.     \u6309\u9700\u4ee3\u7801\uff08\u53ef\u9009\uff09\uff1a\u5c06\u53ef\u6267\u884c\u4ee3\u7801\u4f5c\u4e3a\u54cd\u5e94\u6709\u6548\u8d1f\u8f7d\u7684\u4e00\u90e8\u5206\u4ece\u670d\u52a1\u5668\u4f20\u8f93\u5230\u5ba2\u6237\u7aef\u7684\u529f\u80fd\u3002</p> </li> <li> <p>Uniform Interface: Use of a shared and well-defined interface for accessing resources, defined by the following four sub-constraints:     \u7edf\u4e00\u63a5\u53e3\uff1a\u4f7f\u7528\u5171\u4eab\u4e14\u5b9a\u4e49\u660e\u786e\u7684\u63a5\u53e3\u6765\u8bbf\u95ee\u8d44\u6e90\uff0c</p> </li> </ol>"},{"location":"chat/230521_serverless%2Cmicroservices%2CRESTFUL/#if-the-server-does-not-store-any-client-context-how-do-they-use-users-info-to-make-personalize-service","title":"if The server does not store any client context. how do they use users info to make personalize service  \u5982\u679c\u670d\u52a1\u5668\u4e0d\u5b58\u50a8\u4efb\u4f55\u5ba2\u6237\u7aef\u4e0a\u4e0b\u6587\u3002\u4ee5\u53ca\u4ed6\u4eec\u5982\u4f55\u4f7f\u7528\u7528\u6237\u4fe1\u606f\u6765\u63d0\u4f9b\u4e2a\u6027\u5316\u670d\u52a1","text":"<p>In a RESTful architecture, the server is stateless, which means that it does not store any client context. However, the server can still use user information to provide personalized services by leveraging techniques such as authentication and authorization. \u5728 RESTful \u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u670d\u52a1\u5668\u662f\u65e0\u72b6\u6001\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u5b58\u50a8\u4efb\u4f55\u5ba2\u6237\u7aef\u4e0a\u4e0b\u6587\u3002\u4f46\u662f\uff0c\u670d\u52a1\u5668\u4ecd\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u7b49\u6280\u672f\u4f7f\u7528\u7528\u6237\u4fe1\u606f\u6765\u63d0\u4f9b\u4e2a\u6027\u5316\u670d\u52a1\u3002</p> <p>Authentication: The server can require authentication before providing personalized services to the user. The user first needs to identify themselves and prove their identity using a username and password, or other authentication means, before accessing the personalized services. \u8eab\u4efd\u9a8c\u8bc1\uff1a\u670d\u52a1\u5668\u53ef\u4ee5\u5728\u5411\u7528\u6237\u63d0\u4f9b\u4e2a\u6027\u5316\u670d\u52a1\u4e4b\u524d\u8981\u6c42\u8eab\u4efd\u9a8c\u8bc1\u3002\u5728\u8bbf\u95ee\u4e2a\u6027\u5316\u670d\u52a1\u4e4b\u524d\uff0c\u7528\u6237\u9996\u5148\u9700\u8981\u4f7f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u6216\u5176\u4ed6\u8eab\u4efd\u9a8c\u8bc1\u65b9\u5f0f\u6765\u8bc6\u522b\u81ea\u5df1\u5e76\u8bc1\u660e\u81ea\u5df1\u7684\u8eab\u4efd\u3002</p> <p>Authorization: Once the user is authenticated, the server can use the authorization mechanisms to determine the appropriate level of access for the user. This can be done by assigning roles or permissions to the user, or by using other authorization mechanisms. \u6388\u6743\uff1a\u5bf9\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u540e\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u4f7f\u7528\u6388\u6743\u673a\u5236\u6765\u786e\u5b9a\u7528\u6237\u7684\u9002\u5f53\u8bbf\u95ee\u7ea7\u522b\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5411\u7528\u6237\u5206\u914d\u89d2\u8272\u6216\u6743\u9650\u6216\u4f7f\u7528\u5176\u4ed6\u6388\u6743\u673a\u5236\u6765\u5b8c\u6210\u3002</p> <p>Cookies and sessions: RESTful web services can also use cookies and sessions to store user-specific data on the client-side. Client applications can then send this data back to the server with each request to provide personalized services. However, this approach is not considered to be pure RESTful architecture as it is stateful. Cookie \u548c\u4f1a\u8bdd\uff1aRESTful Web \u670d\u52a1\u8fd8\u53ef\u4ee5\u4f7f\u7528 Cookie \u548c\u4f1a\u8bdd\u5728\u5ba2\u6237\u7aef\u5b58\u50a8\u7528\u6237\u7279\u5b9a\u7684\u6570\u636e\u3002\u7136\u540e\uff0c\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u6bcf\u6b21\u8bf7\u6c42\u65f6\u5c06\u6b64\u6570\u636e\u53d1\u9001\u56de\u670d\u52a1\u5668\uff0c\u4ee5\u63d0\u4f9b\u4e2a\u6027\u5316\u670d\u52a1\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u88ab\u8ba4\u4e3a\u662f\u7eaf\u7cb9\u7684 RESTful \u4f53\u7cfb\u7ed3\u6784\uff0c\u56e0\u4e3a\u5b83\u662f\u6709\u72b6\u6001\u7684\u3002</p> <p>Use of client-provided data: The server can use the data provided by the client in the request to provide personalized responses. For example, a web application may ask the user to provide information about themselves (like their name, age, location) via an HTML form and then use that data to personalize the response. \u4f7f\u7528\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u6570\u636e\uff1a\u670d\u52a1\u5668\u53ef\u4ee5\u4f7f\u7528\u5ba2\u6237\u7aef\u5728\u8bf7\u6c42\u4e2d\u63d0\u4f9b\u7684\u6570\u636e\u6765\u63d0\u4f9b\u4e2a\u6027\u5316\u7684\u54cd\u5e94\u3002\u4f8b\u5982\uff0cWeb \u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u8981\u6c42\u7528\u6237\u901a\u8fc7 HTML \u8868\u5355\u63d0\u4f9b\u6709\u5173\u4ed6\u4eec\u81ea\u5df1\u7684\u4fe1\u606f\uff08\u4f8b\u5982\u4ed6\u4eec\u7684\u59d3\u540d\u3001\u5e74\u9f84\u3001\u4f4d\u7f6e\uff09\uff0c\u7136\u540e\u4f7f\u7528\u8be5\u6570\u636e\u6765\u4e2a\u6027\u5316\u54cd\u5e94\u3002</p> <p>In summary, while the server in a RESTful architecture is stateless, it can still provide personalized services to the user by using authentication and authorization mechanisms, cookies, sessions, and client-provided data. \u603b\u4e4b\uff0c\u867d\u7136 RESTful \u67b6\u6784\u4e2d\u7684\u670d\u52a1\u5668\u662f\u65e0\u72b6\u6001\u7684\uff0c\u4f46\u5b83\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u673a\u5236\u3001cookie\u3001\u4f1a\u8bdd\u548c\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u6570\u636e\u4e3a\u7528\u6237\u63d0\u4f9b\u4e2a\u6027\u5316\u670d\u52a1\u3002</p>"},{"location":"chat/230522_SaaS%2BPaaS%2BIaaS/","title":"230522 SaaS+PaaS+IaaS","text":""},{"location":"chat/230522_SaaS%2BPaaS%2BIaaS/#what-is-saas-paas-iaas","title":"what is SaaS PaaS IaaS","text":"<p>SaaS (Software as a Service), PaaS (Platform as a Service), and IaaS (Infrastructure as a Service) are three different service models provided by cloud computing. SaaS\uff08\u8f6f\u4ef6\u5373\u670d\u52a1\uff09\u3001PaaS\uff08\u5e73\u53f0\u5373\u670d\u52a1\uff09\u548c IaaS\uff08\u57fa\u7840\u8bbe\u65bd\u5373\u670d\u52a1\uff09\u662f\u4e91\u8ba1\u7b97\u63d0\u4f9b\u7684\u4e09\u79cd\u4e0d\u540c\u7684\u670d\u52a1\u6a21\u578b\u3002</p> <p>SaaS provides users with software applications that are hosted and managed by a third-party provider. Examples of SaaS include Gmail, Dropbox, and Salesforce. SaaS \u4e3a\u7528\u6237\u63d0\u4f9b\u7531\u7b2c\u4e09\u65b9\u63d0\u4f9b\u5546\u6258\u7ba1\u548c\u7ba1\u7406\u7684\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u3002SaaS\u7684\u4f8b\u5b50\u5305\u62ecGmail\uff0cDropbox\u548cSalesforce\u3002</p> <p>PaaS provides users with a platform for developing, testing, and deploying software applications. Examples of PaaS include Microsoft Azure, Google App Engine, and Heroku. PaaS \u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u90e8\u7f72\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u7684\u5e73\u53f0\u3002PaaS\u7684\u4f8b\u5b50\u5305\u62ecMicrosoft Azure\uff0cGoogle App Engine\u548cHeroku\u3002</p> <p>IaaS provides users with access to computing infrastructure, such as virtual machines, storage, and networks, on a pay-per-use basis. Examples of IaaS include Amazon Web Services, Microsoft Azure, and Google Cloud Platform. IaaS \u4e3a\u7528\u6237\u63d0\u4f9b\u5bf9\u8ba1\u7b97\u57fa\u7840\u67b6\u6784\uff08\u5982\u865a\u62df\u673a\u3001\u5b58\u50a8\u548c\u7f51\u7edc\uff09\u7684\u8bbf\u95ee\uff0c\u5e76\u6309\u4f7f\u7528\u4ed8\u8d39\u3002IaaS\u7684\u4f8b\u5b50\u5305\u62ecAmazon Web Services\uff0cMicrosoft Azure\u548cGoogle Cloud Platform\u3002</p>"},{"location":"chat/230522_SaaS%2BPaaS%2BIaaS/#similarities","title":"Similarities","text":"<ul> <li>All three service models provide resources over the internet on a pay-per-use basis, which allows users to reduce costs and scale resources based on demand.  \u8fd9\u4e09\u79cd\u670d\u52a1\u6a21\u5f0f\u90fd\u4ee5\u6309\u4f7f\u7528\u4ed8\u8d39\u7684\u65b9\u5f0f\u901a\u8fc7\u4e92\u8054\u7f51\u63d0\u4f9b\u8d44\u6e90\uff0c\u5141\u8bb8\u7528\u6237\u964d\u4f4e\u6210\u672c\u5e76\u6839\u636e\u9700\u6c42\u6269\u5c55\u8d44\u6e90\u3002</li> <li>They are all flexible and can be easily scaled up or down based on the user's needs.  \u5b83\u4eec\u90fd\u5f88\u7075\u6d3b\uff0c\u53ef\u4ee5\u6839\u636e\u7528\u6237\u7684\u9700\u6c42\u8f7b\u677e\u6269\u5c55\u6216\u7f29\u51cf\u3002</li> <li>They all allow users to focus on their applications and business rather than managing underlying infrastructure.  \u5b83\u4eec\u90fd\u5141\u8bb8\u7528\u6237\u4e13\u6ce8\u4e8e\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u4e1a\u52a1\uff0c\u800c\u4e0d\u662f\u7ba1\u7406\u5e95\u5c42\u57fa\u7840\u8bbe\u65bd\u3002</li> </ul>"},{"location":"chat/230522_SaaS%2BPaaS%2BIaaS/#differences","title":"Differences","text":"<ul> <li>SaaS provides software applications, which are managed and hosted by a third-party provider, while PaaS provides a platform for developing, testing, and deploying software applications, and IaaS provides computing infrastructure such as virtual machines, storage, and networks.  SaaS \u63d0\u4f9b\u7531\u7b2c\u4e09\u65b9\u63d0\u4f9b\u5546\u7ba1\u7406\u548c\u6258\u7ba1\u7684\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c PaaS \u63d0\u4f9b\u7528\u4e8e\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u90e8\u7f72\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u7684\u5e73\u53f0\uff0cIaaS \u63d0\u4f9b\u865a\u62df\u673a\u3001\u5b58\u50a8\u548c\u7f51\u7edc\u7b49\u8ba1\u7b97\u57fa\u7840\u7ed3\u6784\u3002</li> <li>SaaS is at the highest layer of abstraction and provides the most complete stack of services to the end user. PaaS offers a higher degree of flexibility than SaaS by providing developers with a platform on which they can build their own applications. IaaS provides the lowest layer of abstraction and offers the most control and customization to users.  SaaS \u5904\u4e8e\u6700\u9ad8\u7684\u62bd\u8c61\u5c42\uff0c\u4e3a\u6700\u7ec8\u7528\u6237\u63d0\u4f9b\u6700\u5b8c\u6574\u7684\u670d\u52a1\u5806\u6808\u3002PaaS \u901a\u8fc7\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u6784\u5efa\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5e73\u53f0\uff0c\u63d0\u4f9b\u4e86\u6bd4 SaaS \u66f4\u9ad8\u7684\u7075\u6d3b\u6027\u3002IaaS \u63d0\u4f9b\u6700\u4f4e\u7684\u62bd\u8c61\u5c42\uff0c\u5e76\u4e3a\u7528\u6237\u63d0\u4f9b\u6700\u591a\u7684\u63a7\u5236\u548c\u81ea\u5b9a\u4e49\u3002</li> <li>SaaS is mostly used as an end-user application, while PaaS and IaaS are mostly used by developers to build, test, and deploy applications.  SaaS \u4e3b\u8981\u7528\u4f5c\u6700\u7ec8\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c PaaS \u548c IaaS \u4e3b\u8981\u7531\u5f00\u53d1\u4eba\u5458\u7528\u4e8e\u6784\u5efa\u3001\u6d4b\u8bd5\u548c\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u3002</li> </ul>"},{"location":"chat/230522_SaaS%2BPaaS%2BIaaS/#conclusion","title":"conclusion","text":"<p>In summary, SaaS, PaaS, and IaaS are three different service models provided by cloud computing. While they share some similarities, they differ in the type of services provided, the level of abstraction, and the target users. \u7efc\u4e0a\u6240\u8ff0\uff0cSaaS\u3001PaaS \u548c IaaS \u662f\u4e91\u8ba1\u7b97\u63d0\u4f9b\u7684\u4e09\u79cd\u4e0d\u540c\u7684\u670d\u52a1\u6a21\u5f0f\u3002\u867d\u7136\u5b83\u4eec\u6709\u4e00\u4e9b\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u5b83\u4eec\u5728\u63d0\u4f9b\u7684\u670d\u52a1\u7c7b\u578b\u3001\u62bd\u8c61\u7ea7\u522b\u548c\u76ee\u6807\u7528\u6237\u65b9\u9762\u6709\u6240\u4e0d\u540c\u3002</p>"},{"location":"chat/chat_index/","title":"Green chat navigation","text":"<p>Create time: 2022-12-06  Last update: 2022-12-06</p>"},{"location":"chat/chat_index/#navigation-of-all-green-chat","title":"Navigation of all Green chat","text":""},{"location":"chat/chat_index/#2022-dec","title":"2022 Dec","text":""},{"location":"chat/chat_index/#221206_chatgpt","title":"221206_ChatGPT","text":"<p>click 221206_ChatGPT for further details. ```html</p>  Style\uff08\ud83e\udef6Taylor's Version\uff09 <p>\ud83c\udfa4 Artist: \ud83e\udef6Taylor, \ud83d\udc68\u200d\ud83c\udfa4Harry </p> <p>\ud83d\udcc0 Album: 1989(Taylor's Version)</p> <p>```A</p>"},{"location":"collection/collection/","title":"Collection","text":""},{"location":"course_notes/Rintro/","title":"FIT5147 R intro 2023 s1","text":""},{"location":"course_notes/Rintro/#r-intro","title":"R intro","text":""},{"location":"course_notes/Rintro/#variables-and-assignments","title":"Variables and Assignments","text":"<p>Variables are stored using the assignment operator &lt;-, : </p> <pre><code>a&lt;- 1\nb&lt;- 2\nc&lt;- a+b\nc # 3\n</code></pre> <p>Please do no use the '=' sign to assign values to variables. It is considered bad practice by the R community.  </p>"},{"location":"course_notes/Rintro/#managing-your-environment","title":"Managing your environment","text":"<p>You can use rm to delete objects you no longer need <code>rm(x)</code> If you have lots of things in your environment and want to delete all of them, you can pass the results of ls to the rm function <code>rm(list = ls())</code> Clean up your working environment by deleting the mass and age variables.<code>rm(age,mass)</code> </p>"},{"location":"course_notes/Rintro/#r-packages","title":"R Packages","text":"<p>what packages are installed by typing <code>installed.packages()</code>   install packages by typing <code>install.packages(\"packagename\")</code>  update installed packages by typing <code>update.packages()</code>  remove a package with <code>remove.packages(\"packagename\")</code>  make a package available for use with <code>library(packagename)</code> </p>"},{"location":"course_notes/Rintro/#data-types-and-data-structures","title":"Data Types and data structures","text":"<p>Everything in R is an object.  R has six atomic (data of a single type) vector types.  + character: \"a\", \"swc\"  + numeric: 2, 15.5  + integer: 2  + logical: TRUE, FALSE  + complex: 1+4i (complex numbers with real and imaginary parts)</p> <p>R has many data structures. These include : atomic vector; list; matrix; data frame; factors class() - what kind of object is it (high-level)? typeof() - what is the object's data type (low-level)? length() - how long is it? What about two dimensional objects? attributes() - does it have any metadata?  </p> <pre><code>x &lt;- \"dataset\"\ny &lt;- 555.55\nz &lt;- as.integer(y)\ntypeof(x) # character\ntypeof(y) # double\ntypeof(z) # integer\n\nattributes(x) # NULL\nattributes(y) # NULL\nattributes(z) # NULL\n</code></pre>"},{"location":"course_notes/Rintro/#vectors","title":"Vectors","text":"<p>A vector is a collection of elements that are most commonly of mode character, logical, integer or numeric. You can create an empty vector with vector(). By default the mode is logical. You can be more explicit as shown in the examples below.  It is more common to use direct constructors such as character(), numeric(), etc.</p> <pre><code>vector() # an empty 'logical' (the default) vector\nvector(\"character\", length = 5) # a vector of mode 'character' with 5 elements\n</code></pre> <p>Using TRUE and FALSE will create a vector of mode logical. and using quoted text will create a vector of mode character.  </p> <pre><code>poke &lt;- c(\"Squirtle\", \"Charmander\", \"Bulbasaur\")\ntypeof(poke) # character\nlength(poke) # 3\nclass(poke)  # character\nstr(poke)    # \"Squirtle\" \"Charmander\" \"Bulbasaur\"\n</code></pre> <p>Adding Elements The function c() (for combine) can also be used to add elements to a vector.  </p> <pre><code>poke&lt;-c(poke, \"Pikachu\")\npoke # \"Squirtle\"   \"Charmander\" \"Bulbasaur\"  \"Pikachu\"\n</code></pre> <p>Vectors from a sequence of numbers.  You can create vectors as a series of numbers.  </p> <pre><code>series &lt;- 1:10\nseries #  1  2  3  4  5  6  7  8  9 10\nseq(10) # 1  2  3  4  5  6  7  8  9 10\nseq(from = 1, to = 10, by = 0.1)\n#  [1]  1.0  1.1  1.2  1.3  1.4  1.5  1.6  1.7  1.8  1.9  2.0  2.1  2.2  2.3  2.4  2.5  2.6  2.7  2.8\n# [20]  2.9  3.0  3.1  3.2  3.3  3.4  3.5  3.6  3.7  3.8  3.9  4.0  4.1  4.2  4.3  4.4  4.5  4.6  4.7\n# [39]  4.8  4.9  5.0  5.1  5.2  5.3  5.4  5.5  5.6  5.7  5.8  5.9  6.0  6.1  6.2  6.3  6.4  6.5  6.6\n# [58]  6.7  6.8  6.9  7.0  7.1  7.2  7.3  7.4  7.5  7.6  7.7  7.8  7.9  8.0  8.1  8.2  8.3  8.4  8.5\n# [77]  8.6  8.7  8.8  8.9  9.0  9.1  9.2  9.3  9.4  9.5  9.6  9.7  9.8  9.9 10.0\n</code></pre> <p>Naming a vector.  The elements of a vector can be given names using, names()  </p> <pre><code>temperature &lt;- c(30, 29, 20, 15, 40)\nnames(temperature) &lt;- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\n</code></pre> <p>Vector index  The values in a vector can be extracted via declaring an index inside a single square bracket \"[]\" operator.  </p> <pre><code>temperature[1] # The first value in the temperature vector.\n# Monday\n# 30\n</code></pre> <p>Unlike Python, R index starts from 1 rather than 0. Also the square bracket operator returns another vector rather than just individual members. <code>temperature[1]</code> returned a vector slice containing a single member.  </p> <pre><code>temperature[1:3] #  Monday   Tuesday Wednesday \n# 30        29        20 \n\ntemperature[\"Wednesday\"] # Wednesday 20\n\ntemperature[c(\"Wednesday\",\"Friday\")] # Wednesday 20 Friday 40\n\ntemperature[11] # &lt;NA&gt; NA\n</code></pre>"},{"location":"course_notes/Rintro/#challenge","title":"challenge","text":"<pre><code> Challenge 9: Create a vector for average temperature in Melbourne for each month.\n# Jan    Feb    Mar    Apr    May    Jun    Jul    Aug    Sep    Oct    Nov    Dec\n# \u00b0C    21    21    19    17    14    11    10    11    13    15    17    19\n\ntemp_month&lt;-c(21, 21, 19, 17, 14, 11, 10, 11, 13, 15, 17, 19)\nnames(temp_month)&lt;-month.abb\ntemp_month\n\n# Challenge 10: Find out which month has the maximum temperature.\ntemp_month[which.max(temp_month)] # Jan 21\n\n\n#Challenge 11: Find out the temperature difference between the month with maximum \n# temperature and the month with minimum temperature.\ntemp_month[[which.max(temp_month)]]- temp_month[[which.min(temp_month)]] # 11\n</code></pre>"},{"location":"course_notes/Rintro/#factors","title":"Factors","text":"<p>Factors usually look like character data, but are typically used to represent categorical information.</p> <pre><code># create ses variable\nses &lt;- c(\"low\", \"middle\", \"low\", \"high\", \"low\", \"low\", \"low\", \"middle\", \"low\", \"middle\", \"middle\", \"middle\", \"middle\", \"middle\")\nses.f&lt;-factor(ses)\n\n# Check levels\nlevels(ses.f) # \"high\"   \"low\"    \"middle\"\n</code></pre> <p>The problem is that the levels are ordered according to the alphabetical order of the categories of <code>ses</code>. Thus, \"high\" is the lowest level of <code>ses.f</code>, \"low\" is the middle level and  \"middle\" is the highest level. To fix the ordering we need to use the levels argument  to indicate the correct ordering of the categories. Let's create <code>ses.f</code> with the correct order of categories.  </p> <pre><code>ses.f &lt;- factor(ses, levels = c(\"low\", \"middle\", \"high\")) # \"high\"   \"low\"    \"middle\"\n</code></pre> <p>We can also generate factor variable from numeric data by specifying labels using the labels argument.  </p> <pre><code># Challenge 1: Create a factor variable for type as type.f and label 0 as \"private\" and one as \"public\".\n\n# from a numaric vector\ntype&lt;-c(1,0,0,0,1,1,0,1)\n\ntype.f&lt;-factor(type, levels = c (\"1\",\"0\"), labels = c(\"private\", \"public\"))\ntype.f \n\n# [1] private public  public  public  private private public  private\n# Levels: private public\n</code></pre> <p>Ordered factor variables  can be created by using the function 'ordered'. This function has the same arguments as the factor function. To create an ordered factor variable called <code>ses.order</code> based on the variable <code>ses.</code> <code>ses.order &lt;- ordered(ses, levels = c(\"low\", \"middle\", \"high\"))</code> </p> <p>Adding and dropping levels  Below we will add an element from a new level (\"very.high\") to <code>ses.f</code> our existing factor variable,   </p> <pre><code># first add the new level, \"very.high\", to the factor variable ses.f)\nses.f &lt;- factor(ses.f, levels = c(levels(ses.f), \"very.high\"))\nses.f[15] &lt;- \"very.high\"\nses.f\n#  [1] low    middle low    high   low    low    low    middle low    middle middle middle middle middle &lt;NA&gt;  \n# Levels: high low middle\n</code></pre> <p>Dropping a level of a factor variable The simplest way is to first remove all the elements within the level. to be removed and then to re-declare the variable to be a factor variable.  </p> <pre><code># removing the level of \"very.high\" from the ses.f variable.\nses.f.new &lt;- ses.f[ses.f != \"very.high\"]\nses.f.new\n# [1] low    middle low    high   low    low    low    middle low    middle middle middle middle middle &lt;NA&gt;  \n# Levels: high low middle\nses.f.new &lt;- factor(ses.f.new)\nses.f.new\n# [1] low    middle low    high   low    low    low    middle low    middle middle middle middle middle &lt;NA&gt;  \n# Levels: high low middle\n</code></pre>"},{"location":"course_notes/Rintro/#matrix","title":"Matrix","text":"<p>In R matrices are an extension of the numeric or character vectors. They are not a separate type of object but merely an atomic vector with dimensions; the number of rows and columns  </p> <pre><code>m &lt;- matrix(1:6, nrow = 2, ncol = 2)\nm\n# [,1] [,2]\n# [1,]    1    3\n# [2,]    2    4\ndim(m) # 22\ntypeof(m) # integer\nclass(m) # matrix\n</code></pre> <p>Matrices in R are filled column-wise. You can also fill data by row with argument by row. Another way is to bind vectors using <code>cbind()</code> and <code>rbind()</code>.  </p> <pre><code>matrix_example &lt;- matrix(0, ncol=6, nrow=3)\nlength(matrix_example) # 18\n</code></pre> <pre><code># Challenge 4: Consider the R output of the matrix below:\n\n# [,1] [,2]\n# [1,]    4    1\n# [2,]    9    5\n# [3,]   10    7\n\nmatrix(c(4, 9, 10, 1, 5, 7), nrow = 3)\n#[,1] [,2]\n#[1,]    4    1\n#[2,]    9    5\n#[3,]   10    7\n\nmatrix(c(4, 1, 9, 5, 10, 7), ncol = 2, byrow = TRUE)\n#[,1] [,2]\n#[1,]    4    1\n#[2,]    9    5\n#[3,]   10    7\n\nmatrix(c(4, 1, 9, 5, 10, 7), nrow = 3)\n#[,1] [,2]\n#[1,]    4    5\n#[2,]    1   10\n#[3,]    9    7\n\nmatrix(c(4, 9, 10, 1, 5, 7), ncol = 2, byrow = TRUE)\n#[,1] [,2]\n#[1,]    4    9\n#[2,]   10    1\n#[3,]    5    7\n</code></pre> <p>What is the difference between <code>cbind()</code> and <code>rbind()</code>.  </p> <pre><code>x &lt;- 1:3\ny &lt;- 10:12\n\ncbind(x,y)\n#   x  y\n# [1,] 1 10\n# [2,] 2 11\n# [3,] 3 12\n# Binds by column\nrbind(x,y)\n# [,1] [,2] [,3]\n# x    1    2    3\n# y   10   11   12\n# Binds by row\n</code></pre>"},{"location":"course_notes/Rintro/#list","title":"List","text":"<p>the contents of a list are not restricted to a single mode and can encompass any mixture of data types. Lists are sometimes called generic vectors, because the elements of a list can by of any R object, even lists containing further lists. This property makes them fundamentally different from atomic vectors. A list is a special type of vector. Each element can be a different type. Create lists using <code>list()</code> or coerce other objects using <code>as.list()</code>.  </p> <pre><code>x &lt;- list(1, \"a\", TRUE, 1+4i)\nx\n# [[1]]\n# [1] 1\n\n# [[2]]\n# [1] \"a\"\n\n# [[3]]\n# [1] TRUE\n\n# [[4]]\n# [1] 1+4i\n\nx &lt;- 1:10\nx &lt;- as.list(x)\nx\n# [[1]]\n# [1] 1\n\n# [[2]]\n# [1] 2\n\n# [[3]]\n# [1] 3\n\n# [[4]]\n# [1] 4\n\n# [[5]]\n# [1] 5\n\n# [[6]]\n# [1] 6\n\n# [[7]]\n# [1] 7\n\n# [[8]]\n# [1] 8\n\n# [[9]]\n# [1] 9\n\n# [[10]]\n# [1] 10\n\n# Elements of lists can have names. \n\nxlist &lt;- list(a = \"Karthik Ram\", b = 1:10, data = head(iris))\nxlist\n# $a\n# [1] \"Karthik Ram\"\n\n# $b\n# [1]  1  2  3  4  5  6  7  8  9 10\n\n# $data\n# Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n# 1          5.1         3.5          1.4         0.2  setosa\n# 2          4.9         3.0          1.4         0.2  setosa\n# 3          4.7         3.2          1.3         0.2  setosa\n# 4          4.6         3.1          1.5         0.2  setosa\n# 5          5.0         3.6          1.4         0.2  setosa\n# 6          5.4         3.9          1.7         0.4  setosa\n\nlength(xlist) # 3\nstr(xlist)\n# List of 3\n# $ a   : chr \"Karthik Ram\"\n# $ b   : int [1:10] 1 2 3 4 5 6 7 8 9 10\n# $ data:'data.frame':    6 obs. of  5 variables:\n#   ..$ Sepal.Length: num [1:6] 5.1 4.9 4.7 4.6 5 5.4\n# ..$ Sepal.Width : num [1:6] 3.5 3 3.2 3.1 3.6 3.9\n# ..$ Petal.Length: num [1:6] 1.4 1.4 1.3 1.5 1.4 1.7\n# ..$ Petal.Width : num [1:6] 0.2 0.2 0.2 0.2 0.2 0.4\n# ..$ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1\n</code></pre> <p>You can extract an element of a list using <code>$</code> operator with the element's name. <code>xlist$b #  [1]  1  2  3  4  5  6  7  8  9 10</code>   The $ operator is used to extract elements of a list or data frame by literal name. It's semantics are similar to that of <code>[[</code>  The <code>[</code> operator always returns an object of the same class as the original. It can be used to select multiple elements of an object The <code>[[</code> operator is used to extract elements of a list or a data frame. It can only be used to extract a single element, and the class of the returned object will not necessarily be a list or data frame</p> <pre><code>class(xlist[2])# list\nclass(xlist[[2]]) # integer\nclass(xlist$b) # integer\n</code></pre>"},{"location":"course_notes/Rintro/#data-frame","title":"Data Frame","text":"<p>A data frame is a very important data type in R. Its pretty much the de facto data structure for most tabular data and what we use for statistics. Data frames can have additional attributes such as <code>rownames()</code>, which can be useful for annotating data, like <code>subject_id</code> or <code>sample_id</code>. But most of the time they are not used. Some additional information on data frames: + Rownames are usually 1, 2,... + Can convert to a matrix with <code>data.matrix()</code> (preferred) or <code>as.matrix()</code> + Can also create with <code>data.frame()</code> function + Find the number of rows and columns with <code>nrow(dat)</code> and <code>ncol(dat)</code>, respectively.</p> <pre><code># To create data frames by hand\ndat &lt;- data.frame(id = letters[1:10], x = 1:10, y = 11:20)\ndat\n#     id x  y\n# 1   a  1 11\n# 2   b  2 12\n# 3   c  3 13\n# 4   d  4 14\n# 5   e  5 15\n# 6   f  6 16\n# 7   g  7 17\n# 8   h  8 18\n# 9   i  9 19\n# 10  j 10 20\n</code></pre> <pre><code># * head() - shown first 6 rows\n# * tail() - show last 6 rows\n# * dim() - returns the dimensions\n# * nrow() - number of rows\n# * ncol() - number of columns\n# * str() - structure of each column\n# * names() - shows the names attribute for a data frame, which gives the column names.\n</code></pre>"},{"location":"course_notes/Rintro/#data-frame-index","title":"Data frame index","text":"<p>A data frame, much like a matrix, has two dimensions, rows and columns. To index a data frame (or a matrix), we use brackets in R next to the object, like so, <code>iris[i, j]</code>, where i denotes the rows that you want, and j is the columns.</p> <pre><code># Extract the first ten rows of the iris dataset.\niris[1:10,]\n##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n## 1           5.1         3.5          1.4         0.2  setosa\n## 2           4.9         3.0          1.4         0.2  setosa\n## 3           4.7         3.2          1.3         0.2  setosa\n## 4           4.6         3.1          1.5         0.2  setosa\n## 5           5.0         3.6          1.4         0.2  setosa\n## 6           5.4         3.9          1.7         0.4  setosa\n## 7           4.6         3.4          1.4         0.3  setosa\n## 8           5.0         3.4          1.5         0.2  setosa\n## 9           4.4         2.9          1.4         0.2  setosa\n## 10          4.9         3.1          1.5         0.1  setosa\n\n# We can also extract individual columns of a data frame with the $ operator using column name. \niris$Species\n\n# Challenge 8: Find out how many rows of data in iris dataset where Species is setosa.\n\n\nnrow(iris[iris$Species==\"setosa\",]) # 50\n</code></pre>"},{"location":"course_notes/Rintro/#adding-columns-and-rows-in-data-frame","title":"Adding columns and rows in data frame","text":"<p>We learned that the columns in a data frame were vectors,  so that our data are consistent in type throughout the column. As such, if we want to add a new column, we need to start by making a new vector:</p> <pre><code>new1&lt;-c(1:3)\nnew2&lt;-1 \ncars[1:2]\ncars&lt;-rbind(cars,new1)\ncars&lt;-rbind(cars,new2)\n</code></pre>"},{"location":"course_notes/Rintro/#read-data","title":"Read data","text":"<p>na.strings converts all missing data to na.  </p> <pre><code>ti_train&lt;- read.csv(\"titanic_train_week1.csv\",na.strings=c(\"NA\",\"NaN\", \"\"), header = TRUE, sep=\",\")\nti_test&lt;- read.csv(\"titanic_test_week1.csv\",na.strings=c(\"NA\",\"NaN\", \"\"), header = TRUE, sep = \",\")\n</code></pre> <p>how much missing data are we dealing with? Using the column sums and the is.na() function, we get the amount of NAs we have in for each variable.  </p> <pre><code>colSums(is.na(ti_train))\n# There are 177 missing 'Age' observations, 687 missing 'Cabin' observations and 2 missing 'Embarked' observations. \ncolSums(is.na(ti_test))\n# There is 1 missing 'Fair' observation, 327 missing 'Cabin' observations.\n</code></pre> <p>Knowing what you are dealing with is important. NA means 'not available' and NAN means 'not a number', handle those value before further operation <code>mean(ti_train$Age) # NA</code> </p>"},{"location":"course_notes/Rintro/#1-remove-all-the-rows-with-missing-data","title":"1 Remove all the rows with missing data","text":"<ul> <li>We can use the complete.cases function. This will return a vector that has no missing values <code>ti_train[!complete.cases(ti_train),]</code> </li> <li>To create a new data set with no missing data we use na.omit() <code>ti_train_full&lt;-na.omit(ti_train)</code> </li> <li>there are no rows with na's. <code>ti_train_full[!complete.cases(ti_train_full),]</code> </li> <li>omitting all na's and the cabin data which is largly missing</li> </ul>"},{"location":"course_notes/Rintro/#2-remove-the-variables-with-missing-data","title":"2 Remove the variables with missing data","text":"<p>We could choose to exclude the variables with the most amount of missing data. Then we would move forward more sophisticated methods. Since ~68% of the Cabin data is missing. It is a good idea at this level to exclude it. We simple make a new dataframe excluding the cabin data.  </p> <pre><code>train_sml&lt;-data.frame(ti_train$PassengerId, ti_train$Survived, ti_train$Pclass, ti_train$Name, ti_train$Sex, ti_train$Age, ti_train$SibSp, ti_train$Ticket, ti_train$Fare, ti_train$Embarked)\ntest_sml&lt;-data.frame(ti_test$PassengerId, ti_test$Pclass, ti_test$Name, ti_test$Sex, ti_test$Age, ti_test$SibSp, ti_test$SibSp, ti_test$Parch, ti_test$Ticket, ti_test$Fare, ti_test$Embarked)\n</code></pre>"},{"location":"course_notes/course_note_menu/","title":"Course study note navigation","text":"<p>Create time: 2022-11-29  Last update: 2023-01-11</p>"},{"location":"course_notes/course_note_menu/#navigation-of-all-fit-note-page","title":"Navigation of all FIT note page","text":""},{"location":"course_notes/course_note_menu/#2022-semester-1","title":"2022 semester 1","text":""},{"location":"course_notes/course_note_menu/#fit-9132","title":"FIT 9132","text":"<p>click FIT9132 - Introduction to databases 2022 s1 for further details.  </p>"},{"location":"course_notes/course_note_menu/#2022-semester-2","title":"2022 semester 2","text":""},{"location":"course_notes/course_note_menu/#fit-5032","title":"FIT 5032","text":"<p>click FIT5032 - Internet Application Development for further details.  </p>"},{"location":"course_notes/course_note_menu/#fit-5057","title":"FIT 5057","text":"<p>click FIT5057 - Project management for further details.  </p>"},{"location":"course_notes/course_note_menu/#fit-5125","title":"FIT 5125","text":"<p>click FIT5125 - IT research methods for further details.  </p>"},{"location":"course_notes/course_note_menu/#fit-5136","title":"FIT 5136","text":"<p>click FIT5136 - Software engineering for further details.  </p>"},{"location":"course_notes/course_note_menu/#cs-61a","title":"cs 61a","text":"<p>click CS 61A: Structure and Interpretation of Computer Programs for further details.  </p>"},{"location":"course_notes/course_note_menu/#2023-semester-1","title":"2023 semester 1","text":""},{"location":"course_notes/course_note_menu/#fit-5225","title":"FIT 5225","text":"<p>click FIT5225 - Cloud computing and security for further details.  </p>"},{"location":"course_notes/course_note_menu/#fit-5147","title":"FIT 5147","text":"<p>click FIT5147 - Data exploration and visualisation for further details.  </p>"},{"location":"course_notes/course_note_menu/#fit-5046","title":"FIT 5046","text":"<p>click FIT5046 - Mobile and distributed computing systems for further details.  </p>"},{"location":"course_notes/course_note_menu/#fit-5171","title":"FIT 5171","text":"<p>click FIT5225 - Cloud computing and security for further details.  </p> <pre><code>\n\ndef my_function(b, c):  \n    # Function logic goes here  \n    a = b+c  \n    return a  \n\n\n# Additional function definitions go here  \n\ndef function_test():  \n    c = 1 + 2  \n    if c != my_function(2,1):  \n        print(\"wrong\")  \n    else:  \n        print(\"right\")  \n\n\n# Additional test classes and test cases can be defined here  \n\nif __name__ == '__main__':  \n    function_test()\n\n\n\n</code></pre>"},{"location":"course_notes/cs61a/","title":"CS 61A: Structure and Interpretation of Computer Programs","text":"<p>Create time: 2023-01-05  Last update: 2023-01-11</p>"},{"location":"course_notes/cs61a/#reference","title":"Reference","text":"<p>Courese material solution python code visualization</p>"},{"location":"course_notes/cs61a/#week-1-function","title":"Week 1  function","text":""},{"location":"course_notes/cs61a/#hw01","title":"hw01","text":""},{"location":"course_notes/cs61a/#q1-a-plus-abs-b","title":"Q1 A Plus Abs B","text":"<p>Fill in the blanks in the following function for adding\u00a0<code>a</code>\u00a0to the absolute value of\u00a0<code>b</code>, without calling\u00a0<code>abs</code>. You may\u00a0not\u00a0modify any of the provided code other than the two blanks.  </p> <pre><code>from operator import add, sub\ndef a_plus_abs_b(a, b):\n\u00a0 \u00a0 \"\"\"Return a+abs(b), but without calling abs.\n\u00a0 \u00a0 &gt;&gt;&gt; a_plus_abs_b(2, 3)\n\u00a0 \u00a0 5\n\u00a0 \u00a0 &gt;&gt;&gt; a_plus_abs_b(-1, -4)\n\u00a0 \u00a0 3\n\u00a0 \u00a0 \"\"\"\n\u00a0 \u00a0 if b &lt; 0:\n\u00a0 \u00a0 \u00a0 \u00a0 f = sub\n\u00a0 \u00a0 else:\n\u00a0 \u00a0 \u00a0 \u00a0 f = add\n\u00a0 \u00a0 return f(a, b)\n</code></pre>"},{"location":"course_notes/cs61a/#q2-two-of-three","title":"Q2: Two of Three","text":"<p>Write a function that takes three\u00a0positive\u00a0numbers as arguments and returns the sum of the squares of the two smallest numbers.\u00a0Use only a single line for the body of the function. </p> <pre><code>def two_of_three(i, j, k):\n\"\"\"\nReturn m*m + n*n, where m and n are the two smallest members of the positive numbers i, j, and k.\n&gt;&gt;&gt; two_of_three(1, 2, 3)\n5\n&gt;&gt;&gt; two_of_three(5, 5, 5)\n50\n\"\"\"\n    return i**2+j**2+k**2-max(i,j,k)**2\n</code></pre>"},{"location":"course_notes/cs61a/#q3-largest-factor","title":"Q3: Largest Factor","text":"<p>Write a function that takes an integer\u00a0<code>n</code>\u00a0that is\u00a0greater than 1\u00a0and returns the largest integer that is smaller than\u00a0<code>n</code>\u00a0and evenly divides\u00a0<code>n</code>.</p> <pre><code>def largest_factor(n):\n\u00a0 \u00a0 \"\"\"\n\u00a0 \u00a0 Return the largest factor of n that is smaller than n.\n\u00a0 \u00a0 &gt;&gt;&gt; largest_factor(15) \n\u00a0 \u00a0 &gt;&gt;&gt; # factors are 1, 3, 5\n\u00a0 \u00a0 5\n\u00a0 \u00a0 &gt;&gt;&gt; largest_factor(80) # factors are 1, 2, 4, 5, 8, 10, 16, 20, 40\n\u00a0 \u00a0 40\n\u00a0 \u00a0 &gt;&gt;&gt; largest_factor(13) # factor is 1 since 13 is prime\n\u00a0 \u00a0 1\n\u00a0 \u00a0 \"\"\"\n\u00a0 \u00a0 factor=0\n\u00a0 \u00a0 for i in range(1,n):\n\u00a0 \u00a0 \u00a0 \u00a0 if n%i==0:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 factor=i\n\u00a0 \u00a0 return factor\n</code></pre>"},{"location":"course_notes/cs61a/#q4-hailstone","title":"Q4: Hailstone","text":"<p>Douglas Hofstadter's Pulitzer-prize-winning book,\u00a0G\u00f6del, Escher, Bach, poses the following mathematical puzzle.</p> <ol> <li>Pick a positive integer\u00a0<code>n</code>\u00a0as the start.</li> <li>If\u00a0<code>n</code>\u00a0is even, divide it by 2.</li> <li>If\u00a0<code>n</code>\u00a0is odd, multiply it by 3 and add 1.</li> <li>Continue this process until\u00a0<code>n</code>\u00a0is 1.</li> </ol> <p>The number\u00a0<code>n</code>\u00a0will travel up and down but eventually end at 1 (at least for all numbers that have ever been tried -- nobody has ever proved that the sequence will terminate). Analogously, a hailstone travels up and down in the atmosphere before eventually landing on earth.</p> <p>This sequence of values of\u00a0<code>n</code>\u00a0is often called a Hailstone sequence. Write a function that takes a single argument with formal parameter name\u00a0<code>n</code>, prints out the hailstone sequence starting at\u00a0<code>n</code>, and returns the number of steps in the sequence:</p> <pre><code>def hailstone(n):\n\u00a0 \u00a0 \"\"\"\n\u00a0 \u00a0 Print the hailstone sequence starting at n and return its length.\n\u00a0 \u00a0 &gt;&gt;&gt; a = hailstone(10)\n\u00a0 \u00a0 10\n\u00a0 \u00a0 5\n\u00a0 \u00a0 16\n\u00a0 \u00a0 8\n\u00a0 \u00a0 4\n\u00a0 \u00a0 2\n\u00a0 \u00a0 1\n\n\u00a0 \u00a0 &gt;&gt;&gt; a\n\u00a0 \u00a0 7\n\u00a0 \u00a0 \"\"\"\n\n\u00a0 \u00a0 length = 1\n\u00a0 \u00a0 while n != 1:\n\u00a0 \u00a0 \u00a0 \u00a0 print(n)\n\u00a0 \u00a0 \u00a0 \u00a0 if n % 2 == 0:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 n = n // 2 \u00a0 \u00a0 \u00a0# Integer division prevents \"1.0\" output\n\u00a0 \u00a0 \u00a0 \u00a0 else:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 n = 3 * n + 1\n\u00a0 \u00a0 \u00a0 \u00a0 length = length + 1\n\u00a0 \u00a0 print(n) \u00a0 # n is now 1\n\u00a0 \u00a0 return length\n</code></pre>"},{"location":"course_notes/cs61a/#week2-control-environment","title":"Week2  control environment","text":""},{"location":"course_notes/cs61a/#different-between-break-return-continue","title":"different between break return continue","text":"<pre><code>def name_length(names):\n    i = 0\n    for name in names:\n            i = i+1\n            print(name)\n            print(i)\n            if name == \"Nina\":\n                    break\n                    # continue\n                    # return \"Found the special name\"\n    print(i)\nnames = [\"Max\", \"Nina\", \"Rose\"]\nname_length(names)\n\n</code></pre>"},{"location":"course_notes/cs61a/#lab001","title":"lab001","text":""},{"location":"course_notes/cs61a/#q5-falling-factorial","title":"Q5: Falling Factorial","text":"<p>Let's write a function\u00a0<code>falling</code>, which is a \"falling\" factorial that takes two arguments,\u00a0<code>n</code>\u00a0and\u00a0<code>k</code>, and returns the product of\u00a0<code>k</code>\u00a0consecutive numbers, starting from\u00a0<code>n</code>\u00a0and working downwards. When\u00a0<code>k</code>\u00a0is 0, the function should return 1.   </p> <pre><code>def falling(n, k):\n\"\"\"Compute the falling factorial of n to depth k.\n&gt;&gt;&gt; falling(6, 3) # 6 * 5 * 4\n120\n&gt;&gt;&gt; falling(4, 3) # 4 * 3 * 2\n24\n&gt;&gt;&gt; falling(4, 1) # 4\n4\n&gt;&gt;&gt; falling(4, 0)\n1\n\"\"\"\n\"*** YOUR CODE HERE ***\"\nans = 1\nfor i in range(n,n-k,-1):\n    ans *= i\n    return ans\n</code></pre>"},{"location":"course_notes/cs61a/#q6-sum-digits","title":"Q6: Sum Digits","text":"<p>Write a function that takes in a nonnegative integer and sums its digits. (Using floor division and modulo might be helpful here!)</p> <pre><code>def sum_digits(y):\n\"\"\"Sum all the digits of y.\n&gt;&gt;&gt; sum_digits(10) # 1 + 0 = 1\n1\n&gt;&gt;&gt; sum_digits(4224) # 4 + 2 + 2 + 4 = 12\n12\n&gt;&gt;&gt; sum_digits(1234567890)\n45\n&gt;&gt;&gt; a = sum_digits(123) # make sure that you are using return rather than print\n&gt;&gt;&gt; a\n6\n\"\"\"\n\"*** YOUR CODE HERE ***\"\n    ans=0\n    while y&gt;0:\n        ans = ans + y%10\n        y = y // 10\n    return ans\n</code></pre>"},{"location":"course_notes/cs61a/#q8","title":"Q8","text":"<pre><code>def double_eights(n):  \n    \"\"\"\n    Return true if n has two eights in a row.  \n    &gt;&gt;&gt; double_eights(8)  \n    False    \n    &gt;&gt;&gt; double_eights(88)  \n    True    \n    &gt;&gt;&gt; double_eights(2882)  \n    True    \n    &gt;&gt;&gt; double_eights(880088)  \n    True    \n    &gt;&gt;&gt; double_eights(12345)  \n    False    \n    &gt;&gt;&gt; double_eights(80808080)  \n    False    \n    \"\"\"    \n    \"*** YOUR CODE HERE ***\"  \n    first8 = False  \n    second8 = False  \n    while n &gt; 0:  \n        if n % 10 == 8:  \n            first8 = True  \n        else:  \n            first8 = False  \n        n = n //10  \n        if n % 10 == 8:  \n            return True  \n    return False\n</code></pre>"},{"location":"course_notes/cs61a/#iteration-the-fibonacci-sequence","title":"Iteration The Fibonacci Sequence","text":"<pre><code>def fib(n):\n    \"\"\"Compute the nth Fibonacci number, for N &gt;= 1.\"\"\"\n    pred, curr = 0, 1 # 0th and 1st Fibonacci numbers\n    k = 1 # curr is the kth Fibonacci number\n    while k &lt; n:\n        pred, curr = curr, pred + curr # The next Fibonacci number is the sum of the current one and its predecessor\n        k = k + 1\n    return curr\n#print(fib(6))\n</code></pre>"},{"location":"course_notes/cs61a/#conditional-statements","title":"Conditional statements","text":"<ul> <li>The\u00a0<code>elif</code>\u00a0and\u00a0<code>else</code>\u00a0clauses are optional, and you can have any number of\u00a0<code>elif</code>\u00a0clauses.</li> <li>A\u00a0conditional expression\u00a0is an expression that evaluates to either a truthy value (<code>True</code>, a non-zero integer, etc.) or a falsy value (<code>False</code>,\u00a0<code>0</code>,\u00a0<code>None</code>,\u00a0<code>\"\"</code>,\u00a0<code>[]</code>, etc.).</li> <li>Only the first\u00a0<code>if</code>/<code>elif</code>\u00a0expression that evaluates to a\u00a0truthy\u00a0value will have its corresponding indented suite be executed.</li> <li>If none of the conditional expressions evaluate to a true value, then the\u00a0<code>else</code>\u00a0suite is executed. There can only be one\u00a0<code>else</code>\u00a0clause in a conditional statement.</li> </ul> <pre><code>if &lt;conditional expression&gt;: &lt;suite of statements&gt; \nelif &lt;conditional expression&gt;: &lt;suite of statements&gt; \nelse: &lt;suite of statements&gt;\n</code></pre> <pre><code>def special_case():\n    x = 10\n    if x &gt; 0:\n        x += 2\n    elif x &lt; 13:\n        x += 3\n    elif x % 2 == 1:\n        x += 4\n    return x\n\nprint(special_case()) # 12\n</code></pre> <pre><code>def special_case():\n    x = 10\n    if x &gt; 0:\n        x += 2\n    if x &lt; 13:\n        x += 3\n    if x % 2 == 1:\n        x += 4\n    return x\n\nprint(special_case()) # 19\n</code></pre> <pre><code>def special_case():\n    x = 10\n    if x &gt; 0:\n        return x + 2\n    if x &lt; 13:\n        return x + 3\n    if x % 2 == 1:\n        return x + 4\n    return x\n\nprint(special_case())  # 12\n</code></pre>"},{"location":"course_notes/cs61a/#q4-is-prime","title":"Q4: Is Prime?","text":"<p>Write a function that returns\u00a0<code>True</code>\u00a0if a positive integer\u00a0<code>n</code>\u00a0is a prime number and\u00a0<code>False</code>\u00a0otherwise.</p> <p>A prime number n is a number that is not divisible by any numbers other than 1 and n itself. For example, 13 is prime, since it is only divisible by 1 and 13, but 14 is not, since it is divisible by 1, 2, 7, and 14.</p> <p>Hint:\u00a0Use the\u00a0<code>%</code>\u00a0operator:\u00a0<code>x % y</code>\u00a0returns the remainder of\u00a0<code>x</code>\u00a0when divided by\u00a0<code>y</code>.</p> <pre><code>def is_prime(n):\n    # returns True if a positive integer n \n    # is a prime number and False otherwise.\n    if isinstance(n,int):\n        if n == 2 or n == 3:\n            return True\n        if n == 4 or n == 1:\n            return False\n        if n &gt; 4:\n            b = int( n / 2)\n            for i in range(2,b):\n                if (n % i) == 0:\n                    return False\n            return True\n\n    else:\n        return False\n# print(is_prime(10))\n</code></pre>"},{"location":"course_notes/cs61a/#q5-fizzbuzz","title":"Q5: Fizzbuzz","text":"<p>Implement the fizzbuzz sequence, which prints out a\u00a0single statement\u00a0for each number from 1 to\u00a0<code>n</code>. For a number\u00a0<code>i</code>,</p> <ul> <li>If\u00a0<code>i</code>\u00a0is divisible by 3 only, then we print \"fizz\".</li> <li>If\u00a0<code>i</code>\u00a0is divisible by 5 only, then we print \"buzz\".</li> <li>If\u00a0<code>i</code>\u00a0is divisible by both 3 and 5, then we print \"fizzbuzz\".</li> <li>Otherwise, we print the number\u00a0<code>i</code>\u00a0by itself.</li> </ul> <p>Implement\u00a0<code>fizzbuzz(n)</code>\u00a0here:</p> <pre><code>def fizzbuzz(n):\n    i = 1\n    while i &lt;= n:\n        if i % 3 == 0 and i % 5 == 0:\n            print('fizzbuzz')\n        elif i % 3 == 0:\n            print('fizz')\n        elif i % 5 == 0:\n            print('buzz')\n        else:\n            print(i)\n        i += 1\nresult = fizzbuzz(16)\n</code></pre>"},{"location":"course_notes/cs61a/#q6-unique-digits","title":"Q6: Unique Digits","text":"<p>Write a function that returns the number of unique digits in a positive integer.</p> <p>Hints:\u00a0You can use\u00a0<code>//</code>\u00a0and\u00a0<code>%</code>\u00a0to separate a positive integer into its one's digit and the rest of its digits.</p> <p>You may find it helpful to first define a function\u00a0<code>has_digit(n, k)</code>, which determines whether a number\u00a0<code>n</code>\u00a0has digit\u00a0<code>k</code>.</p> <pre><code>def has_digit(n, k):\n    \"\"\"Returns whether K is a digit in N.\n    &gt;&gt;&gt; has_digit(10, 1)\n    True\n    &gt;&gt;&gt; has_digit(12, 7)\n    False\n    \"\"\"\n    while n &gt; 0:\n        last = n % 10\n        n = n // 10\n        if last == k:\n            return True\n    return False\n# print(has_digit(12, 7))\n\ndef unique_digits(n):\n    \"\"\"Return the number of unique digits in positive integer n.\n\n    &gt;&gt;&gt; unique_digits(8675309) # All are unique\n    7\n    &gt;&gt;&gt; unique_digits(1313131) # 1 and 3\n    2\n    &gt;&gt;&gt; unique_digits(13173131) # 1, 3, and 7\n    3\n    &gt;&gt;&gt; unique_digits(10000) # 0 and 1\n    2\n    &gt;&gt;&gt; unique_digits(101) # 0 and 1\n    2\n    &gt;&gt;&gt; unique_digits(10) # 0 and 1\n    2\n    \"\"\"\n    unique = 0\n    while n &gt; 0:\n        last = n % 10\n        n = n // 10\n        if not has_digit(n, last):\n            unique =  unique + 1\n    return unique\n# print(unique_digits(13173131))\n</code></pre>"},{"location":"course_notes/cs61a/#project-1-the-game-of-hog","title":"Project 1: The Game of Hog","text":"<p>https://inst.eecs.berkeley.edu/~cs61a/fa22/proj/hog/</p>"},{"location":"course_notes/cs61a/#problem-1-roll_dice","title":"Problem 1 roll_dice()","text":"<pre><code>def roll_dice(num_rolls, dice=six_sided):  \n    \"\"\"Simulate rolling the DICE exactly NUM_ROLLS &gt; 0 times. Return the sum of  \n    the outcomes unless any of the outcomes is 1. In that case, return 1.  \n    num_rolls:  The number of dice rolls that will be made.    dice:       A function that simulates a single dice roll outcome.    \"\"\"    # These assert statements ensure that num_rolls is a positive integer.  \n    assert type(num_rolls) == int, 'num_rolls must be an integer.'  \n    assert num_rolls &gt; 0, 'Must roll at least once.'  \n    # BEGIN PROBLEM 1  \n    \"*** YOUR CODE HERE ***\"  \n    sow_sad = False  \n    sum_pts = 0  \n    for i in range(num_rolls):  \n        roll_pts = dice()  \n        if roll_pts == 1:  \n            sow_sad = True  \n        sum_pts = sum_pts + roll_pts  \n    if sow_sad:  \n        sum_pts = 1  \n    return sum_pts  \n    # print(num_rolls)  \n    # END PROBLEM 1\n</code></pre>"},{"location":"course_notes/cs61a/#problem-2-tail_points","title":"problem 2 tail_points()","text":"<pre><code>def tail_points(opponent_score):  \n    \"\"\"Return the points scored by rolling 0 dice according to Pig Tail.  \n\n    opponent_score:   The total score of the other player.  \n    \"\"\"    # BEGIN PROBLEM 2  \n    \"*** YOUR CODE HERE ***\"  \n    a = opponent_score % 10  \n    b = (opponent_score//10) % 10  \n    pts = 0  \n    if a &gt; b:  \n        pts = 2 * (a - b) + 1  \n    else:  \n        pts = 2 * (b - a) + 1  \n    return pts  \n    # END PROBLEM 2\n</code></pre>"},{"location":"course_notes/cs61a/#problem-3-take_turn","title":"problem 3 take_turn()","text":"<pre><code>def take_turn(num_rolls, opponent_score, dice=six_sided):  \n    \"\"\"Return the points scored on a turn rolling NUM_ROLLS dice when the  \n    opponent has OPPONENT_SCORE points.  \n    num_rolls:       The number of dice rolls that will be made.    opponent_score:  The total score of the other player.    dice:            A function that simulates a single dice roll outcome.    \"\"\"    # Leave these assert statements here; they help check for errors.  \n    assert type(num_rolls) == int, 'num_rolls must be an integer.'  \n    assert num_rolls &gt;= 0, 'Cannot roll a negative number of dice in take_turn.'  \n    assert num_rolls &lt;= 10, 'Cannot roll more than 10 dice.'  \n    # BEGIN PROBLEM 3  \n    \"*** YOUR CODE HERE ***\"  \n    if num_rolls == 0:  \n        return tail_points(opponent_score)  \n    else:  \n        return roll_dice(num_rolls,dice)  \n    # END PROBLEM 3\n</code></pre>"},{"location":"course_notes/cs61a/#problem-4","title":"problem 4","text":"<pre><code>def perfect_square(score):  \n    n = 0  \n    for n in range(1,score):  \n        if n * n == score:  \n            return True  \n    return False  \n\ndef next_perfect_square(score):  \n    n = 0  \n    for n in range(1, score):  \n        if n * n == score:  \n            break  \n    return (n + 1) * (n + 1)\n</code></pre> <p>## problem 5  </p> <pre><code> def play(strategy0, strategy1, update,  \n         score0=0, score1=0, dice=six_sided, goal=GOAL):  \n    \"\"\"Simulate a game and return the final scores of both players, with  \n    Player 0's score first and Player 1's score second.  \n    E.g., play(always_roll_5, always_roll_5, square_update) simulates a game in    which both players always choose to roll 5 dice on every turn and the Square    Swine rule is in effect.  \n    A strategy function, such as always_roll_5, takes the current player's    score and their opponent's score and returns the number of dice the current    player chooses to roll.  \n    An update function, such as square_update or simple_update, takes the number    of dice to roll, the current player's score, the opponent's score, and the    dice function used to simulate rolling dice. It returns the updated score    of the current player after they take their turn.  \n    strategy0: The strategy for player0.    strategy1: The strategy for player1.    update:    The update function (used for both players).    score0:    Starting score for Player 0    score1:    Starting score for Player 1    dice:      A function of zero arguments that simulates a dice roll.    goal:      The game ends and someone wins when this score is reached.    \"\"\"    \n    who = 0  # Who is about to take a turn, 0 (first) or 1 (second)  \n    # BEGIN PROBLEM 5    \n    \"*** YOUR CODE HERE ***\"  \n    while score0 &lt; goal and score1 &lt; goal:  # check if someone win  \n        if who == 0:  # player 0 turn  \n            num_dice = strategy0(score0, score1)  \n            score0 = update(num_dice, score0, score1)  \n        else:  \n            num_dice = strategy0(score1, score0)  \n            score1 = update(num_dice, score1, score0)  \n\n    # END PROBLEM 5  \n    return score0, score1\n</code></pre>"},{"location":"course_notes/cs61a/#assert","title":"assert()","text":"<p>The\u00a0<code>assert</code>\u00a0keyword lets you test if a condition in your code returns True, if not, the program will raise an AssertionError.</p> <pre><code>x = \"hello\"\n\n#if condition returns True, then nothing happens:\nassert x == \"hello\"\n\n#if condition returns False, AssertionError is raised:\nassert x == \"goodbye\"\n</code></pre>"},{"location":"course_notes/cs61a/#problem-6","title":"problem 6","text":"<pre><code>def always_roll(n):  \n    \"\"\"Return a player strategy that always rolls N dice.  \n\n    A player strategy is a function that takes two total scores as arguments    (the current player's score, and the opponent's score), and returns a    number of dice that the current player will roll this turn.  \n    # &gt;&gt;&gt; strategy = always_roll(3)    # &gt;&gt;&gt; strategy(0, 0)    # 3    # &gt;&gt;&gt; strategy(99, 99)    # 3    \"\"\"    assert n &gt;= 0 and n &lt;= 10  \n    # BEGIN PROBLEM 6  \n    \"*** YOUR CODE HERE ***\"  \n    return n  \n    # END PROBLEM 6\n</code></pre>"},{"location":"course_notes/cs61a/#problem-7","title":"problem 7","text":"<pre><code>def is_always_roll(strategy, goal=GOAL):  \n    \"\"\"Return whether strategy always chooses the same number of dice to roll.  \n\n    # &gt;&gt;&gt; is_always_roll(always_roll_5)    # True    # &gt;&gt;&gt; is_always_roll(always_roll(3))    # True    # &gt;&gt;&gt; is_always_roll(catch_up)    # False    \"\"\"    # BEGIN PROBLEM 7  \n    \"*** YOUR CODE HERE ***\"  \n    dice_num = strategy(0, 0)  \n    for score in range(goal):  \n        for oppo_score in range(goal):  \n            curr_num = strategy(score, oppo_score)  \n            if curr_num != dice_num:  \n                return False  \n    return True    # END PROBLEM 7\n</code></pre>"},{"location":"course_notes/cs61a/#args","title":"*args","text":"<p>https://realpython.com/python-kwargs-and-args/ it allows you to pass a varying number of positional arguments.</p> <pre><code># sum_integers_args.py\ndef my_sum(*args):\n    result = 0\n    # Iterating over the Python args tuple\n    for x in args:\n        result += x\n    return result\n\nprint(my_sum(1, 2, 3))\n</code></pre>"},{"location":"course_notes/cs61a/#problem-8","title":"problem 8","text":""},{"location":"course_notes/fit5032/","title":"FIT5032 Asp .net develop 2022 s2","text":"<p>Create time: 2022-10-29  Last update: 2022-11-09</p>"},{"location":"course_notes/fit5032/#how-to-use-the-fit-study-note-document","title":"How to use the FIT study Note document","text":"<ol> <li>download the markdown file repository and  navigate to the <code>docs</code> folder</li> <li>view all the markdown files via Obsidian vault that can show the linked section in the note document   </li> <li> <p>You may find some extra material or program template  repository in the Course Brief introduction for the FIT Note markdown Document (some course don't have )</p> </li> <li> <p>you can view the web page which transfer from MD file online but will lose the extra information or wrong    markdown display</p> </li> </ol>"},{"location":"course_notes/fit5032/#fit5032-course-brief-introduction","title":"FIT5032 Course Brief introduction","text":"week Introduction 1 Intro to Web development and ASP.Net. 2 The Front End, UX, Accessibility and Scaffolding 3 Introduction to C# &amp; Version Control 4 Entity Framework Scaffolding 5 Fundamental Client Side JavaScript (jQuery; datatable; calendar; maps; rich text) 6 Validation 7 Security &amp; Microsoft Identity  (authentication Login Roles) 8 Email, Upload &amp; Signal R 9 Web Optimisations(Reducing HTTP Connections Reducing File sizes Caching Perceived improvements) &amp; Evolution of ASP.NET CORE 10 Modern JavaScript Web Development Approach (AngularJS) 11 Testing and Deployment in Cloud <p>This repository contents weekly task and my assignment template for FIT5032 - Internet Application Development done for the year 2022. (Semester 2)  </p> <p>Solutions are working out of the box. (Due to the nature of this unit) You can run the project by running the .mdf files which are intentionally in the repository so that it would be working. (some parts are hidden for safety but not influence the framework working)</p>"},{"location":"course_notes/fit5032/#fit5032-week-1-mvc-asp-net","title":"FIT5032 week 1 MVC &amp; ASP .net","text":""},{"location":"course_notes/fit5032/#lecture-note","title":"Lecture Note","text":"<ul> <li>Introduction to Internet Applications Development</li> <li>Understand the purpose of ASP.NET MVC</li> <li>Understand the benefits of the MVC architecture</li> </ul>"},{"location":"course_notes/fit5032/#qa-part","title":"Q&amp;A part","text":""},{"location":"course_notes/fit5032/#what-is-mvc","title":"\u2605what is MVC","text":"<ul> <li>The Model-View-Controller (MVC) architectural pattern separates an application into three main groups of components: Models, Views, and Controllers </li> </ul>"},{"location":"course_notes/fit5032/#which-action-in-mvc-request-response","title":"Which action in MVC request &amp; response","text":"<p> + if no model in the project. The <code>controller</code> will received the user's command and return  the result to the <code>VIEW</code></p>"},{"location":"course_notes/fit5032/#which-functionalityfiles-in-each-component-of-mvc","title":"Which functionality/files in each component of MVC?","text":"<p> Model: + database + Defines the data validation rules + contains code that defines its relationship with other models</p> <p>Controller: + Controls the application flow or logic of the application + decides what response is to be generated and passes the response (output) to the  <code>view</code> +  calls to <code>model</code> to access data</p> <p>View: +  View is the outputs or responses that are sent back to the user once a request is processed + the presentation layer of an application + Razor View in .net</p>"},{"location":"course_notes/fit5032/#what-is-model-functionality-responsibilities","title":"What is Model? Functionality? Responsibilities?","text":"<ul> <li>A class or set of classes that describes all the business logic and additionally handles data access for an application.</li> <li>Also contains code that defines its relationship with other models.</li> <li>Defines the data validation rules to be used when adding or updating data.</li> </ul>"},{"location":"course_notes/fit5032/#what-is-controller-functionality-responsibilities","title":"What is Controller? Functionality? Responsibilities?","text":"<ul> <li>Controllers are the components that handle user interaction, work with the model, and ultimately select a view to render.</li> <li>Controls the application flow or logic of the application</li> <li>Controller logic decides what response is to be generated</li> <li>Controller logic normally contains calls to models to access data, and also other functionalities like access control checks etc</li> <li>Controller passes the response (output) to the view</li> </ul>"},{"location":"course_notes/fit5032/#what-is-view-functionality-responsibilities","title":"What is View? Functionality? Responsibilities?","text":"<ul> <li>presenting content through the user interface. They use the Razor view engine to embed .NET code in HTML markup.</li> <li>Consist of markup (like HTML) code with embedded .NET code. Can also be other forms of output like XML, PDF documents etc.</li> <li>Views can be thought of as the presentation layer of an application and ideally should be as \"dumb\" as possible</li> </ul>"},{"location":"course_notes/fit5032/#advantages-of-aspnet-mvc-why-use-mvc-mvc-benefit","title":"\u2605\u2605 Advantages of ASP.NET MVC = Why use MVC? = MVC benefit","text":"<ul> <li>Enables the full control over the rendered HTML (\u524d\u7aef\u53ef\u4f7f\u7528\u903b\u8f91)</li> <li>Provides clean separation of concerns(SoC). (\u804c\u80fd\u53ef\u5206\u5f00)</li> <li>Enables Test Driven Development (TDD).(\u4ee5method\u4e3a\u5355\u4f4d  \u5bb9\u6613\u5199test)</li> <li>Easy integration with JavaScript frameworks.(\u5bb9\u6613\u96c6\u6210js\u6846\u67b6)</li> <li>Following the design of stateless nature of the web. (\u7f51\u9875\u4e0d\u5b58\u6570\u636e\u4ecemodel\u62ff\u6570\u636e\uff0c\u4e0d\u8bb0\u5f55\u7528\u6237\u72b6\u6001\u53ca\u81ea\u8eab\u72b6\u6001)</li> <li>RESTful urls that enables Search Engine Optimisation.(get post in url)</li> <li>No ViewState and PostBack events in comparison to ASP.NET Web Forms ()</li> </ul>"},{"location":"course_notes/fit5032/#layerscomponents-in-aspnet","title":"\u2605\u2605\u2605 Layers/Components in ASP.NET","text":"<ul> <li>Front End Technology (Razor)</li> <li>.NET (This will be the server side programming technology)</li> <li>IIS (This is the server itself)</li> <li>MS SQL Server</li> </ul>"},{"location":"course_notes/fit5032/#separation-of-concerns-soc","title":"Separation of Concerns (SOC) \u4f9d\u636e\u529f\u80fd\u5206\u6210\u72ec\u7acb\u51e0\u4e2a\u6a21\u5757\u5f00\u53d1","text":"<ul> <li>\u6539\u53d8\u663e\u793a\u53bbview \uff0c \u6539\u53d8\u6570\u636e\u591a\u5c11\u53bbcontroller\uff0c\u6539\u53d8\u6570\u636e\u7ed3\u6784\u53bbmodel</li> <li>Is a design principle for separating a computer program into distinct sections, such that each section addresses a separate concern.</li> <li>A concern can be as general as the details of the hardware the code is being optimized for, or as specific as the name of a class to instantiate.</li> <li>The value of separation of concerns is simplifying development and maintenance of computer programs.</li> <li>When concerns are well-separated, individual sections can be reused, as well as developed and updated independently.</li> <li>For example, user interface logic tends to change more frequently than business logic. If presentation code and business logic are combined in a single object, an object containing business logic must be modified every time the user interface is changed</li> </ul>"},{"location":"course_notes/fit5032/#single-responsibility-principle-srp-class-reuse","title":"Single Responsibility Principle (SRP) \u6bcf\u4e2a\u6a21\u5757\u5982\u4f55\u5212\u5206 class\uff0c reuse","text":"<ul> <li>The single-responsibility principle (SRP) is a computer-programming principle that states that every module, class or function in a computer program should have responsibility over a single part of that program's functionality, and it should encapsulate that part.</li> </ul>"},{"location":"course_notes/fit5032/#fit5032-week-2-usability","title":"FIT5032 Week 2 Usability","text":""},{"location":"course_notes/fit5032/#lecture-note_1","title":"Lecture note","text":""},{"location":"course_notes/fit5032/#qa-part_1","title":"QA part","text":""},{"location":"course_notes/fit5032/#the-6-principles-of-design-donald-norman","title":"\u2605\u2605\u2605 The 6 Principles Of Design (Donald Norman  \u4e3e\u4f8b\u8bf4\u660e","text":"<p> Visibility + \u7b2c\u4e00\u773c\u8981\u770b\u5230\u6240\u6709\u7684 link\uff0c\u5e76\u4e14\u4e4b\u540e link \u4ee3\u8868\u7684\u542b\u4e49 + Users need to know what all the options are, and know straight away how to access them. + For example, on Moodle, the minute you login, it is immediately obvious what the possible options are</p> <p>Feedback + \u7f51\u7ad9\u8981\u9488\u5bf9\u7528\u6237\u7684\u64cd\u4f5c\u7ed9\u51fa\u53cd\u9988\uff0c\u70b9\u51fb\u6709\u53cd\u5e94 + Feedback is when a system provides users with information about what has been completed or  accomplished. +  One example, is that on the Monash Home page, when the user uses the mouse to hover over  the \u201cStudy\u201d option, a drop down menu appears giving feedback to the users\u2019 action.</p> <p>Affordance + \u56fe\u6807\u7684\u6837\u5f0f\u548c\u529f\u80fd\u76f8\u540c\uff0c\u653e\u5927\u955c\u4ee3\u8868\u641c\u7d22 + A situation where an object\u2019s sensory characteristics intuitively imply its functionality and use. +  When a control behaves as its appearance suggests</p> <p>Mapping + \u56fe\u6807\u548c\u6587\u5b57\u76f8\u5bf9\u5e94\u7684\u8868\u793a link/button \u542b\u4e49 + Mapping is the relationship between control and effect. The idea is that with good design, the  controls to something will closely resemble what they affect</p> <p>Constraints  + \u5728\u540c\u4e00\u4e2a\u9875\u9762\u4e0a\uff0c\u51cf\u5c11\u548c\u7528\u6237\u7684\u4ea4\u4e92\uff08\u7ed9\u7528\u6237\u5c3d\u53ef\u80fd\u5c11\u7684\u9009\u62e9\uff09 + UI \u9700\u8981\u9650\u5236\u5f53\u524d\u9875\u9762\u529f\u80fd\u7684\u4e2a\u6570\uff0c\u4ee5\u53ca\u5f15\u5bfc\u7528\u6237\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c + \u5355\u4e2a\u9875\u9762\u7684\u529f\u80fd\u4e0d\u5b9c\u8fc7\u4e8e\u590d\u6742 + Constraints is about limiting the range of interaction possibilities for the user to simplify the  interface and guide the user to the appropriate next action</p> <p>Consistency + \u540c\u7ea7\u76ee\u5f55/button/link \u6837\u5f0f\u8981\u7c7b\u4f3c\uff0c\u4f8b\u5982\uff0c\u6309 Link \u901a\u5411\u76f8\u5173\u9875\u9762\uff0cButton \u63d0\u4ea4 Action + Consistency refers to having similar operations and similar elements for achieving similar tasks.  By leveraging consistent elements throughout your entire experience, you make your experience  far easier to use</p>"},{"location":"course_notes/fit5032/#web-usability-guidelines-from-flow-bohl","title":"\u2605\u2605 Web Usability Guidelines (from Flow Bohl)","text":""},{"location":"course_notes/fit5032/#how-to-handle-request-in-aspnet-mvc","title":"\u2605\u2605\u2605 How to handle request in ASP.Net MVC?","text":"<ul> <li>The default route table consists of one route.</li> </ul> <p> + Breaks all incoming requests into three segments (a URL segment is anything between forward slashes). +  The first segment is mapped to a controller name, <code>home student)</code> + the second segment is mapped to an action name, <code>about index</code> + and the final segment is mapped to a parameter passed to the action named Id <code>123</code></p>"},{"location":"course_notes/fit5032/#how-to-combine-controller-and-viewurl-together-how-to-add-new-view-binding-with-controller","title":"How to combine controller and view/url together? / How to add new view binding with controller?","text":"<pre><code>[HttpPost]\npublic ActionResult Edit(Student std)\n{// update student to the database\n    return RedirectToAction(\"Index\");\n}\n</code></pre> <p>Add Action Method, the name should be the same name as <code>view</code> name. and <code>view</code> folder name should be same as <code>controller</code>name </p>"},{"location":"course_notes/fit5032/#how-to-return-the-right-view-from-controller-method","title":"How to return the right view from controller method","text":"<ul> <li>If you want to return a view from a controller action, you need to  create a sub folder in the Views folder with the same name as the  controller.  </li> <li></li> <li>In this subfolder you need to create an .cshtml file with the same  name as the controller action.  <code>create/delete.cshtml</code></li> </ul>"},{"location":"course_notes/fit5032/#what-is-the-role-of-the-layout-file-in-an-aspnet-mvc-application-how-to-design-a-website-application-in-the-same-ui-component-same-heading-image-same-navigation-bar","title":"\u2605\u2605\u2605 What is the role of the layout file in an ASP.Net MVC application? / How to design a website application in the same UI component, same heading image,  same navigation bar?","text":"<ul> <li>Razor views use a layout to determine their look and feel  </li> <li>render css and js in application level</li> <li>The default view is held in <code>Views/Shared/layout.cshtml</code></li> <li>header; footer; navigation bar</li> </ul>"},{"location":"course_notes/fit5032/#how-to-render-cssjs-in-viewcshtml-defer-js","title":"How to render css/js in view/cshtml? (Defer JS)","text":"<p><code>@Styles.Render(\"~/Content/css\")</code>  is rendered as <code>&lt;link href=\"/Content/site.css\" rel=\"stylesheet\"/&gt;</code> The lines  </p> <pre><code>@Scripts.Render(\u201c~/bundles/modernizr\")  \n@Scripts.Render(\"~/bundles/jquery\")  \n@Scripts.Render(\u201c~/bundles/bootstraps\")\n</code></pre> <p>are rendered as  </p> <pre><code>&lt;script src=\"/Scripts/modernizr-2.8.3.js\"&gt;&lt;/script&gt;  \n&lt;script src=\"/Scripts/jquery-3.4.1.js\"&gt;&lt;/script&gt;  \n&lt;script src=\"/Scripts/bootstraps.js\"&gt;&lt;/script&gt;\n</code></pre> <p>The JavaScript libraries for jQuery, modernizr, bootstraps are built into the MVC  framework.  </p>"},{"location":"course_notes/fit5032/#fit5032-week-3-csharp-and-git","title":"FIT5032 Week 3 csharp and git","text":""},{"location":"course_notes/fit5032/#lecture-note_2","title":"Lecture note","text":"<ul> <li>C# Basics: data types and operators</li> <li>C# Language Constructs</li> <li>introduction to Language Integrated Query (LINQ)</li> <li>Git</li> <li></li> </ul>"},{"location":"course_notes/fit5032/#qa","title":"QA","text":""},{"location":"course_notes/fit5032/#what-is-net","title":"what is .net","text":"<ul> <li>.NET is a free, cross-platform, open source developer platform for building many different types of applications.</li> <li>C# is part of the .NET ecosystem</li> </ul>"},{"location":"course_notes/fit5032/#clr-il-and-jit","title":"CLR, IL and JIT","text":"<p>The Common Language Runtime (CLR) + manages the execution of all .NET applications + \u638c\u63a7\u7a0b\u5e8f\u8fd0\u884c\uff0c\u4f8b\u5982 exception handler, \u7ba1\u7406 code \u7b49\u5728\u8fd0\u884c\u671f\u95f4\u7684\u4e00\u7cfb\u5217\u95ee\u9898  </p> <p>Intermediate language (IL) + Program \u2013 Intermediate Language \u2013 Machine Code + \u5728\u7f16\u8bd1\u540e\u8f6c\u6362\u6210\u673a\u5668\u8bc6\u522b\u7684\u8bed\u8a00  </p> <p>The JIT (Just-In-Time) compile + \u5728\u8fd0\u884c\u65f6 compile\uff0c\u6709\u95ee\u9898\u65f6\u62a5\u9519\u6216\u8005 throw exception  \u5b9e\u65f6\u7f16\u8bd1</p>"},{"location":"course_notes/fit5032/#cjava-js","title":"\u2605 C#\uff0cJava , JS","text":"feature c# java js Strongly Typed y y Object Oriented y y Component-oriented y"},{"location":"course_notes/fit5032/#object-oriented","title":"Object Oriented","text":"<ul> <li>Abstraction \u62bd\u8c61 interface</li> <li>Encapsulation \u5c01\u88c5 class</li> <li>Inheritance \u7ee7\u627f super class</li> <li>Polymorphism \u591a\u6001 override  </li> </ul>"},{"location":"course_notes/fit5032/#component-oriented-programming","title":"\u2605 Component Oriented Programming","text":"<ul> <li>\u529f\u80fd\u5c01\u88c5\u4e3aComponent \u7136\u540e\u590d\u7528</li> <li>A technique of developing software applications by combining preexisting and new components.</li> <li>Heavily relies on: polymorphism, encapsulation, late binding, inheritance (through interfaces) and most importantly binary re-usability</li> </ul>"},{"location":"course_notes/fit5032/#differ-between-tostring-converttostring","title":"Differ between ToString() &amp; Convert.ToString()","text":"<pre><code>int age = 35;  \nstring strAge1 = age.ToString();  \nstring strAge2 = Convert.ToString(age);\n</code></pre> <p>Convert.ToString() function can handle null values ToString() can not handle null values</p>"},{"location":"course_notes/fit5032/#c-comparison-operators","title":"\u2605\u2605  C# Comparison Operators","text":"<pre><code>== Equality  \n!= OR &lt;&gt; Inequality  \n&lt; Less Than  \n&gt; Greater Than  \n&lt;= Less Than or Equal To  \n&gt;= Greater Than or Equal To\n??  null-coalescing operator. \nIt returns the left-hand operand if the operand is not null; otherwise it returns the right hand operand\n?. Null-conditional operator \nreturns null if the  left-hand operand evaluates to null\n=&gt; lambda operator. \nIt is used in lambda  expressions to separate the input variables on the left side from  the lambda body on the right side\n</code></pre>"},{"location":"course_notes/fit5032/#what-is-difference-between-string-and-string","title":"# What is difference between <code>String</code> and <code>string</code>","text":"<ul> <li><code>string</code> is just an alias of <code>System.String</code> so there is no difference.</li> <li><code>string</code> is just a keyword mainly used in creating a variable</li> <li><code>System.String</code> is a class which gives you a rich set of functions and properties to manipulate the string</li> </ul>"},{"location":"course_notes/fit5032/#c-logical-operators","title":"C# Logical Operators","text":"<pre><code>&amp;&amp; And  \n|| OR  \n! NOT\n</code></pre>"},{"location":"course_notes/fit5032/#language-integrated-query-linq","title":"\u2605\u2605Language Integrated Query (LINQ)","text":"<ul> <li>LINQ offers a consistent model for working with data across various kinds of data sources and formats.</li> <li>Always working with objects.</li> <li>All LINQ query operations consist of three distinct actions Obtain the data source; Create the query; Execute the query </li> </ul>"},{"location":"course_notes/fit5032/#linq-vs-sql","title":"\u2605\u2605LINQ VS SQL","text":"<ul> <li>Generally, when querying databases, LINQ is in most cases a  significantly more productive querying language than SQL</li> <li>When it runs, LINQ to SQL translates into SQL in the object model and sends them to the database for  execution. When the database returns the result, LINQ to SQL translates  them back to objects  </li> </ul>"},{"location":"course_notes/fit5032/#fit5032-week-4-entity-framework-scaffolding","title":"\u2605\u2605\u2605FIT5032 Week 4 Entity Framework Scaffolding","text":""},{"location":"course_notes/fit5032/#lecture-note_3","title":"Lecture note","text":""},{"location":"course_notes/fit5032/#qa_1","title":"QA","text":""},{"location":"course_notes/fit5032/#what-is-scaffolding-why-use-benefit","title":"what is Scaffolding? why use? benefit","text":"<ul> <li>A code generation framework for ASP.NET Web  applications.  </li> <li>Easy to add boilerplate code to your project that  interacts with a data model.  </li> <li>Can reduce the amount of time to develop standard  data operations in your project.  </li> <li>Can quickly add needed controllers and view that will  interact with models</li> </ul>"},{"location":"course_notes/fit5032/#what-is-entity-framework-benefit-why-use","title":"What is Entity Framework / benefit / Why use?","text":"<ul> <li>The Entity Framework is a set of technologies that support the development of data-oriented software applications.</li> <li>Entity Framework is an object-relational mapper (ORM) that reduces the impedance mismatch between the object-oriented world of .NET Framework developers and the world of relational databases</li> <li>It saves data stored in the properties of  business entities and also retrieves data  from the database and converts it to  business entities objects automatically.</li> </ul>"},{"location":"course_notes/fit5032/#what-is-ormadvantages-and-disadvantages","title":"\u2605\u2605\u2605What is ORM/Advantages and Disadvantages","text":"<ul> <li>Object-Relational Mapping (ORM) is a technique that  lets you query and manipulate data from a database  using an object-oriented paradigm   </li> </ul>"},{"location":"course_notes/fit5032/#what-are-the-impedance-mismatch-in-orm","title":"What are the Impedance Mismatch in ORM?","text":"<p> + Encapsulation \u2013 in OOP every class has internal and private implementation that is  contained and maintained by the class instance. (RDMS uses \u201cpublic\u201d data \u5c01\u88c5\u540e class\u4e2dprivate\u7684data \u548cfunction\u65e0\u6cd5\u5728DB\u6620\u5c04 + Data type differences \u2013 no pointer/reference data types are allowed in the relational  systems. oop\u4e2d\u7684\u6570\u636e\u7c7b\u578b(string int)\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u4f1a\u53d8\u6210(varchar number) + Structure and integrity \u2013 in OOP it is considered normal to have highly nested structures (objects containing sets of different objects recursively, thus producing quite complicated object graphs).oop\u4e2d\u7684\u590d\u6742\u5d4c\u5957\u5173\u7cfb\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u8f6c\u8bd1</p>"},{"location":"course_notes/fit5032/#core-abilities-in-ef-api","title":"Core abilities in EF API","text":""},{"location":"course_notes/fit5032/#what-context-class-do-in-ef","title":"What context class do in EF?","text":"<pre><code>public class AppDbContext : DbContext\n{\n    public AppDbContext(DbContextOptions&lt;AppDbContext&gt; options)\n        : base(options)\n    {\n    }\n\n    public DbSet&lt;Employee&gt; Employees { get; set; }\n    public DbSet&lt;Department&gt; Employees { get; set; }\n}\n</code></pre>"},{"location":"course_notes/fit5032/#what-is-entity-in-ef","title":"What is Entity in EF?","text":"<ul> <li>An entity in Entity Framework is a class in the domain of  your application which is included as a <code>DbSet&lt;TEntity&gt;</code>  type property in the derived context class.  </li> <li>An Entity can include two types of properties: Scalar  Properties and Navigation Properties</li> </ul>"},{"location":"course_notes/fit5032/#how-to-build-model","title":"how to build model","text":"<ul> <li>database First Approach (This is where a database is  created first using Data Definition Language. So, you  are writing SQL first)  </li> <li>Model First Approach (This is where a Visual Designer  is used or the model is mapped out via XML  configuration files)  </li> <li>Code First Approach (This is when Code (C# classes)  are written or created)</li> </ul>"},{"location":"course_notes/fit5032/#development-workflow","title":"Development Workflow","text":""},{"location":"course_notes/fit5032/#a-general-guideline","title":"A General Guideline","text":""},{"location":"course_notes/fit5032/#what-is-model-first-approach","title":"\u2605 What is Model First Approach","text":"<p>create the entities,  relationships, and inheritance hierarchies directly on the  design surface of EDMX and then generate the  database from your model  draw table and relationship -&gt; generate and execute SQL -&gt; generate Model  </p>"},{"location":"course_notes/fit5032/#what-is-code-first-approach","title":"\u2605 What is Code First Approach","text":"<p>Create Entity -&gt; Create Context Class -&gt; Generate Tables in DB </p>"},{"location":"course_notes/fit5032/#advantages-and-disadvantages-of-code-first","title":"\u2605\u2605\u2605Advantages and Disadvantages of Code First","text":"<p>Advantages + Ability to \u201cversion\u201d control database + Reduces the amount of automatically generated code significantly + A \u201cdeveloper\u201d centric approach  </p> <p>Disadvantages + Difficult if new to the C# environment and already know SQL. + Heavily depends on the architecture of the systems in use, using it may be more difficult in scenarios where the database layer is important.</p>"},{"location":"course_notes/fit5032/#advantages-and-disadvantages-of-db-first","title":"\u2605 Advantages and Disadvantages of DB First","text":"<p>Advantages + Assumes that the database design does not change over time.  + Knowledge of SQL will make this task significantly easier in  comparison to Code First.  </p> <p>Disadvantages + Requires an understanding of SQL to create the Database. +  Changes to the database can negatively impact development as  auto-generated codes may not be working as intended + Lack the correct annotation attributes (sometimes)</p>"},{"location":"course_notes/fit5032/#inheritance-strategy","title":"Inheritance Strategy","text":""},{"location":"course_notes/fit5032/#eager-loading-and-lazy-loading","title":"Eager Loading and Lazy Loading","text":"<p>Eager Loading +  Eager loading is the process whereby a query for one type of entity also loads related entities as part of the query. + This is done so that we do not need to write a separate query for the related entity type. + Eager loading is achieved using the Include() method.  </p> <p>Lazy Loading + The loading of related data, only happens when it is request</p>"},{"location":"course_notes/fit5032/#fit5032-week-5-js","title":"FIT5032 Week 5 JS","text":""},{"location":"course_notes/fit5032/#lecture-note_4","title":"Lecture note","text":""},{"location":"course_notes/fit5032/#qa_2","title":"QA","text":""},{"location":"course_notes/fit5032/#what-is-jsjavascript-features","title":"\u2605\u2605 What is JS(JavaScript) / features","text":"<ul> <li>JavaScript is a lightweight, interpreted or JIT compiled programming  language with first class function</li> <li>JavaScript is a prototype-based, multi-paradigm, dynamic scripting  language, supporting object-oriented, imperative and declarative styles</li> </ul>"},{"location":"course_notes/fit5032/#whats-difference-between-server-side-vs-client-side-code-how-can-browser-client-pc-run-dynamic-logic-use-js","title":"\u2605\u2605 What\u2019s difference between Server-side vs Client-side code? How can browser/ client PC run dynamic logic? Use JS","text":"<ul> <li>Client-side code is code  that is ran on the user\u2019s  computer - when the page is viewed, the client side  code is downloaded and then run and displayed by the  browser. This is what we call client-side JavaScript. (write on  html)  (vue jquery)</li> <li>JavaScript can also be used as server-side.(write on mvc) Recently,  there is a huge surge in the popularity of using  JavaScript as server side code in the Node.js  environment(Node.js)</li> </ul>"},{"location":"course_notes/fit5032/#javascript-libraries-and-framework","title":"\u2605\u2605 JavaScript Libraries and Framework","text":"<ul> <li>JavaScript library: pre-written JavaScript which allows for easier development  of JavaScript applications. Examples of JavaScript libraries(jQuery d3.js) are <code>&lt;script src=\"/Scripts/modernizr-2.8.3.js\"&gt;&lt;/script&gt;</code></li> <li>JavaScript framework: A framework defines the entire application design.  Examples of JavaScript frameworks are(vue react)</li> </ul>"},{"location":"course_notes/fit5032/#briefly-describe-how-the-bundling-of-css-and-javascript-files-is-implemented-in-aspnet-mvc-applications","title":"\u2605\u2605 Briefly describe how the bundling of CSS and JavaScript files is  implemented in ASP.Net MVC applications","text":""},{"location":"course_notes/fit5032/#how-to-add-new-external-js-lib-in-net-app","title":"How to add new external JS lib in .Net App?","text":"<ul> <li>js file to <code>Scripts</code> folder; css file to <code>Content</code> folder</li> <li>configure those file in <code>BundleConfig.cs</code></li> <li>import the bundle in <code>layout.cshtml</code>  or other page <code>@Styles.Render(\"~/Content/css\")</code> <code>@Scripts.Render(\"~/bundles/modernizr\")</code></li> </ul>"},{"location":"course_notes/fit5032/#stylesrender-and-scriptsrender","title":"Styles.Render() and Scripts.Render()","text":"<p>link to section How to render css/js in view/cshtml? (Defer JS) + Style.Render is used to render a bundle of CSS files defined within BundleConfig.cs files. Styles.Render create style tag(s) for the CSS bundle + Scripts.Render is also used to render a bundle of Script files by rendering script tag(s) for the Script bundle.</p>"},{"location":"course_notes/fit5032/#html-defer","title":"\u2605\u2605 HTML defer","text":"<ul> <li>Scripts with the defer attribute are executed in order (i.e. first script 1, then script 2). This  also does not block the browser.  </li> <li>\u5ef6\u8fdf\u6807\u7b7e\u4f1a\u6309\u987a\u5e8f\u6fc0\u6d3b  </li> <li>\u6fc0\u6d3b\u65f6\u673a\u662f\u5728\u6574\u4f53\u9875\u9762\u5168\u90e8\u88ab load \u4e4b\u540e  </li> <li>\u7f3a\u9677\uff1a\u5982\u679c JS \u5f88\u591a\u6216\u8005\u9875\u9762\u5f88\u5927\uff0c\u9875\u9762\u5ef6\u8fdf\u4f1a\u7279\u522b\u9ad8</li> </ul> <pre><code>&lt;script src=\"path/to/script1.js\" defer&gt;&lt;/script&gt;  \n&lt;script src=\"path/to/script2.js\" defer&gt;&lt;/script&gt;\n</code></pre>"},{"location":"course_notes/fit5032/#html-async","title":"\u2605\u2605 html async","text":"<ul> <li>Scripts with the async attribute are executed asynchronously.  </li> <li>\u5f02\u6b65\u6807\u7b7e\u63a7\u5236 script \u53ef\u4ee5\u5728\u4e0b\u8f7d\u540c\u65f6\u89e3\u6790\u4e4b\u540e\u7684 tag\uff08HTML\uff09  </li> <li>\u4f7f\u7528\u573a\u666f\uff0c\u6b64 script \u5bf9\u9875\u9762\u7684\u521d\u6b21\u52a0\u8f7d\u4e0d\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u7c7b\u4f3c\u7f51\u9875\u52a8\u753b</li> <li>\u7f3a\u9677\uff1a\u518d\u6709\u591a\u4e2a JS \u7684\u65f6\u5019\uff0c\u8c01\u5148\u4e0b\u8f7d\u5b8c\u6bd5\uff0c\u8c01\u5148\u6267\u884c\uff0c\u6ca1\u6709 sequence \u63a7\u5236</li> </ul> <pre><code>&lt;script src=\"path/to/script1.js\" async&gt;&lt;/script&gt;  \n&lt;script src=\"path/to/script2.js\" async&gt;&lt;/script&gt;  \n&lt;script async src=\"my.js\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"course_notes/fit5032/#fit5032-week-6-validation","title":"\u2605\u2605\u2605 FIT5032 Week 6 Validation","text":""},{"location":"course_notes/fit5032/#lecture-note_5","title":"Lecture note","text":""},{"location":"course_notes/fit5032/#qa_3","title":"QA","text":""},{"location":"course_notes/fit5032/#what-is-input-validation-which-data-should-be-validated","title":"\u2605\u2605\u2605 What is input validation? / Which data should be validated?","text":"<ul> <li>\u6240\u6709\u7528\u6237/\u7b2c\u4e09\u65b9\u6240\u8f93\u5165\u7684\u6570\u636e\u5fc5\u987b\u8981 validation  </li> <li>correct format and data type</li> <li>not null fields</li> <li>data types dates, numeric and text fields</li> <li>data is within valid ranges e.g. age (ranges)</li> <li>specific format  email addresses or post codes etc</li> </ul>"},{"location":"course_notes/fit5032/#what-the-purpose-in-input-validation","title":"\u2605\u2605\u2605 What the purpose in input validation","text":"<ul> <li>Ensure backend/DB get the right format and legal data(range</li> <li>Validation to minimise security issues (SQL injection attacks)  </li> </ul> <p>Client side validation + Client side validation is recommended to reduce  round trips to the server + before the data submit  to the server eg  (\"Please enter a valid email address\")  </p> <p>Server side validation  </p> <pre><code>[Required]\n[StringLength(100)]\npublic string Title { get; set; } = null!;\n\nif (!ModelState.IsValid)\n{ return View(movie); }\n</code></pre>"},{"location":"course_notes/fit5032/#how-many-validations-can-we-implement-in-the-aspnet","title":"How many validations can we implement in the ASP.NET?","text":"<p> + there should be validation in the View layer, Control layer as well as the  Model layer + View layer\uff1a JS, client side validation + Control layer: server side validation, form validation (HTTP post) \u8fd9\u4e2a\u7b97 business layer  validation + Model layer: Validation Attributes(Annotation), database table constraint \uff08FK not found</p>"},{"location":"course_notes/fit5032/#validation-in-models","title":"Validation in Models","text":"<p> + Validation Attributes(Annotation), <code>[Required(ErrorMessage = \"Please Enter Name\u201d)]</code> + database table constraint \uff08FK not found <code>[DataType(DataType.Date)]</code> <code>[DataType(DataType.Date, ErrorMessage = \"You can only enter date format\")]</code> + </p>"},{"location":"course_notes/fit5032/#validation-in-views","title":"Validation in Views","text":"<p><code>@Html.ValidationMessageFor(model =&gt; model.Name,  \"Please Enter a Name\", new { @class = \"text-danger\" }</code> </p>"},{"location":"course_notes/fit5032/#regular-expressions","title":"Regular Expressions","text":"<p><code>^[A-Za-z]+\\-{0,1}[0-9]*\\-*[A-Za-z]+$</code> </p>"},{"location":"course_notes/fit5032/#how-to-bind-data-from-http-request-to-method-parameters","title":"\u2605\u2605\u2605How to bind data from http request to method parameters?","text":"<p> + Model binding in ASP.NET MVC maps data from HTTP requests to action method  parameters. + The parameters may be simple types such as strings, integers, or floats, or they may be  complex types  </p> <p>POST  + Viewmodel for frontend (can contain more than one table) + get input value to viewmodel (set username) + Post viewmodel to DB  </p>"},{"location":"course_notes/fit5032/#what-is-the-sequence-of-server-side-validation-why-use-server-side-validation","title":"\u2605\u2605 What is the sequence of server-side validation? why use server-side validation","text":"<p> + The last layer to protect invalid data interact with DB \u6574\u4e2a\u5e94\u7528\u7684\u6700\u540e\u4e00\u5c42\u9632\u7ebf + Defined standard validation on model field, can be used in multiple views \u5b9a\u4e49 model &amp; field \u7684\u6807\u51c6 validation + Can use the jQuery unobstructive validation to generate client side validation automatically \u5728 client page/cshtml \u81ea\u52a8\u751f\u6210 HTML\uff08JS\uff09\u4ee3\u7801\u5b9e\u73b0 validation</p> <pre><code>if (ModelState.IsValid)\n{\n    db.Patients.Add(patient);\n    db.SaveChanges();\n    return RedirectToAction(\"Index\");\n}\n</code></pre>"},{"location":"course_notes/fit5032/#jquery-unobtrusive-validation","title":"jQuery Unobtrusive Validation","text":"<p> + add validation to our MVC views without any  additional client-side coding + In order words, once you have included server side validation via validation attribute, the  client side scripts to validate the forms will be automatically generated</p>"},{"location":"course_notes/fit5032/#client-side-validation","title":"Client Side Validation","text":"<p>  + the main reason client side validation is important is because it significantly increases  the user experience.   \u589e\u5f3a\u4e86\u7528\u6237\u4f53\u9a8c + Instead of making round trips to the server, users can get an instant feedback.  \u51cf\u5c11\u4f20\u8f93\u7b49\u5f85\u65f6\u95f4 + Client side validation will also in a way offload the workload to the client instead of the  server.   \u51cf\u8f7b\u4e86 Server \u7684\u8d1f\u62c5</p> <pre><code>&lt;div class=\"editor-field\"&gt;  \n    @Html.EditorFor(model =&gt; model.Email)  \n    @Html.ValidationMessageFor(model =&gt; model.Email)  \n&lt;/div&gt;\n</code></pre>"},{"location":"course_notes/fit5032/#why-we-use-clientview-validation-combined-with-servermodel-validation","title":"Why we use client/view validation combined with server/model  validation?","text":""},{"location":"course_notes/fit5032/#validationmessage-vs-validationsummary-why-do-we-need-customize-validation-message-how-can-we-use-customised-validation-message-instead-of-model-validation-attributes-message","title":"ValidationMessage VS ValidationSummary / Why do we need customize validation message?/ How can we use customised validation message instead of model validation attributes message?","text":"<p>Validation Error Messages  </p> <pre><code>[Required(ErrorMessage=\"Please enter student name.\")]\npublic string StudentName { get; set; }\n\n@Html.ValidationMessageFor(model =&gt; model.Name,  \"Please Enter a Name\", new { @class = \"text-danger\" } \n</code></pre> <p>Validation Summary + <code>@Html.ValidationSummary(true, \"\", new { @class = \"text-  danger\" })</code> + A Summary of the Validation Errors (excluding those  already given) can be made \u663e\u793a\u6240\u6709\u9519\u8bef\u6d88\u606f  </p>"},{"location":"course_notes/fit5032/#what-functionui-component-can-implement-usability-in-web-application","title":"What function/UI component can implement usability in Web application","text":"<p>Tool Tips + Displayed Text when user hovers over element + Implemented by Html title attribute + </p> <pre><code>//method 1\n@Html.TextBox(\"MyTextbox\", new { title = \"I'm a Tooltip!\u201d})\n\n//method 2\n@Html.EditorFor(model =&gt; model.Name, new { htmlAttributes =  new { title = \"This is where you type in your name\"} })\n</code></pre> <p>Tab Index + Allows a user to tab through user input fields in a  specified order + <code>@Html.EditorFor(model =&gt; model.phone, new { htmlAttributes = new { @class = \"form- control\", tabindex = 1 } })</code> </p> <p>Hot Keys + Hotkeys allow the user to jump to a specific input element based on the key pressed (e.g. ALT-d) \u8df3\u8f6c\u5230\u8be5view  + <code>@Html.EditorFor(model =&gt; model.todaysDate, new { htmlAttributes = new { @class = \"form-control\" , accesskey = \"d\" } })</code></p>"},{"location":"course_notes/fit5032/#fit5032-week-7-security-and-identity","title":"FIT5032 Week 7 Security and Identity","text":""},{"location":"course_notes/fit5032/#lecture-note_6","title":"Lecture Note","text":""},{"location":"course_notes/fit5032/#qa_4","title":"QA","text":""},{"location":"course_notes/fit5032/#top-10-web-application-security-risks","title":"Top 10 Web Application Security Risks","text":""},{"location":"course_notes/fit5032/#what-is-password-hash-why-we-use-it","title":"What is password hash? Why we use it?","text":"<ul> <li>When storing a password, hash it with a salt, and then  with any future login attempts, hash the password the  user enters and compare it with the stored hash. </li> <li>If the two match up, then it's virtually certain that the  user entering the password entered the right one <code>E.g. Abcd = \u300b sdkfjqwo123jlk... \uff08a fixed length 256 or 512 bits</code></li> <li>As hashed are inherently one-way in their nature, so even if data is exposed, hashed pwd cannot  be exposed.  This significant secure the data in DB</li> </ul>"},{"location":"course_notes/fit5032/#authorizationrole-func-vs-authenticationlogin","title":"\u2605\u2605 Authorization(Role Func) vs Authentication(Login)","text":"<ul> <li>Authentication is the process of verifying who you are. When you log on to a PC with a  username and password you are authenticating. Authentication is the process of ascertaining  that somebody is really is who he claims to be.  </li> <li>Authorization is the process of verifying that you have access to something.(<code>[AllowAnonymous]</code> \u8df3\u8fc7\u9a8c\u8bc1\u9636\u6bb5) Gaining access to  a resource (e.g. directory on a hard disk) because the permissions configured on it allow you  access is authorization. In short, authorization refers to rules that determine who is allowed  to do what. </li> </ul>"},{"location":"course_notes/fit5032/#multi-factor-authentication","title":"Multi-factor authentication","text":"<p>  + The authentication factors must come from two or more of the  following + something the claimant knows (e.g. a personal  identification number (PIN), password or response to a  challenge) (Something you know) + something the claimant has (e.g. a physical token, smart  card or software certificate) (Something you have) + something the claimant is (e.g. a fingerprint or iris scan).  (Something you are)   + Advantages: password easy to loss \u5bc6\u7801\u5bb9\u6613\u4e22; provides additional security by  adding protection in layers\u589e\u52a0\u4fdd\u62a4. + Users must carry a mobile phone, charged, and kept in range of a cellular network,  whenever authentication might be necessary.\u9700\u8981\u5e26\u624b\u673a The user must share their personal mobile number with the provider, reducing personal  privacy and potentially allowing spam.\u9700\u8981\u5171\u4eab\u53f7\u7801</p>"},{"location":"course_notes/fit5032/#how-to-secure-an-actioncontroller","title":"\u2605\u2605 How to secure an Action/Controller?","text":"<p>An Action (e.g. from the HomeController) can be  restricted to logged in users Use the [Authorize] annotation</p> <pre><code>[Authorize]  \npublic ActionResult Contact()  \n{  ViewBag.Message = \"Your contact page.\";  \n    return View();}\n</code></pre> <p>Now the user must log in to access the Contact action  </p>"},{"location":"course_notes/fit5032/#user-account-tables","title":"User Account Tables","text":"<p>  The AspNetUser table has the details of the user that  have registered  </p> <p>in the AspNetRoles table We can specify roles in the application by adding entries </p> <p>AspNetUserRoles table  The Mapping of the Users to the roles is done </p>"},{"location":"course_notes/fit5032/#how-to-secure-actionscontrollers-based-on-role","title":"\u2605\u2605 How to secure Actions/Controllers based on role?","text":"<p>Use <code>[Authorize(Roles = \u201cAdministrator\u201d)]</code>  name of the roles are your choice. <code>[Authorize(Roles = \u201cHRManager,Finance\")]</code> HRManager or Finance roles can access </p> <pre><code>[Authorize(Roles = \u201cPowerUser\")]  \n[Authorize(Roles = \u201cControlPanelUser\")\npublic ActionResult Contact(){}\n</code></pre> <p>User must be both PowerUser and  ControlPanelUser can access</p>"},{"location":"course_notes/fit5032/#selectingviewing-items-owned-by-log-in-user","title":"Selecting/Viewing items owned by log in user","text":"<pre><code>using Microsoft.AspNet.Identity;\n// GET: Articles  \npublic ActionResult IndexUserNames()  \n{  //return View(db.Articles.ToList());  \nstring currentUserId = User.Identity.GetUserId();  \nreturn View(db.Articles.Where(m=&gt; m.AuthorId ==  \ncurrentUserId).ToList());  \n}  \n</code></pre> <pre><code>//admin can view every list\nif (User.IsInRole(\"Admin\"))\n{\n    patients = db.Patients.ToList();\n}\n</code></pre> <p>User id to select just the items that are created by the  user (for viewing in the index view.</p>"},{"location":"course_notes/fit5032/#how-to-implement-identity-in-aspnet-mvc","title":"\u2605\u2605How to implement Identity in ASP.Net MVC","text":"<ul> <li>Using Usernames and Passwords to log in  </li> <li>Using roles such as administrator, user etc  </li> <li>Mapping of usernames to roles  </li> </ul>"},{"location":"course_notes/fit5032/#why-use-role-based-security-authorization","title":"Why use role based security? / Authorization","text":"<ul> <li>Users can be restricted to their own data  </li> <li>Administrators given write access to all data  </li> <li>Public (no logged in users) given read access  only</li> </ul>"},{"location":"course_notes/fit5032/#cross-site-scripting-xss","title":"Cross Site Scripting (XSS)","text":"<ul> <li>ASP.Net MVC has built in checks to ensure scripts are  not submitted via user input</li> <li>Disable validation for the relevant action <code>[ValidateInput(false)]</code></li> </ul>"},{"location":"course_notes/fit5032/#cross-site-request-forgery-csrf-attack","title":"Cross Site Request Forgery (CSRF) Attack","text":"<ul> <li>ASP.Net MVC has a built in functionality to stop this  </li> <li>Add <code>@Html.AntiForgeryToken()</code> to the form  </li> <li>Add <code>[ValidateAntiForgeryToken]</code>  to the action method  </li> </ul> <pre><code>&lt;!--using it in view--&gt;\n&lt;!--Razor view syntax is different from normal html--&gt;\nusing (Html.BeginForm()) {\n    @Html.AntiForgeryToken()\n    &lt;input type=\"text\" id=\"fname\" name=\"fname\"&gt;\n    &lt;input type=\"submit\" value=\"Submit\"&gt;}\n</code></pre> <pre><code>//using it in controller\n[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult Create([Bind(Include = \"Id,FirstName,LastName,UserId\")] Patient patient){}\n</code></pre>"},{"location":"course_notes/fit5032/#openid","title":"OpenID","text":"<p> + OpenID is an open standard and decentralized  authentication protocol.  +  It allows Clients to verify the identity of the End- User based on the authentication performed by  an Authorization Server, as well as to obtain basic  profile information about the End-User in an  interoperable and REST-like manner.  + Remember one username and one password</p>"},{"location":"course_notes/fit5032/#oauth","title":"OAuth","text":"<p>  + OAuth 2.0 focuses on client developer simplicity while  providing specific authorization flows for web  applications, desktop applications, mobile phones, and  living room devices</p>"},{"location":"course_notes/fit5032/#fit5032-week-8-email","title":"FIT5032 Week 8 Email","text":""},{"location":"course_notes/fit5032/#lecture-note_7","title":"Lecture Note","text":""},{"location":"course_notes/fit5032/#qa_5","title":"QA","text":""},{"location":"course_notes/fit5032/#signalr","title":"SignalR","text":"<p>Real-time web functionality is the ability to have server code push content to  connected clients instantly as it becomes available, rather than having the  server wait for a client to request new data \u5b9e\u65f6\u8fd4\u56de\u6570\u636e\u4e0d\u7528\u5237\u65b0 server update\u540e\u7acb\u5373\u53d1\u9001 chat room dashboard  </p>"},{"location":"course_notes/fit5032/#fit5032-week-9-web-optimisations","title":"FIT5032 Week 9 Web Optimisations","text":""},{"location":"course_notes/fit5032/#lecture-note_8","title":"Lecture Note","text":""},{"location":"course_notes/fit5032/#qa_6","title":"QA","text":""},{"location":"course_notes/fit5032/#how-to-implement-web-optimization","title":"How to implement web optimization","text":"<ul> <li>Reducing HTTP Connections  Each connection and request is time consuming and takes resources  </li> <li>Reducing File sizes  Larger file sizes take more bandwidth (and time) to down load  </li> <li>Caching  Can reduce the need to request a resource that has already been down loaded  </li> <li>Perceived Improvements  Some changes can be made that does not improve absolute performance, but  makes the user believe there is an improvement (due to lower latencies and quicker  perceived response time)</li> </ul>"},{"location":"course_notes/fit5032/#how-to-reduce-http-request","title":"how to Reduce HTTP request","text":"<ul> <li>Combing images  </li> <li>Reduce the size of files  </li> <li>Making JavaScript asynchronous <code>&lt;script async src=\"foobar.js\"&gt;&lt;/script&gt;</code></li> </ul>"},{"location":"course_notes/fit5032/#minify-css-and-javascript","title":"Minify CSS and JavaScript","text":"<p>Minify: Removing unnecessary characters from your HTML  White space characters   New line characters   Comments   Block delimiters  </p> <p>Uglify Changing variables and functions with long names into shortnames  Can act as an obfuscator, but is just a simple replacement  </p> <p>Bundle Bundler combines multiple files into a single file  Often used with minify and uglify</p>"},{"location":"course_notes/fit5032/#whats-difference-between-async-and-defer-in-render-js-how-to-render-js-without-block-body-content-render-when-use-async-instead-of-defer","title":"\u2605\u2605\u2605 What\u2019s difference between async and defer in render JS? / How to render JS without block body content render? / When use async instead of defer?","text":"<p>Defer \u4f1a\u5728\uff08dom \u6811\u52a0\u8f7d\u4e4b\u540e\uff09\u6309\u987a\u5e8f\u6267\u884c\uff0cAsync \u4f1a\u5728\u4e0b\u8f7d\u7ed3\u675f\u4e4b\u540e\u7acb\u5373\u6267\u884c Use the async or defer JavaScript to avoid render blocking.  *Does not mean the webpage is fully loaded before JavaScript is executed <code>&lt;script async src=\"foobar.js\"&gt;&lt;/script&gt;</code> </p> <p>Deferring JavaScript   Ultimate goal is loading or parsing JavaScript only after page content has loaded</p>"},{"location":"course_notes/fit5032/#what-is-differ-between-apsnet-framework-and-aspnet-core","title":"\u2605\u2605\u2605 What is differ between APS.Net Framework and ASP.NET  Core?","text":"<p>reference </p>"},{"location":"course_notes/fit5032/#fit5032-week-10-modern-javascript","title":"FIT5032 Week 10 Modern JavaScript","text":""},{"location":"course_notes/fit5032/#lecture-note_9","title":"Lecture Note","text":""},{"location":"course_notes/fit5032/#qa_7","title":"QA","text":""},{"location":"course_notes/fit5032/#how-to-communicate-from-client-and-serve","title":"\u2605 How to communicate from client and serve","text":""},{"location":"course_notes/fit5032/#architecture-between-traditional-and-modern-web-application","title":"architecture between traditional and modern web application","text":""},{"location":"course_notes/fit5032/#what-is-api","title":"What is API?","text":"<p>API stands for application programming interface, which\u00a0is a set of definitions and protocols for building and integrating application software. APIs let your product or service communicate with other products and services without having to know how they\u2019re implemented. </p>"},{"location":"course_notes/fit5032/#api-features","title":"API Features?","text":"<ul> <li>Platform independence. Any client should be able to call the  API, regardless of how the API is implemented internally. This  requires using standard protocols, and having a mechanism  whereby the client and the web service can agree on the  format of the data to exchange.  \u65e0\u8bbaplatform \u4efb\u4f55client\u90fd\u53ef\u4ee5\u4f7f\u7528API\u83b7\u5f97\u6570\u636e</li> <li>Service evolution. The web API should be able to evolve and  add functionality independently from client applications. As the  API evolves, existing client applications should continue to  function without modification. All functionality should be  discoverable, so that client applications can fully utilize it. API\u4e0e\u7528\u6237application \u5f53API\u6539\u53d8\u65f6 \u7a0b\u5e8f\u53ef\u7ee7\u7eed\u4f7f\u7528  (\u4e0d\u6539\u53d8\u5bf9\u5e94function\u7684\u540d\u5b57)</li> </ul>"},{"location":"course_notes/fit5032/#why-use-api","title":"Why use API?","text":"<ul> <li>Easy to read and work with</li> <li>Hard to misuse</li> <li>Complete and concise</li> </ul> <p>https://swaggerhub.com/blog/api-design/api-design-best-practices/</p>"},{"location":"course_notes/fit5032/#what-is-web-api","title":"\u2605 What is web API?","text":"<p>A unique type of interface where the communication  takes place using the Internet and Web-specific  protocols such as HTTP \u4f7f\u7528\u7f51\u7edc\u534f\u8bae\u901a\u8fc7Internet\u8fde\u63a5API The API defines a set of endpoints, request  messages and response structures.  XML and JSON are two examples of response  media types.</p>"},{"location":"course_notes/fit5032/#what-is-restful-web-serviceapi-benefitswhy-features","title":"\u2605\u2605\u2605 What is restful Web Service/API? Benefits/WHY? Features?","text":"<p> What is: + Representational State Transfer (REST) as an architectural approach to designing web services. + REST is independent of any underlying protocol and is  not necessarily tied to HTTP. However, most common REST  implementations use HTTP as the application protocol  </p> <p>Advantage: + A primary advantage of REST over HTTP is that it uses open  standards, and does not bind the implementation of the API or the  client applications any specific implementation \u53ea\u8981\u80fd\u751f\u6210HTTP request \u90fd\u80fd\u4f7f\u7528 API  + Separation between the client and the server: Separates the  user interface from the server and the data storage \u7528\u6237\u754c\u9762\u4e0e\u670d\u52a1\u5668\u548c\u6570\u636e\u5b58\u50a8\u5206\u79bb + Visibility, reliability and scalability. Each development team  can scale the product without too much problem. They can  migrate to other servers or make all kinds of changes in the  database, provided the data from each request is sent correctly \u6613\u6269\u5c55\u8fc1\u79fb + The REST API is always independent of the type of platform  or languages: the REST API always adapts to the type of  syntax or platforms being used \u517c\u5bb9\u6027\u597d</p>"},{"location":"course_notes/fit5032/#common-http-methods-used-by-restful-apis","title":"Common HTTP Methods used by RESTful APIs","text":""},{"location":"course_notes/fit5032/#benefits-of-javascript-frameworks","title":"Benefits of JavaScript Frameworks","text":"<ul> <li>Some frameworks customised for:  mobile devices; single-page applications  </li> <li>With cross-compatibility issues of web browsers  </li> <li>JavaScript frameworks provided the standard API\u2019s  </li> <li>More recently standards such as HTML5 allow even  more portable applications</li> </ul>"},{"location":"course_notes/fit5032/#single-page-applications","title":"Single Page Applications","text":"<ul> <li>Allow all functionality to be in one page  </li> <li>HTML page, JavaScript, CSS etc loaded on first page  load  Dynamic (ajax) interaction with the server   Retrieves data from webservice (normally)  </li> <li>User interface control moves from server to the client</li> </ul>"},{"location":"course_notes/fit5032/#why-use-angular-js-features","title":"Why use Angular JS? Features?","text":"<ul> <li>Built in data binding  Bi-directional data binding, from model to view and  view to model  </li> <li>HTML as template language for views  </li> <li>User interface (UI) model and controller handled by the  Browser   No need to contact server for these UI based updates  New views can be rendered without server interaction  </li> </ul> <p>Components + ng-app \u2212 defines and links an AngularJS  application to HTML. + ng-model \u2212 binds the values of AngularJS  application data to HTML input controls. +  ng-bind \u2212 binds the AngularJS Application data to  HTML tags</p>"},{"location":"course_notes/fit5032/#fit5032-week-11-testing","title":"FIT5032 Week 11 testing","text":""},{"location":"course_notes/fit5032/#lecture-note_10","title":"Lecture Note","text":""},{"location":"course_notes/fit5032/#qa_8","title":"QA","text":""},{"location":"course_notes/fit5032/#development-pipeline","title":"\u2605 Development Pipeline","text":"<p> + During development using internal Visual Studio embedded webservers and database  servers + When hosting web application, full IIS and database needed + Depending on service provided;   If just platform provided then need to manage IIS and databases;   If service provided, then just need to manage software;  If software provided, then just need to manage data  </p>"},{"location":"course_notes/fit5032/#modern-development-practices","title":"Modern Development Practices","text":"<p>  + Modern applications are developed using Continuous  Integration &amp; Continuous Development CI/CD reference + CI merge their changes back to the main branch as often as possible. + CD automatically deploys all code changes to a testing and/or production environment after the build stage. + CD \u00a0every change that passes all stages of your production pipeline\u00a0is released to your customers + Integration, merge commit into develop  \u5728\u201c\u96c6\u6210\u201d\u671f\u95f4\u5f88\u5c11\u4e14\u7ecf\u5e38\u6267\u884c\u7684\u6b65\u9aa4\u7684\u5b9e\u8df5\uff0c\u800c\u4e0d\u662f\u7b49\u5230\u4ee3\u7801\u5b8c\u6210\u540e\u518d\u5c06\u6240\u6709\u4ee3\u7801\u7ec4\u5408\u5728\u4e00\u8d77\u5e76\u8fdb\u884c\u6d4b\u8bd5\u3002 + Delivery, release after a mount of time or amount of requirement branch merged into dev branch  Decide which requirements or function can be release at this version.  \u6301\u7eed\u4ea4\u4ed8\u5efa\u7acb\u5728\u901a\u8fc7\u6301\u7eed\u96c6\u6210\u5efa\u7acb\u7684\u6784\u5efa\u548c\u6d4b\u8bd5\u81ea\u52a8\u5316\u7684\u57fa\u7840\u4e4b\u4e0a\u3002 + Deployment, upload the app package like apk to Google app store or web server.  Install new app in the web server, replace the old version.\u6301\u7eed\u90e8\u7f72\u5c06\u6301\u7eed\u96c6\u6210\u548c\u4ea4\u4ed8\u7684\u5b9e\u8df5\u5f97\u51fa\u5176\u5408\u4e4e\u903b\u8f91\u7684\u7ed3\u8bba\uff1a</p>"},{"location":"course_notes/fit5032/#what-is-test-why-test","title":"What is test? Why test?","text":"<ul> <li>Software testing is a way to assess the quality of the  software and to reduce the risk of software failure in  operation</li> <li>A defect (fault or bug) in the software code or in some  other related work product.  </li> <li>An error that leads to the introduction of a defect in one  work product can trigger an error that leads to the  introduction of a defect in a related work product.  </li> <li>If a defect in the code is executed, this may cause a  failure, but not necessarily in all circumstances.</li> </ul>"},{"location":"course_notes/fit5032/#functional-vs-non-functional-testing","title":"Functional vs Non-Functional Testing","text":"<ul> <li>Functional testing involves tests that evaluate functions  that the system should perform. The functions are  \u201cwhat\u201d the system should do.  </li> <li>Non-functional testing of a system evaluates  characteristics of systems and software such as  usability, performance efficiency or security. Non-  functional testing is the testing of \u201chow well\u201d the system  behaves. This is often called quality requirements  </li> </ul>"},{"location":"course_notes/fit5032/#test-techniques","title":"Test Techniques","text":""},{"location":"course_notes/fit5032/#blackbox","title":"Blackbox","text":"<ul> <li>based on an analysis of  the appropriate test basis (e.g., formal requirements  documents, specifications, use cases, user stories, or  business processes).\u6839\u636e\u4e0d\u540cdocument\u8fdb\u884c</li> <li>Black-box test techniques concentrate on the inputs and  outputs of the test object without reference to its internal  structure \u53ea\u5173\u6ce8input\u548coutput\u4e0d\u5173\u6ce8logic</li> </ul>"},{"location":"course_notes/fit5032/#whitebox","title":"Whitebox","text":"<ul> <li>an analysis of  the architecture, detailed design, internal structure, or  the code of the test object  concentrate on the structure and processing  within the test object. \u6839\u636e\u7ed3\u6784\u8ddfprocessing\u8fdb\u884c\u6d4b\u8bd5</li> </ul>"},{"location":"course_notes/fit5032/#experience-based-test","title":"Experience-based test","text":"<p>from the tester\u2019s skill and  intuition, and their experience with similar applications  and technologies. \u6839\u636e\u7ecf\u9a8c\u4e0e\u719f\u6089\u7a0b\u5ea6\u8fdb\u884c\u6d4b\u8bd5</p>"},{"location":"course_notes/fit5032/#test-driven-development","title":"test Driven Development","text":"<p> Test-driven development (TDD) is a software  development process that relies on the repetition  of a very short development cycle. \u5148\u5199test case\u786e\u5b9a\u9884\u671f\u7ed3\u679c\uff0c\u518d\u5199\u4ee3\u7801\uff0c\u7136\u540e\u7528case\u8fdb\u884c\u6d4b\u8bd5</p>"},{"location":"course_notes/fit5032/#hosting-aspnet-applications","title":"Hosting ASP.Net applications","text":"<p>Several alternatives to hosting ASP.Net applications   Host on your own servers\uff1b  Manage webserver and databases  </p> <p>Host on a managed platform\uff1b  Using webserver and databases provided by service provider  </p> <p>Host on Cloud platforms such as Azure\uff1b  Platform exposes services such as webserver and databases  </p> <p>One Server shared by all hosts \u2022 Each host given a different virtual directory \u2022 Even though on one machine each host can have own domain  address \u2022 Independence of different applications enforced by security constraints   </p> <p>Many virtual machines each with own Server \u2022 More popular modern method \u2022 Reduces the likelihood of applications interfering with each other \u2022 May be more resource intensive than a single share IIS server</p>"},{"location":"course_notes/fit5032/#iis-kestrel-servers","title":"IIS / Kestrel servers","text":"<p>IIS is the default webserver for ASP.Net application in Windows.  Many service providers have IIS based hosting.   </p> <p>Kestrel is a cross-platform web server for ASP.Net Core. \u2022 Included by default in ASP.NET Core project templates. \u2022 Other hosting options for ASP.Net Core \u2022 Windows services without IIS \u2022 Linux with Nginx as reverse proxy \u2022 Linux with Apache as reverse proxy</p>"},{"location":"course_notes/fit5032/#deploying-to-host-platform-and-db-connection","title":"Deploying to host platform and DB connection","text":"<p>Deploying to a host platform + Essentially copying files to the relevant directory/folder on the server + Often automated by a one click deploy application + Needs to be configured to the correct webserver (often copied via ftp  etc  </p> <p>Database configuration + Database must be set up on the host. + Need to export database definition and any data from Visual Studio  internal SQLServer + Import database definition and data into the hosted SQLServer  </p>"},{"location":"course_notes/fit5032/#fit5032-mock-exam","title":"FIT5032 Mock Exam","text":""},{"location":"course_notes/fit5032/#m1-what-is-the-role-of-the-layout-file-in-an-aspnet-mvc-application","title":"m1 What is the role of the layout file in an ASP.Net MVC application","text":"<p>link to section\u2605\u2605\u2605 What is the role of the layout file in an ASP.Net MVC application? / How to design a website application in the same UI component, same heading image, same navigation bar?  In this file, render css and js in application level.  Include the basic common UI component which are header section,navigation bar and footer section</p>"},{"location":"course_notes/fit5032/#m2-briefly-describe-how-the-bundling-of-css-and-javascript-files-is-implemented-in-aspnet-mvc-applications","title":"m2 Briefly describe how the bundling of CSS and JavaScript files is  implemented in ASP.Net MVC applications","text":"<p>link to section\u2605\u2605 Briefly describe how the bundling of CSS and JavaScript files is implemented in ASP.Net MVC applications + Firstly register the CSS and JS in the bundleconfig.cs file and rename script bundle name.  This bundle allow include multiple js or css files + Secondly use @Style.Render and @Scripts.Render to render/import css/js in the html page.  Then the imported css and js can be used in this web page</p>"},{"location":"course_notes/fit5032/#m3-how-to-make-aspnet-website-responsive","title":"m3 How to make ASP.Net website responsive","text":"<ul> <li>First need to have bootstrap in your project.   </li> <li>Define the container width in bootstap.css according with different screen width.   </li> <li>Use this css container as <code>&lt;div&gt;</code> style</li> </ul>"},{"location":"course_notes/fit5032/#m4-in-terms-of-internet-application-development-what-do-we-mean-by-navigation-from-the-flow-bohl-usability-categories","title":"m4 In terms of internet application development what do we mean by  Navigation (from the Flow Bohl usability categories)","text":"<p>link to section \u2605\u2605 Web Usability Guidelines (from Flow Bohl) Visual cues should be in place that set priorities and guide a user into the desired direction. A user will likely ask 'where am I?' or 'how can I get where I want to go'. Knowing what users expect and organizing the content accordingly is key to good information architecture and UX design</p>"},{"location":"course_notes/fit5032/#m5-when-would-a-required-field-validation-be-used-in-an-application-in-your-example-what-error-message-would-you-give-if-the-validation-failed-how-about-compareregular-express","title":"m5 When would a required field validation be used in an application? In  your example, what error message would you give if the validation failed?  (How about Compare/Regular Express)","text":"<p>link to section Validation in Views link to section Validation in Models When a field should be required(not null or empty) in the entity, we need to set required  validation <code>[Required(ErrorMessage=\u201dThis is required field!\u201d)]</code> <code>@Html.ValidationMessageFor(model =&gt; model.Name, \"Please Enter a Name\", new { @class = \"text-danger\" }</code> </p>"},{"location":"course_notes/fit5032/#m6-when-would-a-data-type-validation-be-used-in-an-application-in-your-example-what-error-message-would-you-give-if-the-validation-failed","title":"m6 When would a Data Type validation be used in an application? In your  example, what error message would you give if the validation failed","text":"<p>link to section Validation in Models When a field should be a specific data type in the entity(so as in model), we need to set  data type validation. <code>[DataType(DataType.Date, ErrorMessage = \"You can only enter date format\")]</code></p>"},{"location":"course_notes/fit5032/#m7-what-is-the-difference-between-string-and-string-data-types-in-aspnet-mvc-applications","title":"m7 What is the difference between String and string data types in ASP.Net  MVC Applications","text":"<p>link to section What is difference between <code>String</code> and <code>string</code> </p> <p>string is an alias for String. In application, there is no difference in using either.  PS: String used to access build in function in String class Sting</p>"},{"location":"course_notes/fit5032/#m8-briefly-describe-the-role-of-oauth-in-aspnet-identity-implementation-give-an-example","title":"m8 Briefly describe the role of OAuth in ASP.Net Identity implementation.  Give an example","text":"<p>link to section OAuth  OAuth provide a third-part Authorization and Authentication service 1. When user log in, app redirect to Google Oauth Service page. 2. User enter Google identity(username and pwd) 3. Google Oauth service identify the Google username/pwd 4. If identify succeed, redirect back to app and tag Authorization success, the user  passed the authorization and authentication(also return group tag) 5. If identify failed, report invalid username/pwd, redirect back........ (E.g 403) **PS: This significant secure/efficient the Authorization and Authentication in app.</p>"},{"location":"course_notes/fit5032/#m9-what-are-the-main-high-level-differences-between-a-standard-aspnet-mvc-application-and-an-aspnet-application-that-uses-the-web-api","title":"m9 What are the main high level differences between a standard ASP.Net  MVC application and an ASP.Net application that uses the Web API","text":"<p>link to section \u2605 What is web API? link to section Benefits of JavaScript Frameworks other reference + MVC returns the rendered view(html page) to client browsers.  The returned view controlled by controller in server.  + Web API only return data in json or xml to client SPA(JS framework).  The action invoked by http method in JS function(AJAX).</p>"},{"location":"course_notes/fit5032/#m10-give-two-example-scenarios-where-in-one-the-async-method-is-preferred-and-in-the-other-the-defer-method-is-preferred","title":"m10 Give two example scenarios where in one the async method is  preferred and in the other the defer method is preferred","text":"<p>link to section \u2605\u2605 HTML defer link to section \u2605\u2605 html async </p> <ul> <li>Defer: A.js need to download data and B.js need to assign data in the UI component or  other logic based on data. This requirement need sequence execution, so use deffer tag  </li> <li>Async: Like import / load Google analysis JS lib, this lib does not depend on any other lib,  so use async tag to execute js as soon as it downloaded completed</li> </ul>"},{"location":"course_notes/fit5032/#m11-identify-3-usability-features-of-an-application-that-can-be-implemented-to-support-a-novice-new-user-of-an-internet-application-briefly-describe-each","title":"m11 Identify 3 usability features of an application that can be implemented  to support a novice (new) user of an Internet application. Briefly describe  each","text":"<p>link to section What function/UI component can implement usability in Web application </p> <ul> <li>Tool Tips Displayed Text when user hovers over element  </li> <li>Tab Index Allows a user to tab through user input fields in a specified order  </li> <li>Hot Keys Hotkeys allow the user to jump to a specific input element based on the key pressed</li> </ul>"},{"location":"course_notes/fit5032/#m12-briefly-discuss-the-role-of-code-testing-framework-in-continuous-integration-and-continuous-deliverydeployment-in-relation-to-modern-aspnet-mvc-applications-development","title":"m12 Briefly discuss the role of code testing framework in Continuous  Integration and Continuous Delivery/Deployment in relation to modern  ASP.NET MVC applications development","text":"<p>link to section Modern Development Practices </p>"},{"location":"course_notes/fit5032/#m13-briefly-explain-how-models-can-be-used-to-represent-data-in-aspnet-mvc-application","title":"m13 Briefly explain how models can be used to represent data in ASP.Net  MVC application","text":"<p>link to section \u2605\u2605\u2605How to bind data from http request to method parameters?  Entity represent Model in the EF. Use LINQ to CRUD data from DB. View shows data by binding model in controller(Use entity/model to CRUD data)</p>"},{"location":"course_notes/fit5032/#m14-describe-how-models-controllers-and-views-can-be-automatically-generated-from-the-database-clearly-identify-the-different-actions-and-related-views-that-can-be-automatically-generated","title":"m14 Describe how Models, Controllers and Views can be automatically  generated from the database. Clearly identify the different Actions (and  related Views) that can be automatically generated","text":"<p>link to section What is Entity Framework / benefit / Why use? link to section \u2605 Advantages and Disadvantages of DB First Using EF generate model from Database, this is database first approach. Then generate controller and view from models using scaffolding</p>"},{"location":"course_notes/fit5032/#m15-how-can-an-angularjs-client-in-the-aspnet-mvc-application-consume-the-web-api-endpoint-briefly-describe-the-approach","title":"m15 How can an AngularJS client in the ASP.Net MVC application  consume the Web API endpoint? Briefly describe the approach","text":"<p>link to section Common HTTP Methods used by RESTful APIs 1. User access html page. 2. Html page render js file 3. In the JS function method, invoke angular JS controller to access api and receive  response data 4. Use Angular bi-directional data bind data from view and ng-model 5. Display data in html</p>"},{"location":"course_notes/fit5032/#m16-discuss-three-differences-between-aspnet-framework-mvc-and-aspnet-core","title":"m16 Discuss three differences between ASP.NET Framework MVC and  ASP.NET Core","text":"<p>link to section \u2605\u2605\u2605 What is differ between APS.Net Framework and ASP.NET Core? </p>"},{"location":"course_notes/fit5032/#b1-identify-the-main-components-you-will-use-in-your-application-7-marks","title":"b1 Identify the main components you will use in your application. 7 marks","text":"<ul> <li>Model: aim to data storage, integrity,CRUD data from DB  </li> <li>Controller: Mapping/update view, validation, link model and view  </li> <li>View: presentation logic  </li> <li>IIS server  </li> <li>SQLServer</li> </ul>"},{"location":"course_notes/fit5032/#b2-briefly-describe-how-to-combat-xss-cross-site-scripting-and-csrf-cross-site-request-forgery-for-this-application","title":"b2 Briefly describe how to combat XSS (Cross Site Scripting) and CSRF (Cross Site  Request Forgery) for this application","text":"<p>link to section Cross Site Scripting (XSS) link to section Cross Site Request Forgery (CSRF) Attack XSS: .NET has build in XSS protection, no need to add more. Keep default to set <code>[ValidateInput(true)]</code> </p> <p>CSRF: Add <code>@Html.AntiForgeryToken()</code> in the view, to set signature in html view  Add <code>[ValidationAntiForgeryToken]</code>to valid the signature in controller</p>"},{"location":"course_notes/fit5032/#b3-discuss-a-use-case-for-real-time-interaction-with-end-users-using-signalr","title":"b3 Discuss a use case for real time interaction with end users using SignalR","text":"<p>link to section SignalR Chat room. One user send a message and server push this message to all clients who has subscribed.</p>"},{"location":"course_notes/fit5032/#b4-briefly-discuss-how-would-you-ensure-quality-using-code-testing-framework","title":"b4 Briefly discuss how would you ensure quality using code testing framework","text":"<p>link to section Modern Development Practices Black box Testing, white box testing Continuous Integration, merge commit into develop Continuous Delivery, release after a mount of time or amount of requirement branch merged into  dev branch Decide which requirements or function can be release at this version. Continuous Deployment, upload the app package like apk to Google app store or web server. Install new app in the web server, replace the old version</p>"},{"location":"course_notes/fit5032/#fit5032-exam-note","title":"FIT5032 exam note","text":""},{"location":"course_notes/fit5032/#1-why-use-mvc-explain-mvc-feature-separation-of-concernssoc-and-single-responsibility-principle","title":"1. Why use MVC, explain MVC feature Separation of concerns(Soc) and Single Responsibility  Principle","text":"<p>link to section \u2605\u2605 Advantages of ASP.NET MVC = Why use MVC? = MVC benefit link to section Separation of Concerns (SOC) \u4f9d\u636e\u529f\u80fd\u5206\u6210\u72ec\u7acb\u51e0\u4e2a\u6a21\u5757\u5f00\u53d1 link to section Single Responsibility Principle (SRP) \u6bcf\u4e2a\u6a21\u5757\u5982\u4f55\u5212\u5206 class\uff0c reuse  (\u524d\u7aef\u53ef\u4f7f\u7528\u903b\u8f91) (\u804c\u80fd\u53ef\u5206\u5f00)(\u4ee5method\u4e3a\u5355\u4f4d \u5bb9\u6613\u5199test)(\u5bb9\u6613\u96c6\u6210js\u6846\u67b6) SOC: each section addresses a separate concern; simplifying development and maintenance; individual sections can be reused, as well as developed and updated SRP: very module, class or function in a computer program should have responsibility over a single part of that program's functionality,</p>"},{"location":"course_notes/fit5032/#2-why-use-layout-file-what-differ-in-using-layout-file-differ-between-other-html","title":"2. Why use layout file, what differ in using layout file? Differ between other html?","text":"<p>link to section \u2605\u2605\u2605 What is the role of the layout file in an ASP.Net MVC application? / How to design a website application in the same UI component, same heading image, same navigation bar? -   Razor views use a layout to determine their look and feel -   The default view is held in\u00a0<code>Views/Shared/layout.cshtml</code> -   header; footer; navigation bar - </p>"},{"location":"course_notes/fit5032/#3-advantage-and-disadvantage-of-code-firstmodel-first-and-db-first-brief-explain-the-flow-of-each","title":"3. Advantage and Disadvantage of Code first,model first and DB first, brief explain the flow  of each","text":"<p>link to section Development Workflow link to section \u2605 What is Model First Approach link to section \u2605 What is Code First Approach link to section \u2605 Advantages and Disadvantages of DB First </p>"},{"location":"course_notes/fit5032/#4-how-to-navigate-page-in-aspnet-mvc-usability-branch-implement-branch","title":"4. How to navigate page in ASP.NET MVC? (usability branch, implement branch)","text":"<p>link to section \u2605\u2605\u2605 How to handle request in ASP.Net MVC?</p>"},{"location":"course_notes/fit5032/#5-how-to-use-regular-expression-validation","title":"5. How to use regular expression validation?","text":"<p>link to section Regular Expressions </p>"},{"location":"course_notes/fit5032/#6-what-is-jquery-why-use-it","title":"6. What is jQuery? Why use it?","text":"<p>link to section jQuery Unobtrusive Validation add\u00a0validation to our MVC views pnce you have included server side validation via validation attribute, the client side scripts to validate the forms will be automatically generated</p>"},{"location":"course_notes/fit5032/#7-demo-how-is-sql-injection-and-how-to-prevent-it","title":"7. Demo how is SQL injection and how to prevent it.","text":"<p>link to section Cross Site Scripting (XSS) -   ASP.Net MVC has built in checks to ensure scripts are not submitted via user input <code>[ValidateInput(true)]</code></p>"},{"location":"course_notes/fit5032/#8-what-does-controller-action-method-do","title":"8. What does controller action method do?","text":"<p>link to section How to combine controller and view/url together? / How to add new view binding with controller? </p> <p>An\u00a0action\u00a0(or\u00a0action method) is a method on a controller that handles incoming requests. Controllers provide a logical means of grouping similar actions together, allowing common sets of rules (e.g. routing, caching, authorization) to be applied collectively. Incoming requests are mapped to actions through\u00a0routing</p>"},{"location":"course_notes/fit5032/#9-describe-identity-flow-you-used-in-your-assignment-include-db-structure","title":"9. Describe Identity flow you used in your assignment. (Include DB structure)","text":"<p>link to section \u2605\u2605How to implement Identity in ASP.Net MVC link to section User Account Tables </p>"},{"location":"course_notes/fit5032/#10-how-to-convert-net-mvc-to-net-web-api","title":"10. How to convert .Net MVC to .Net Web API?","text":""},{"location":"course_notes/fit5032/#11-what-is-continuous-integrationcontinuous-deliverycontinuous-deployment","title":"11. What is Continuous Integration/Continuous Delivery/Continuous Deployment?","text":"<p>link to section Modern Development Practices CI merge their changes back to the main branch as often as possible. CD automatically deploys all code changes to a testing and/or production environment after the build stage. CD \u00a0every change that passes all stages of your production pipeline\u00a0is released to your customers</p>"},{"location":"course_notes/fit5032/#12-cons-and-pros-of-angular-js","title":"12. Cons and pros of Angular JS","text":"<p>link to section Why use Angular JS? Features? The pros and cons of choosing AngularJS \u6539\u8fdb\u7684\u670d\u52a1\u5668\u6027\u80fd  \u66f4\u5feb\u7684\u5e94\u7528\u7a0b\u5e8f\u539f\u578b\u8bbe\u8ba1 \u5fc5\u987b\u652f\u6301 JavaScript \u5b66\u4e60\u56f0\u96be</p>"},{"location":"course_notes/fit5032/#13-demo-example-of-signalr-and-explain-what-is-subscriber","title":"13. Demo example of SignalR and explain what is subscriber?","text":"<p>link to section SignalR  Chat room. One user send a message and server push this message to all clients who has subscribed. </p>"},{"location":"course_notes/fit5032/#14-web-optimized-manners-list-3","title":"14. Web Optimized manners, list 3","text":"<p>link to section How to implement web optimization  -   Reducing HTTP Connections Each connection and request is time consuming and takes resources -   Reducing File sizes Larger file sizes take more bandwidth (and time) to down load -   Caching Can reduce the need to request a resource that has already been down loaded -   Perceived Improvements Some changes can be made that does not improve absolute performance, but makes the user believe there is an improvement (due to lower latencies and quicker perceived response time)</p>"},{"location":"course_notes/fit5032/#15-why-use-aspnet-core","title":"15. Why use ASP.NET Core?","text":"<p>link to section \u2605\u2605\u2605 What is differ between APS.Net Framework and ASP.NET Core? \u7528\u4e8e\u6784\u5efa Web UI \u548c Web API \u7684\u7edf\u4e00\u6545\u4e8b\u3002  \u4e3a\u53ef\u6d4b\u8bd5\u6027\u800c\u8bbe\u8ba1 \u80fd\u591f\u5728 Windows\u3001macOS \u548c Linux \u4e0a\u5f00\u53d1\u548c\u8fd0\u884c\u3002 \u5f00\u6e90\u548c\u4ee5\u793e\u533a\u4e3a\u4e2d\u5fc3\u3002  \u73b0\u4ee3\u5ba2\u6237\u7aef\u6846\u67b6\u548c\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b\u7684\u96c6\u6210\u3002</p>"},{"location":"course_notes/fit5046/","title":"FIT5046 Mobile and distributed computing systems 2023 s1","text":"<p>Create time: 2023-02-24  Last update: 2023-02-24</p>"},{"location":"course_notes/fit5046/#how-to-use-the-fit-study-note-document","title":"How to use the FIT study Note document","text":"<ol> <li>download the markdown file repository and  navigate to the <code>docs</code> folder</li> <li>view all the markdown files via Obsidian vault that can show the linked section in the note document   </li> <li> <p>You may find some extra material or program template  repository in the Course Brief introduction for the FIT Note markdown Document (some course don't have )</p> </li> <li> <p>you can view the web page which transfer from MD file online but will lose the extra information or wrong    markdown display</p> </li> </ol>"},{"location":"course_notes/fit5046/#fit5046-mobile-and-distributed-computing-systems-course-brief-introduction","title":"FIT5046 - Mobile and distributed computing systems Course Brief introduction","text":""},{"location":"course_notes/fit5046/#outline","title":"outline","text":"<p>  This unit focuses on the most current and key topics in mobile and distributed computing. We will mainly focus on learning key concepts of mobile computing using Android, and then look at ubiquitous and context-aware computing, IoT, wireless sensors, and location-aware computing. While we will discuss these topics in the lectures, you will learn practically in the labs how to create and develop a mobile, distributed Android app. Each semester we develop a real world and useful mobile app for Android platforms.</p> <p>FIT5046 - Mobile and distributed computing systems done for the year 2023. (Semester 1)  </p>"},{"location":"course_notes/fit5046/#software-and-programming-language-for-the-unit","title":"software and Programming Language for the unit","text":"<ul> <li>Android Studio Electric Eel, 2022.1.1 (stable version) SDK 13  API 33  Android Studio Electric Eel | 2022 \u5e74 1 \u6708 1 \u65e5 \u00a0|\u00a0 Android \u5f00\u53d1\u8005 \u00a0|\u00a0 Android Developers </li> <li>Java The original language  </li> <li>Kotlin  We learn the Kotlin code by comparing to Java and only  limited to the lecture topics</li> </ul>"},{"location":"course_notes/fit5046/#final-exam-review","title":"Final exam review","text":""},{"location":"course_notes/fit5046/#week-1","title":"week 1","text":"<p>230521_serverless,microservices,RESTFUL </p>"},{"location":"course_notes/fit5046/#what-is-the-distributed-computing-paradigms","title":"What is the (distributed) computing paradigms","text":"<p>A computing paradigm where a number of autonomous\u72ec\u7acb entities (most likely heterogeneous\u5f02\u8d28) which are geographically distributed can communicate and exchange messages through a computer network to achieve certain related tasks (common goals)\u4e00\u79cd\u8ba1\u7b97\u8303\u5f0f\uff0c\u5176\u4e2d\u8bb8\u591a\u5730\u7406\u5206\u5e03\u7684\u81ea\u6cbb\u5b9e\u4f53\uff08\u5f88\u53ef\u80fd\u662f\u5f02\u6784\u7684\uff09\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u673a\u7f51\u7edc\u8fdb\u884c\u901a\u4fe1\u548c\u4ea4\u6362\u6d88\u606f\u4ee5\u5b9e\u73b0\u67d0\u4e9b\u76f8\u5173\u4efb\u52a1\uff08\u5171\u540c\u76ee\u6807\uff09</p>"},{"location":"course_notes/fit5046/#what-are-the-main-types-of-distributed-computing-paradigms","title":"What are the main types of distributed computing paradigms","text":"<ul> <li>Vertical distribution: placing logically different layers/components on different machines  Each layer on one single machine  \u5782\u76f4\u5206\u5e03\uff1a\u5c06\u903b\u8f91\u4e0a\u4e0d\u540c\u7684\u5c42/\u7ec4\u4ef6\u653e\u7f6e\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a \uf0a4 \u6bcf\u4e00\u5c42\u90fd\u5728\u4e00\u53f0\u673a\u5668\u4e0a</li> <li>Horizontal distribution: a single logical layer/component is distributed across multiple machines to improve scalability E.g. distributing a database on multiple machines (distributed database)\u6c34\u5e73\u5206\u5e03\uff1a\u5355\u4e2a\u903b\u8f91\u5c42/\u7ec4\u4ef6\u5206\u5e03\u5728\u591a\u53f0\u673a\u5668\u4e0a\u4ee5\u63d0\u9ad8\u53ef\u4f38\u7f29\u6027\uf0a4\u4f8b\u5982\u5728\u591a\u53f0\u673a\u5668\u4e0a\u5206\u5e03\u6570\u636e\u5e93\uff08\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff09</li> </ul>"},{"location":"course_notes/fit5046/#mobile-and-distributed-computing","title":"Mobile and Distributed Computing","text":"<ul> <li>it is a class of distributed computing systems  It integrates mobile and wireless devices into distributed systems \u5b83\u662f\u4e00\u7c7b\u5206\u5e03\u5f0f\u8ba1\u7b97\u7cfb\u7edf\uf0a8\u5b83\u5c06\u79fb\u52a8\u548c\u65e0\u7ebf\u8bbe\u5907\u96c6\u6210\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d</li> <li>Mobile computing is associated with mobility of hardware, users, data, applications and network in computer applications \u79fb\u52a8\u8ba1\u7b97\u4e0e\u8ba1\u7b97\u673a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u786c\u4ef6\u3001\u7528\u6237\u3001\u6570\u636e\u3001\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7edc\u7684\u79fb\u52a8\u6027\u76f8\u5173\u8054</li> </ul>"},{"location":"course_notes/fit5046/#what-are-the-main-architecturesmodels-for-developing-mobile-and-distributed-systems","title":"What are the main architectures/models for developing mobile and distributed systems?","text":"<ul> <li>The client/server model Server processes offer services to clients processes Usually there is a data storage at the backend \u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u6a21\u578b \uf0a4 \u670d\u52a1\u5668\u8fdb\u7a0b\u4e3a\u5ba2\u6237\u7aef\u8fdb\u7a0b\u63d0\u4f9b\u670d\u52a1 \uf0a4 \u901a\u5e38\u5728\u540e\u7aef\u6709\u4e00\u4e2a\u6570\u636e\u5b58\u50a8 </li> <li>Peer-to-peer Each process logically equal to each other Data flows between the processes \u70b9\u5bf9\u70b9 \uf0a4 \u6bcf\u4e2a\u8fdb\u7a0b\u5728\u903b\u8f91\u4e0a\u5f7c\u6b64\u76f8\u7b49 \uf0a4 \u6570\u636e\u5728\u8fdb\u7a0b\u4e4b\u95f4\u6d41\u52a8</li> </ul>"},{"location":"course_notes/fit5046/#distributed-computing-and-soa-service-oriented-architecture","title":"Distributed Computing and SOA (Service-Oriented Architecture)","text":"<p>Service-oriented architecture was introduced as a paradigm for distributed systems\u9762\u5411\u670d\u52a1\u7684\u4f53\u7cfb\u7ed3\u6784\u88ab\u5f15\u5165\u4f5c\u4e3a\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u8303\u4f8b + Application functionalities (software components) are provided as services (independent modules) \u5e94\u7528\u7a0b\u5e8f\u529f\u80fd\uff08\u8f6f\u4ef6\u7ec4\u4ef6\uff09\u4f5c\u4e3a\u670d\u52a1\uff08\u72ec\u7acb\u6a21\u5757\uff09\u63d0\u4f9b + Exposed to public (clients) using a standard interface protocol, aka an application programming interface (API) \u4f7f\u7528\u6807\u51c6\u63a5\u53e3\u534f\u8bae\uff08\u53c8\u540d\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3 (API)\uff09\u5411\u516c\u4f17\uff08\u5ba2\u6237\uff09\u516c\u5f00 + Message based interactions through these interfaces \u901a\u8fc7\u8fd9\u4e9b\u63a5\u53e3\u8fdb\u884c\u57fa\u4e8e\u6d88\u606f\u7684\u4ea4\u4e92 + Reuse of services and composition of services \u670d\u52a1\u7684\u91cd\u7528\u548c\u670d\u52a1\u7684\u7ec4\u5408 + Interoperability to support different platforms \u652f\u6301\u4e0d\u540c\u5e73\u53f0\u7684\u4e92\u64cd\u4f5c\u6027</p>"},{"location":"course_notes/fit5046/#what-is-a-web-service","title":"What is a web service?","text":"<p>\u201cA Web service is a piece of software/code designed to support interoperable machine-to-machine interaction over a network\u201d (W3C) \u201cWeb \u670d\u52a1\u662f\u4e00\u6bb5\u8f6f\u4ef6/\u4ee3\u7801\uff0c\u65e8\u5728\u652f\u6301\u7f51\u7edc\u4e0a\u53ef\u4e92\u64cd\u4f5c\u7684\u673a\u5668\u5bf9\u673a\u5668\u4ea4\u4e92\u201d\uff08W3C\uff09</p>"},{"location":"course_notes/fit5046/#why-are-web-services-important-in-developing-distributed-and-mobile-systems","title":"Why are web services important in developing distributed and mobile systems","text":"<p>Web services provide a standard interface to make the functionalities available to the public (clients) Web services provide access to business logic, data and processes or other services Web \u670d\u52a1\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u63a5\u53e3\uff0c\u4f7f\u529f\u80fd\u5bf9\u516c\u4f17\uff08\u5ba2\u6237\uff09\u53ef\u7528 \uf0a8 Web \u670d\u52a1\u63d0\u4f9b\u5bf9\u4e1a\u52a1\u903b\u8f91\u3001\u6570\u636e\u548c\u6d41\u7a0b\u6216\u5176\u4ed6\u670d\u52a1\u7684\u8bbf\u95ee</p>"},{"location":"course_notes/fit5046/#rest-representational-state-transfer","title":"REST (REpresentational State Transfer)","text":"<ul> <li>RESTful web service were emerged based on the REST architecture\u2019s concept RESTful web\u670d\u52a1\u662f\u57fa\u4e8eREST\u67b6\u6784\u7684\u6982\u5ff5\u51fa\u73b0\u7684  </li> <li>REST stands for Representational State Transfer. It is a software architectural style that uses a set of constraints and principles for designing and developing web services. REST is not a standard, but an approach to building distributed systems that use HTTP for communication. REST \u4ee3\u8868 \u5177\u8c61\u72b6\u6001\u8f6c\u79fb\u3002\u5b83\u662f\u4e00\u79cd\u8f6f\u4ef6\u67b6\u6784\u98ce\u683c\uff0c\u4f7f\u7528\u4e00\u7ec4\u7ea6\u675f\u548c\u539f\u5219\u6765\u8bbe\u8ba1\u548c\u5f00\u53d1 Web \u670d\u52a1\u3002REST\u4e0d\u662f\u4e00\u4e2a\u6807\u51c6\uff0c\u800c\u662f\u4e00\u79cd\u6784\u5efa\u4f7f\u7528HTTP\u8fdb\u884c\u901a\u4fe1\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u65b9\u6cd5 </li> <li>The RESTful design approach simplifies the process of designing and developing web applications by focusing on resources and their representations, rather than on the operations that can be performed on the resources. This allows for more flexibility and extensibility in web service development. RESTful \u8bbe\u8ba1\u65b9\u6cd5\u901a\u8fc7\u5173\u6ce8\u8d44\u6e90\u53ca\u5176\u8868\u793a\u5f62\u5f0f\u800c\u4e0d\u662f\u53ef\u4ee5\u5bf9\u8d44\u6e90\u6267\u884c\u7684\u64cd\u4f5c\u6765\u7b80\u5316\u8bbe\u8ba1\u548c\u5f00\u53d1 Web \u5e94\u7528\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u3002\u8fd9\u5141\u8bb8\u5728 Web \u670d\u52a1\u5f00\u53d1\u4e2d\u5b9e\u73b0\u66f4\u5927\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027</li> </ul>"},{"location":"course_notes/fit5046/#what-are-the-architectural-constraints-of-rest","title":"What are the architectural constraints of REST","text":"<ol> <li> <p>Client-server: Separation of concerns between the client and server, allowing for independent development and evolution.     \u5ba2\u6237\u7aef-\u670d\u52a1\u5668\uff1a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u5173\u6ce8\u70b9\u5206\u79bb\uff0c\u5141\u8bb8\u72ec\u7acb\u5f00\u53d1\u548c\u6f14\u53d8\u3002</p> </li> <li> <p>Statelessness: Communication between the client and server is done in a stateless manner, where each request carries the necessary information required to process that request. The server does not store any client context.     \u65e0\u72b6\u6001\uff1a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u4ee5\u65e0\u72b6\u6001\u65b9\u5f0f\u5b8c\u6210\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u643a\u5e26\u5904\u7406\u8be5\u8bf7\u6c42\u6240\u9700\u7684\u5fc5\u8981\u4fe1\u606f\u3002\u670d\u52a1\u5668\u4e0d\u5b58\u50a8\u4efb\u4f55\u5ba2\u6237\u7aef\u4e0a\u4e0b\u6587\u3002</p> </li> <li> <p>Cacheability: Responses from server-side should be cacheable to improve network efficiency, and reducing server-side workload when a cached response can be used.     \u53ef\u7f13\u5b58\u6027\uff1a\u6765\u81ea\u670d\u52a1\u5668\u7aef\u7684\u54cd\u5e94\u5e94\u8be5\u662f\u53ef\u7f13\u5b58\u7684\uff0c\u4ee5\u63d0\u9ad8\u7f51\u7edc\u6548\u7387\uff0c\u5e76\u5728\u53ef\u4ee5\u4f7f\u7528\u7f13\u5b58\u7684\u54cd\u5e94\u65f6\u51cf\u5c11\u670d\u52a1\u5668\u7aef\u5de5\u4f5c\u8d1f\u8f7d\u3002</p> </li> <li> <p>Layered System: System decomposition into a set of connected layers, each of which has a specific role and communicates only with the immediately adjacent layer(s).     \u5206\u5c42\u7cfb\u7edf\uff1a\u7cfb\u7edf\u5206\u89e3\u4e3a\u4e00\u7ec4\u8fde\u63a5\u5c42\uff0c\u6bcf\u4e2a\u5c42\u90fd\u6709\u7279\u5b9a\u7684\u89d2\u8272\uff0c\u5e76\u4e14\u4ec5\u4e0e\u7d27\u90bb\u7684\u5c42\u901a\u4fe1\u3002</p> </li> <li> <p>Code on demand (optional): The ability to transfer executable code from the server to the client as a part of the response payload.     \u6309\u9700\u4ee3\u7801\uff08\u53ef\u9009\uff09\uff1a\u5c06\u53ef\u6267\u884c\u4ee3\u7801\u4f5c\u4e3a\u54cd\u5e94\u6709\u6548\u8d1f\u8f7d\u7684\u4e00\u90e8\u5206\u4ece\u670d\u52a1\u5668\u4f20\u8f93\u5230\u5ba2\u6237\u7aef\u7684\u529f\u80fd\u3002</p> </li> <li> <p>Uniform Interface: Use of a shared and well-defined interface for accessing resources, defined by the following four sub-constraints:     \u7edf\u4e00\u63a5\u53e3\uff1a\u4f7f\u7528\u5171\u4eab\u4e14\u5b9a\u4e49\u660e\u786e\u7684\u63a5\u53e3\u6765\u8bbf\u95ee\u8d44\u6e90\uff0c</p> </li> </ol>"},{"location":"course_notes/fit5046/#what-are-the-interface-constraints-of-rest","title":"What are the interface constraints of REST","text":"<ol> <li> <p>Identification of resources: Each resource in the system must be identified by a unique identifier such as a URI (Uniform Resource Identifier). Resources can be physical objects, digital documents, or abstract concepts, and each resource represents a specific entity or set of entities.     \u8d44\u6e90\u6807\u8bc6\uff1a\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u8d44\u6e90\u5fc5\u987b\u7531\u552f\u4e00\u6807\u8bc6\u7b26\u6807\u8bc6\uff0c\u4f8b\u5982 URI\uff08\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\uff09\u3002\u8d44\u6e90\u53ef\u4ee5\u662f\u7269\u7406\u5bf9\u8c61\u3001\u6570\u5b57\u6587\u6863\u6216\u62bd\u8c61\u6982\u5ff5\uff0c\u6bcf\u4e2a\u8d44\u6e90\u8868\u793a\u4e00\u4e2a\u7279\u5b9a\u7684\u5b9e\u4f53\u6216\u4e00\u7ec4\u5b9e\u4f53\u3002</p> </li> <li> <p>Manipulation of resources through representations: Each resource in the system must have one or more representations that describe the current state of the resource. Representations can be in XML, JSON, HTML, or other formats, and must include all metadata needed to perform the desired operation on the resource.     \u901a\u8fc7\u8868\u793a\u5f62\u5f0f\u64cd\u4f5c\u8d44\u6e90\uff1a\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u8d44\u6e90\u90fd\u5fc5\u987b\u5177\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u63cf\u8ff0\u8d44\u6e90\u5f53\u524d\u72b6\u6001\u7684\u8868\u793a\u5f62\u5f0f\u3002\u8868\u793a\u5f62\u5f0f\u53ef\u4ee5\u662f XML\u3001JSON\u3001HTML \u6216\u5176\u4ed6\u683c\u5f0f\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u5bf9\u8d44\u6e90\u6267\u884c\u6240\u9700\u64cd\u4f5c\u6240\u9700\u7684\u6240\u6709\u5143\u6570\u636e\u3002</p> </li> <li> <p>Self-descriptive messages: Messages that are sent between the client and server must include all information necessary to process the message. This includes information about the resource being accessed, the desired operation to be performed, relevant media types, and authentication and authorization information.     \u81ea\u63cf\u8ff0\u6027\u6d88\u606f\uff1a\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u53d1\u9001\u7684\u6d88\u606f\u5fc5\u987b\u5305\u542b\u5904\u7406\u6d88\u606f\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\u3002\u8fd9\u5305\u62ec\u6709\u5173\u6b63\u5728\u8bbf\u95ee\u7684\u8d44\u6e90\u3001\u8981\u6267\u884c\u7684\u6240\u9700\u64cd\u4f5c\u3001\u76f8\u5173\u5a92\u4f53\u7c7b\u578b\u4ee5\u53ca\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u4fe1\u606f\u7684\u4fe1\u606f\u3002</p> </li> <li> <p>Hypermedia as the Engine of Application State (HATEOAS): Clients must navigate the application state by following hyperlinks embedded in the representations returned by the server. This allows the server to dynamically change the application state by returning different representations and hyperlinks based on the client request.     \u8d85\u5a92\u4f53\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u72b6\u6001\u5f15\u64ce \uff08HATEOAS\uff09\uff1a\u5ba2\u6237\u7aef\u5fc5\u987b\u901a\u8fc7\u9075\u5faa\u670d\u52a1\u5668\u8fd4\u56de\u7684\u8868\u793a\u5f62\u5f0f\u4e2d\u5d4c\u5165\u7684\u8d85\u94fe\u63a5\u6765\u5bfc\u822a\u5e94\u7528\u7a0b\u5e8f\u72b6\u6001\u3002\u8fd9\u5141\u8bb8\u670d\u52a1\u5668\u901a\u8fc7\u57fa\u4e8e\u5ba2\u6237\u7aef\u8bf7\u6c42\u8fd4\u56de\u4e0d\u540c\u7684\u8868\u793a\u5f62\u5f0f\u548c\u8d85\u94fe\u63a5\u6765\u52a8\u6001\u66f4\u6539\u5e94\u7528\u7a0b\u5e8f\u72b6\u6001\u3002</p> </li> </ol>"},{"location":"course_notes/fit5046/#json","title":"JSON","text":"<ul> <li>JSON stands for JavaScript Object Notation  </li> <li>JSON is lightweight text-data interchange format  </li> <li>JSON is \"self-describing\" and easy to understand</li> </ul>"},{"location":"course_notes/fit5046/#week-2-android","title":"Week 2 Android","text":""},{"location":"course_notes/fit5046/#mobile-applications-types","title":"mobile applications types","text":"<ol> <li> <p>Native apps: These are applications developed for a specific platform, such as iOS or Android, and are installed directly on a device. Native apps are built using the programming language and development tools of the platform, and they can leverage the features and capabilities of the device, such as the camera, GPS, and sensors.     \u672c\u673a\u5e94\u7528\uff1a\u8fd9\u4e9b\u662f\u4e3a\u7279\u5b9a\u5e73\u53f0\uff08\u5982 iOS \u6216 Android\uff09\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u76f4\u63a5\u5b89\u88c5\u5728\u8bbe\u5907\u4e0a\u3002\u672c\u673a\u5e94\u7528\u7a0b\u5e8f\u662f\u4f7f\u7528\u5e73\u53f0\u7684\u7f16\u7a0b\u8bed\u8a00\u548c\u5f00\u53d1\u5de5\u5177\u6784\u5efa\u7684\uff0c\u5b83\u4eec\u53ef\u4ee5\u5229\u7528\u8bbe\u5907\u7684\u7279\u6027\u548c\u529f\u80fd\uff0c\u4f8b\u5982\u76f8\u673a\u3001GPS \u548c\u4f20\u611f\u5668\u3002</p> </li> <li> <p>Web apps: These are applications that are accessed through a web browser over the internet. Web apps are typically built using HTML, CSS, and JavaScript, and they can be accessed from any device with an internet connection. Web apps can be responsive, meaning they can adapt to various screen sizes, and they can be updated instantly without the need for users to download a new version.     Web \u5e94\u7528\u7a0b\u5e8f\uff1a\u8fd9\u4e9b\u662f\u901a\u8fc7\u4e92\u8054\u7f51\u4e0a\u7684 Web \u6d4f\u89c8\u5668\u8bbf\u95ee\u7684\u5e94\u7528\u7a0b\u5e8f\u3002Web\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u4f7f\u7528HTML\uff0cCSS\u548cJavaScript\u6784\u5efa\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ece\u4efb\u4f55\u5177\u6709\u4e92\u8054\u7f51\u8fde\u63a5\u7684\u8bbe\u5907\u8bbf\u95ee\u5b83\u4eec\u3002Web \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u54cd\u5e94\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u9002\u5e94\u5404\u79cd\u5c4f\u5e55\u5c3a\u5bf8\uff0c\u5e76\u4e14\u53ef\u4ee5\u7acb\u5373\u66f4\u65b0\uff0c\u800c\u65e0\u9700\u7528\u6237\u4e0b\u8f7d\u65b0\u7248\u672c\u3002</p> </li> <li> <p>Hybrid apps: These are applications that are developed using web technologies (like HTML, CSS, and JavaScript) but are packaged and distributed as native apps. Hybrid apps are built using platform-specific tools, like Apache Cordova, and they can access device features like native apps.     \u6df7\u5408\u5e94\u7528\uff1a\u8fd9\u4e9b\u662f\u4f7f\u7528 Web \u6280\u672f\uff08\u5982 HTML\u3001CSS \u548c JavaScript\uff09\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u4f5c\u4e3a\u672c\u673a\u5e94\u7528\u6253\u5305\u548c\u5206\u53d1\u3002\u6df7\u5408\u5e94\u7528\u662f\u4f7f\u7528\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u5de5\u5177\uff08\u5982 Apache Cordova\uff09\u6784\u5efa\u7684\uff0c\u5b83\u4eec\u53ef\u4ee5\u8bbf\u95ee\u672c\u673a\u5e94\u7528\u7b49\u8bbe\u5907\u529f\u80fd\u3002</p> </li> <li> <p>Progressive Web Apps (PWAs): These are web applications that use modern web technologies to provide a native app-like experience to users. PWAs can be installed directly on a device's home screen and offer offline access, push notifications, and other features typically associated with native apps. PWAs are built using a combination of web technologies like HTML, CSS, and JavaScript and service workers, which allow for offline caching and background processing capabilities.     \u6e10\u8fdb\u5f0f Web \u5e94\u7528 \uff08PWA\uff09\uff1a\u8fd9\u4e9b\u662f\u4f7f\u7528\u73b0\u4ee3 Web \u6280\u672f\u4e3a\u7528\u6237\u63d0\u4f9b\u7c7b\u4f3c\u672c\u673a\u5e94\u7528\u7684\u4f53\u9a8c\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u3002PWA \u53ef\u4ee5\u76f4\u63a5\u5b89\u88c5\u5728\u8bbe\u5907\u7684\u4e3b\u5c4f\u5e55\u4e0a\uff0c\u5e76\u63d0\u4f9b\u8131\u673a\u8bbf\u95ee\u3001\u63a8\u9001\u901a\u77e5\u548c\u901a\u5e38\u4e0e\u672c\u673a\u5e94\u7528\u5173\u8054\u7684\u5176\u4ed6\u529f\u80fd\u3002 PWA \u662f\u4f7f\u7528 HTML\u3001CSS \u548c JavaScript \u7b49 Web \u6280\u672f\u4ee5\u53ca\u670d\u52a1\u5de5\u4f5c\u7ebf\u7a0b\u7684\u7ec4\u5408\u6784\u5efa\u7684\uff0c\u8fd9\u4e9b\u6280\u672f\u5141\u8bb8\u8131\u673a\u7f13\u5b58\u548c\u540e\u53f0\u5904\u7406\u529f\u80fd\u3002 </p> </li> </ol>"},{"location":"course_notes/fit5046/#development-environment","title":"Development Environment","text":"<ul> <li>The Android emulator simulates Android devices (phones, tablets, Android  Wear) Android \u6a21\u62df\u5668\u6a21\u62df Android \u8bbe\u5907</li> <li>Gradle-based build system to configure and manage building projects Flexible and easy to include libraries (local and remote) \u57fa\u4e8e Gradle \u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u7528\u4e8e\u914d\u7f6e\u548c\u7ba1\u7406\u6784\u5efa\u9879\u76ee \u7075\u6d3b\u4e14\u6613\u4e8e\u5305\u542b\u5e93\uff08\u672c\u5730\u548c\u8fdc\u7a0b\uff09</li> </ul>"},{"location":"course_notes/fit5046/#android-jetpack","title":"Android Jetpack","text":"<ul> <li>Jetpack includes a large group of libraries for developing high quality apps androidx. contains the Android Jetpack libraries  Jetpack \u5305\u542b\u5927\u91cf\u7528\u4e8e\u5f00\u53d1\u9ad8\u8d28\u91cf\u5e94\u7528\u7a0b\u5e8f\u7684\u5e93 \uf0a8 androidx. \u5305\u542b Android Jetpack \u5e93</li> <li>All Jetpack components are available in your Android application through including the Google Maven repository \u901a\u8fc7\u5305\u542b Google Maven \u5b58\u50a8\u5e93\uff0c\u6240\u6709 Jetpack \u7ec4\u4ef6\u90fd\u53ef\u4ee5\u5728\u60a8\u7684 Android \u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528  </li> </ul>"},{"location":"course_notes/fit5046/#architecture-of-android-application","title":"architecture of android application","text":""},{"location":"course_notes/fit5046/#layouts-and-views","title":"Layouts and Views","text":"<p>A layout resource (e.g. activity_main.xml) defines the whole architecture of the UI for an activity or a fragment A layout defines the structure for a user interface of the app, e.g. LinearLayout, ConstraintLayout, or RelativeLayout \u5e03\u5c40\u8d44\u6e90\uff08\u4f8b\u5982 activity_main.xml\uff09\u4e3a\u6d3b\u52a8\u6216\u7247\u6bb5\u5b9a\u4e49 UI \u7684\u6574\u4e2a\u67b6\u6784 \uf0a8 \u5e03\u5c40\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u754c\u9762\u7684\u7ed3\u6784\uff0c\u4f8b\u5982LinearLayout\u3001ConstraintLayout \u6216 RelativeLayout</p>"},{"location":"course_notes/fit5046/#important-files-in-android-and-their-purpose","title":"important files in Android and their purpose","text":""},{"location":"course_notes/fit5046/#activity-lifecycle","title":"Activity Lifecycle","text":"<p> The activity lifecycle \u00a0|\u00a0 Android Developers 1. <code>onCreate()</code> Initialize the activity components e.g. creating  views, or populating lists with data 2. <code>OnStart()</code> the activity becomes visible 3. <code>onResume()</code> The activity is ready to accept the user input  At the top of the activity stack (in the foreground) 4. <code>onPause()</code> The activity loses focus, and will enter the  stopped or resumed state 5. <code>onStop()</code> The activity is no longer visible 6. <code>onDestroy()</code> The activity is about to be terminated</p>"},{"location":"course_notes/fit5046/#spinner","title":"spinner","text":""},{"location":"course_notes/fit5046/#week-3","title":"week 3","text":""},{"location":"course_notes/fit5046/#how-events-can-be-handled-in-android","title":"how events can be handled in Android","text":"<p>Event  Events are created from interactions with view objects like clicking a button Event Listeners can capture user interactions with UI User\uff08\u4eba\uff09\u548cDevice\uff08\u624b\u673a\uff09\u7684\u6240\u6709\u4ea4\u4e92\u52a8\u4f5c\u90fd\u53ebEvent \u70b9\u51fb\uff0c\u6ed1\u52a8\u5c4f\u5e55\uff0c\u653e\u5927/\u7f29\u5c0f\uff0c\u6309\u97f3\u91cf\u952e\u7b49  </p> <p>event listener  + \u5728\u4ee3\u7801\u4e0a\u6293\u53d6\u70b9\u51fb\u4e8b\u4ef6 -&gt; \u7528\u4ee3\u7801\u7f16\u8f91\u70b9\u51fb\u540e\u8fb9\u4ee3\u8868\u7684\u903b\u8f91 + \u70b9\u51fbbutton \u4e0a\u4f20/\u8df3\u8f6c\uff0c\u70b9\u51fb\u7535\u6e90\u6309\u94ae\u5173\u673a  + \u4f7f\u7528\u56de\u6389\u65b9\u6cd5callBack\uff08\uff09\u6765\u5b9e\u73b0\u903b\u8f91\uff08\u56de\u6389\uff1a\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u8fd4\u56de\uff0c\u8c03\u7528\u7684 method event listener is an interface in the View class  contains a single callback method Callback methods will be called when the View to which the listener  has been registered is triggered by user interaction with the UI item  <code>View.OnClickListene</code> is an event listener and its callback method  is onClick()  </p>"},{"location":"course_notes/fit5046/#view-binding","title":"View binding","text":"<pre><code>private ActivityDashboardBinding binding;\nbinding = ActivityMainBinding.inflate(getLayoutInflater());\nView view = binding.getRoot();  \nsetContentView(view);  \nbinding.editMessage.setText(\"\");\n</code></pre> <p>better than <code>Button dashboardButton = view.findViewById(R.id.dashboardButton);</code>  1.  creates direct references to views  2. The fields in each binding class have types matching the views, so it avoids the class cast exception</p>"},{"location":"course_notes/fit5046/#multiple-activities","title":"Multiple Activities","text":"<ul> <li>Android applications can include more than one activity  </li> <li>When multiple activities are used, the first activity (MainActivity) starts the second activity using an Intent  </li> <li>An Intent is mainly used for launching activities, services or broadcasts  </li> <li><code>Intent intent = new Intent(MainActivity.this, SecondActivity.class); startActivity(intent);</code></li> </ul>"},{"location":"course_notes/fit5046/#using-an-intent-to-passget-data","title":"Using an Intent to Pass&amp;get data","text":"<ul> <li>You can add extra data using the putExtra() method that requires two parameters (the key name and its value)  </li> <li><code>intent.putExtra(String name, String value)</code> </li> <li>get data from the intent in the second activity, first you need to use getIntent() <code>Intent intent=getIntent();</code> </li> <li>Then from the intent, you can retrieve the data that it is carrying by using a right method that matches the type of data <code>String msg = intent.getStringExtra(\u201cmessage\u201d);</code> </li> </ul>"},{"location":"course_notes/fit5046/#recyclerview","title":"RecyclerView","text":"<p> 1. Add RecyclerView AndroidX library to the build.gradle file 2. In the activity_main.xml, add a RecyclerView widget 3. Create a custom XML layout file with the views to be displayed in each row of the RecyclerView using androidx.cardview.widget.CardView 4. Define a model Java class to deal with the data 5. Create an adapter class that subclasses RecyclerView.Adapter 6. Implement a nested, static ViewHolder class inside the Adapter class  </p>"},{"location":"course_notes/fit5046/#week4","title":"Week4","text":""},{"location":"course_notes/fit5046/#fragment","title":"Fragment","text":""},{"location":"course_notes/fit5046/#livedata-and-viewmodel","title":"LiveData and ViewModel","text":"<ul> <li>an instance of LiveData (that holds the data) is usually created within the ViewModel class and can be accessed via a getter method LiveData \u7684\u5b9e\u4f8b\uff08\u4fdd\u5b58\u6570\u636e\uff09\u901a\u5e38\u5728 ViewModel \u7c7b\u4e2d\u521b\u5efa\uff0c\u53ef\u4ee5\u901a\u8fc7 getter \u65b9\u6cd5\u8bbf\u95ee  </li> <li>LiveData allows observers in app components such as an activity or a fragment to observe updates, and get notified of change LiveData \u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u7ec4\u4ef6\uff08\u4f8b\u5982\u6d3b\u52a8\u6216\u7247\u6bb5\uff09\u4e2d\u7684\u89c2\u5bdf\u8005\u89c2\u5bdf\u66f4\u65b0\uff0c\u5e76\u83b7\u5f97\u66f4\u6539\u901a\u77e5  </li> <li> </li> <li>ViewModel Persistent UI state Access to business logic</li> </ul>"},{"location":"course_notes/fit5046/#week-5","title":"Week 5","text":""},{"location":"course_notes/fit5046/#three-types-of-navigation-suggested-in-material-design","title":"Three types of navigation suggested in Material Design","text":"<ol> <li>Lateral navigation  </li> <li>Forward navigation  </li> <li>Reverse navigation</li> </ol>"},{"location":"course_notes/fit5046/#navigation-drawer","title":"Navigation Drawer","text":"<ol> <li>Permanently visible drawer</li> <li>Dismissible drawer</li> <li>Bottom drawer </li> </ol>"},{"location":"course_notes/fit5046/#what-is-navigation-drawer-in-android-app","title":"What is Navigation drawer in Android APP?","text":"<p>The navigation drawer is a Ul panel that allows navigation between top level destinations through displaying a navigation menu </p>"},{"location":"course_notes/fit5046/#navigation-component","title":"Navigation Component","text":"<ol> <li>Navigation graph This XML file contains all the information about  the destinations and actions  </li> <li>NavHost that provides an empty container for navigation to occur  </li> <li>NavigationUl class is used with the Navigation component  </li> <li>NavController  is responsible for managing app navigation and can be retrieved from the instance of NavHost by calling getNavController()</li> </ol>"},{"location":"course_notes/fit5046/#week-6","title":"Week 6","text":""},{"location":"course_notes/fit5046/#android-main-ui-thread-and-2-rules","title":"Android Main UI Thread and 2 rules","text":"<p>When an Android application is launched, the system creates a 'main' thread, aka the 'UI' thread The main/Ul thread is the single thread of execution for your application Two rules to Android's single thread model: Rule 1: Do not block the main/Ul thread Rule 2: Do not access the Android IJI toolkit from outside the Ul thread (from a worker thread)  </p>"},{"location":"course_notes/fit5046/#android-room-persistence-library-and-its-components","title":"Android Room persistence library and its components","text":"<ul> <li>SQLite provides a relational database management system for permanent storage of the structured data  </li> <li>To reduce the effort to create and manage the SQLite database, Room was introduced Room provides an abstraction layer over SQLite that enables more robust database access  </li> <li>Room Persistent Library consists of Database(SQLite database), Entities: represent tables within the database, DAO (Data Access Object) classes query methods that offer abstract access to the database  </li> <li> </li> </ul>"},{"location":"course_notes/fit5046/#entity-class","title":"Entity Class","text":""},{"location":"course_notes/fit5046/#dao-data-access-object","title":"DAO (Data Access Object)","text":"<p>A DAO includes methods that offer abstract access to the Database By accessing a database using a DAO class instead of direct queries, we can separate different components of the database DAO \u5305\u62ec\u63d0\u4f9b\u5bf9\u6570\u636e\u5e93\u7684\u62bd\u8c61\u8bbf\u95ee\u7684\u65b9\u6cd5 \uf0a8 \u901a\u8fc7\u4f7f\u7528 DAO \u7c7b\u800c\u4e0d\u662f\u76f4\u63a5\u67e5\u8be2\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u79bb\u6570\u636e\u5e93\u7684\u4e0d\u540c\u7ec4\u4ef6  </p> <p> Examples of DAO methods: @Insert @Update @Delete @Query  </p>"},{"location":"course_notes/fit5046/#room-livedata-and-viewmodel","title":"Room, LiveData and ViewModel","text":""},{"location":"course_notes/fit5046/#week-7","title":"Week 7","text":""},{"location":"course_notes/fit5046/#retrofit","title":"Retrofit","text":"<ol> <li>prepare the http requests, we can define the base URL and add other parameters to the URL  </li> <li>interact with public APIs by sending http @GET, @POST, @PUT, @DELETE, as well as PATCH, OPTIONS and HEAD requests to remote servers and receive http response.  </li> <li>get json response</li> </ol>"},{"location":"course_notes/fit5046/#retrofit-components","title":"Retrofit Components","text":"<ul> <li>Retrofit Model Classes (created to provide a mapping to the structure of the JSON\u2019s response body) </li> <li>Retrofit Interface (turns the http API into a Java interface) </li> <li>Retrofit Client (creating the Retrofit instance)</li> </ul>"},{"location":"course_notes/fit5046/#week-8","title":"week 8","text":""},{"location":"course_notes/fit5046/#ubiquitous-computing-and-internet-of-things-iot-and-how-they-are-related","title":"Ubiquitous computing and Internet of Things (IoT) and how  they are related","text":""},{"location":"course_notes/fit5046/#what-is-context-context-awareness","title":"What is Context &amp; Context-Awareness","text":"<p>Context is any useful information related to an entity such as a user, a device, a car, a building, or its surrounding environment. Contextual information can be sensed, derived, reasoned, computed, calculated or explicitly entered by users\u4e0a\u4e0b\u6587\u662f\u4e0e\u5b9e\u4f53\uff08\u4f8b\u5982\u7528\u6237\u3001\u8bbe\u5907\u3001\u6c7d\u8f66\u3001\u5efa\u7b51\u7269\u6216\u5176\u5468\u56f4\u73af\u5883\uff09\u76f8\u5173\u7684\u4efb\u4f55\u6709\u7528\u4fe1\u606f\u3002 \uf0a8 \u4e0a\u4e0b\u6587\u4fe1\u606f\u53ef\u4ee5\u88ab\u7528\u6237\u611f\u77e5\u3001\u5bfc\u51fa\u3001\u63a8\u7406\u3001\u8ba1\u7b97\u3001\u8ba1\u7b97\u6216\u660e\u786e\u8f93\u5165 A context-aware application is aware of the current context such as the location and the physical environment A context-aware application uses contextual information to  adapt its behaviour or operations accordingly \u4e0a\u4e0b\u6587\u611f\u77e5\u5e94\u7528\u7a0b\u5e8f\u77e5\u9053\u5f53\u524d\u4e0a\u4e0b\u6587\uff0c\u4f8b\u5982\u4f4d\u7f6e\u548c\u7269\u7406\u73af\u5883 \uf0a8 \u4e0a\u4e0b\u6587\u611f\u77e5\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e0a\u4e0b\u6587\u4fe1\u606f\u6765\u76f8\u5e94\u5730\u8c03\u6574\u5176\u884c\u4e3a\u6216\u64cd\u4f5c  </p>"},{"location":"course_notes/fit5046/#mock-exam","title":"mock exam","text":""},{"location":"course_notes/fit5046/#context-aware","title":"context-aware","text":"<p>Question A2. Consider a context-aware data projector in a smart lecture room in a university that is operated (turned on and off) automatically based on occurring situations. 1. Name three types of context that must be collected for this system. 2. Based on aggregation of the above-mentioned three contextual information, name three 'situations' that can be inferred. 3. Explain the difference between a 'data', 'context' and 'situation' using an example. </p> <p>a) Context i. Input source (input data streams) ii. Obstacles before projection (people standing before projection) iii. Timer to record no last operation time  </p> <p>b) Situation 1. Operating : Detect input source (a), no obstacles before projections(b), less than  certain period which timer recording no operation time (c) 2. ii. Light sleep: Detect input source (a), there is some obstacles before projections(b),  less than certain period which timer recording no operation time (c)  3. iii. Deep sleep: Detect no input source (a) or/and longer than certain period which  timer recording no operation time  </p> <p>c) 1. Data : Detail of input source, which part is obstacle, time in timer; data is the detail of context which can be calculated  2. ii. Context: Lots of input data consist of input source, is a set of data 3. iii. Situation: high-level description information / context. Two of more context  consist of situation,e.g No input source and longer than certain period no actions  means deep sleep situation</p>"},{"location":"course_notes/fit5046/#network-iot","title":"network iot","text":"<p>Question A3. Question A9. Directed diffusion is a routing protocol in WSN that is attribute-value based, and consists of three steps: interest propagation, gradient establishment, and path reinforcement.  </p> <p>a) Describe each step mentioned above for a military vehicle detection monitoring application using a network of wireless motion sensors deployed on a road in a war zone area. 1. Interest propagation : An interest will be translated into a query using attribute   value pairs; any node receiving the interest propagates the interest further to  neighbors  2.  Gradient Establishment: node establish a gradient(i.e. reply link) towards the  neighbour from which the interest was received 3. iii. Path reinforcement: There might be several paths from the source to the sink, the sensor network reinforces one of the gradient paths (e.g. based on the shortest path)   b) Provide two schemes that can be used for path reinforcement.    1. Energy-efficient routing: Calculate the sum of energy cost for each path, select the minimum energy route  2. . Multipath Routing: Calculate the sum of the number of sensors for each path, select the minimum hop route</p>"},{"location":"course_notes/fit5046/#fragmentactivity-pass-data","title":"fragment/activity pass data","text":"<p>Q1. \u8de8 activity \u548c fragment \u95f4\u4f20\u9012\u6570\u636e\u7684\u65b9\u5f0f\u6709\u51e0\u79cd\uff1f Activity: Shared preference, intent , intent + bundle  Fragment: Shared preference, \u4f20\u9012\u5230 fragment \u7684 structure \u91cc  </p> <p>\u5982\u679c\u9700\u8981\u4f20\u9012\u4e00\u4e2a instance of object \u9700\u8981\u600e\u4e48\u505a\uff0c\u4e3a\u4ec0\u4e48\uff1f 1. \u9700\u8981\u88ab\u4f20\u9012\u7684\u4f7f object \u6240\u5728\u7684 class extends parcel-able 2. \u5c06 serialize/parcel-able object \u653e\u5165 bundle \u4e2d 3. \u628a bundle \u653e\u5165 intent \u4e2d 4. \u628a intent \u65b9\u5f0f startActivity\uff08\uff09 5. \u5728 avtivityB/\u76ee\u6807 activity \u901a\u8fc7 getIntent \u62ff\u51fa bundle 6. \u5728 bundle \u4e2d\u62ff\u51fa object \uff08\u8fd9\u91cc\u4f1a de-serialize\uff09</p>"},{"location":"course_notes/fit5046/#q2-crud-ui-thread","title":"Q2. \u7f51\u7edc\u8bf7\u6c42(\u6570\u636e\u5e93 CRUD\uff0c\u5927\u6570\u636e\u8fd0\u7b97 - \u8017\u65f6\u64cd\u4f5c)\u53ef\u4ee5\u8fd0\u884c\u5728 UI thread \u4e2d\u4e48\uff1f\u8bf4\u660e\u539f \u56e0 / \u6709\u4ec0\u4e48\u65b9\u5f0f\u89e3\u51b3","text":"<p>\u4e0d\u53ef\u4ee5\u3002Blocking \u963b\u585e\uff0cstack \u6808\uff0cinteraction \u4ea4\u4e92   Http request \u662f\u8017\u65f6\u64cd\u4f5c\uff0c\u5728 UI thread \u4e2d\u4f7f\u7528\u8017\u65f6\u64cd\u4f5c\u8fdd\u80cc\u4e86 android UI thread \u7684 rule 1. \u4f7f\u7528 post\uff1a \u5c06 http request \u7684\u64cd\u4f5c\u653e\u5728 retrofit \u4e2d\u4f7f\u7528\uff08\u81ea\u52a8\u65b0\u5efa thread\uff09 \u4f7f\u7528 coroutine\uff0c invoke time consuming task in the suspend function and call it in the  ViewModel scope or coroutine.IO scope  </p>"},{"location":"course_notes/fit5046/#q3-replace-ridcontainer","title":"Q3. \u89e3\u91ca\u4e0b\u56fe\u4e2d replace \u7684\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u4ee3\u8868\u4ec0\u4e48\uff1fR.id.container \u4f7f\u7528\u65f6\u6709\u4ec0\u4e48\u9700\u8981\u6ce8\u610f\u7684\uff1f","text":"<p> \u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a container\uff0c\u60f3\u66ff\u6362\u7684 viewgroup layout\uff0c\u53ea\u80fd\u662f viewgroup\uff0c\u4e00\u822c\u6211\u4eec\u4f7f\u7528\u7a7a\u767d\u7684 framelayout\uff08\u6216 navHostFragment\uff09  \u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a\u662f\u66ff\u6362\u8fdb\u6765\u7684\u65b0\u7684 fragment \uff08layout\uff09\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a instance of fragment  </p>"},{"location":"course_notes/fit5046/#q4-startactivityforresult-setresultonactivityresult","title":"Q4. \u7b80\u8ff0 startActivityForResult(), setResult(),onActivityResult()\u7684\u4f7f\u7528\u903b\u8f91","text":"<p>\u6709\u4e24\u4e2a activity A and activity B 1. startActivityForResult(): \u5728 A \u4e2d call \u8fd9\u4e2a method to start activity B  2. \u5728 B \u4e2d\u8c03\u7528 setResult()\u6765\u653e\u5165 B finish() \u7684\u7ed3\u679c  3. A \u4e2d call back method onActivityResult()\uff1a A \u4e2d\u6b64\u65b9\u6cd5\u4f1a\u663e\u793a B \u653e\u5165 setResult\uff08\uff09\u7684  \u4fe1\u606f  </p>"},{"location":"course_notes/fit5046/#q5-android","title":"Q5. \u7b80\u8ff0 Android \u4e0b\u51e0\u79cd\u5e03\u5c40\uff0c\u5e76\u4ecb\u7ecd\u4f18\u7f3a\u70b9","text":"<ul> <li>Linearlayout\uff1a\u7ebf\u6027\u5e03\u5c40\uff0c\u53ef\u4ee5\u6a2a\u5411\uff08horizontal\uff09\u6216\u8005\u7eb5\u5411\uff08vertical\uff09\u4f9d\u6b21\u663e\u793a view\uff0cview \u4e0d\u4f1a\u76f8\u4e92\u91cd\u8dcc\uff0c\u642d\u914d scroll layout \u53ef\u4ee5\u5b9e\u73b0\u5c4f\u5e55\u6eda\u52a8\u6548\u679c  </li> <li>Framelayout\uff1a\u5e27\u5e03\u5c40\uff0c\u53ef\u4ee5\u6709\u5c42\u6b21\u7684\u4e0a\u4e0b\u6392\u5217 view\uff0c\u5b9e\u73b0\u8986\u76d6\u6548\u679c\uff0c\u900f\u660e\uff0c\u534a\u900f\u660e\u6548\u679c    </li> <li>ConstraintLayout\uff1a\u7ea6\u675f\u6027\u5e03\u5c40\uff0c\u53ef\u4ee5\u624b\u52a8\u53ef\u89c1\u7684\u5728 blue screen \u4e0a\u62d6\u52a8 view\uff0c\u65b9\u4fbf developer \u8c03\u6574\u5e03\u5c40\uff1b\u7f3a\u70b9\u662f\u8017\u65f6\uff0c\u91cd\u590d\u6027\u52b3\u52a8\u65f6\u4e0d\u53ef\u8282\u7701\u65f6\u95f4</li> </ul>"},{"location":"course_notes/fit5046/#q6-activityfragment","title":"Q6. \u7b80\u8ff0 activity/fragment \u4e2d\u53ef\u4ee5\u88ab\u7528\u6237\u6240\u89c1\u7684\u751f\u547d\u5468\u671f\u548c\u53ef\u4ee5\u548c\u7528\u6237\u4ea4\u4e92\u7684\u751f\u547d\u5468\u671f","text":"<ul> <li>activity \u6240\u89c1 onstart -&gt; onresume-&gt;onpause-&gt;onstop   </li> <li>Interaction\uff1a onresume -&gt; onpause  </li> </ul>"},{"location":"course_notes/fit5046/#q7-arrayadapterrecycler-view-simpleadapterspinner","title":"Q7*. ArrayAdapter(Recycler view) \u4e8e simpleAdapter(spinner)\u7684\u533a\u522b","text":"<ul> <li>ArrayAdapter \u663e\u793a\u6587\u672c\uff0c\u9002\u7528\u4e8e hashmap  </li> <li>SimpleAdapter \u4f1a\u81ea\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\u548c view</li> </ul>"},{"location":"course_notes/fit5046/#q8-android","title":"Q8. \u7b80\u8ff0\u591a\u7ebf\u7a0b\u5728 Android \u8bbe\u5907\u4e0a\u7684\u5fc5\u8981\u6027","text":"<ol> <li>UI thread offer view interaction with users, but cannot process time-consuming task  </li> <li>Need other thread to process time-consuming task e.g. Retrofit, access(CRUD) room</li> </ol>"},{"location":"course_notes/fit5046/#q9-activity-roomretrofitnavigation-drawerlist-view-recycling-view-time-pikerdate-picker","title":"Q9. \u7b80\u8ff0\u521b\u5efa activity \u7684\u8fc7\u7a0b\uff08\u521b\u5efa room\uff0cretrofit\uff0cnavigation drawer\uff0clist view\uff0c recycling view\uff0c time piker\uff0cdate picker\uff09","text":"<ol> <li>\u521b\u5efa activity class \u5e76 extends AppCompatActivity, override onCreate() method  </li> <li>\u521b\u5efa xml \u683c\u5f0f\u7684 layout \u6587\u4ef6\uff0c\u5e76\u5728 onCreate \u7684 setContentView \u4e2d\u7ed1\u5b9a(set binding)  </li> <li>\u5728 manifest \u4e2d\u6ce8\u518c activity(*) (Register / Exploration / intent-filter )</li> </ol>"},{"location":"course_notes/fit5046/#q10-roomretrofit-livedata-livedatalivedata-mvvn","title":"Q10. \u7b80\u8ff0 Room/Retrofit \u4e3a\u4ec0\u4e48\u8981\u642d\u914d livedata \u4f7f\u7528/\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 livedata/livedata \u4f7f\u7528\u573a\u666f/\u4e3a\u4ec0\u4e48\u4f7f\u7528 MVVN","text":"<ol> <li>\u8bbf\u95ee Room \u65f6\u4e00\u4e2a\u8017\u65f6\u64cd\u4f5c\uff0c\u5176\u7ed3\u679c\u4e0d\u80fd\u76f4\u63a5\u8fd0\u884c\u5728 ui thread \u4e0a  </li> <li>Livedate \u901a\u8fc7 viewmodel \u53ef\u4ee5\u5728 fragment or activity observe livedate \u7684 change\uff08\u901a\u8fc7 onChange  \uff08\uff09call back method define logic after response \uff09\uff0c\u4ee5\u4fbf\u4e8e UI \u5c42\uff08fragment/activity\uff09\u5b9e\u65f6\u7684\u62ff\u5230\u641c\u7d22 room \u7684\u7ed3\u679c\u5e76\u4f53\u73b0\u5728 UI view \u4e0a</li> </ol>"},{"location":"course_notes/fit5046/#q11-android-weatherweb-api","title":"Q11. \u7b80\u8ff0 android \u7aef\u8bbf\u95ee weather/web api \u8fd4\u56de\u6570\u636e\u7684\u8fc7\u7a0b","text":"<ol> <li>Create retrofit client object  </li> <li>android \u4f7f\u7528 retrofit \u8bbf\u95ee url path\uff0c\u5e76\u4f20\u9012\u5bf9\u5e94\u53c2\u6570 param  </li> <li>API \u6839\u636e\u8def\u5f84\u548c\u53c2\u6570\uff0c\u8fd4\u56de JSON object  </li> <li>Decrypt/interpret the json data into java object</li> </ol>"},{"location":"course_notes/fit5046/#q16-ui-design-skeuomorphic-design-flat-design-material-design","title":"Q16. \u5728 UI design \u7684\u65f6\u5019\uff0c\u7b80\u8ff0 Skeuomorphic design\uff0c flat design \u548c material design \u7684\u533a\u522b","text":"<ul> <li>\u62df\u4eba\u5316\u5bf9\u65b0\u7528\u6237\u5f88\u53cb\u597d\uff0c\u4f46\u662f\u8bbe\u8ba1\u8d39\u65f6\u8d39\u529b\uff0c\u73b0\u5728\u57fa\u672c\u4e0d\u7528  </li> <li>\u5e73\u9762\u8bbe\u8ba1\uff0c\u7b80\u5355\uff0c\u5feb\u6377\uff0c\u6709\u4ee3\u8868\u6027\uff0c\u4f46\u662f\u5185\u5bb9\u5355\u8584\uff0c\u4e0d\u597d\u533a\u5206\u70b9\u51fb\u7684\u52a8\u6001\u6548\u679c\uff0c\u591a\u7528\u4e8e  web  </li> <li>Material design\uff0c\u591a\u7aef\u7edf\u4e00\u4f7f\u7528\u76f8\u540c\u7684\u7d20\u6750\u5e93\uff0c\u51cf\u5c11\u7528\u6237\u5728\u8de8\u7aef\u6d4f\u89c8\u65f6\u5019\u7684\u5b66\u4e60\u65f6\u95f4\uff0c  \u8bbe\u8ba1\u66f4\u6709\u7279\u70b9</li> </ul>"},{"location":"course_notes/fit5046/#q17-content-aware-situation-context-data","title":"Q17. \u7b80\u8ff0\u5b9e\u73b0 content-aware \u7684\u81ea\u52a8\u6276\u68af\u7684\u4e09\u4e2a situation\uff0c\u5e76\u8bf4\u660e\u5176\u4e2d\u7684 context \u548c data \u90fd \u662f\u4ec0\u4e48","text":"<ul> <li>Normal speed operation\uff1a\u6b63\u5e38\u8fd0\u884c  </li> <li>Low speed operation\uff1a\u767d\u5929\u6ca1\u4eba\u7684\u65f6\u5019\uff0c\u51cf\u6162\u6276\u68af\u7684\u901f\u5ea6  </li> <li>No operation\uff1a\u591c\u95f4\u4e0d\u8fd0\u884c</li> <li>Context\uff1aif people stand / timer to record last user / Define weak time  </li> <li>Data : people weight/ last user using time / 8am, detail weak time  </li> <li>How to use context to consist situation?</li> </ul>"},{"location":"course_notes/fit5046/#q18","title":"Q18. \u8981\u5b9e\u73b0\u8f66\u8f86\u8fdd\u7ae0\u7535\u5b50\u6293\u62cd\u7cfb\u7edf\u5168\u56fd\u8054\u7f51\uff0c\u7b80\u8ff0\u5b9e\u73b0\u65b9\u6848","text":"<ol> <li>Sensor/camera/monitor/CCTV in required road  </li> <li>Adopt edge computing to recognize the \u8fdd\u6cd5\u884c\u4e3a\u548c\u8fdd\u6cd5\u8f66\u724c\uff08\u4f7f\u7528\u8fb9\u7f18\u8ba1\u7b97\u662f\u65b9\u4fbf\u8fd1\u8ddd\u79bb\u8bc6\u522b\u51fa\u8fdd\u6cd5\u7684\u7ed3\u679c\uff0c\u51cf\u5c11\u4f20\u8f93\u7684\u635f\u8017\u5e76\u4e14\u51cf\u5c11\u5b89\u5168\u9690\u60a3\uff09  </li> <li>Transport the \u8fdd\u6cd5\u8f66\u724c\u548c\u8fdd\u6cd5\u4fe1\u606f\u5230\u4e2d\u592e cloud server \u505a\u6c47\u603b\uff08each \u8f66\u7684\u8fdd\u6cd5\u4fe1\u606f\u9700\u8981\u5728\u5168\u56fd\u8303\u56f4\u5185\u505a\u7edf\u8ba1\uff09</li> </ol>"},{"location":"course_notes/fit5046/#q19-flat-multi-hop-architecture-sink","title":"Q19. \u4f7f\u7528 flat multi-hop architecture \u5b9e\u73b0\u4e86\u667a\u6167\u519c\u4e1a\u79cd\u690d\u679c\u56ed\uff0c\u73b0\u679c\u56ed\u6269\u5927\uff0csink \u9644\u8fd1\u7684 \u8282\u70b9\u8fbe\u5230\u4e86\u4f20\u8f93\u74f6\u9888\uff0c\u7b80\u8ff0\u51e0\u79cd\u89e3\u51b3\u65b9\u6848","text":"<ol> <li>Upgrade the sensor or sink  </li> <li>Upgrade architecture to cluster-based architecture (\u8981\u52a0\u89e3\u91ca)</li> </ol>"},{"location":"course_notes/fit5046/#q20","title":"Q20. \u4e00\u5ba4\u5916\u91ce\u751f\u516c\u56ed\u60f3\u4e0a\u7ebf\u81ea\u52a8\u5bfc\u6e38\u7cfb\u7edf\uff0c\u8bf7\u4f60\u505a\u4e00\u4e0b\u8bbe\u8ba1\u65b9\u6848","text":"<ol> <li>\u90e8\u7f72\u670d\u52a1\u5668\uff0c\u628a\u6240\u6709\u8bb2\u89e3\u89c6\u9891\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a  </li> <li>\u4f7f\u7528 GPS \u5b9a\u4f4d user \u7684\u5927\u81f4\u4f4d\u7f6e\uff0c\u7136\u540e\u7ed9\u7ec8\u7aef\uff08\u624b\u673a\uff09\u63a8\u9001\u73b0\u5728\u9644\u8fd1\u666f\u70b9\u7684\u8bb2\u89e3\u89c6\u9891\uff0c\u4f7f\u7ec8\u7aef\u7f13\u5b58 data  </li> <li>\u6bcf\u4e2a\u666f\u70b9\u9644\u8fd1\u5b89\u88c5 sensor \u6765\u53d1\u9001\u4fe1\u53f7\u7ed9\u7ec8\u7aef\uff0c\u51b3\u5b9a\u64ad\u653e\u54ea\u4e2a\u8bb2\u89e3\u89c6\u9891</li> </ol>"},{"location":"course_notes/fit5046/#q21-gps","title":"Q21. \u536b\u661f\uff08GPS\uff09\u5982\u4f55\u5728\u5730\u7403\u4e0a\u5b9a\u4f4d\u4f4d\u7f6e \u5982\u4f55\u8ba1\u7b97\u5730\u9762\u548c\u536b\u661f\u7684\u8ddd\u79bb","text":""},{"location":"course_notes/fit5046/#code-question-1","title":"Code Question 1","text":"<pre><code>http://XXXXX.com/student/1  \n&lt;student&gt;  \n    &lt;stuid&gt;1&lt;stuid&gt;  \n    &lt;stuname&gt;Tom&lt;stuname&gt;  \n&lt;/student&gt;\n</code></pre> <p>Qa. Based on the figure above, identify and name the resource and the representation     A:Resource name is student, represent the id and name of the resource   </p> <p>b. Rest stands for \u2018Representational state transfer\u2019. Based on the example provided in the  figure, explain how the state transfer can happen.     B:The figure is XML format response that RESTful API response, when client invoke this API  URL(http://XXXXX.com/student/1), client can receive the student information including student  id is 1 and student name is Tom. In this way, the state transferred from server side to client  side</p>"},{"location":"course_notes/fit5046/#code-question-2","title":"Code Question 2","text":"<pre><code>private var vehicleList: MutableLiveData&lt;VehicteList&gt; = MutableLiveData()\nfun LiveData&lt;VehicteList&gt; {\n    return vehicleList= MutableLiveData()\n</code></pre> <p>a. Why is MutableLiveData used here instead of LiveData? + A:The difference between MutableLiveData and liveData type is MutableLiveData can be mutated  but LiveData cannot be mutated its value.And MutableLiveData is inheritance from livedata, so we can cast directly from MutableLiveData to liveData in getMethod.  So the MutableLiveData here is because we need set/mutator method to assign or change value  to field  </p> <p>b. Why does we use LiveData in getText? + B: getText() method is accessor method, no need to mutate the value, so livedata type is enough.</p>"},{"location":"course_notes/fit5046/#code-3","title":"code 3","text":"<p>  What is the use of the companion object in the class?Explain     companion object represent the class level feature, like class method and class variable     1. which can be accessed directly from class name.     2. All the instance of this class should share the same state in this companion object     3. Just like static in Java     4. This is to ensure only one instance of DB in this app, to avoid concurrent CRUD action conflict.  (Singleton pattern)</p> <p>What is the use of fallbackToDestructiveMigration()     when schema or db version changed, clear data and recreate a new db based new schema</p>"},{"location":"course_notes/fit5046/#code-question-4","title":"Code Question 4:","text":"<p>a) What is the role of the ViewHolder in a RecyclerView?     A: A ViewHolder describes an item view and metadata about its place within the  RecyclerView. b) What is the purpose of the onBindViewHolder() method in RecyclerView?     B: Bind the metadata in list and item view in the recycler view</p>"},{"location":"course_notes/fit5046/#code-5","title":"code 5","text":"<pre><code>buildscript {  \n    repositories {  \n        // Make sure that you have the following two repositories  \n        google()  // Google's Maven repository  \n        mavenCentral()  // Maven Central repository  \n    }  \n    dependencies {  \n        classpath 'com.android.tools.build:gradle:7.4.2'  \n        // Add the dependency for the Google services Gradle plugin  \n        classpath 'com.google.gms:google-services:4.3.15'  \n    }  \n}\nallprojects{\n    repositories {  \n        // Make sure that you have the following two repositories  \n        google()  // Google's Maven repository  \n        mavenCentral()  // Maven Central repository  \n    }  \n}\n</code></pre> <p>a) Explain the differences of two repositories under the buildscript and allprojects blocks     The \"buildscript\" configuration section is for gradle itself (i.e. changes to how gradle is able  to perform the build). So this section will usually include the Android Gradle plugin.  The \"allprojects\" section is for the modules being built by Gradle</p> <p>b) When do we include a repository in the allprojects block? Provide an example     When use local maven or import other local repository\uff0cwe need to declare the repository in allprojects</p>"},{"location":"course_notes/fit5046/#other-question","title":"other question","text":""},{"location":"course_notes/fit5046/#in-the-settingsgradle-file-what-is-the-usage-of-repository-sector-and-what-is-the-difference-between-google-mavenhrttpxxxx-in-repository-sector-setting-repository-repository-google-mavenhrttpxxxx","title":"in the settings.gradle file. what is the usage of repository sector? and what is the difference between google() maven{hrttp/xxxx} in repository sector? setting \u91cc repository \u7684\u7528\u5904\uff0c\u4ee5\u53ca repository \u91cc\uff0cgoogle()\u4e0e maven{hrttp/xxxx}\u8fd9\u4e24\u4e0d\u540c\u4e4b\u5904","text":"<ul> <li>Regarding the repository sector, this is where you can define the repositories that the Gradle build system should search for dependencies. \u5173\u4e8e\u5b58\u50a8\u5e93\u6247\u533a\uff0c\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u5b9a\u4e49 Gradle \u6784\u5efa\u7cfb\u7edf\u5e94\u641c\u7d22\u4f9d\u8d56\u9879\u7684\u5b58\u50a8\u5e93\u3002</li> <li>One of the most common repositories used is\u00a0<code>google()</code>, which is a shortcut for including Google's Maven repository in your project. \u6700\u5e38\u7528\u7684\u5b58\u50a8\u5e93\u4e4b\u4e00\u662f\u00a0<code>google()</code>\u00a0\uff0c\u8fd9\u662f\u5728\u9879\u76ee\u4e2d\u5305\u542b Google \u7684 Maven \u5b58\u50a8\u5e93\u7684\u5feb\u6377\u65b9\u5f0f\u3002  </li> <li>The\u00a0<code>maven { url \"http/xxxx\" }</code>\u00a0is also a repository where you can specify a custom Maven repository URL. This is useful if you need to include a library or dependency that is not available in the default repositories.  <code>maven { url \"http/xxxx\" }</code>\u00a0\u4e5f\u662f\u4e00\u4e2a\u5b58\u50a8\u5e93\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u6307\u5b9a\u81ea\u5b9a\u4e49 Maven \u5b58\u50a8\u5e93 URL\u3002\u5982\u679c\u9700\u8981\u5305\u542b\u9ed8\u8ba4\u5b58\u50a8\u5e93\u4e2d\u4e0d\u53ef\u7528\u7684\u5e93\u6216\u4f9d\u8d56\u9879\uff0c\u8fd9\u5c06\u975e\u5e38\u6709\u7528\u3002 </li> <li>The main difference between the two is where they point to.\u00a0<code>google()</code>\u00a0specifically points to Google's repository, while\u00a0<code>maven</code>\u00a0can point to any custom repository that you specify the URL for.  \u4e24\u8005\u4e4b\u95f4\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u5b83\u4eec\u6307\u5411\u7684\u4f4d\u7f6e\u3002\u00a0<code>google()</code>\u00a0\u4e13\u95e8\u6307\u5411 Google \u7684\u5b58\u50a8\u5e93\uff0c\u800c\u00a0<code>maven</code>\u00a0\u53ef\u4ee5\u6307\u5411\u60a8\u4e3a\u5176\u6307\u5b9a\u7f51\u5740\u7684\u4efb\u4f55\u81ea\u5b9a\u4e49\u5b58\u50a8\u5e93\u3002</li> </ul>"},{"location":"course_notes/fit5046/#indoor-position","title":"indoor position \u7684\u8fc7\u7a0b","text":""},{"location":"course_notes/fit5046/#the-workflow-of-aslivedata-aslivedataflow","title":"the workflow of asLiveData asLiveData()\u7684\u529f\u80fd(Flow)","text":"<p>When you use\u00a0<code>asLiveData()</code>\u00a0on a\u00a0<code>Flow</code>, it converts the\u00a0<code>Flow</code>\u00a0to a\u00a0<code>LiveData</code>\u00a0object, which can be observed by components such as activities, fragments, and services. \u5f53\u60a8\u5728\u00a0<code>Flow</code>\u00a0\u4e0a\u4f7f\u7528\u00a0<code>asLiveData()</code>\u00a0\u65f6\uff0c\u5b83\u4f1a\u5c06\u00a0<code>Flow</code>\u00a0\u8f6c\u6362\u4e3a\u00a0<code>LiveData</code>\u00a0\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u6d3b\u52a8\u3001\u7247\u6bb5\u548c\u670d\u52a1\u7b49\u7ec4\u4ef6\u8fdb\u884c\u89c2\u5bdf\u3002</p> <p>Here is a basic workflow of\u00a0<code>asLiveData()</code>: \u4ee5\u4e0b\u662f\u00a0<code>asLiveData()</code>\u00a0\u7684\u57fa\u672c\u5de5\u4f5c\u6d41\uff1a</p> <ol> <li>Create a\u00a0<code>Flow</code>\u00a0object that emits a stream of data.     \u521b\u5efa\u53d1\u51fa\u6570\u636e\u6d41\u7684\u00a0<code>Flow</code>\u00a0\u5bf9\u8c61\u3002</li> <li>Call the\u00a0<code>asLiveData()</code>\u00a0function on the\u00a0<code>Flow</code>. This converts the\u00a0<code>Flow</code>\u00a0to a\u00a0<code>LiveData</code>\u00a0object.     \u5728\u00a0<code>Flow</code>\u00a0\u4e0a\u8c03\u7528\u00a0<code>asLiveData()</code>\u00a0\u51fd\u6570\u3002\u8fd9\u4f1a\u5c06\u00a0<code>Flow</code>\u00a0\u8f6c\u6362\u4e3a\u00a0<code>LiveData</code>\u00a0\u5bf9\u8c61\u3002</li> <li>Observe the\u00a0<code>LiveData</code>\u00a0object in a UI component, such as an activity or fragment.     \u89c2\u5bdf UI \u7ec4\u4ef6\uff08\u5982\u6d3b\u52a8\u6216\u7247\u6bb5\uff09\u4e2d\u7684\u00a0<code>LiveData</code>\u00a0\u5bf9\u8c61\u3002</li> <li>When data is emitted by the\u00a0<code>Flow</code>, it will be delivered to the UI component through the\u00a0<code>LiveData</code>\u00a0object.     \u5f53\u6570\u636e\u7531\u00a0<code>Flow</code>\u00a0\u53d1\u51fa\u65f6\uff0c\u5b83\u5c06\u901a\u8fc7\u00a0<code>LiveData</code>\u00a0\u5bf9\u8c61\u4f20\u9012\u5230 UI \u7ec4\u4ef6\u3002</li> </ol> <p>In addition to converting a\u00a0<code>Flow</code>\u00a0to a\u00a0<code>LiveData</code>\u00a0object,\u00a0<code>asLiveData()</code>\u00a0also automatically manages any subscriptions to the\u00a0<code>Flow</code>. This means that when the UI component is destroyed (such as when an activity is destroyed), any subscriptions to the\u00a0<code>Flow</code>\u00a0are automatically cancelled. \u9664\u4e86\u5c06\u00a0<code>Flow</code>\u00a0\u8f6c\u6362\u4e3a\u00a0<code>LiveData</code>\u00a0\u5bf9\u8c61\u5916\uff0c\u00a0<code>asLiveData()</code>\u00a0\u8fd8\u4f1a\u81ea\u52a8\u7ba1\u7406\u00a0<code>Flow</code>\u00a0\u7684\u4efb\u4f55\u8ba2\u9605\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f53 UI \u7ec4\u4ef6\u88ab\u9500\u6bc1\u65f6\uff08\u4f8b\u5982\uff0c\u5f53\u6d3b\u52a8\u88ab\u9500\u6bc1\u65f6\uff09\uff0c\u5bf9\u00a0<code>Flow</code>\u00a0\u7684\u4efb\u4f55\u8ba2\u9605\u90fd\u4f1a\u81ea\u52a8\u53d6\u6d88\u3002</p> <p>Overall,\u00a0<code>asLiveData()</code>\u00a0provides a streamlined way to observe\u00a0<code>Flow</code>s and manage subscriptions in Android applications. \u603b\u4f53\u800c\u8a00\uff0c\u00a0<code>asLiveData()</code>\u00a0\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5316\u7684\u65b9\u5f0f\u6765\u89c2\u5bdf\u00a0<code>Flow</code>\u00a0\u548c\u7ba1\u7406 Android \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u8ba2\u9605\u3002</p>"},{"location":"course_notes/fit5046/#multi-hop-2-zigbee-wimax","title":"\u6709\u4e00\u9898\u8fd8\u633a\u6709\u610f\u601d\u3002\u5148\u662f\u8ba9\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u4e0b\u9762\u573a\u666f\uff0c\u66f4\u9002\u5408\u7528\u54ea\u79cd multi hop\uff0c\u7136\u540e\u7b2c 2 \u9898\uff0c\u95ee\u6211\u4eec\u8bbe\u5907\u548c\u8bbe\u5907\u4e4b\u95f4\u5e94\u8be5\u7528\u4ec0\u4e48\u901a\u8baf\u6280\u672f\u8bbe\u5907\u548c\u8fdc\u7a0b\u63a7\u5236\u7ec8\u7aef\uff0c\u5e94\u8be5\u7528\u4ec0\u4e48\u901a\u4fe1 \u6280\u672f\uff0c\u5176\u5b9e\u4e00\u4e2a\u7528 zigbee\u3002\u4e00\u4e2a\u7528 wimax","text":""},{"location":"course_notes/fit5046/#what-is-the-usage-of-interface-in-retrofit-what-is-the-usage-of-model-in-retrofit-retrofit-interface-retrofit-model","title":"what is the usage of interface in retrofit? what is the usage of model in retrofit? retrofit interface \u662f\u7528\u6765\u5e72\u561b\u7684\uff0c\u4ee5\u53ca retrofit \u7684 model \u662f\u7528\u6765\u5e72\u561b\u7684","text":"<p>Interfaces are used to define the structure of the API requests that will be made by your application. In Retrofit, you define an interface that specifies the HTTP request method, URL endpoint, and any parameters necessary for the request. When you make a call to the interface method from your application code, Retrofit automatically generates code to handle the network request and return the response. This makes it easy to implement RESTful API calls in your Android application with minimal boilerplate code. \u63a5\u53e3\u7528\u4e8e\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u5c06\u53d1\u51fa\u7684 API \u8bf7\u6c42\u7684\u7ed3\u6784\u3002\u5728 Retrofit \u4e2d\uff0c\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u6307\u5b9a HTTP \u8bf7\u6c42\u65b9\u6cd5\u3001URL \u7aef\u70b9\u4ee5\u53ca\u8bf7\u6c42\u6240\u9700\u7684\u4efb\u4f55\u53c2\u6570\u3002\u4ece\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u8c03\u7528\u63a5\u53e3\u65b9\u6cd5\u65f6\uff0cRetrofit \u4f1a\u81ea\u52a8\u751f\u6210\u4ee3\u7801\u4ee5\u5904\u7406\u7f51\u7edc\u8bf7\u6c42\u5e76\u8fd4\u56de\u54cd\u5e94\u3002\u8fd9\u4f7f\u5f97\u4f7f\u7528\u6700\u5c11\u7684\u6837\u677f\u4ee3\u7801\u5728Android\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b9e\u73b0RESTful API\u8c03\u7528\u53d8\u5f97\u5bb9\u6613\u3002</p> <pre><code>public interface MyApi {\n    @GET(\"users/{user_id}\")\n    Call&lt;User&gt; getUser(@Path(\"user_id\") int userId);\n}\n</code></pre> <p>Models, on the other hand, are used to represent the structure and format of the incoming JSON response from the API endpoint. When you define a model in Retrofit, you're telling Retrofit the structure of the JSON response and how to parse it into Java object. Retrofit uses the Gson library to automatically serialize and deserialize JSON responses into Java objects. \u53e6\u4e00\u65b9\u9762\uff0c\u6a21\u578b\u7528\u4e8e\u8868\u793a\u6765\u81ea API \u7ec8\u7ed3\u70b9\u7684\u4f20\u5165 JSON \u54cd\u5e94\u7684\u7ed3\u6784\u548c\u683c\u5f0f\u3002\u5f53\u60a8\u5728 Retrofit \u4e2d\u5b9a\u4e49\u6a21\u578b\u65f6\uff0c\u60a8\u544a\u8bc9 Retrofit JSON \u54cd\u5e94\u7684\u7ed3\u6784\u4ee5\u53ca\u5982\u4f55\u5c06\u5176\u89e3\u6790\u4e3a Java \u5bf9\u8c61\u3002Retrofit \u4f7f\u7528 Gson \u5e93\u81ea\u52a8\u5c06 JSON \u54cd\u5e94\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e3a Java \u5bf9\u8c61\u3002</p>"},{"location":"course_notes/fit5046/#on-start-activity-for-resulting-star-activities-for-result-start-activity-activity","title":"on start activity for resulting\u3002\u63cf\u8ff0 star activities for result \u548c start activity \u7684\u533a\u522b\uff0c\u4ee5\u53ca\u5728\u7b2c\u4e8c\u4e2a activity \u4e4b\u4e2d\uff0c\u6709\u54ea\u4e24\u4e2a\u51fd\u6570\u662f\u5fc5\u987b\u5199\u5199\u8fdb\u53bb\u7684","text":"<p><code>startActivity()</code>\u00a0and\u00a0<code>startActivityForResult()</code>\u00a0are both methods in the Android\u00a0<code>Context</code>\u00a0class used to start a new activity. The main difference is that\u00a0<code>startActivity()</code>\u00a0is used to start a new activity and not expect any result back, while\u00a0<code>startActivityForResult()</code>\u00a0is used to start a new activity and expect a result back from this new activity. <code>startActivity()</code>\u00a0\u548c\u00a0<code>startActivityForResult()</code>\u00a0\u90fd\u662f Android\u00a0<code>Context</code>\u00a0\u7c7b\u4e2d\u7528\u4e8e\u542f\u52a8\u65b0\u6d3b\u52a8\u7684\u65b9\u6cd5\u3002\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u00a0<code>startActivity()</code>\u00a0\u7528\u4e8e\u542f\u52a8\u65b0\u6d3b\u52a8\uff0c\u5e76\u4e14\u4e0d\u671f\u671b\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\uff0c\u800c\u00a0<code>startActivityForResult()</code>\u00a0\u7528\u4e8e\u542f\u52a8\u65b0\u6d3b\u52a8\u5e76\u671f\u671b\u4ece\u6b64\u65b0\u6d3b\u52a8\u8fd4\u56de\u7ed3\u679c\u3002 <code>startActivity()</code>\u00a0- This method simply starts a new activity. When you call this method, the newly launched activity starts running, and the calling activity waits in the background. Once the new activity is finished, the calling activity resumes from the point where it left off. You don't get any information back from the new activity after it finishes. <code>startActivity()</code>\u00a0- \u6b64\u65b9\u6cd5\u53ea\u662f\u542f\u52a8\u4e00\u4e2a\u65b0\u6d3b\u52a8\u3002\u8c03\u7528\u6b64\u65b9\u6cd5\u65f6\uff0c\u65b0\u542f\u52a8\u7684\u6d3b\u52a8\u5f00\u59cb\u8fd0\u884c\uff0c\u8c03\u7528\u6d3b\u52a8\u5728\u540e\u53f0\u7b49\u5f85\u3002\u65b0\u6d3b\u52a8\u5b8c\u6210\u540e\uff0c\u8c03\u7528\u6d3b\u52a8\u5c06\u4ece\u4e2d\u65ad\u7684\u4f4d\u7f6e\u7ee7\u7eed\u3002\u65b0\u6d3b\u52a8\u5b8c\u6210\u540e\uff0c\u4e0d\u4f1a\u4ece\u65b0\u6d3b\u52a8\u83b7\u53d6\u4efb\u4f55\u4fe1\u606f\u3002</p> <pre><code>Intent intent = new Intent(this, MyActivity.class);\nstartActivity(intent);\n</code></pre> <p><code>startActivityForResult()</code>\u00a0- This method is similar to\u00a0<code>startActivity()</code>, but it allows you to start a new activity and receive a result back from it. This is useful when you need to get some information from the user in the new activity, and then pass this information back to the calling activity. <code>startActivityForResult()</code>\u00a0- \u6b64\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u00a0<code>startActivity()</code>\u00a0\uff0c\u4f46\u5b83\u5141\u8bb8\u60a8\u542f\u52a8\u65b0\u6d3b\u52a8\u5e76\u4ece\u4e2d\u63a5\u6536\u7ed3\u679c\u3002\u5f53\u60a8\u9700\u8981\u4ece\u65b0\u6d3b\u52a8\u4e2d\u7684\u7528\u6237\u83b7\u53d6\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u6b64\u4fe1\u606f\u4f20\u9012\u56de\u8c03\u7528\u6d3b\u52a8\u65f6\uff0c\u8fd9\u5f88\u6709\u7528\u3002</p> <pre><code>Intent resultIntent = new Intent();\nresultIntent.putExtra(\"key\", value);\nsetResult(RESULT_OK, resultIntent);\nfinish();\n\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    if (requestCode == REQUEST_CODE &amp;&amp; resultCode == RESULT_OK) {\n        String value = data.getStringExtra(\"key\");\n        // Do something with the data...\n    }\n}\n\n</code></pre>"},{"location":"course_notes/fit5046/#mobilability","title":"\u9009\u62e9\uff1a\u95ee\u4e0b\u9762\u54ea\u51e0\u79cd\u662f\u54ea\u4e00\u79cd\u662f\u6700\u7f3a\u4e4f mobilability \u7684","text":""},{"location":"course_notes/fit5046/#week-1-introduction-to-mobile-and-distributed-computing","title":"week 1 Introduction to Mobile and Distributed Computing","text":""},{"location":"course_notes/fit5046/#exercise","title":"exercise","text":""},{"location":"course_notes/fit5046/#learning-objectives","title":"Learning Objectives:","text":"<ul> <li>what is a distributed system? what is a mobile and distributed system?   </li> <li>what are the main architectures/models for developing mobile and distributed systems?  </li> <li>What is a web service? why are web services important in developing distributed and mobile systems?  </li> <li>What is REST?\u00a0What are the architectural constraints of REST?\u00a0What are the interface constraints of REST?  </li> <li>The role of JSON in web services?  </li> </ul>"},{"location":"course_notes/fit5046/#lecture","title":"lecture","text":"<p>An Overview of Distributed Systems An Overview of Mobile and Distributed Computing Web Services  </p>"},{"location":"course_notes/fit5046/#distributed-computing","title":"Distributed Computing","text":"<p>A computing paradigm where a number of autonomous  entities (most likely heterogeneous)  which are geographically distributed  can communicate and exchange messages  through a computer network  to achieve certain related tasks (common goals) + Vertical distribution: placing logically different layers/components on different machines  Each layer on one single machine + Horizontal distribution: a single logical layer/component is distributed across multiple machines to improve scalability E.g. distributing a database on multiple machines (distributed database   </p>"},{"location":"course_notes/fit5046/#mobile-and-distributed-computing_1","title":"Mobile and Distributed Computing","text":"<ul> <li>It is a class of distributed computing systems. It integrates mobile and wireless devices into distributed systems (Wireless sensor, smart device)  </li> <li>Mobile computing is associated with mobility of hardware, users,data, applications and network in computer applications  </li> </ul>"},{"location":"course_notes/fit5046/#distributed-computing-models","title":"Distributed Computing Models","text":"<p>The client/server model + Server processes offer  services to clients processes + Usually there is a data storage at the backend +  </p> <p>Peer-to-peer + Each process logically equal to each other + Data flows between the processes + </p>"},{"location":"course_notes/fit5046/#soa-service-oriented-architecture","title":"SOA  (Service-Oriented Architecture)","text":"<p>Service-oriented architecture was introduced as a paradigm  for distributed systems + Application functionalities (software components) are provided as  services (independent modules) + Exposed to public (clients) using a standard interface protocol,  aka an application programming interface (API)  + Message based interactions through these interfaces + Reuse of services and composition of services + Interoperability to support different platforms</p>"},{"location":"course_notes/fit5046/#web-service","title":"web service","text":"<ul> <li>SOA is implemented by creating web services  </li> <li>\u201cA Web service is a piece of software/code designed to support  interoperable machine-to-machine interaction over a network\u201d  (W3C)  </li> <li>Web services provide a standard interface to make the  functionalities available to the public (clients)  </li> <li>Web services provide access to business logic, data and processes  or other services  </li> <li>Web services were originally implemented as SOAP web services  and later evolved into RESTful web services (RESTful Web APIs)  </li> </ul>"},{"location":"course_notes/fit5046/#rest-representational-state-transfer_1","title":"REST (REpresentational State Transfer)","text":"<ul> <li>REST is not a protocol, a technology, a standard, or a specification  </li> <li>The architecture consists of elements and relationships between these  elements  </li> <li>The REST architecture\u2019s constraints that control the roles the  roles/features of these elements and also their allowed relationships  (\uf06e Architectural Constraints  \uf06e Interface Constraints  )  </li> <li>While REST is not a standard, it uses standards(HTTP  URL  XML)  </li> </ul>"},{"location":"course_notes/fit5046/#rest-and-resources","title":"REST and Resources","text":"<p>A resource: Any information that can be named can be a resource  </p> <p>A resource identifier: Each resource becomes accessible via a URI/URL  </p> <p>A representation: + It is a document capturing the current state of a resource + A resource can have different representations (e.g. JSON or XML) </p> <p>REST (REpresentational State Transfer): + each resource state has a representation, and this  representation can be updated and transferred from the  server to the client application</p>"},{"location":"course_notes/fit5046/#architectural-constraints","title":"Architectural Constraints","text":"<ul> <li>Client/Server  </li> <li>Stateless  </li> <li>Cache  </li> <li>Uniform Interface  </li> <li>Layered Systems  </li> <li>Code-On-Demand   </li> </ul>"},{"location":"course_notes/fit5046/#clientserver","title":"Client/Server","text":""},{"location":"course_notes/fit5046/#json_1","title":"JSON","text":"<ul> <li>JSON stands for JavaScript Object Notation  </li> <li>JSON is lightweight text-data interchange format  </li> <li>JSON is \"self-describing\" and easy to understand  </li> <li>A value can be a string, a number, true/false or null, an object or an array  \u503c\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u3001\u6570\u5b57\u3001true/false \u6216 null\u3001\u5bf9\u8c61\u6216\u6570\u7ec4</li> <li>Data is separated by commas  \u6570\u636e\u4ee5\u9017\u53f7\u5206\u9694</li> <li>Curly braces hold objects and square brackets hold array \u5927\u62ec\u53f7\u5305\u542b\u5bf9\u8c61\uff0c\u65b9\u62ec\u53f7\u5305\u542b\u6570\u7ec4  </li> <li></li> </ul>"},{"location":"course_notes/fit5046/#json-structures","title":"JSON structures","text":"<p>Objects: a collection of name/value pairs Objects in name/value pairs , each name is followed by a colon   </p> <pre><code>{\"firstName\": \"John\"}\n</code></pre> <p>Arrays: an ordered list of values  </p> <pre><code>{\"phoneNumber\": [\n{\n\"type\": \"home\", \"number\": \"212 555-1234\"\n},\n{\n\"type\": \"fax\", \"number\": \"646 555-4567\"\n} ] }\n</code></pre>"},{"location":"course_notes/fit5046/#json-data-types","title":"JSON Data Types","text":"<ul> <li>a string <code>{ \"name\":\"John\" }</code> </li> <li>a number <code>{ \"age\":30 }</code> </li> <li>a Boolean <code>{ \"sale\":true }</code> </li> <li>null <code>{ \"middlename\":null }</code> </li> <li>an object (JSON object) <code>{   \"address\": {   \"streetAddress\": \"21 2nd Street\", \"city\": \"New York\", \"state\": \"NY\", \"postalCode\": 10021 }}</code> </li> <li></li> </ul>"},{"location":"course_notes/fit5046/#parsing-json","title":"Parsing JSON","text":"<pre><code>{ \"firstName\": \"John\", \"lastName\": \"Smith\", \"age\": 25, \"address\": { \"streetAddress\":  \n\"21 2nd Street\", \"city\": \"New York\", \"state\": \"NY\", \"postalCode\": 10021  \n},\"phoneNumbers\": [ {\"type\": \"home\", \"number\": \"212 555-1234\" }, {\"type\": \"fax\",  \n\"number\": \"646 555-4567\" } ] }\n</code></pre> <p>Json Parser Online Site Unreachable </p> <p>In Android, we will use org.json libraries <code>import org.json.JSONObject;</code> The JSONObject class is used to create or parse JSON  </p> <pre><code>JSONObject jsonObject = new JSONObject(result);  \nJSONArray jsonArray = jsonObject.getJSONArray(\"items\");  \nif(jsonArray != null &amp;&amp; jsonArray.length() &gt; 0) {  \nsnippet =jsonArray.getJSONObject(0).getString(\"snippet\");  \n}\n</code></pre>"},{"location":"course_notes/fit5046/#tutorial","title":"tutorial","text":"<ol> <li>system image (try to use Tiramisu version API 33).    </li> <li>device (pixal_3a)  </li> <li>change the Android application\u2019s title <code>res/values/strings.xml</code> change the value of the <code>app_name t</code> and  rerun the app  </li> <li>change the message <code>res/layout/activity_main.xml</code> </li> </ol>"},{"location":"course_notes/fit5046/#week-2-android-an-introduction","title":"Week 2 Android: an Introduction","text":"<ul> <li>An understanding of 3 different ways to develop mobile applications  </li> <li>An understanding of Android environment and structure </li> <li>An understanding of important files in Android and their purpose  </li> <li>An understanding of Android Views, Layout and ViewGroup </li> <li>An understanding of AVD (Android Virtual Devices), and Debugging</li> </ul>"},{"location":"course_notes/fit5046/#lecture_1","title":"Lecture","text":"<pre><code>title: Outline:\n1. Mobile Applications \n1. Android History    \n1. Androidx  \n1. Android Studio  \n1. Layouts  \n1. Android Files  \n1. AVD (Android Virtual Devices\n</code></pre>"},{"location":"course_notes/fit5046/#flux","title":"FLux","text":""},{"location":"course_notes/fit5046/#mobile-applications","title":"Mobile Applications","text":"<p>Native apps :  + native language like Android or Swift;  + machine code;  + native app stores;  + requires installation on the device; + not cross-platform + high performance + Provides full access to all the features and hardware of the  device + Offline operation + Built-in security layer </p> <p>Web apps: + built with HTML, CSS and JavaScript + No need to download and install the app + Run in the web browser and Cross-platform + The lack of access to hardware features (e.g. sensors or camera) + speed and responsiveness Low performance</p> <p>Hybrid apps: + combining the benefits of both web technologies and native apps\u2019 features/capabilities + High quality and flexible UIs + Developed for different app platforms from a single codebase + But native apps have better performance, offer more functionalities  (interacting directly with OS), and their size is smaller</p> <p>Progressive Web Apps (PWAs):  + similar to hybrid apps, PWA apps are built using a combination of web  technologies and strategies to extend the capabilities of hybrid app + Service Workers (enable offline operation, push new contents, and  notifications)  </p> <p>Flutter:  + An open source framework by Google  Written in Dart language + For building multi-platform applications from a single codebase + Fast performance + Offers automated testing and developer tooling + Supports different screen sizes</p>"},{"location":"course_notes/fit5046/#layouts-and-views_1","title":"Layouts and Views","text":"<p>  + A layout resource (e.g. activity_main.xml) defines the whole architecture  of the UI for an activity or a fragment + A layout defines the structure for a user interface of the app, e.g.  LinearLayout, ConstraintLayout, or RelativeLayout + These different layout classes extend ViewGroup, which is like an invisible  container that can contain other views + A View is the basic class for widgets (UI components) + The View objects are known as widgets e.g. a Button or a TextField + Layouts \u00a0|\u00a0 Android Developers</p> <p>Layout Types : RelativeLayout and Linear layouts (Vertical or Horizontal)  </p>"},{"location":"course_notes/fit5046/#constraintlayout","title":"ConstraintLayout","text":"<p>ConstraintLayout \u6bcf\u4e2aView\u548c\u76f8\u90bb\u7684view\u6216\u8fb9\u754c\uff08ViewGr oup\uff09\u6709\u7ea6\u675f\uff08\u5177\u4f53\u591a\u8fdc</p> <pre><code>&lt;Button  \n    android:id=\"@+id/button\"  \n    android:layout_width=\"wrap_content\"  \n    android:layout_height=\"wrap_content\"  \n    app:layout_constraintBottom_toBottomOf=\"parent\"  \n    app:layout_constraintEnd_toEndOf=\"parent\"  \n    app:layout_constraintStart_toStartOf=\"parent\"  \n    app:layout_constraintTop_toTopOf=\"parent\" /&gt;\n</code></pre> <ul> <li>default layout in  Android Studio  </li> <li>creating complex layouts  </li> <li>it can be built entirely by using the Layout  Editor's visual tools (not the xml code  </li> <li>flat view hierarchy (not suitable for the  nested view groups)  </li> <li>It requires adding constraints to define the  position of a view  At least one horizontal and one vertical  constraint for the view  </li> <li>Build a Responsive UI with ConstraintLayout \u00a0|\u00a0 Android Developers </li> </ul>"},{"location":"course_notes/fit5046/#android-directories-and-files","title":"Android Directories and Files","text":""},{"location":"course_notes/fit5046/#manifests-androidmanifestxml","title":"manifests (AndroidManifest.xml)","text":"<p><code>manifests/AndroidManifest.xml</code>  + All Android applications have It includes the important information about the app, and components of the  application such as the activities and services + For declaring the required permissions like the access to the internet: <code>&lt;uses-permission android:name=\"android.permission.INTERNE</code> </p>"},{"location":"course_notes/fit5046/#gradle-scripts","title":"Gradle Scripts","text":"<ol> <li><code>build.gradle (Project: APPLICATION_NAME)</code> </li> <li><code>build.gradle (Module: app)</code> </li> <li><code>settings.gradle</code></li> <li>provides a custom build  tool to manage and configure building  android APK files  </li> <li>It facilitates importing, downloading and adding local and remote dependencies Important build gradle files:  </li> </ol> <pre><code>build.gradle (Project: APPLICATION_NAME)  \nsettings.gradle (Project Settings)  \nbuild.gradle (Module: APPLICATION_NAME)\n</code></pre>"},{"location":"course_notes/fit5046/#buildgradle-project-application_name-and-settingsgradle-project-settings","title":"<code>build.gradle (Project: APPLICATION_NAME)</code>  And <code>settings.gradle (Project Settings)</code>","text":"<ul> <li>import and use remote repositories    </li> <li>A repository refers to location where all the libraries and jar files are stored  and A repository can a local or remote repository  </li> <li>Remote repositories can be added in the <code>settings.gradle</code> file  By default, Android repositories include Google's Maven Repository, and the  Maven Central</li> </ul> <pre><code>// settings.gradle\npluginManagement {  \n    repositories {  \n        gradlePluginPortal()  \n        google()  \n        mavenCentral()  \n    }  \n}  \ndependencyResolutionManagement {  \n\nrepositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)  \n    repositories {  \n        google()  \n        mavenCentral()  \n    }  \n}  \nrootProject.name = \"Helloworld\"  \ninclude ':app'\n</code></pre>"},{"location":"course_notes/fit5046/#buildgradle-module-application_name","title":"<code>build.gradle (Module: APPLICATION_NAME)</code>","text":"<ul> <li>Gradle Module level file  includes information about  minSdk, targetSdk,  versionCode and name  </li> <li>add external  libraries (dependencies) in  build.gradle (Module:app)  but you must add their  repository they belong to in  the settings.gradle</li> </ul> <pre><code>dependencies {  \n    implementation 'androidx.appcompat:appcompat:1.4.1'  \n    implementation 'com.google.android.material:material:1.5.0'  \n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'  \n    testImplementation 'junit:junit:4.13.2'  \n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'  \n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n}\n</code></pre>"},{"location":"course_notes/fit5046/#java","title":"java:","text":"<p><code>java/PACKAGE_NAME/ MainActivity.java</code> + defines how the  application will behave and interact  with the user + When you build and run your  application, in the MainActivity class,  the setContentView() method loads  and inflates the XML layout file that  passed to it as an argument and  create a view hierarchy tree</p> <pre><code>package com.example.helloworld;  \nimport androidx.appcompat.app.AppCompatActivity;  \nimport android.os.Bundle;  \n\n//It is the base class for activities  and adds the newer platform  features\npublic class MainActivity extends AppCompatActivity {  \n    @Override  \n    protected void onCreate(Bundle savedInstanceState) {  \n        //OnCreate() is called when the  system creates the activity. You  initialize components and  views in this method, and this is  where you must call  setContentView()\n        super.onCreate(savedInstanceState);  \n        //setContentView() defines the layout for the  activity's user interface by setting the activity  content from a layout resource that will be  inflated (e.g. activity_main.xml)\n        setContentView(R.layout.activity_main);  \n    }  \n}\n</code></pre>"},{"location":"course_notes/fit5046/#res","title":"res","text":"<pre><code>res/drawable  \nres/layout/activity_main.xml (and any other layout files)  \nres/menu - menu layout files  \nres/values/strings.xml\n</code></pre>"},{"location":"course_notes/fit5046/#resvaluesstringsxml","title":"<code>res/values/strings.xml</code>","text":"<ul> <li>declare and include String variables </li> <li>managing all UI text in a single location and easier to find and update text in an app</li> <li>In the Java code, reference it as <code>String message = getString(R.string.edit_message);</code></li> </ul> <pre><code>//res/layout/activity_main.xml\n...  \n&lt;EditText android:id=\"@+id/edit_message\"  \n    android:layout_width=\"wrap_content\"  \n    android:layout_height=\"wrap_content\"  \n    android:hint=\"@string/edit_message\" /&gt;  \n...\n</code></pre> <pre><code>// res/values/strings.xml\n&lt;resources&gt;  \n    &lt;string name=\"app_name\"&gt;My Application&lt;/string&gt;  \n    &lt;string name=\"edit_message\"&gt;Enter a word&lt;/string&gt;  \n    &lt;/resource\n</code></pre>"},{"location":"course_notes/fit5046/#activity_mainxml","title":"<code>activity_main.xml</code>","text":"<ul> <li>Under the app-&gt;res-&gt;layout  </li> <li>controls the entire project\u2019s UI  </li> <li>View modes: Design, Code, Split  </li> </ul>"},{"location":"course_notes/fit5046/#views-and-ids","title":"Views and Ids","text":"<ul> <li>To access and manipulate views, you need to provide an id <code>android:id=\"@+id/textView\"</code></li> <li>These ids after Save (compile) will automatically appear in R.java and you can  reference them by their name</li> <li>Without an id, you cannot reference a view in an activity or a fragment <code>TextView textView = findViewById(R.id.textView);</code> <code>textView.setText(\"First lab exercise\");</code></li> <li>Instead of using findViewById for each view, You can use View binding that is  part of Android Jetpack <code>binding.editText.setText(\u201cHello\");</code></li> </ul>"},{"location":"course_notes/fit5046/#activity-lifecycle_1","title":"Activity Lifecycle","text":"<p> 1. <code>onCreate()</code> Initialize the activity components e.g. creating  views, or populating lists with data 2. <code>OnStart()</code> the activity becomes visible 3. <code>onResume()</code> The activity is ready to accept the user input  At the top of the activity stack (in the foreground) 4. <code>onPause()</code> The activity loses focus, and will enter the  stopped or resumed state 5. <code>onStop()</code> The activity is no longer visible 6. <code>onDestroy()</code> The activity is about to be terminated</p>"},{"location":"course_notes/fit5046/#tutorial_1","title":"Tutorial","text":""},{"location":"course_notes/fit5046/#views-and-events","title":"Views and Events","text":"<p>To learn about view objects such as a button and how to register with event listeners  </p>"},{"location":"course_notes/fit5046/#ui-design","title":"UI design","text":"<p>This code uses a LinearLayout with a \"horizontal\"  orientation instead of a ConstraintLayout. For simple applications like ours, LinearLayout is easier and  faster to work with<code>activity_main.xml</code></p> <pre><code>\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  \n&lt;!-- res/layout/activity_main.xml --&gt; \n&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"  \n    android:id=\"@+id/activity_main\"  \n    android:layout_width=\"match_parent\"  \n    android:layout_height=\"wrap_content\"  \n    android:orientation=\"vertical\"&gt;  \n\n    &lt;!-- user input area --&gt;  \n    &lt;EditText  \n        android:id=\"@+id/editMessage\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:hint=\"@string/editMessage\"  \n        android:inputType=\"text\" /&gt;\n        &lt;!-- You can change the inputType to  \n        \u201cphone\u201d or \"textPassword\" to  \n        facilitate data entry according to its  \n        type --&gt;  \n\n    &lt;!-- reverse button --&gt;  \n    &lt;Button  \n        android:id=\"@+id/reverse_button\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"REVERSE\" /&gt;  \n\n    &lt;!-- claer button --&gt;  \n    &lt;Button  \n        android:id=\"@+id/clear_button\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"CLAER\" /&gt;  \n&lt;/LinearLayout&gt;\n</code></pre>"},{"location":"course_notes/fit5046/#declared-and-defined-variable","title":"declared and defined variable","text":"<p><code>res/values/strings.xml</code></p> <pre><code>&lt;!-- res/values/strings.xml  --&gt;  \n&lt;resources&gt;  \n    &lt;string name=\"app_name\"&gt;EventListenerJava&lt;/string&gt;  \n    &lt;!-- declared and defined editMessage  --&gt;  \n    &lt;string name=\"editMessage\"&gt;Enter a word&lt;/string&gt;  \n&lt;/resources&gt;\n</code></pre>"},{"location":"course_notes/fit5046/#build-method","title":"Build Method","text":"<pre><code>// java/com/example/eventlistenerjava/MainActivity.java\npackage com.example.eventlistenerjava;  \n\nimport androidx.appcompat.app.AppCompatActivity;  \n\nimport android.os.Bundle;  \nimport android.view.View;  \nimport android.widget.Button;  \nimport android.widget.EditText;  \n\npublic class MainActivity extends AppCompatActivity {  \n\n    @Override  \n    protected void onCreate(Bundle savedInstanceState) {  \n        super.onCreate(savedInstanceState);  \n        setContentView(R.layout.activity_main);  \n\n        /*  \n        * get a reference to the reverse button and then register it with OnClickListener.        * For the onClick() method,the code below reverses any text the user enters in        * the EditText (using the StringBuilder). You need to import libraries for Button,        * EditText and View        * */        Button reverseButton = findViewById(R.id.reverse_button);  \n        reverseButton.setOnClickListener(new View.OnClickListener(){  \n            @Override  \n            public void onClick(View v) {  \n                EditText editText = findViewById(R.id.editMessage);  \n                String builder= new StringBuilder(editText.getText()).reverse().toString();  \n                editText.setText(builder);  \n            }  \n        });  \n\n        /*  \n        * clear_button so when it is clicked, the text in the edit text is cleared        * (by setting the text to the empty string)        * */        Button clearButton= findViewById(R.id.clear_button);  \n        clearButton.setOnClickListener(new View.OnClickListener() {  \n            @Override  \n            public void onClick(View v) {  \n                EditText editText =findViewById(R.id.editMessage);  \n                editText.setText(\"\");  \n            }  \n        });  \n        /*  \n        * If replace with lambda function:        * clearButton.setOnClickListener(v -&gt; {            EditText editText =findViewById(R.id.editMessage);            editText.setText(\"\");           });        * */  \n\n\n    }  \n}\n</code></pre>"},{"location":"course_notes/fit5046/#spinner_1","title":"Spinner","text":"<p>spinner definition: Spinners are similar to\u00a0combo boxes\u00a0and\u00a0lists\u00a0in that they let the user choose from a range of values. Like editable combo boxes, spinners allow the user to type in a value.   To learn about how to use a spinner and an ArrayAdapter.   To learn about how to populate a spinner, add new items to it at run time, and get the items selected from a spinner  </p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  \n&lt;!-- res/layout/activity_main.xml  --&gt;  \n&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"  \n    android:id=\"@+id/activity_main\"  \n    android:layout_width=\"match_parent\"  \n    android:layout_height=\"match_parent\"  \n    android:orientation=\"vertical\"&gt;  \n\n    &lt;!-- text input box  --&gt;  \n    &lt;EditText  \n        android:id=\"@+id/editText\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:hint=\"Enter a movie name\"  \n        /&gt;  \n\n    &lt;!-- add movie button  --&gt;  \n    &lt;Button  \n        android:id=\"@+id/addButton\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"Add a New Movie\"  \n        /&gt;  \n\n    &lt;!-- claer button  --&gt;  \n    &lt;Button  \n        android:id=\"@+id/clearButton\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"Clear\" /&gt;  \n\n    &lt;!-- spinner List  --&gt;  \n    &lt;Spinner  \n        android:id=\"@+id/movieSpinner\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        /&gt;  \n&lt;/LinearLayout&gt;\n</code></pre> <pre><code>// java/com/example/spinnerjava/MainActivity.java  \npublic class MainActivity extends AppCompatActivity {  \n    @Override  \n    protected void onCreate(Bundle savedInstanceState) {  \n        super.onCreate(savedInstanceState);  \n        setContentView(R.layout.activity_main);  \n\n        //initialize buttons, edit text, and spinner  \n        Button addButton = findViewById(R.id.addButton);  \n        Button clearButton = findViewById(R.id.clearButton);  \n        EditText editText = findViewById(R.id.editText);  \n        Spinner movieSpinner = findViewById(R.id.movieSpinner);  \n\n        //initialize spinner list and adapter  \n        List&lt;String&gt; list = new ArrayList&lt;String&gt;();  \n        list.add(\"Toy Story\");  \n        list.add(\"Up\");  \n        list.add(\"Shrek\");  \n        final ArrayAdapter&lt;String&gt; spinnerAdapter = new ArrayAdapter&lt;String&gt;(this ,android.R.layout.simple_spinner_item,  \n                list);  \n        movieSpinner.setAdapter(spinnerAdapter);  \n\n        //add button listener to add new movie to spinner  \n        addButton.setOnClickListener(new View.OnClickListener() {  \n            public void onClick(View v) {  \n                String newMovie= editText.getText().toString();  \n                spinnerAdapter.add(newMovie);  \n                spinnerAdapter.notifyDataSetChanged();  \n                movieSpinner.setSelection(spinnerAdapter.getPosition(newMovie));  \n            }  \n        });  \n\n        //clear button listener to clear edit text  \n        clearButton.setOnClickListener(new View.OnClickListener() {  \n            public void onClick(View v) {  \n                editText.setText(\"\");  \n            }  \n        });  \n\n        //movie spinner listener to display selected movie in toast message  \n        // Each time an item is selected, a toast is displayed        movieSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  \n            @Override  \n            public void onItemSelected(AdapterView&lt;?&gt; parent, View view, int position, long id) {  \n                String selectedMovie = parent.getItemAtPosition(position).toString();  \n                Toast.makeText(parent.getContext(), \"Movie selected is \" + selectedMovie,Toast.LENGTH_LONG).show();  \n            }  \n            @Override  \n            public void onNothingSelected(AdapterView&lt;?&gt; parent) {  \n            }  \n        });  \n    }  \n}\n</code></pre>"},{"location":"course_notes/fit5046/#week-3-android-views-and-intent","title":"Week 3 Android Views and Intent","text":""},{"location":"course_notes/fit5046/#lecture_2","title":"Lecture","text":"<ul> <li>Views and Event Handling  </li> <li>View Binding  </li> <li>Intent and Multiple Activities </li> <li>Bundle  </li> <li>Kotlin</li> </ul>"},{"location":"course_notes/fit5046/#quiz","title":"quiz","text":""},{"location":"course_notes/fit5046/#events-and-event-listeners","title":"Events and Event Listeners","text":"<p> Event  Events are created from interactions with view objects like clicking a button Event Listeners can capture user interactions with UI User\uff08\u4eba\uff09\u548cDevice\uff08\u624b\u673a\uff09\u7684\u6240\u6709\u4ea4\u4e92\u52a8\u4f5c\u90fd\u53ebEvent \u70b9\u51fb\uff0c\u6ed1\u52a8\u5c4f\u5e55\uff0c\u653e\u5927/\u7f29\u5c0f\uff0c\u6309\u97f3\u91cf\u952e\u7b49  </p> <p>event listener  + \u5728\u4ee3\u7801\u4e0a\u6293\u53d6\u70b9\u51fb\u4e8b\u4ef6 -&gt; \u7528\u4ee3\u7801\u7f16\u8f91\u70b9\u51fb\u540e\u8fb9\u4ee3\u8868\u7684\u903b\u8f91 + \u70b9\u51fbbutton \u4e0a\u4f20/\u8df3\u8f6c\uff0c\u70b9\u51fb\u7535\u6e90\u6309\u94ae\u5173\u673a  + \u4f7f\u7528\u56de\u6389\u65b9\u6cd5callBack\uff08\uff09\u6765\u5b9e\u73b0\u903b\u8f91\uff08\u56de\u6389\uff1a\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u8fd4\u56de\uff0c\u8c03\u7528\u7684 method event listener is an interface in the View class  contains a single callback method Callback methods will be called when the View to which the listener  has been registered is triggered by user interaction with the UI item  <code>View.OnClickListene</code> is an event listener and its callback method  is onClick()   </p> <pre><code>protected void onCreate(Bundle savedInstanceState) {  \n    super.onCreate(savedInstanceState);  \n    setContentView(R.layout.activity_main);  \n    Button clearButton= findViewById(R.id.clearButton);  \n    // Creating an instance of View.OnClickListener interface  \n    clearButton.setOnClickListener(new View.OnClickListener() {  \n    //must implement the onClick() method  \n    @Override  \n        public void onClick(View v) {  \n            EditText editText = findViewById(R.id.edit_message);  \n            editText.setText(\"\");\n        }\n    });\n}\n</code></pre>"},{"location":"course_notes/fit5046/#view-binding_1","title":"View Binding","text":"<ul> <li>\u53cc\u5411\u7ed1\u5b9alayout.xml\u548cactivity/fragment  </li> <li>\u7ed1\u5b9axml\u4e2d\u6240\u6709\u5e26id\u53c2\u6570\u7684view (\u81ea\u52a8\u8bc6\u522bView\uff0c\u51cf\u5c11\u9519\u8bef)</li> <li>It automatically creates a binding class for each XML layout file  It provides an easier way to work with UI elements (views)</li> <li>ViewBinding is an interface that binds the views (e.g. a button) in an XML  Layout file to their declared names (e.g. addButton)</li> <li>The auto-generated binding class implements <code>ViewBinding</code> </li> </ul>"},{"location":"course_notes/fit5046/#how-to-view-binding","title":"How to View Binding","text":"<ol> <li>\u76f4\u63a5\u5728Activity\u4e2d\u58f0\u660e \u547d\u540d\u89c4\u5219\uff1aXML\u6587\u4ef6\u540d\uff0c\u53bb\u6389\u4e0b\u5212\u7ebf\uff0c\u52a0Binding declare a private variable  based on the name of the XML file using  the PascalCase and add \u2018Binding\u2019 at the  end, e.g. activity_main.xml becomes  <code>ActivityMainBinding</code> <code>private ActivityMainBinding binding;</code> </li> <li>\u521d\u59cb\u5316binding\u5e76\u628a\u5f53\u524dbinding\u4f5c\u4e3aactivity\u663e\u793a\u7684view create an instance of the binding  class by invoking the static inflate()  method to inflate the layout XML file  (activity_main.xml) and create view  objects from it <code>binding = ActivityMainBinding.inflate(getLayoutInflater();</code> </li> <li>get a reference to the root view  and pass it to <code>setContentView()</code> to make  it the active view on the screen <code>View view = binding.getRoot()</code> <code>setContentView(view);</code> </li> <li>\u4f7f\u7528\uff1abinding\u53d8\u91cf\u540d + view ID + view\u65b9\u6cd5access any views  without using findViewById() <code>binding.editMessage.setText(\"\");</code> </li> <li>The generate binding classes reside in\u00a0<code>app &gt; build &gt; generated &gt; data_binding_base_class_source_out &gt; debug &gt; your app package &gt; databinding</code></li> </ol>"},{"location":"course_notes/fit5046/#multiple-activities_1","title":"Multiple Activities","text":"<p>Android applications can include more than one activity When multiple activities are used, the first activity (MainActivity)  starts the second activity using an Intent  An Intent is mainly used for launching activities, services or broadcasts</p> <pre><code>// To Start an Activity \u2013 Main Activity  \nprivate ActivityMainBinding binding;  \n@Override  \nprotected void onCreate(Bundle savedInstanceState) {  \nsuper.onCreate(savedInstanceState);  \nbinding = ActivityMainBinding.inflate(getLayoutInflater());  \nView view = binding.getRoot();\npublic class MainActivity extends AppCompatActivity {\n    private ActivityMainBinding binding;  \n    @Override  \n    protected void onCreate(Bundle savedInstanceState) {  \n        super.onCreate(savedInstanceState);  \n        binding = ActivityMainBinding.inflate(getLayoutInflater());  \n        View view = binding.getRoot();  \n        setContentView(view);  \n\n            binding.startButton.setOnClickListener(new View.OnClickListener() {  \n            @Override  \n            public void onClick(View v) {  \n                Intent intent = new Intent(MainActivity.this, SecondActivity.class);  \n                startActivity(intent);  \n            } });  \n    }  \n}  \n\n</code></pre>"},{"location":"course_notes/fit5046/#intent","title":"Intent","text":"<ul> <li>An Intent is used to start an activity <code>public Intent (Context, Class)</code></li> <li>first parameter  provide context of the application or activity </li> <li>Class parameter, to which the system delivers the  Intent (here the activity we want to start)  </li> <li>coding at the activity level, you can use the keyword <code>Intent intent = new Intent(this, SecondActivity.class);</code> </li> <li>access the activity\u2019s context via  <code>MainActivity.this</code> or the application\u2019s context via <code>getApplicationContext()</code>: <code>Intent intent = new Intent(MainActivity.this, SecondActivity.class);</code> </li> <li>after the intent is instantiated, start the activity by calling: <code>startActivity(intent);</code></li> </ul>"},{"location":"course_notes/fit5046/#to-start-an-activity-second-activity","title":"To Start an Activity \u2013 Second Activity","text":"<ul> <li>reuse the same intent passed to  this activity by calling <code>getIntent()</code> </li> <li>call the setClass method  </li> <li>invoke the  startActivity(intent)</li> </ul> <pre><code>public class SecondActivity extends AppCompatActivity {  \n    private ActivitySecondBinding binding;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {  \n        super.onCreate(savedInstanceState);  \n        binding = ActivitySecondBinding.inflate(getLayoutInflater());  \n        View view = binding.getRoot();  \n        setContentView(view);  \n        Intent intent=getIntent();  \n        binding.startButton.setOnClickListener(new  \n        View.OnClickListener() {  \n            @Override  \n            public void onClick(View v) {  \n                intent.setClass(SecondActivity.this, MainActivity.class);  \n                startActivity(intent)\n</code></pre>"},{"location":"course_notes/fit5046/#passing-data","title":"Passing Data","text":"<ul> <li>When you have multiple activities you most likely need to pass  data between them  </li> <li>You can use objects of:  Intent,  Bundle  </li> </ul>"},{"location":"course_notes/fit5046/#using-an-intent-to-pass-primitive-data","title":"Using an Intent to Pass Primitive Data","text":"<ul> <li>Intent \u00a0|\u00a0 Android Developers</li> <li>add extra data using the putExtra() method that  requires two parameters (the key name and its value  </li> <li><code>intent.putExtra(String name, String value)</code> </li> <li><code>intent.putExtra(String name, double value)</code> </li> </ul> <pre><code>Intent intent = new Intent(MainActivity.this, SecondActivity.class);  \nintent.putExtra(\u201cmessage\u201d, msg);  \nstartActivity(intent);\n</code></pre>"},{"location":"course_notes/fit5046/#getting-data-from-an-intent","title":"Getting Data from an Intent","text":"<ul> <li>use <code>getIntent()</code> To get data from the intent in the second activity <code>Intent intent=getIntent();</code> </li> <li>retrieve the data that it is carrying  by using a right method that matches the type of data <code>String msg = intent.getStringExtra(\u201cmessage\u201d);</code> </li> </ul> <pre><code>//public int getIntExtra (String name, int defaultValue)  \nint count = intent.getIntExtra(\u201ccount\", 0);  \n//public double getDoubleExtra (String name, double defaultValue)  \ndouble price = intent.getDoubleExtra(\"price\", 0.00);\n</code></pre>"},{"location":"course_notes/fit5046/#pass-data-from-main-activity-to-the-second-activity","title":"Pass Data from Main Activity to the Second Activity","text":"<pre><code>//In the MainActivity.java\nbinding.startButton.setOnClickListener(new View.OnClickListener() {  \n    @Override  \n    public void onClick(View v) {  \n        Intent intent = new Intent(MainActivity.this, SecondActivity.class);  \n        intent.putExtra(\"message\", \"This is a message from the First Activity\");  \n        startActivity(intent);  \n    } });\n}\n</code></pre> <pre><code>//In the SecondActivity.java\n// here you get and use the intent that was sent  \nfinal Intent intent=getIntent();  \nString msg = intent.getStringExtra(\"message\");  \nbinding.textView.setText(msg);  \nbinding.startButton.setOnClickListener(new View.OnClickListener()  \n{  \n    @Override  \n    public void onClick(View v) {  \n        intent.setClass(SecondActivity.this, MainActivity.class);  \n        startActivity(intent);  \n} });  \n}\n</code></pre>"},{"location":"course_notes/fit5046/#bundle","title":"Bundle","text":"<p>With intents,  use a Bundle to send a set of data items  Multiple data items can be added to one Bundle object and then  it can be added to the Intent by calling putExtras()  </p> <pre><code>Bundle bundle=new Bundle();  \nbundle.putString(\u201cname\u201d, \u201cHelen\u201d);  \nbundle.putString(\u201csurname\u201d, \u201cJones\u201d);  \nbundle.putString(\u201cphone\u201d, \u201c9902000\u201d);  \nintent.putExtras (bundle);  \nstartActivity(intent);\n</code></pre> <p>To retrieve the data from the bundle in the second activity:</p> <pre><code>Bundle bundle=getIntent(). getExtras();  \nString name=bundle.getString(\u201cname\u201d);\n</code></pre>"},{"location":"course_notes/fit5046/#kotlin","title":"Kotlin","text":""},{"location":"course_notes/fit5046/#kotlin-classes","title":"Kotlin Classes","text":"<ul> <li>The primary constructor of a class can be part of the class header  class <code>class Book (var title: String) { /*...*/ }</code> </li> <li>the initialization  code must be placed in initializer blocks <code>class PlayNumber (private var number: Int) {  init{  if(number &lt;10) number=10</code> </li> <li>Kotlin classes are final. To make a class inheritable, use  the open keyword <code>open class Person</code> </li> <li>single colon character ( : ) instead of the Java extends keyword <code>class MyView : View { /*...*/ }</code> </li> <li>No need for the new keyword <code>val playNumber = PlayNumber(100)</code> +Anonymous inner class instances are created using an object  expression <code>binding.clearBtn.setOnClickListener(object : View.OnClickListener {  override fun onClick(v: View?) { ...}</code> </li> </ul>"},{"location":"course_notes/fit5046/#kotlin-functions","title":"Kotlin functions","text":"<ul> <li>all methods are functions (fun)</li> <li>A colon (:) is used in the function for the return type  </li> <li>Functions with parameters and without parameters</li> </ul> <pre><code>fun increment(num: Int): Int {  \n    var numVar =num  \n    return ++numVar;  \n}\n\nfun random(): Int {  \n    return (1..number).random()  \n}\n</code></pre>"},{"location":"course_notes/fit5046/#kotlin-properties","title":"Kotlin Properties","text":"<ul> <li>Kotlin\u2019s default getter and setter  Properties must be initialized or custom accessors must be provided</li> <li>Properties in Kotlin classes are declared as var or val </li> <li>Var is used for mutable properties <code>var message: String=\u201cHello\" OR var message =\u201cHello\"</code> </li> <li>val is used for read-only properties <code>val message: String=\u201cHello\" OR val message =\u201cHello\"</code> </li> </ul> <pre><code>var width: Int =10  \nvar height: Int = 10  \nval area: Int  \nget() = width * heigh\n</code></pre>"},{"location":"course_notes/fit5046/#null-safety","title":"Null Safety","text":"<p>allow nulls and declare a property as nullable, <code>var message: String? =\u201cHello\u201d  message = null</code>  using nullable references: 1. check for null using a condition <code>if (message != null</code> 2. make a safe call by using this symbol ? <code>val msgLength = message?.length</code> 3. Use the !! operator to convert any value to a non-null type  and throw an exception if the value is null <code>val msgLength = message!!.length</code></p>"},{"location":"course_notes/fit5046/#lab-04-viewbinding-and-kotlin","title":"Lab 04 ViewBinding and Kotlin","text":"<p>To learn about View Binding and how to use it To learn how to convert the Java code into Kotlin  </p> <pre><code>//\npublic class MainActivity extends AppCompatActivity {  \n    private ActivityMainBinding binding;  \n    @Override  \n    protected void onCreate(Bundle savedInstanceState) {  \n        super.onCreate(savedInstanceState);  \n        binding = ActivityMainBinding.inflate(getLayoutInflater());  \n        // Get a reference to the root view  \n        View view = binding.getRoot();  \n        // The root view needs to be passed as an input to setContentView()  \n        setContentView(view);  \n        // setContentView(R.layout.activity_main);  \n        //Button reverseButton = findViewById(R.id.reverse_button);\n        binding.reverseButton.setOnClickListener(new View.OnClickListener() {  \n            @Override  \n            public void onClick(View v) {  \n                EditText editText = findViewById(R.id.editMessage);  \n                String builder = new StringBuilder(editText.getText()).reverse().toString();  \n                editText.setText(builder);  \n            }  \n        });  \n        //Button clearButton= findViewById(R.id.clear_button);  \n        binding.clearButton.setOnClickListener(new View.OnClickListener() {  \n            @Override  \n            public void onClick(View v) {  \n            //EditText editText =findViewById(R.id.editMessage);  \n                binding.editMessage.setText(\"\");  \n            }  \n        });  \n    }  \n}\n</code></pre> <p><code>Button reverseButton = findViewById(R.id.reverse_button);</code> is used to find a view from the current layout by its ID and store it as a variable. This is the traditional way of accessing views in Android. On the other hand, <code>binding.reverseButton.setOnClickListener(new View.OnClickListener()</code> is a part of the View Binding library, which generates a binding class at compile-time that allows for type-safe access to views. It creates an instance of the generated binding class and uses it to directly access the view and set the onClickListener for the reverse button.</p>"},{"location":"course_notes/fit5046/#code-challenge","title":"Code challenge","text":"<ol> <li><code>val message: String</code>:  <code>val</code> variable must be initialized when it is declared, <code>val message: String = \"\"</code> or <code>var message: String</code> </li> <li><code>var message: String? = null</code> = <code>var message: String?</code> </li> <li><code>lateinit var message: String</code>: <code>lateinit</code> can only be used with mutable data types (<code>var</code>) and the variable must be assigned a value before it is used, <code>lateinit var message: String = \"\"</code> </li> <li><code>lateinit val message: String</code>: A <code>val</code> must be initialized when it is declared and cannot be changed later <code>lateinit var message: String = \"\"</code> </li> <li><code>lateinit var message: String?</code> <code>lateinit</code> can only be used with mutable data types (<code>var</code>) and the variable must be assigned a value <code>lateinit var message: String? = null</code> </li> </ol>"},{"location":"course_notes/fit5046/#lab-05-spinner","title":"Lab 05 Spinner","text":"<p>To learn about how to use ViewBinding with a spinner in Kotlin language</p>"},{"location":"course_notes/fit5046/#lab-06-kotlin-basic-concepts","title":"Lab 06 Kotlin Basic Concepts","text":"<p>learn about how to create a class and call its functions in Kotlin language  </p>"},{"location":"course_notes/fit5046/#lab-7-multiple-activities-and-intent","title":"Lab 7 - Multiple Activities and Intent","text":"<p>To learn about how to create multiple activities and navigate between them. To learn about how to use Intent to start an activity and pass data between activities  </p>"},{"location":"course_notes/fit5046/#assignment-1-research-paper-analysis-presentation","title":"Assignment 1: Research Paper Analysis Presentation","text":"<p>Assignment 1: Research Paper Analysis Presentation Assignment 1 repo </p>"},{"location":"course_notes/fit5046/#week-4","title":"Week 4","text":""},{"location":"course_notes/fit5046/#lecture_3","title":"Lecture","text":"<p>Fragments; Loading fragments; Sharing data between fragments; LiveData and ViewModel;  SharedPreferences ; Fragments - Kotlin version;  </p>"},{"location":"course_notes/fit5046/#fragment_1","title":"Fragment","text":"<ul> <li>\u662f\u4e00\u4e2a\u8ff7\u4f60\u7684 activity, \u4e5f\u53ef\u4ee5\u5b9e\u73b0 view \u548c\u903b\u8f91  </li> <li>\u6709\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f \uff0c \u4e0d\u8fc7\u548c\u8c03\u7528\u6b64 fragment \u7684 activity \u606f\u606f\u76f8\u5173  </li> <li>\u6bcf\u4e00\u4e2aFragment \u5728\u4f7f\u7528\u65f6\u90fd\u5fc5\u987b\u548c\u4e00\u4e2a activity \u7ed1\u5b9a  </li> <li>\u53ef\u4ee5\u590d\u7528  </li> <li>\u6a21\u5757\u5316\u5fc5\u8981\u7684\u7ec4\u6210\u90e8\u5206  </li> <li>\u53ef\u63a7\u6027 \uff1a \u66f4\u597d\u7684\u4f20\u9012\u53c2\u6570</li> <li>build parts of an app\u2019s user interface  </li> <li>fragment has its own layout and lifecycle  </li> <li>A fragment must be hosted in an activity  </li> <li>The fragment has a view hierarchy that attaches to the host\u2019s view hierarchy  </li> <li>Fragments provide modularity and reusability, and allows well-structured design of your UI and better management of your code  </li> </ul>"},{"location":"course_notes/fit5046/#fragments-lifecycle","title":"Fragment\u2019s Lifecycle","text":"<ul> <li>A fragment has its own lifecycle that is directly affected  by its host activity's lifecycle  </li> <li>A fragment's view has a separate Lifecycle  </li> <li>FragmentManager attaches fragments to their host  activity and detaches them: </li> <li>onAttach() is called when the fragment is added to a  FragmentManager and attached to its host activity  </li> <li>onDetach() is called when the fragment is removed from a  FragmentManager and detached from its host activity  </li> </ul>"},{"location":"course_notes/fit5046/#fragment-class-and-fragment-xml-layout","title":"Fragment Class and Fragment XML Layout","text":"<ul> <li>To load a fragment in an activity, you need to use a FragmentManager and a FragmentTransaction  </li> <li>You can use fragmentTransaction.replace() or fragmentTransaction.add() to load a fragment into a container view in your activity\u2019s layout  </li> <li>You can also load a fragment from another fragment using childFragmentManager  </li> <li>You can add fragments to a back stack that is managed by the activity, allowing you to reverse the changes  </li> <li>You should use a FrameLayout or another layout as your container view for fragments, instead of using <code>&lt;fragment&gt;</code>  tags in your XML file</li> </ul>"},{"location":"course_notes/fit5046/#loading-fragments","title":"Loading fragments","text":"<ul> <li>To share data between fragments, you should not have fragments communicate directly with other fragments or with their host activity  </li> <li>The Fragment library provides two options for communication: a shared ViewModel and the Fragment Result API  </li> <li>A shared ViewModel is an ideal choice when you need to share persistent data with any custom APIs  </li> <li>A shared ViewModel can be accessed by multiple fragments or by fragments and their host activity using a ViewModelProvider  </li> <li>A shared ViewModel can store and manage UI data using LiveData or MutableLiveData classes  </li> <li>The Fragment Result API is an ideal choice when you need to share a one-time result with data that can be placed in a Bundle  </li> <li>The Fragment Result API allows you to pass and receive results between fragments using setFragmentResult() and setFragmentResultListener() methods  </li> <li>The Fragment Result API also allows you to pass and receive results between parent and child fragments or between fragments and their host activity </li> </ul>"},{"location":"course_notes/fit5046/#livedata-and-viewmodel_1","title":"LiveData and ViewModel","text":"<p>LiveData + \u6682\u65f6\u5b58\u50a8\u6570\u636e\u7684\u4e00\u79cd class \u683c\u5f0f + \u4ee5 implement observe \u89c2\u5bdf\u65b9\u6cd5 \uff0c \u6765\u76d1\u542c\u6570\u636e\u7684\u6539\u53d8 \uff0c \u5176 back method \u662f onChanged () + \u4f7f\u7528\u5176\u5b50\u7c7b MutableLiveData \u6765\u6539\u53d8 live data \u4e2d\u7684\u6570\u636e (setValue () \uff0c postValue () \uff09 + LiveData is an observable data holder class that respects the lifecycle of other app components + LiveData only updates app component observers that are in an active lifecycle state (STARTED or RESUMED) + LiveData automatically removes observers when their lifecycle state changes to DESTROYED + LiveData ensures that your UI matches your data state and avoids memory leaks, crashes, manual lifecycle handling, and configuration changes issues  </p> <p>ViewModel + \u8de8fragment \u751f\u5b58\u7684\u4e00\u79cd\u6682\u65f6\u5b58\u50a8\u6570\u636e\u7684 obj \u7c7b \uff0c \u548c activity \u7ed1\u5b9a + \u901a\u5e38 hold live data object + \u4f7f\u7528\u573a\u666f\u4e3e\u4f8b \uff1a 1. \u6267\u884c\u8017\u65f6\u64cd\u4f5c\u65f6 \uff0c \u53ef\u4ee5\u4f7f view model \u548c fragment/activity \u8131\u79bb \uff0c \u540e\u53f0\u4e0b\u8f7d; 2 \uff0e \u6a2a\u7ad6\u5c4f\u5207\u6362\u65f6 \uff0c fragment\u4f1a\u7ecf\u5386\u9500\u6bc1\u548c\u91cd\u5efa \uff0c \u800c\u50a8\u5b58\u5728view model\u4e2d\u7684\u6570\u636e\u4e0d\u4f1a\u9500\u6bc1 + ViewModel is a class that stores and manages UI data + ViewModel allows the app\u2019s data to survive configuration changes such as screen rotation + ViewModel can be accessed by multiple fragments or by fragments and their host activity using a ViewModelProvider   + ViewModel can store and manage LiveData objects using MutableLiveData or LiveData classes</p>"},{"location":"course_notes/fit5046/#sharedpreferences","title":"SharedPreferences","text":"<ul> <li>Android \u5e73\u53f0\u4e0a\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5b58\u50a8\u7c7b \uff08 \u6301\u4e45\u7c7b\u50a8\u5b58 \uff09</li> <li>\u672c\u5730 XM L \uff08 Key-value \u683c\u5f0f \uff09 \u6587\u4ef6 \uff0c \u7528\u6765\u4fdd\u5b58\u5e94\u7528\u7684\u4e00\u4e9b\u5e38\u7528\u914d\u7f6e  </li> <li>\u4f5c\u4e1a\u91cc\u6211\u4eec\u53ef\u4ee5\u4fdd\u5b58\u767b\u5f55\u7684\u7528\u6237\u4fe1\u606f \uff08 \u7528\u6237\u4fe1\u606f\u52a0\u5bc6 \uff0c \u5bc6\u7801\u52a0\u5bc6 \uff09 </li> <li>fragment /activity \u8df3\u8f6c\u65f6\u5019\u7684\u50a8\u5b58\u5730\u5740  </li> <li>\u53ef\u8fdb\u4e00\u6b65\u5c01\u88c5\u63d0\u5347\u4ee3\u7801\u53ef\u8bfb\u6027\u548c\u805a\u5408\u6027</li> <li>SharedPreferences is a way to store and retrieve small amounts of primitive data as key/value pairs in an XML file on the device storage  </li> <li>SharedPreferences can be used to save user preferences or data that can be used in different activities within the app  </li> <li>SharedPreferences are kept private within the scope of the application and persist across user sessions  </li> <li>To create SharedPreferences, you need to call getSharedPreferences() method with a name and a mode (usually MODE_PRIVATE)  </li> <li>To access and modify SharedPreferences, you need to use a SharedPreferences.Editor object that provides methods such as putString(), putInt(), remove(), clear(), etc.  </li> <li>To read SharedPreferences, you need to use methods such as getString(), getInt(), contains(), getAll(), etc  </li> </ul>"},{"location":"course_notes/fit5046/#sharedpreferences-to-write-and-save","title":"SharedPreferences to write and save","text":"<p>Save key-value data \u00a0|\u00a0 Android Developers 1. \u521d\u59cb\u5316SP\uff0ckey\u4ee3\u8868\u8fd9\u4e2aSP\u7684\u8868\u540d\uff0cmode\u662f\u8fd9\u4e2asp\u5141\u8bb8\u7684\u8bbf\u95ee\u8303\u56f4 <code>SharedPreferences sharedPref = requireActivity().getSharedPreferences(\u201cPREFERENCE_FILE_NAME\", Context.MODE_PRIVATE);</code> <code>SharedPreferences = Context.getSharedPreferences(String name, int mode)</code> 2. \u8c03\u7528Edit\uff0c\u7f16\u8f91SP To write to a SharedPreferences file, we need to create an instance  of Editor interface (SharedPreferences.Editor) by calling edit()  <code>SharedPreferences.Editor spEditor = sharedPref.edit(); spEditor.putString(\u201cmessage\", message);</code> You can add key-value pairs also using putInt(), putBoolean(),  putFloat(), putLong(), putStringSet() 3. \u66f4\u6539SP\u4e4b\u540e\u8981apply\u6216\u8005commit \uff08get\u8bfb\u53d6\u6570\u636e\u65f6\u5019\u4e0d\u7528 All changes that are made using the editor are batched, and not  written to the SharedPreferences file until you call commit() or  apply(); The commit() method returns a Boolean value true if successful <code>spEditor.apply();</code> </p>"},{"location":"course_notes/fit5046/#sharedpreferences-read","title":"SharedPreferences read","text":"<ol> <li>\u521d\u59cb\u5316SP\uff0ckey\u4ee3\u8868\u8fd9\u4e2aSP\u7684\u8868\u540d\uff0cmode\u662f\u8fd9\u4e2asp\u5141\u8bb8\u7684\u8bbf\u95ee\u8303\u56f4 <code>SharedPreferences = Context.getSharedPreferences(KEY, Context.MODE_PRIVATE)</code> </li> <li>\u8c03\u7528getBoolean / getInt / getString \u8bfb\u53d6\u6570\u636e\uff0cdefaultValue\u662f\u4f5c\u4e3avalue\u4e3anull\u7684\u65f6\u5019\u7684\u8fd4\u56de\u503c\uff08\u53ef\u9009var\uff09<code>String message= sharedPref.getString(\"message\",null);</code> </li> <li>\u4e0d\u7528apply\u6216\u8005commit</li> </ol>"},{"location":"course_notes/fit5046/#fragments-kotlin-version","title":"Fragments - Kotlin version","text":"<ul> <li>To create a fragment in Kotlin, you need to extend the Fragment class or its subclasses and provide your fragment\u2019s layout resource to the base constructor  </li> <li>To add a fragment to an activity, you need to use a FragmentContainerView that defines where the fragment should be placed within the activity\u2019s view hierarchy  </li> <li>You can add a fragment either by defining it in your activity\u2019s layout file using <code>&lt;fragment&gt;</code> tag or by programmatically adding it using a FragmentManager and a FragmentTransaction  </li> <li>You can communicate between fragments and activities using interfaces, shared ViewModel, or Fragment Result API </li> <li>You can animate transitions between fragments using animations or transitions</li> </ul>"},{"location":"course_notes/fit5046/#tutorial_2","title":"Tutorial","text":"<ul> <li>To learn how to create, add and load fragments  </li> <li>To learn how to pass data between fragments using different options:  <ul> <li>SharedPreferences (persistent)  </li> <li>LiveData and ViewModel  </li> </ul> </li> <li>To learn how to use View Binding with fragments  </li> <li>To learn how to achieve all these tasks in Kotlin</li> </ul>"},{"location":"course_notes/fit5046/#java-version","title":"Java version","text":"<p>Include the following dependencies for Fragment, LiveData and ViewModel in the module level gradle,  and set the view binding to true  </p> <pre><code>//build.gradle\n    // This block enables specific build features  \n    buildFeatures {  \n        // This line enables the View Binding feature for the application  \n        viewBinding true  \n    }  \n}  \n\ndependencies {  \n    implementation 'androidx.appcompat:appcompat:1.6.0'  \n    // This line imports the AppCompat library  \n    implementation 'com.google.android.material:material:1.7.0'  \n    // This line imports the Material Design Library  \n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'  \n    // This line imports the ConstraintLayout library  \n    implementation 'androidx.fragment:fragment:1.5.5'  \n    // This line imports the AndroidX Fragment library  \n    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.1'  \n    // This line imports the ViewModel component of the Android Lifecycle library  \n    implementation 'androidx.lifecycle:lifecycle-livedata:2.5.1'  \n    // This line imports the LiveData component of the Android Lifecycle library  \n    testImplementation 'junit:junit:4.13.2'  \n    // This line imports the JUnit testing framework for unit testing  \n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'  \n    // This line imports the JUnit library for instrumentation testing  \n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'  \n    // This line imports the Espresso library for UI testing  \n}\n</code></pre> <p>Replace the code in activity_main.xml with the code below. This includes two buttons to load each  fragment and a container (FragmentContainerView) that the fragments will be loaded into it  \u6240\u6709\u7684Fragment\u5efa\u8bae\u90fd\u5b58\u5728FragmentContainerView\u4e2d,\u4f7f\u7528\u65f6\u76f4\u63a5\u653e\u7f6e\u5728layout\u4e2d</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  \n&lt;LinearLayout  \n    xmlns:android=\"http://schemas.android.com/apk/res/android\"  \n    android:layout_width=\"match_parent\"  \n    android:layout_height=\"match_parent\"  \n    android:orientation=\"vertical\"&gt;  \n\n    &lt;Button        android:id=\"@+id/addButton\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"Add Fragment\"  \n        android:textSize=\"20sp\" /&gt;  \n\n    &lt;Button        android:id=\"@+id/viewButton\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:layout_marginTop=\"10dp\"  \n        android:text=\"View Fragment\"  \n        android:textSize=\"20sp\" /&gt;  \n\n    &lt;androidx.fragment.app.FragmentContainerView        android:id=\"@+id/fragment_container_view\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"match_parent\"  \n        android:layout_marginTop=\"10dp\" /&gt;  \n&lt;/LinearLayout&gt;\n</code></pre> <p>the layout folder, choose: New &gt; XML &gt; Layout XML File  Add two new XML layout files, called add_fragment and view_fragment  the code in the <code>add _fragment.xml</code> layout with the code below. The layout has one EditText  and two buttons to add a message and to clear the EditText  </p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  \n&lt;LinearLayout  \n    xmlns:android=\"http://schemas.android.com/apk/res/android\"  \n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"  \n    android:id=\"@+id/activity_main\"  \n    android:layout_width=\"match_parent\"  \n    android:layout_height=\"match_parent\"  \n    android:orientation=\"vertical\"&gt;  \n\n    &lt;!-- // This block creates an EditText view where the user can enter a message --&gt;  \n    &lt;EditText  \n        android:id=\"@+id/editText\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:hint=\"Enter a message\" /&gt;  \n\n    &lt;!--  // This block creates a button that executes an action when clicked --&gt;  \n    &lt;Button  \n        android:id=\"@+id/addButton\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"Add\" /&gt;  \n\n    &lt;!--  // This block creates a button that executes an action when clicked --&gt;  \n    &lt;Button  \n        android:id=\"@+id/clearButton\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"Clear\" /&gt;  \n\n&lt;/LinearLayout&gt;\n</code></pre> <p>the code in the view_fragment.xml layout with the code below. The layout includes one  TextView that will display the message entered in the AddFragment  </p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  \n&lt;!--  // This block creates a parent LinearLayout with no orientation and match_parent width and height --&gt;  \n&lt;LinearLayout  \n    xmlns:android=\"http://schemas.android.com/apk/res/android\"  \n    android:layout_width=\"match_parent\"  \n    android:layout_height=\"match_parent\"&gt;  \n\n    &lt;!--  // This block creates a TextView element with match_parent width, wrap_content height, and 20sp text size --&gt;  \n    &lt;TextView  \n        android:id=\"@+id/text_message\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:textSize=\"20sp\" /&gt;  \n\n&lt;/LinearLayout&gt;\n</code></pre> <p>Locate the folder  where the MainActivity.java is, and right click on it and add two Java classes one by one, called  AddFragment.java and ViewFragment.java  These fragment classes must extend Fragment from the library of androidx.fragment.app.Fragment fragments \u4e2d\u7684\u4ee3\u7801\u4e3b\u8981\u662f\u5728 onCreateView() \u65b9\u6cd5\u4e2d\u7f16\u5199\u7684\u3002\u6211\u4eec\u5c06\u4f7f\u7528 SharedPreferences \u6765\u5b58\u50a8\u7531\u4e00\u4e2a\u7247\u6bb5\u6dfb\u52a0\u7684\u6d88\u606f\uff0c\u5e76\u5728\u53e6\u4e00\u4e2a\u7247\u6bb5\uff08\u89c6\u56fe\u7247\u6bb5\uff09\u4e2d\u68c0\u7d22\u548c\u663e\u793a\u5b83\u3002 SharedPreferences \u5c06\u6570\u636e\u6c38\u4e45\u5b58\u50a8\u5728 xml \u6587\u4ef6\u4e2d\uff0c\u56e0\u6b64\u5b83\u53ef\u80fd\u4e0d\u662f\u5728\u6b64\u5904\u7684\u7247\u6bb5\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u6211\u4eec\u5c06\u5176\u5305\u542b\u5728\u6b64\u5904\u4ee5\u4fbf\u60a8\u4e86\u89e3 Android \u4e2d\u7684\u53e6\u4e00\u4e2a\u6982\u5ff5\u3002\u7a0d\u540e\uff0c\u6211\u4eec\u5c06\u4e3a\u6b64\u76ee\u7684\u4f7f\u7528 LiveData\u3002\u6211\u4eec\u4e5f\u5728\u7247\u6bb5\u4e2d\u4f7f\u7528\u89c6\u56fe\u7ed1\u5b9a\uff0c\u4f46\u7531\u4e8e\u7247\u6bb5\u7684\u89c6\u56fe\u5728\u7247\u6bb5\u672c\u8eab\u4e4b\u524d\u88ab\u9500\u6bc1\uff0c\u56e0\u6b64\u5b83\u7684\u65b9\u6cd5\u662f\u6e05\u7406\u5f15\u7528\u7684\u6700\u4f73\u4f4d\u7f6e\u3002\u6211\u4eec\u5728 onDestroyView() \u65b9\u6cd5\u4e2d\u5c06\u7ed1\u5b9a\u8bbe\u7f6e\u4e3a null\u3002</p> <pre><code>package com.example.fragmentjava;  \n\nimport android.content.Context;  \nimport android.content.SharedPreferences;  \nimport android.os.Bundle;  \nimport android.view.LayoutInflater;  \nimport android.view.View;  \nimport android.view.ViewGroup;  \n\nimport androidx.fragment.app.Fragment;  \n\nimport com.example.fragmentjava.databinding.AddFragmentBinding;  \n\npublic class AddFragment extends Fragment {  \n\n    // Declaration of the addBinding variable with AddFragmentBinding data type  \n    private AddFragmentBinding addBinding;  \n\n    // Constructor for the AddFragment class  \n    public AddFragment(){}  \n\n    // onCreateView() method, called when the view is created  \n    @Override  \n    public View onCreateView(LayoutInflater inflater, ViewGroup container,  \n                             Bundle savedInstanceState) {  \n\n        // Inflate the View for this fragment  \n        addBinding = AddFragmentBinding.inflate(inflater, container, false);  \n\n        // Create a View object from the inflated binding  \n        View view = addBinding.getRoot();  \n\n        // Set up an onClickListener for the addButton  \n        addBinding.addButton.setOnClickListener(new View.OnClickListener() {  \n            @Override  \n            public void onClick(View v) {  \n                // Get the message string from editText  \n                String message = addBinding.editText.getText().toString();  \n\n                // If the message is not empty  \n                if (!message.isEmpty() ) {  \n                    // Store the message in SharedPreferences with a key \"message\"  \n                    SharedPreferences sharedPref= requireActivity().  \n                            getSharedPreferences(\"Message\", Context.MODE_PRIVATE);  \n                    SharedPreferences.Editor spEditor = sharedPref.edit();  \n                    spEditor.putString(\"message\", message);  \n                    spEditor.apply();  \n                }  \n            }  \n        });  \n\n        // Set up an onClickListener for the clearButton  \n        addBinding.clearButton.setOnClickListener(new View.OnClickListener() {  \n            @Override  \n            public void onClick(View v) {  \n                // Clear the editText view  \n                addBinding.editText.setText(\"\");  \n            }  \n        });  \n\n        // Return the View object  \n        return view;  \n    }  \n\n    // onDestroyView() method, called when the fragment's view is destroyed  \n    @Override  \n    public void onDestroyView() {  \n        super.onDestroyView();  \n        // Set addBinding variable to null to avoid memory leaks  \n        addBinding = null;  \n    }  \n}\n</code></pre> <p>The code\u00a0<code>AddFragmentBinding.inflate(inflater, container, false)</code>\u00a0is inflating a layout for the AddFragment using the\u00a0<code>AddFragmentBinding</code>\u00a0class generated by data binding.</p> <p><code>inflater</code>\u00a0is an object of\u00a0<code>LayoutInflater</code>\u00a0class, and\u00a0<code>container</code>\u00a0is the ViewGroup container that provides the layout parameters for the fragment view. The\u00a0<code>false</code>\u00a0parameter indicates that the fragment view should not be attached to the container immediately.</p> <p><code>AddFragmentBinding</code>\u00a0is a generated class that is used to bind the views defined in the layout XML file to the code. It's a more convenient and efficient way of accessing views than calling\u00a0<code>findViewById()</code>. Once the layout is inflated, the\u00a0<code>binding</code>\u00a0object contains references to all the views in the layout, and can be used to modify or access them in the fragment's code.  </p> <p>Replace the code in ViewFragment.java with the code below. We use SharedPreferences to retrieve the message that was entered in the AddFragment  ```java  package com.example.fragmentjava;  </p> <p>import android.content.Context; import android.content.SharedPreferences; import android.os.Bundle; import android.view.LayoutInflater; import android.view.View; import android.view.ViewGroup;  </p> <p>import androidx.fragment.app.Fragment;  </p> <p>import com.example.fragmentjava.databinding.ViewFragmentBinding;  </p> <p>// This is the class declaration for the ViewFragment class that extends Fragment public class ViewFragment extends Fragment {  </p> <pre><code>// Declaration of the binding variable with ViewFragmentBinding data type  \nprivate ViewFragmentBinding binding;\n\n// Constructor for the ViewFragment class  \npublic ViewFragment(){}\n\n// onCreateView() method, called when the view is created  \n@Override  \npublic View onCreateView(LayoutInflater inflater, ViewGroup container,  \n                         Bundle savedInstanceState) {\n\n    // Inflate the View for this fragment using the binding  \n    binding = ViewFragmentBinding.inflate(inflater, container, false);  \n    View view = binding.getRoot();\n\n    // Read the text message from SharedPreferences\n    // Open the shared preferences for this app's named \"Message\" file.\n    // This file is private and can't be accessed by other apps.\n    SharedPreferences sharedPref= requireActivity().\n            getSharedPreferences(\"Message\", Context.MODE_PRIVATE);\n    // Retrieve the string value associated with the key \"message\" from \n    // the shared preferences file. If the value is not found or has been \n    // removed, the default value is null.\n    String message = sharedPref.getString(\"message\", null);\n\n    // Set text in textView to the retrieved message  \n    binding.textMessage.setText(\"Message from AddFragment: \" + message);\n\n    // Return the View object  \n    return view;  \n}\n\n// onDestroyView() method, called when the fragment's view is destroyed  \n@Override  \npublic void onDestroyView() {  \n    super.onDestroyView();  \n    // Set binding variable to null to avoid memory leaks  \n    binding = null;  \n}\n</code></pre> <p>}</p> <pre><code>\nReplace the code in MainActivity.java with the code below. When each button is clicked, it loads the corresponding fragment in the fragment container. This requires FragmentManager and FragmentTransaction to replace the existing fragment with the next one. When the add button is clicked the existing fragment is replaced with the AddFragment, and when the view button is clicked, the existing fragment is replaced with the ViewFragment. These fragments are loaded inside a FragmentContainerView, that is added to the activity_main.xml with the id of fragment_container_view  \n```java\npublic class MainActivity extends AppCompatActivity {\n\n    // Declare an instance variable of the ActivityMainBinding class as a member field of the MainActivity class\n    private ActivityMainBinding binding;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        // Inflate the layout for this activity using the provided LayoutInflater\n        binding = ActivityMainBinding.inflate(getLayoutInflater());\n        View view = binding.getRoot();\n\n        // Set the content view of this activity to the root view of the inflated binding\n        setContentView(view);\n\n        // Set an onClickListener on the View button, which replaces the current fragment view with a new ViewFragment\n        binding.viewButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                replaceFragment(new ViewFragment());\n            }\n        });\n\n        // Set an onClickListener on the Add button, which replaces the current fragment view with a new AddFragment\n        binding.addButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                replaceFragment(new AddFragment());\n            }\n        });\n    }\n\n    // A private helper method used to replace the current fragment with a new fragment\n    private void replaceFragment(Fragment nextFragment) {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\n\n        // Replace the fragment in the container view with the provided nextFragment\n        fragmentTransaction.replace(R.id.fragment_container_view, nextFragment);\n\n        // Commit the transaction to the back stack and execute it\n        fragmentTransaction.commit();\n    }\n}\n\n</code></pre>"},{"location":"course_notes/fit5046/#kotlin-version","title":"Kotlin version","text":"<p>set the view binding to true in the module level gradle file and add the same dependencies we added to the module level gradle</p> <pre><code>\nandroid {  \n     // This will enable View Binding for your project and automatically  \n    // generate the necessary binding classes for your layout files    // in the androidx.viewbinding package.    \n    buildFeatures {  \n        // Enable View Binding for your project  \n        viewBinding true  \n    }  \n\n}  \ndependencies {  \n    //easily accessing ViewModel and navigation arguments within your Fragments.  \n    implementation 'androidx.fragment:fragment-ktx:1.5.5'  \n    // manage data and state across configuration changes.  \n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'  \n    // u can use liveData {} builder for creating LiveData instances and  \n    // observe() Kotlin extension for observing LiveData instances in a    // LifecycleOwner (Activity or Fragment).    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'  \n}\n\n</code></pre> <p>add two XML fragments, called view_fragment.xml and add_fragment.xml and use  the same code provided pervious find where MainActivity.java is, right-click on it. In the menu, click on New and then Select  Kotlin File/Class, enter AddFragment for the name and make sure Class is selected. Repeat the same  steps and create ViewFragment.kt.  </p> <pre><code>//\u00a0display a message stored in SharedPreferences in a TextView.\nclass ViewFragment: Fragment() {\n    // Declare a private nullable variable to hold the ViewBinding.\n    private var _binding: ViewFragmentBinding? = null\n\n    // Create a binding property that returns the binding or throws an exception if it's null.\n    private val binding get() = _binding!!\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        // Inflate the ViewFragmentBinding and assign it to _binding.\n        _binding = ViewFragmentBinding.inflate(inflater, container, false)\n\n        // Get the SharedPreferences instance for the \"Message\" key.\n        val sharedPref: SharedPreferences = requireActivity().getSharedPreferences(\n            \"Message\",\n            Context.MODE_PRIVATE\n        )\n\n        // Get the value of the \"message\" key from SharedPreferences.\n        val message = sharedPref.getString(\"message\", null)\n\n        // Set the text of the textMessage TextView to display the message from SharedPreferences.\n        binding.textMessage.text = \"Message from AddFragment: $message\"\n\n        // Return the root view of the binding.\n        return binding.root\n    }\n\n    override fun onDestroyView() {\n        super.onDestroyView()\n\n        // Set the _binding variable to null to release the ViewBinding.\n        _binding = null\n    }\n}\n\n</code></pre> <p><code>override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? { ... }</code>: This method is called when the fragment is being initialized. It inflates the layout file\u00a0<code>ViewFragmentBinding</code>, gets the message stored in SharedPreferences and sets the text of the\u00a0<code>textMessage</code>\u00a0TextView to display it. It then returns the root view of the binding.  </p> <pre><code>\n//  \u00a0accepting input from the user and then saving that input to\u00a0`SharedPreferences`\nclass AddFragment : Fragment() {  \n    // Declare a private nullable variable to hold the ViewBinding.  \n    private var _binding: AddFragmentBinding? = null  \n\n    // Create a binding property that returns the binding or throws an exception if it's null.  \n    private val binding get() = _binding!!  \n\n    override fun onCreateView(  \n        inflater: LayoutInflater,  \n        container: ViewGroup?,  \n        savedInstanceState: Bundle?  \n    ): View? {  \n        // Inflate the AddFragmentBinding and assign it to _binding.  \n        _binding = AddFragmentBinding.inflate(inflater, container, false)  \n\n        // Get the SharedPreferences instance for the \"Message\" key.  \n        val sharedPref: SharedPreferences = requireActivity(). getSharedPreferences(  \n            \"Message\",  \n            Context.MODE_PRIVATE  \n        )  \n\n        // Set an OnClickListener on the addButton to store the message in SharedPreferences.  \n        binding.addButton.setOnClickListener(object : View.OnClickListener {  \n            override fun onClick(view: View?) {  \n                // Get the message from the editText.  \n                val message: String = binding.editText.text.toString()  \n\n                // If the message is not empty, save it to SharedPreferences.  \n                if (message.isNotEmpty()) {  \n                    val spEditor = sharedPref.edit()  \n                    spEditor.putString(\"message\", message)  \n                    spEditor.apply()  \n                }  \n            }  \n        })  \n\n        // Set an OnClickListener on the clearButton to clear the editText.  \n        binding.clearButton.setOnClickListener(object : View.OnClickListener {  \n            override fun onClick(view: View?) {  \n                binding.editText.setText(\"\")  \n            }  \n        })  \n\n        // Return the root view of the binding.  \n        return binding.root  \n    }  \n\n    override fun onDestroyView() {  \n        super.onDestroyView()  \n\n        // Set the _binding variable to null to release the ViewBinding.  \n        _binding = null  \n    }  \n}\n</code></pre> <p><code>override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? { ... }</code>: This method is called when the fragment is being initialized. It inflates the layout file\u00a0<code>AddFragmentBinding</code>\u00a0and sets up two click listeners on the\u00a0<code>addButton</code>\u00a0and\u00a0<code>clearButton</code>. It then returns the root view of the binding.</p>"},{"location":"course_notes/fit5046/#week-5-android-navigation","title":"Week 5 Android Navigation","text":""},{"location":"course_notes/fit5046/#lecture_4","title":"Lecture","text":"<ul> <li>Navigation in Material Design  </li> <li>Navigation Drawer  </li> <li>Jetpack Navigation Components (NavigationUI  NavHost  NavController  Navigation Graph)</li> </ul>"},{"location":"course_notes/fit5046/#material-design-navigation","title":"Material Design - Navigation","text":"<p>Three types of navigation suggested in Material Design  Understanding navigation - Material Design Get started with the Navigation component \u00a0|\u00a0 Android Developers </p> <ol> <li>Lateral navigation  \u6a2a\u5411\u5bfc\u822a \u5e73\u7ea7\u9875\u9762\u95f4\u5207\u6362Lateral Navigation occurs between screens  at the same level of hierarch; Using Navigation Drawer, Tabs, or Navigation Bar  </li> <li>Forward navigation  \u524d\u5411\u5bfc\u822a \u53bb\u5f80\u5b50\u7ea7\u9875\u9762Downward from a parent screen to a child screen; Sequentially through a flow; Directly from one screen to any other in the app; Implemented using: Cards or lists; Buttons that lead to another screen; In-app search on one or more screens; Links within the content </li> <li>Reverse navigation  \u53cd\u5411\u5bfc\u822a \u53bb\u5f80\u7236\u7ea7\u9875\u9762 Reverse navigation refers to backward movement between screens. It can move users chronologically through their recent screen history, or upwards through an app's hierarchy. </li> </ol>"},{"location":"course_notes/fit5046/#navigation-drawer_1","title":"Navigation Drawer","text":"<p>avigation drawer is used for navigation between destinations (screens) in an Android application Navigation drawer \u2013 Material Design 3  avigation drawers are recommended when your app has 5 or more top-level destinations or your app requires quick navigation between unrelated destinations  Two types of navigation 1. Standard navigation drawer Standard permanent drawers with a fixed position on the screen that are  permanently visible; can be opened and closed (with an inlay style  2. Modal navigation drawer use a scrim to block interaction with the rest of  an app\u2019s content Modal navigation drawers are suitable for small-sized screens where  space is limited  </p>"},{"location":"course_notes/fit5046/#navigation-rail","title":"Navigation Rail","text":"<p>It is similar to Bottom Navigation in layout and functionality, but it is placed on the left-hand side of the screen instead of the bottom. Navigation Rail can be used to display a set of navigation options, as well as to provide quick actions for the user. Navigation rail \u2013 Material Design 3 </p>"},{"location":"course_notes/fit5046/#navigation-drawer-components","title":"Navigation Drawer Components","text":"<p>Navigation drawer - Material Design </p> <pre><code>1.  Container\n2.  Header (optional)\n3.  Divider (optional)\n4.  Active text overlay\n5.  Active text\n6.  Inactive text\n7.  Subtitle (optional)\n8.  Scrim (optional)\n</code></pre> <p>With a navigation drawer, we must add the header, the menu and the app bar files: + The drawable folder: side_nav_ bar.xml + The layout folder: activity_main.xml; app_bar_main.xml; content main.xml; nav header main.xml + The menu folder: navigation_menu.xml;  + The values/themes folder: themes.xml</p>"},{"location":"course_notes/fit5046/#the-header-of-the-drawer","title":"The Header of the Drawer","text":"<p>The header area of a Navigation Drawer is a UI component that is displayed at the top of the DrawerLayout, above the list of menu items. It provides a space to display information about the user, such as their name, profile picture, and other relevant details. To add a header area to your Navigation Drawer, follow these steps: 1.  Create a new layout file for the header view, such as <code>layout/nav_header_main.xml</code>. This file should define the layout of the header area, and should include any views you want to display.  </p> <pre><code>&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"150dp\"\n    android:background=\"@color/colorPrimary\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    &gt;\n\n    &lt;ImageView\n        android:id=\"@+id/profile_image\"\n        android:layout_width=\"64dp\"\n        android:layout_height=\"64dp\"\n        android:src=\"@drawable/profile_image\"\n        android:contentDescription=\"@string/profile_image_description\"\n        /&gt;\n\n    &lt;TextView\n        android:id=\"@+id/user_name\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/user_name\"\n        android:textColor=\"@android:color/white\"\n        android:textSize=\"20sp\"\n        android:textStyle=\"bold\"\n        /&gt;\n\n    &lt;TextView\n        android:id=\"@+id/user_email\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/user_email\"\n        android:textColor=\"@android:color/white\"\n        android:textSize=\"14sp\"\n        /&gt;\n\n&lt;/LinearLayout&gt;\n\n</code></pre> <ol> <li>Include the header view in your NavigationView layout. This can be done by adding the \u201capp:headerLayout\u201d attribute to the NavigationView, and setting it to the ID of the layout file you created in the previous step.</li> </ol> <pre><code>&lt;com.google.android.material.navigation.NavigationView\n    android:id=\"@+id/navigation_view\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"start\"\n    app:headerLayout=\"@layout/navigation_drawer_header\"\n    app:menu=\"@menu/navigation_drawer_menu\" /&gt;\n\n</code></pre> <ol> <li>In your code, you can use the \u201cfindViewById()\u201d method to find any views in the header view, and set their values as needed.</li> </ol> <pre><code>val headerView = navigationView.getHeaderView(0)\nval profileImage = headerView.findViewById(R.id.profile_image)\nval userName = headerView.findViewById(R.id.user_name)\nval userEmail = headerView.findViewById(R.id.user_email)\n\n// Set the values of the views\nprofileImage.setImageResource(R.drawable.my_profile_image)\nuserName.text = \"John Doe\"\nuserEmail.text = \"john.doe@gmail.com\"\n\n</code></pre>"},{"location":"course_notes/fit5046/#navigation-drawer-menu-and-how-to-make","title":"Navigation Drawer menu and how to make","text":"<p>  To add a <code>Toolbar</code> widget to your app, you can follow these steps:</p> <ol> <li>Add the <code>Toolbar</code> widget to your layout file. You can do this by adding the following code to your XML layout file:</li> </ol> <pre><code>&lt;androidx.appcompat.widget.Toolbar\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    android:background=\"?attr/colorPrimary\"\n    app:titleTextColor=\"@android:color/white\"\n    app:title=\"@string/app_name\"\n    /&gt;\n</code></pre> <p>This code creates a new <code>Toolbar</code> widget with an ID of <code>toolbar</code>, and sets several attributes, such as its width and height, its background color, and its title text and color.</p> <ol> <li>Set the <code>Toolbar</code> as the app bar. You can do this by calling the <code>setSupportActionBar()</code> method in your activity's <code>onCreate()</code> method, like this:</li> </ol> <pre><code>@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    Toolbar toolbar = findViewById(R.id.toolbar);\n    setSupportActionBar(toolbar);\n}\n</code></pre> <p>This code finds the <code>Toolbar</code> widget by its ID, and then sets it as the app bar using the <code>setSupportActionBar()</code> method.</p> <ol> <li>Customize the app bar as needed. You can customize the app bar by changing its layout, adding buttons or menu items, applying custom styles or themes, and so on. You can do this by modifying the <code>app_bar_main.xml</code> layout file, which defines the content and appearance of the app bar.</li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"&gt;\n\n    &lt;!-- Menu item for the Home Fragment --&gt;\n    &lt;item\n        android:id=\"@+id/nav_home_fragment\"\n        android:title=\"Home Fragment\" /&gt;\n\n    &lt;!-- Menu item for the Add Fragment --&gt;\n    &lt;item\n        android:id=\"@+id/nav_add_fragment\"\n        android:title=\"Add Fragment\" /&gt;\n\n    &lt;!-- Menu item for the View Fragment --&gt;\n    &lt;item\n        android:id=\"@+id/nav_view_fragment\"\n        android:title=\"View Fragment\" /&gt;\n\n&lt;/menu&gt;\n</code></pre>"},{"location":"course_notes/fit5046/#apply-navigationview-in-activity_mainxml","title":"apply NavigationView in activity_main.xml","text":"<ol> <li>Add the NavigationView widget inside the DrawerLayout widget  </li> </ol> <pre><code>&lt;androidx.drawerlayout.widget.DrawerLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/drawer_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"&gt;\n\n    &lt;!-- Main content layout --&gt;\n    &lt;LinearLayout\n        android:id=\"@+id/main_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\"&gt;\n\n        &lt;!-- Toolbar --&gt;\n        &lt;include layout=\"@layout/toolbar\"/&gt;\n\n        &lt;!-- Other views --&gt;\n        ...\n\n    &lt;/LinearLayout&gt;\n\n    &lt;!-- Navigation Drawer --&gt;\n    &lt;com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/nav_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_gravity=\"start\"\n        android:layout_height=\"match_parent\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/nav_header\"\n        app:menu=\"@menu/drawer_menu\"/&gt;\n\n&lt;/androidx.drawerlayout.widget.DrawerLayout&gt;\n\n</code></pre> <ol> <li>Create a menu resource file for the NavigationView items. You can do this by right-clicking the \"res\" folder in your project, selecting \"New\" and then \"Android Resource Directory\". In the dialog that appears, set \"Resource type\" to \"menu\" and click \"OK\". Then, create a new menu resource file by right-clicking the new \"menu\" folder and selecting \"New\" and then \"Menu Resource File\". In the dialog that appears, give the file a name (e.g. \"drawer_menu\") and click \"OK</li> <li>Add menu items to the menu resource file. You can do this by opening the \"drawer_menu.xml\" file and adding items with a unique ID, a title, and an optional icon. | ID           | Title    | Icon      | |--------------|----------|-----------| | nav_home     | Home     | ic_home   | | nav_profile  | Profile  | ic_person | | nav_settings | Settings | ic_settings | | nav_logout   | Logout   | ic_logout |</li> <li>Set up the NavigationView in the MainActivity class. You can do this by getting a reference to the NavigationView widget in the onCreate() method of the MainActivity class, and then setting a listener to handle menu item clicks  </li> </ol> <pre><code>public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\n\n    private DrawerLayout drawerLayout;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        // Set up NavigationView\n        NavigationView navigationView = findViewById(R.id.nav_view);\n        navigationView.setNavigationItemSelectedListener(this);\n\n        // Set up DrawerLayout\n        drawerLayout = findViewById(R.id.drawer_layout);\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(\n                this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\n        drawerLayout.addDrawerListener(toggle);\n        toggle.syncState();\n    }\n\n    @Override\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\n        // Handle menu item clicks here\n        switch (item.getItemId()) {\n            case R.id.nav_home:\n                // Handle Home click\n                break;\n            case R.id.nav_profile:\n                // Handle Profile click\n                break;\n            case R.id.nav_settings:\n                // Handle Settings click\n                break;\n            case R.id.nav_logout:\n                // Handle Logout click\n                break;\n        }\n\n        // Close the navigation drawer\n        drawerLayout.closeDrawer(GravityCompat.START);\n\n        return true;\n    }\n}\n\n</code></pre>"},{"location":"course_notes/fit5046/#make-app-bar-of-the-navigation-drawer","title":"make app bar of the Navigation Drawer","text":"<p>To make an app bar in the Navigation Drawer, you can use the\u00a0<code>Toolbar</code>\u00a0widget and include it inside the main content layout of the\u00a0<code>DrawerLayout</code>\u00a0widget.  In this example, the\u00a0<code>Toolbar</code>\u00a0widget is included at the top of the main content layout, and is styled using the app's primary color. It also includes a title, navigation icon and a reference to the\u00a0<code>Drawable</code>\u00a0resource for the navigation menu icon.</p> <pre><code>&lt;androidx.drawerlayout.widget.DrawerLayout\n    ...\n    &gt;\n\n    &lt;!-- Main content layout --&gt;\n    &lt;LinearLayout\n        ...\n        &gt;\n\n        &lt;!-- App bar --&gt;\n        &lt;androidx.appcompat.widget.Toolbar\n            android:id=\"@+id/toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"?attr/actionBarSize\"\n            android:background=\"?attr/colorPrimary\"\n            app:titleTextColor=\"@android:color/white\"\n            app:title=\"@string/app_name\"\n            app:navigationIcon=\"@drawable/ic_menu\"\n            /&gt;\n\n        &lt;!-- Other views --&gt;\n        ...\n    &lt;/LinearLayout&gt;\n\n    &lt;!-- Navigation Drawer --&gt;\n    &lt;com.google.android.material.navigation.NavigationView\n        ...\n        /&gt;\n\n&lt;/androidx.drawerlayout.widget.DrawerLayout&gt;\n\n</code></pre> <p>To handle navigation icon clicks and open the navigation drawer, you'll also need to set up an\u00a0<code>ActionBarDrawerToggle</code>\u00a0instance and add it as a listener to the\u00a0<code>DrawerLayout</code>.  setting up the toolbar and the navigation drawer, and syncing the toggle state to make sure the hamburger icon is shown when the drawer is closed, and the back arrow icon is shown when the drawer is open.</p> <pre><code>public class MainActivity extends AppCompatActivity {\n\n    private DrawerLayout drawerLayout;\n    private ActionBarDrawerToggle toggle;\n\n    ...\n\n    // onCreate method for setting up the activity\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        ...\n\n        // Set up the toolbar\n        Toolbar toolbar = findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        // Set up the navigation drawer\n        drawerLayout = findViewById(R.id.drawer_layout);\n        toggle = new ActionBarDrawerToggle(\n                this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\n        drawerLayout.addDrawerListener(toggle);\n        toggle.syncState();\n\n        ...\n\n    }\n\n    ...\n\n}\n\n</code></pre>"},{"location":"course_notes/fit5046/#different-xml-purpose","title":"different XML purpose","text":"<p> 1.  activity_main.xml: This file defines the overall structure of the screen or activity, including its root layout, the\u00a0<code>Toolbar</code>\u00a0widget for the app bar, and the\u00a0<code>DrawerLayout</code>\u00a0and\u00a0<code>NavigationView</code>\u00a0widgets for the navigation drawer. This file is responsible for setting up the main structural hierarchy and arranging the different layout components. 2.  app_bar_main.xml: This file defines the content and appearance of the app bar, including the\u00a0<code>Toolbar</code>\u00a0widget itself, any buttons or text views that appear within the app bar, and any custom styles or themes that apply to the app bar. This file is included within the main activity layout file and is used to set up the app bar. 3.  content_main.xml: This file defines the content that appears within the main content area of the screen or activity. This includes any text views, buttons, images, or other UI elements that appear below the app bar and within the main body of the screen. This file is also included within the main activity layout file, but is separated out from the app bar layout to make it easier to manage and update.</p>"},{"location":"course_notes/fit5046/#navigation-component_1","title":"Navigation Component","text":"<p>The Navigation component is part of Jetpack and consists of: Navigation graph; NavHost; NavigationUl; NavController and AppBarConfiguration  </p>"},{"location":"course_notes/fit5046/#appbarconfiguration","title":"AppBarConfiguration","text":"<p><code>AppBarConfiguration</code> is a component in the Android Navigation component that allows you to specify the top-level destinations in your app's navigation hierarchy. This is used to define which destinations should display the app bar's back button, as well as which destinations should display a hamburger icon to open the navigation drawer.</p> <p>To apply <code>AppBarConfiguration</code> in your app, you can follow these steps:</p> <ol> <li>Create an instance of <code>AppBarConfiguration</code>. You can do this by passing a <code>Set&lt;Integer&gt;</code> of the IDs of your app's top-level destinations to the <code>AppBarConfiguration</code> constructor. For example:</li> </ol> <pre><code>Set&lt;Integer&gt; topLevelDestinations = new HashSet&lt;&gt;();\ntopLevelDestinations.add(R.id.homeFragment);\ntopLevelDestinations.add(R.id.searchFragment);\ntopLevelDestinations.add(R.id.profileFragment);\nAppBarConfiguration appBarConfiguration = new AppBarConfiguration.Builder(topLevelDestinations).build();\n</code></pre> <p>This code creates a new <code>Set</code> of <code>Integer</code> objects representing the IDs of the top-level destinations in your app's navigation hierarchy. It then creates a new <code>AppBarConfiguration</code> object using a builder, passing in the set of top-level destination IDs.</p> <ol> <li>Pass the <code>AppBarConfiguration</code> object to the <code>setupActionBarWithNavController()</code> method. You can do this in your activity's <code>onCreate()</code> method, like this:</li> </ol> <pre><code>NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment);\nNavigationUI.setupActionBarWithNavController(this, navController, appBarConfiguration);\n</code></pre> <p>This code finds the <code>NavController</code> object and then passes it, along with the <code>AppBarConfiguration</code> object, to the <code>setupActionBarWithNavController()</code> method. This method sets up the app bar to display the appropriate navigation button (e.g. a hamburger icon or back button) based on the current destination in the navigation hierarchy.</p> <ol> <li>Add the <code>onSupportNavigateUp()</code> method to your activity. This method is called when the user presses the navigation button in the app bar, and should navigate up to the appropriate destination in the navigation hierarchy. You can do this using the <code>NavigationUI.navigateUp()</code> method, like this:</li> </ol> <pre><code>@Override\npublic boolean onSupportNavigateUp() {\n    NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment);\n    return NavigationUI.navigateUp(navController, appBarConfiguration) || super.onSupportNavigateUp();\n}\n</code></pre> <p>This code finds the <code>NavController</code> object and then calls the <code>NavigationUI.navigateUp()</code> method, passing in the <code>NavController</code> and <code>AppBarConfiguration</code> objects. This method handles the navigation based on the current destination in the navigation hierarchy.</p>"},{"location":"course_notes/fit5046/#navigation-graph","title":"Navigation Graph","text":"<p>A navigation graph IS a avigation Resource file in XML under the navigation directory This XML file contains all the information about the destinations and actions It provides a graphical view in the Design view, where you can add destinations to the graph by clicking on New Destination icon. You can set the start destination by selecting the fragment and clicking on the Assign start destination The destination ids of the navigation graph must match the ids of the menu items of the drawer, otherwise the NavControler cannot navigate to that destination </p>"},{"location":"course_notes/fit5046/#week6-android-room","title":"Week6  Android: Room","text":"<p>Learn about the Main (UI) thread in Android Learn about Room Persistence Library and its components (Entity, DAO, and Database) Learn how to use LiveData with Room  </p>"},{"location":"course_notes/fit5046/#lecture_5","title":"Lecture","text":""},{"location":"course_notes/fit5046/#android-recommended-app-architecture","title":"Android Recommended app architecture","text":"<p>Guide to app architecture \u00a0|\u00a0 Android Developers  -   The\u00a0UI layer\u00a0or presentation layer is responsible for displaying application data on the screen. It includes UI elements and state holders (ViewModel classes). -   The\u00a0data layer\u00a0contains the business logic of your app and exposes application data. It includes Repository classes and Data sources like Room (local dbs). -   The\u00a0domain layer\u00a0is optional and\u00a0sits between the UI and data layers.</p>"},{"location":"course_notes/fit5046/#single-thread-model","title":"Single Thread Model","text":"<p>Process \u8fdb\u7a0b: + \u6bcf\u4e00\u4e2aAndr oid App \u6253\u5f00\u7684\u65f6\u5019\uff0cJ VM\u63d0\u4f9b\u4e00\u4e2a\u8fdb\u7a0b\u5e76\u4e14\u4e0b\u8f96\u4e00\u4e2a\u7ebf\u7a0b + \u6bcf\u4e2a\u8fdb\u7a0b\u4e0b\u53ef\u4ee5\u5bb9\u7eb3\u591a\u4e2a\u7ebf\u7a0b</p> <p>Thread \u7ebf\u7a0b: When an Android application is launched, the system creates a \u2018main\u2019 thread, aka the \u2018UI\u2019 thread  \u5f53App\u542f\u52a8\u7684\u65f6\u5019\uff0cJ VM\u63d0\u4f9bmain\u7ebf\u7a0b\u4f9bMainActivity\u8fd0\u884c The main/UI thread is the single thread of execution for your  application  </p>"},{"location":"course_notes/fit5046/#rule-1-do-not-block-the-ui-thread","title":"Rule 1: Do not block the UI thread","text":"<p>Background Work Overview \u00a0|\u00a0 Android Developers \u6c38\u8fdc\u4e0d\u8981block UI\u7ebf\u7a0b\uff08\u4e3b\u7ebf\u7a0b\uff09 -- \u65b0\u5efa\u7ebf\u7a0b\u540e\u53f0\u8fd0\u884c If a task could take more than a few milliseconds (long-running tasks)  should be processed on a background (worker) thread </p>"},{"location":"course_notes/fit5046/#rule-2-do-not-access-the-android-ui-toolkit-from-outside-the-ui-thread","title":"Rule 2: Do not access the Android UI toolkit from outside the UI thread","text":"<p>\u6c38\u8fdc\u4e0d\u8981\u4eceUI\u7ebf\u7a0b\u4ee5\u5916\u8bbf\u95eeUI\u63a7\u4ef6 When you are accessing or updating the user interface from another thread, you can use of the following options so it will run on the main/UI thread, without violating Rule 2: 1. runOnUiThread(Runnable), called from an activity 2. View.post(Runnable) 3. View.postDelayed(Runnable, long) //long: the delay (in milliseconds)  </p>"},{"location":"course_notes/fit5046/#room-persistence-library","title":"Room Persistence Library","text":"<p>Save data in a local database using Room \u00a0|\u00a0 Android Developers Room provides an abstraction layer over SQLite that enables more robust database access, To reduce the effort to create and manage the SQLite database, Room was introduced  Room\u5728SQLite\u4e0a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u62bd\u8c61\u5c42\uff0c\u4ee5\u4fbf\u5728\u53d1\u6325SQLite\u80fd\u529b\u7684\u540c\u65f6\u5141\u8bb8\u6d41\u7545\u7684\u6570\u636e\u5e93\u8bbf\u95ee\u3002 \u9488\u5bf9SQLite\u7684\u5c01\u88c5  \u4f7f\u7528\u7b80\u4fbf \u662f\u8017\u65f6\u64cd\u4f5c To use Room, we need include the libraries in the build.gradle (Module:app) file under dependencies</p> <pre><code>// Room  \nimplementation 'androidx.room:room-runtime:2.5.1'  \nannotationProcessor 'androidx.room:room-compiler:2.5.1'\n</code></pre> <p> Room Persistent Library consists of: + Database: contains the database holder and has the access to the  underlying persisted, relational data (SQLite database) + Entities: represent tables within the database + DAO (Data Access Object) classes     + Contain query methods that offer abstract access to the database     + provide a mapping of SQL queries to methods such as insert or delete  </p>"},{"location":"course_notes/fit5046/#room-entity-class","title":"Room entity class","text":"<p>Defining data using Room entities \u00a0|\u00a0 Android Developers   + @Entity marks a class as an entity  @Entity \u5c06\u7c7b\u6807\u8bb0\u4e3a\u5b9e\u4f53 + For each entity, a table is created in the associate database\u5bf9\u4e8e\u6bcf\u4e2a\u5b9e\u4f53\uff0c\u5728\u5173\u8054\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u4e00\u5f20\u8868 + The entity class provides a mapping to the SQLite table in the database\u5b9e\u4f53\u7c7b\u63d0\u4f9b\u5230\u6570\u636e\u5e93\u4e2d SQLite \u8868\u7684\u6620\u5c04 + Room uses the database table name for the class name by default Room \u9ed8\u8ba4\u4f7f\u7528\u6570\u636e\u5e93\u8868\u540d\u4f5c\u4e3a\u7c7b\u540d     + To change the table name, use the tableName property of the @Entity annotation\u66f4\u6539\u8868\u540d\uff0c\u4f7f\u7528@Entity \u6ce8\u89e3\u7684 tableName \u5c5e\u6027 + Room uses the field/attribute names as the column names in the database Room \u4f7f\u7528\u5b57\u6bb5/\u5c5e\u6027\u540d\u79f0\u4f5c\u4e3a\u6570\u636e\u5e93\u4e2d\u7684\u5217\u540d\u79f0     + To change the column name, add the @ColumnInfo annotation to a field\u8981\u66f4\u6539\u5217\u540d\u79f0\uff0c\u8bf7\u5c06@ColumnInfo \u6ce8\u89e3\u6dfb\u52a0\u5230\u5b57\u6bb5  </p>"},{"location":"course_notes/fit5046/#primary-key","title":"Primary Key","text":"<pre><code>@Entity  \npublic class Customer {  \n    @PrimaryKey (autoGenerate = true)  \n    public int uid;  \n    @ColumnInfo(name = \"first_name\")  \n    @NonNull  \n    public String firstName;  \n    @ColumnInfo(name = \"last_name\")  \n    @NonNull  \n    public String lastName;  \n    public double salary;  \n    public Customer( @NonNull String firstName, @NonNull String lastName, double salary) {  \n        this.firstName=firstName;  \n        this.lastName=lastName;  \n        this.salary = salary;  \n    }  \n}\n</code></pre> <ul> <li>Each entity must have one primary key with the annotation @PrimaryKey </li> <li>If you want Room to assign automatic IDs to entities, set the autoGenerate property of @PrimaryKey  </li> <li>To make the field persistent, Room must have access to it either make them public, then no need for getters and setters OR if you make it private, you need to add getters and setters for all fields including id</li> </ul>"},{"location":"course_notes/fit5046/#relationships","title":"Relationships","text":"<p>Define relationships between objects \u00a0|\u00a0 Android Developers  To create a one-to-many relationship between two entities: + The child entity (Playlist) must include a variable that references the primary key of the parent entity (User)   +  Create a new class (UserWithPlayLists) with a list of child entity instances (playlists)  + Add the @Relation annotation to the instance of the child entity (User)  + Set parentColumn to the primary key of the parent entity  + Set entityColumn to the child entity\u2019s column referencing the parent entity's PK </p>"},{"location":"course_notes/fit5046/#dao-data-access-object_1","title":"DAO (Data Access Object)","text":"<p>Accessing data using Room DAOs \u00a0|\u00a0 Android Developers + Contain query methods that offer abstract access to the database Provide a mapping of SQL queries to methods such as insert or delete + By accessing a database using a DAO class instead of direct queries, we can separate different components of the database + some method: <code>@Insert @Update @Delete @Query</code> </p>"},{"location":"course_notes/fit5046/#migrating-room-database","title":"Migrating Room database","text":"<p>Android Room with a View - Java \u00a0|\u00a0 Android Developers 1. To increment the version number after making changes to the schema <code>@Database(entities = {Customer.class}, version = 2, exportSchema =false)</code>  2. Additionally, you need to provide migration instructions/code. The migration code will be used to preserve your previous data in the database after migration/upgrade 3. If you want to clear all data and start from the scratch you can use invoke the fallbackToDestructiveMigration() method</p> <pre><code>//database instance created by calling Room.databaseBuilder()  \nCustomerDatabase database = Room.databaseBuilder(context.getApplicationContext(),  \nCustomerDatabase.class, \"CustomerDatabase\").fallbackToDestructiveMigration() .build()\n</code></pre> <p> </p>"},{"location":"course_notes/fit5046/#room-view-model-invoke-flow","title":"Room - View Model Invoke Flow","text":"<p>Android Room with a View - Java \u00a0|\u00a0 Android Developers Guide to app architecture \u00a0|\u00a0 Android Developers </p>"},{"location":"course_notes/fit5046/#repository","title":"Repository","text":"<p>Android Room with a View - Java \u00a0|\u00a0 Android Developers + The Repository is responsible to manage query threads, i.e. the ExecutorService and its pool of threads that were added in the Database class   + The DAO instance in the Repository class provides access through it to all the read/write methods for the database  </p>"},{"location":"course_notes/fit5046/#room-and-livedata","title":"Room and LiveData","text":"<ul> <li>Room generates all the necessary code to update the LiveData object when a database is updated, and the UI gets automatically updated too  </li> <li>use observable queries that are written as part of a DAO class to implement this  </li> </ul> <pre><code>@Dao  \npublic interface CustomerDAO {  \n    @Query(\"SELECT * FROM customer ORDER BY last_name ASC\")  \n    LiveData&lt;List&lt;Customer&gt;&gt; getAllCustomers();\n</code></pre> <ul> <li>The next steps are creating the ViewModel class and implementing the observer in the activity (or the fragment)  </li> </ul>"},{"location":"course_notes/fit5046/#room-and-viewmodel","title":"Room and ViewModel","text":"<p>Android Room with a View - Java \u00a0|\u00a0 Android Developers  + The\u00a0<code>ViewModel</code>'s role is to provide data to the UI and survive configuration changes. A\u00a0<code>ViewModel</code>\u00a0acts as a communication center between the Repository and the UI. You can also use a\u00a0<code>ViewModel</code>\u00a0to share data between fragments. The ViewModel is part of the\u00a0lifecycle library. + AndroidViewModel extends ViewModel and must have a constructor which accepts  Application as the only parameter + A constructor that accepts an application (as a parameter) so we can create an  instance of the repository and initialize our LiveData  + A get method to return the LiveData + Wrapper methods for insert, delete and update method </p>"},{"location":"course_notes/fit5046/#tutorial-lab10-room","title":"Tutorial Lab10 Room","text":"<p>add View Binding code and the following dependencies to the module level gradle file  </p> <pre><code>android {\n    buildFeatures {  \n        viewBinding true  \n    }\n}\ndependencies {\n    // ViewModel and LiveData  \n    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.1'  \n    implementation 'androidx.lifecycle:lifecycle-livedata:2.5.1'  \n    // Room  \n    implementation 'androidx.room:room-runtime:2.5.0'  \n    annotationProcessor 'androidx.room:room-compiler:2.5.0'\n}\n</code></pre> <p>Replace the code of activity_main.xml with the code below. The layout includes a button and text view for each CRUD operation. For labels and edit texts, we have used floating labels that use the TextInputLayout and the TextInputEditText as the input text child of this layout  </p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  \n&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"  \n    android:layout_width=\"match_parent\"  \n    android:layout_height=\"match_parent\"  \n    android:orientation=\"vertical\"&gt;  \n\n    &lt;!-- Text Input Layout for ID --&gt;  \n    &lt;com.google.android.material.textfield.TextInputLayout  \n        android:id=\"@+id/id_textField\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:hint=\"Id\"&gt;  \n\n        &lt;!-- Input to get ID --&gt;  \n        &lt;com.google.android.material.textfield.TextInputEditText  \n            android:layout_width=\"match_parent\"  \n            android:layout_height=\"wrap_content\"  \n            android:inputType=\"number\" /&gt;  \n    &lt;/com.google.android.material.textfield.TextInputLayout&gt;  \n    &lt;!-- Text Input Layout for Name --&gt;  \n    &lt;com.google.android.material.textfield.TextInputLayout  \n        android:id=\"@+id/name_textField\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:hint=\"Name\"&gt;  \n\n        &lt;!-- Input to get Name --&gt;  \n        &lt;com.google.android.material.textfield.TextInputEditText  \n            android:layout_width=\"match_parent\"  \n            android:layout_height=\"wrap_content\" /&gt;  \n    &lt;/com.google.android.material.textfield.TextInputLayout&gt;  \n    &lt;!-- Text Input Layout for Surname --&gt;  \n    &lt;com.google.android.material.textfield.TextInputLayout  \n        android:id=\"@+id/surname_textField\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:hint=\"Surname\"&gt;  \n\n        &lt;!-- Input to get Surname --&gt;  \n        &lt;com.google.android.material.textfield.TextInputEditText  \n            android:layout_width=\"match_parent\"  \n            android:layout_height=\"wrap_content\" /&gt;  \n    &lt;/com.google.android.material.textfield.TextInputLayout&gt;  \n    &lt;!-- Text Input Layout for Salary --&gt;  \n    &lt;com.google.android.material.textfield.TextInputLayout  \n        android:id=\"@+id/salary_textField\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:hint=\"Salary\"&gt;  \n\n        &lt;!-- Input to get Salary --&gt;  \n        &lt;com.google.android.material.textfield.TextInputEditText  \n            android:layout_width=\"match_parent\"  \n            android:layout_height=\"wrap_content\"  \n            android:inputType=\"numberDecimal\"/&gt;  \n    &lt;/com.google.android.material.textfield.TextInputLayout&gt;  \n    &lt;!-- Button to add data to Database--&gt;  \n    &lt;Button  \n        android:id=\"@+id/addButton\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"Add to Database\" /&gt;  \n\n    &lt;!-- TextView to display added data --&gt;  \n    &lt;TextView  \n        android:id=\"@+id/textView_add\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\" /&gt;  \n\n    &lt;!-- Button to delete data from Database--&gt;  \n    &lt;Button  \n        android:id=\"@+id/deleteButton\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"Delete Data\" /&gt;  \n\n    &lt;!-- TextView to display deleted data information --&gt;  \n    &lt;TextView  \n        android:id=\"@+id/textView_delete\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\" /&gt;  \n\n    &lt;!-- Button to update data in Database--&gt;  \n    &lt;Button  \n        android:id=\"@+id/updateButton\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"Update Data\" /&gt;  \n\n    &lt;!-- TextView to display updated data information --&gt;  \n    &lt;TextView  \n        android:id=\"@+id/textView_update\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\" /&gt;  \n\n    &lt;!-- Button to clear all the entries --&gt;  \n    &lt;Button  \n        android:id=\"@+id/clearButton\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:text=\"Clear entries\" /&gt;  \n\n    &lt;!-- TextView to display read data information from database --&gt;  \n    &lt;TextView  \n        android:id=\"@+id/textView_read\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"wrap_content\"  \n        android:background=\"@color/white\" /&gt;  \n&lt;/LinearLayout&gt;\n\n</code></pre> <p>Locate the folder where the MainActivity.java is, and right click on it. Select New, and create 5 packages named <code>dao, database, and entity, repository, viewmodel</code> then inside each create the following Java classes and one interface (CustomerDAO.java) as shown below: entity/Customer.java, database/CustomerDatabase.java, repository/CustomerRepository, viewmodel/CustomerViewModel, dao/CustomerDAO.java (Note: this is an interface and not a Java class). To create an interface, after choosing New&gt;Java Class, select Interface  </p> <p>Replace the code in Customer.java with the code below. This class is the entity class and will be used  to create the Customer table based on the schema and attributes that you provide. For the first and last  name fields, we provided different names in the database using the @columnInfo annotation, and also made them not null  </p> <pre><code>package com.example.roomjava.entity;  \n\nimport androidx.annotation.NonNull;  \nimport androidx.room.ColumnInfo;  \nimport androidx.room.Entity;  \nimport androidx.room.PrimaryKey;  \n\n@Entity  \npublic class Customer {  \n    @PrimaryKey(autoGenerate = true)  \n    public int uid;  \n    // Primary key for identifying each customer, auto generates the value for each customer in the database  \n\n    @ColumnInfo(name = \"first_name\")  \n    @NonNull  \n    public String firstName;  \n    // The first name of the customer, marked as required to prevent null values  \n\n    @ColumnInfo(name = \"last_name\")  \n    @NonNull  \n    public String lastName;  \n    // The last name of the customer, marked as required to prevent null values  \n\n    public double salary;  \n    // The salary of the customer  \n\n    // Constructor to initialize the Customer object with first name, last name and salary    \n    public Customer(@NonNull String firstName, @NonNull String lastName, double salary) {  \n        this.firstName = firstName;  \n        this.lastName = lastName;  \n        this.salary = salary;  \n    }  \n}\n</code></pre> <p>Replace the code in CustomerDAO.java with the code below. CustomerDAO.java is an interface with abstract methods (without the method body) These include CRUD operations of @Insert, @Update, @Delete and @Query. We have used LiveData here</p> <pre><code>package com.example.roomjava.dao;  \n\nimport androidx.lifecycle.LiveData;  \nimport androidx.room.Dao;  \nimport androidx.room.Delete;  \nimport androidx.room.Insert;  \nimport androidx.room.Query;  \nimport androidx.room.Update;  \n\nimport com.example.roomjava.entity.Customer;  \n\nimport java.util.List;  \n\n@Dao  \npublic interface CustomerDAO {  \n    // Query to get all the customers from the database  \n    @Query(\"SELECT * FROM customer ORDER BY last_name ASC\")  \n    LiveData&lt;List&lt;Customer&gt;&gt; getAll();  \n\n    // Query to get a customer by their ID  \n    @Query(\"SELECT * FROM customer WHERE uid = :customerId LIMIT 1\")  \n    Customer findByID(int customerId);  \n\n    // Query to insert a new customer into the database  \n    @Insert  \n    void insert(Customer customer);  \n\n    // Query to delete a customer from the database  \n    @Delete  \n    void delete(Customer customer);  \n\n    // Query to update an existing customer in the database  \n    @Update  \n    void updateCustomer(Customer customer);  \n\n    // Query to delete all the customers from the database  \n    @Query(\"DELETE FROM customer\")  \n    void deleteAll();  \n}\n</code></pre> <p>CustomerDatabase.java, which is an abstract class and must extend RoomDatabase. It requires @Database annotation. The database class must contain an abstract method with no argument, returning the DAO (i.e. customerDao())</p> <pre><code>package com.example.roomjava.database;  \n\nimport android.content.Context;  \n\nimport androidx.room.Database;  \nimport androidx.room.Room;  \nimport androidx.room.RoomDatabase;  \n\nimport com.example.roomjava.dao.CustomerDAO;  \nimport com.example.roomjava.entity.Customer;  \n\nimport java.util.concurrent.ExecutorService;  \nimport java.util.concurrent.Executors;  \n\n//exportSchema = false  not keep a history of different versions of database  \n// version = 1, but if later you make any changes to the database  \n//(e.g. changes to the schema and fields), you must increase this number by 1  \n@Database(entities = {Customer.class}, version = 1, exportSchema = false)  \n//defines the database class as an abstract class that extends the RoomDatabase class  \npublic abstract class CustomerDatabase extends RoomDatabase {  \n    // Abstract method to get the Data Access Object interface for the Customer table  \n    public abstract CustomerDAO customerDao();  \n\n    // A static CustomerDatabase INSTANCE for Singleton database operation  \n    //singleton pattern to prevent having multiple instances of the database created    //and opened at the same time    private static CustomerDatabase INSTANCE;  \n\n    // We create an ExecutorService with a fixed thread pool so we can later run  \n    // database operations asynchronously on a background thread.    private static final int NUMBER_OF_THREADS = 4;  \n    public static final ExecutorService databaseWriteExecutor =  \n            Executors.newFixedThreadPool(NUMBER_OF_THREADS);  \n\n    // A synchronized method in a multi-threaded environment means that two threads  \n    // are not allowed to access data at the same time    public static synchronized CustomerDatabase getInstance(final Context context) {  \n        if (INSTANCE == null) {  \n            INSTANCE = Room.databaseBuilder(context.getApplicationContext(),  \n                            CustomerDatabase.class, \"CustomerDatabase\")  \n                    .fallbackToDestructiveMigration()  \n                    .build();  \n        }  \n        return INSTANCE;  \n    }  \n}\n</code></pre> <p>Create a CustomerRepository.java class to implement the repository component of the Room architecture. We use a Repository class to provide a nice API for data access to the rest of the  application. We use it to reduce dependencies between Room classes, and manage queries better. The repository will use ExecutorService (databaseWriteExecuter) to execute the database operations on a background thread. As you see for each operation like insert, update and delete, we have the code to execute it in the background (not on the main thread). Room executes all queries on a separate thread  (reusing from the pool of 4).  Also, you notice that the findByIDFuture() method\u2019s code is different and uses CompletableFuture to ensure that the findByIDFuture() is completed before the update operation starts. Using CompletableFuture, this background job completes and returns the result (a customer if it exists in the database) in an asynchronous way so the customer object returned won\u2019t be null when the update operation is executed later in the MainActivity.java.  </p> <pre><code>package com.example.roomjava.repository;  \n\nimport android.app.Application;  \nimport android.os.Build;  \n\nimport androidx.annotation.RequiresApi;  \nimport androidx.lifecycle.LiveData;  \n\nimport com.example.roomjava.dao.CustomerDAO;  \nimport com.example.roomjava.database.CustomerDatabase;  \nimport com.example.roomjava.entity.Customer;  \n\nimport java.util.List;  \nimport java.util.concurrent.CompletableFuture;  \nimport java.util.function.Supplier;  \n\npublic class CustomerRepository {  \n    // The DAO interface for Customer table  \n    private CustomerDAO customerDao;  \n    // Get all customers LiveData  \n    private LiveData&lt;List&lt;Customer&gt;&gt; allCustomers;  \n\n    //constructor that initializes the CustomerDatabase instance and the customerDao.  \n    // allCustomers holds a LiveData which holds a list of all the customers.    public CustomerRepository(Application application) {  \n        // Access the database instance and get the DAO interface for Customer table  \n        CustomerDatabase db = CustomerDatabase.getInstance(application);  \n        customerDao = db.customerDao();  \n        allCustomers = customerDao.getAll();  \n    }  \n\n    // Method to get all customers from the database  \n    public LiveData&lt;List&lt;Customer&gt;&gt; getAllCustomers() {  \n        return allCustomers;  \n    }  \n\n    // Method to insert customer to the database  \n    public void insert(final Customer customer) {  \n        // Perform database write operation asynchronously  \n        CustomerDatabase.databaseWriteExecutor.execute(new Runnable() {  \n            @Override  \n            public void run() {  \n                // Call insert method of customer DAO to insert customer record to database  \n                customerDao.insert(customer);  \n            }  \n        });  \n    }  \n\n    // Method to delete all customers from the database  \n    public void deleteAll() {  \n        // Perform database write operation asynchronously  \n        CustomerDatabase.databaseWriteExecutor.execute(new Runnable() {  \n            @Override  \n            public void run() {  \n                // Call deleteAll method of customer DAO to delete all customer records from database  \n                customerDao.deleteAll();  \n            }  \n        });  \n    }  \n\n\n    // Method to delete a customer from the database  \n    public void delete(final Customer customer) {  \n        // Perform database write operation asynchronously  \n        CustomerDatabase.databaseWriteExecutor.execute(new Runnable() {  \n            @Override  \n            public void run() {  \n                // Call delete method of customer DAO to delete a specific customer record from database  \n                customerDao.delete(customer);  \n            }  \n        });  \n    }  \n\n    // Method to update a customer in database  \n    public void updateCustomer(final Customer customer) {  \n        // Perform database write operation asynchronously  \n        CustomerDatabase.databaseWriteExecutor.execute(new Runnable() {  \n            @Override  \n            public void run() {  \n                // Call updateCustomer method of customer DAO to update a specific customer record in database  \n                customerDao.updateCustomer(customer);  \n            }  \n        });  \n    }  \n\n    // Method to get a customer by ID asynchronously, returns a completable future.  \n    @RequiresApi(api = Build.VERSION_CODES.N)  \n    public CompletableFuture&lt;Customer&gt; findByIDFuture(final int customerId) {  \n        // Get customer from database asynchronously  \n        // CustomerDatabase.databaseWriteExecutor is the executor to run asynchronous operations on database        // Supplier.get() method is called asynchronously to get customer by ID from database        return CompletableFuture.supplyAsync(new Supplier&lt;Customer&gt;() {  \n            @Override  \n            public Customer get() {  \n                // Call findByID method of customer DAO to get a specific customer record by their ID from database  \n                return customerDao.findByID(customerId);  \n            }  \n        }, CustomerDatabase.databaseWriteExecutor);  \n    }  \n}\n</code></pre> <p>CustomerViewModel.java provided below. use LiveData and ViewModel to achieve the observer design pattern. To implement the LiveData with Room, we add the view model class that will include a reference to LiveData. this view model extends  AndroidViewModel (subclass of ViewModel) because it allows us to pass to an application (as a parameter) to its constructor and we can then use it to create an instance of the repository  </p> <pre><code>package com.example.roomjava.viewmodel;  \n\nimport android.app.Application;  \nimport android.os.Build;  \n\nimport androidx.annotation.RequiresApi;  \nimport androidx.lifecycle.AndroidViewModel;  \nimport androidx.lifecycle.LiveData;  \n\nimport com.example.roomjava.entity.Customer;  \nimport com.example.roomjava.repository.CustomerRepository;  \n\nimport java.util.List;  \nimport java.util.concurrent.CompletableFuture;  \n\npublic class CustomerViewModel extends AndroidViewModel {  \n    // Repository instance to access the database operations  \n    private CustomerRepository cRepository;  \n    // LiveData to hold a list of all customers in the database  \n    private LiveData&lt;List&lt;Customer&gt;&gt; allCustomers;  \n\n    // Constructor to initialize the repository and fetch all customers from the database  \n    public CustomerViewModel (Application application) {  \n        super(application);  \n        // Get the repository instance  \n        cRepository = new CustomerRepository(application);  \n        // Set the LiveData to receive all the customers from the database  \n        allCustomers = cRepository.getAllCustomers();  \n    }  \n\n    // Getter method to get a specific customer by their ID asynchronously  \n    @RequiresApi(api = Build.VERSION_CODES.N)  \n    public CompletableFuture&lt;Customer&gt; findByIDFuture(final int customerId) {  \n        // Return a completable future to get customer by ID from the database asynchronously  \n        return cRepository.findByIDFuture(customerId);  \n    }  \n\n    // Getter method to get all customers from the database using LiveData  \n    public LiveData&lt;List&lt;Customer&gt;&gt; getAllCustomers() {  \n        // Return the LiveData containing all the customers in the database  \n        return allCustomers;  \n    }  \n\n    // Method to insert a customer to the database  \n    public void insert(Customer customer) {  \n        // Call the insert method of the repository to insert customer to the database  \n        cRepository.insert(customer);  \n    }  \n\n    // Method to delete all customers from the database  \n    public void deleteAll() {  \n        // Call the deleteAll method of the repository to delete all customers from the database  \n        cRepository.deleteAll();  \n    }  \n\n    // Method to update a customer in the database  \n    public void update(Customer customer) {  \n        // Call the update method of the repository to update a customer in the database  \n        cRepository.updateCustomer(customer);  \n    }  \n}\n</code></pre>"},{"location":"course_notes/fit5046/#week-9-wireless-sensors","title":"Week 9 Wireless Sensors","text":"<p>Learning Objectives: \u5b66\u4e60\u76ee\u6807\uff1a What is a wireless sensor and what is a WSN? \u4ec0\u4e48\u662f\u65e0\u7ebf\u4f20\u611f\u5668\uff0c\u4ec0\u4e48\u662f WSN\uff1f What are the different classifications and architectures of WSNs? WSN \u6709\u54ea\u4e9b\u4e0d\u540c\u7684\u5206\u7c7b\u548c\u67b6\u6784\uff1f Why are the routing protocols important in WSN? What are the different types of routing? \u4e3a\u4ec0\u4e48\u8def\u7531\u534f\u8bae\u5728 WSN \u4e2d\u5f88\u91cd\u8981\uff1f\u6709\u54ea\u4e9b\u4e0d\u540c\u7c7b\u578b\u7684\u8def\u7531\uff1f What are the applications of wireless sensor networks? How does it relate to IoT and ubiquitous computing? \u65e0\u7ebf\u4f20\u611f\u5668\u7f51\u7edc\u6709\u54ea\u4e9b\u5e94\u7528\uff1f\u5b83\u4e0e\u7269\u8054\u7f51\u548c\u666e\u9002\u8ba1\u7b97\u6709\u4f55\u5173\u7cfb\uff1f What are the challenges in WSN? WSN \u9762\u4e34\u54ea\u4e9b\u6311\u6218\uff1f</p>"},{"location":"course_notes/fit5046/#tutorial_3","title":"Tutorial","text":"<p>Using Maps in an Android App (using Mapbox APIs) This additional lab exercise shows you how to use maps in your Android project and show the location of a user or other places on a map based on their latitude and longitude Installation | Maps SDK | Android | Mapbox Add a marker to the map | Maps SDK | Android | Mapbox </p>"},{"location":"course_notes/fit5046_assignment/","title":"FIT5046 assignment 2023 s1","text":""},{"location":"course_notes/fit5046_assignment/#assignment-1-research-paper-analysis-presentation-weight-15-due-27032023-430pm","title":"Assignment 1: Research Paper Analysis Presentation (Weight: 15%) - Due 27/03/2023 4:30pm","text":""},{"location":"course_notes/fit5046_assignment/#requirement","title":"requirement","text":"<p>Assignment 1  - Research Paper Presentation (15%)  Presentations in your allocated lab in Week 5  (on-campus students must present in person and online students will present online via Zoom) This is a group assignment (group of 2), where each group member will present their own slides (5 minutes each).  Your group member should be from the same lab. Attendance in Week 5 lab is compulsory. This assignment uses questions at the end of the presentation as the method of validation. Monash University - \u767b\u5f55 </p> <p>Building a\u00a0Crowdsensing Platform Based on\u00a0Spatio-Temporal Fencing | SpringerLink</p> <p> </p> <p> </p>"},{"location":"course_notes/fit5046_assignment/#android-project-proposal-20-due-date-friday-21-april-2023-1155-pm","title":"Android Project Proposal 20% Due date Friday, 21 April 2023, 11:55 PM","text":"<p>Android Project Proposal 20%</p> <p>Due date Friday, 21 April 2023, 11:55 PM</p> <p>https://lms.monash.edu/course/view.php?id=149600&amp;section=4</p> <ol> <li>Generative AI tools are not restricted for this assessment task. (\"In this assessment, you can use generative artificial intelligence (AI) to assist you in any way. Any use of generative AI must be appropriately acknowledged\")</li> </ol> <p>This is a group assignment (groups of 3-4).</p> <p>Only one of the group members need to submit the proposal AND the task allocation form to Moodle. Please make sure you use the template (the guideline) provided in the assignment specification for this proposal.</p> <p>This assignment requires submitting:</p> <ol> <li> <p>A project proposal using the template provided in Appendix A The word limit of the proposal is 1500 words.</p> </li> <li> <p>A task allocation (Appendix B).</p> </li> </ol> <p>you will propose a mobile distributed application with an Android app as its front-end. You will interact with online public web APIs like a weather API or YouTube API, and cloud-based services such as Google Firebase for storage (as the backend). In Assignment 3, you will build this app in Android according to your proposal.</p> <p>Section 1 - Key steps</p> <p>(following the template in Appendix A)</p> <p>Step 1. As a group, you will first decide on the application domain (health, fitness, entertainment,education, smart energy, smart parking or smart gardening to name a few) and its use and purpose. You need to also describe the user group, and discuss the scope and limitations</p> <p>Scope,\uff08What is being delivered\uff091. \u89e3\u51b3\u7528\u6237\u4ec0\u4e48\u6837\u7684\u75db\u70b9 == \u4e3a\u4ec0\u4e48\u8981\u5f00\u53d1\u8fd9\u4e2a 2. \u5f00\u53d1\u65f6\u95f4\u548c\u76ee\u6807level</p> <p>Limitation - (What is not delivered)\u8981\u5b9e\u73b0\u4e0a\u9762\u7684goal\u6709\u4ec0\u4e48\u9650\u5236\u6216\u8005\u4ea7\u54c1\u672c\u8eab\u7684\u5c40\u9650\u6027</p> <ol> <li> <p>Free account in Firebase\uff0cso each user can store limit data</p> </li> <li> <p>\u56e0\u4e3a\u6570\u636e\u5b58\u50a8\u5728\u4e91\u670d\u52a1\u7aef\uff0c\u4e3a\u6765\u7528\u6237\u9690\u79c1\u8003\u8651\uff0c\u4f1a\u5b9a\u671f\u5220\u9664\u6570\u636e\uff0c\u53ea\u4fdd\u7559XX\u6708\u6570\u636e</p> </li> </ol> <p>Step 2. You need to conduct a brief market and competitor analysis of similar apps in the market (Google Play Store or App Store), find and review two apps of the same type and understand their key functionalities, strengths, and weaknesses. You should provide FIVE screenshots of the main screens of each of these two apps, and describe any features/functionalities that differentiate your proposed app from existing apps. It is fine for your app to serve the same purpose as existing apps but it must be different from existing offerings in some way</p> <p>Step 3. You need to draw a diagram that shows the main components of the proposed mobile distributed application (explained in the template with an example). Provide a list the server side and client-side components, and how they work together</p> <p>step 4. You need to provide an overview of your UI design for the main screens (Section 2 Part 1) and the navigation hierarchy of your app using prototyping tools with a FREE trial (e.g. Lucid Charts, InVision, FIGMA, Wondershare Mockitt (previously known as Mockingbots)). This overview is explained in the template with an example</p> <p>Step 5. You will assign the tasks among the group members and complete the Task Allocation form (Appendix B).</p> <p>Step 6. Your proposed Android app must include the key screens and components defined in Section 2 as the minimum requirements.</p> <p>Step 7. You need to consider the requirements for each achievement level described in Section 3</p> <p>Section 2 \u2013 Key requirements</p> <p>(PASS level)</p> <p>Your proposed app must include the following screens and Android components as the minimum requirements </p> <p>section 3 \u2013 Achievement Levels</p> <p>Credit leve l To achieve a Credit level, the mobile app must successfully implement TWO additional features:</p> <p>Firebase Authentication for Login and Signup</p> <p>Android RecyclerView with CardView that displays data from the Room database (using LiveData)</p> <p>Distinction level To achieve a Distinction level, the mobile app must implement TWO additional features.</p> <p>Firebase Database to store the user's profile/data</p> <p>WorkManager to run a job in the background continuously e.g. every night to store the local</p> <p>data in the Firebase database</p> <p>(App Architecture: Data Layer - Schedule Task with WorkManager - Android Developers)</p> <p>High Distinction level To achieve a High Distinction level, the mobile app must implement ONLY ONE of the following additional, advanced features.</p> <ul> <li>Integrating the android app with Facebook SDK and sending a message/data from the app</li> </ul> <p>to your Facebook account</p> <ul> <li>Incorporating Google calendar and using the user's calendar events to perform context-</li> </ul> <p>aware and personalised tasks</p> <ul> <li>Using sensors in the app that is meaningful and related to your app but it must be implemented and demonstrated with the emulator</li> </ul> <p>Sensors | Android DevelopersSensors Overview | Android Developers</p> <ul> <li>Other advanced features (you MUST discuss it with your tutor and get their approval)</li> </ul>"},{"location":"course_notes/fit5046_assignment/#the-project-proposal","title":"The project proposal","text":""},{"location":"course_notes/fit5046_assignment/#1-introduction","title":"1 Introduction","text":""},{"location":"course_notes/fit5046_assignment/#11-an-overview-of-the-proposed-android-app","title":"1.1. An Overview of the proposed android app","text":"<p>//here briefly discuss the application domain and main use/purpose</p>"},{"location":"course_notes/fit5046_assignment/#12-user-group","title":"1.2. User group","text":""},{"location":"course_notes/fit5046_assignment/#13-key-functionalities","title":"1.3. Key functionalities","text":""},{"location":"course_notes/fit5046_assignment/#14-scope-and-limitations","title":"1.4. Scope and limitations","text":""},{"location":"course_notes/fit5046_assignment/#2-the-market-and-competitor-analysis","title":"2. The market and competitor analysis","text":"<p>a brief description of two (the most popular and well-known) apps and how your app will be different and novel compared to these two apps, include a few screenshots of these two apps</p>"},{"location":"course_notes/fit5046_assignment/#3-the-system-architecture","title":"3. The system architecture","text":"<p>In this section, you will provide a system architecture diagram of your proposed app that shows the front-side and server-side components, plus all the key Android components mentioned in Section 2 Part 2 (refer to the example below). You also need to provide a short paragraph about these components and how they work together.</p> <p>This diagram is only an example. You must show the name of APIs you will use, the server-side database (e.g. Firebase). You also must show what Android components you will include in another box. If you are using any other components, show it in the diagram </p>"},{"location":"course_notes/fit5046_assignment/#4-the-ui-design-and-screen-mockups","title":"4. The UI Design and Screen Mockups","text":"<p>In this section, you need to provide screen mockups created by any prototyping tool and the navigation flow between them (using arrows). You need to provide a meaningful title for each screen. The figure below is just a guide Design navigation graphs | Android Developers</p> <p></p>"},{"location":"course_notes/fit5046_assignment/#5-advanced-features","title":"5. Advanced features","text":"<p>//additional components based on Section 3 and how you will achieve them (any SKD details, or online sources and tutorials)</p>"},{"location":"course_notes/fit5046_assignment/#6-references","title":"6. References","text":"<p>(the publications, and website links based on the APA style)</p>"},{"location":"course_notes/fit5046_assignment/#appendix-b","title":"Appendix B","text":"<p>Task Allocation Form</p> <p>Please provide the name of tasks and the name of the group member(s) who did the task in the table below </p> <p>Sure, I understand. Let's analyze the proposed healthy Android app. \u5f53\u7136\uff0c\u6211\u660e\u767d\u3002\u8ba9\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u5efa\u8bae\u7684\u5065\u5eb7 Android \u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>The main purpose of this app is to provide users with tools and resources for tracking their nutrition intake and providing exercise and dietary advice through chat services integrated with the chatbot API. Users can also share their exercise and diet status on Facebook and engage with other users through forming a group and having friendly competitions. \u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u7528\u6237\u63d0\u4f9b\u5de5\u5177\u548c\u8d44\u6e90\uff0c\u7528\u4e8e\u8ddf\u8e2a\u4ed6\u4eec\u7684\u8425\u517b\u6444\u5165\u91cf\uff0c\u5e76\u901a\u8fc7\u4e0e\u804a\u5929\u673a\u5668\u4eba API \u96c6\u6210\u7684\u804a\u5929\u670d\u52a1\u63d0\u4f9b\u953b\u70bc\u548c\u996e\u98df\u5efa\u8bae\u3002\u7528\u6237\u8fd8\u53ef\u4ee5\u5728 Facebook \u4e0a\u5206\u4eab\u4ed6\u4eec\u7684\u8fd0\u52a8\u548c\u996e\u98df\u72b6\u51b5\uff0c\u5e76\u901a\u8fc7\u7ec4\u961f\u548c\u53cb\u597d\u7ade\u8d5b\u7684\u65b9\u5f0f\u4e0e\u5176\u4ed6\u7528\u6237\u4e92\u52a8\u3002</p> <p>The target user group for this app would be individuals who are interested in maintaining or improving their health and wellness through a balanced diet and exercise routine. \u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u76ee\u6807\u7528\u6237\u7fa4\u662f\u6709\u5174\u8da3\u901a\u8fc7\u5747\u8861\u996e\u98df\u548c\u65e5\u5e38\u953b\u70bc\u6765\u7ef4\u6301\u6216\u6539\u5584\u5065\u5eb7\u72b6\u51b5\u7684\u4e2a\u4eba\u3002</p> <p>Key functionalities of this app could include: \u6b64\u5e94\u7528\u7a0b\u5e8f\u7684\u4e3b\u8981\u529f\u80fd\u53ef\u80fd\u5305\u62ec\uff1a</p> <ol> <li> <p>Sign-up/Registration: This feature would allow users to create an account on the app.     \u6ce8\u518c/\u6ce8\u518c\uff1a\u6b64\u529f\u80fd\u5c06\u5141\u8bb8\u7528\u6237\u5728\u5e94\u7528\u7a0b\u5e8f\u4e0a\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\u3002</p> </li> <li> <p>Dashboard: The app should have a dashboard where users can view their exercise and dietary habits in a concise manner.     \u4eea\u8868\u677f\uff1a\u8be5\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u6709\u4e00\u4e2a\u4eea\u8868\u677f\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u4ee5\u7b80\u6d01\u7684\u65b9\u5f0f\u67e5\u770b\u4ed6\u4eec\u7684\u953b\u70bc\u548c\u996e\u98df\u4e60\u60ef\u3002</p> </li> <li> <p>Data Entry Screen: A feature that allows users to input information about their dietary intake and exercise routine.     \u6570\u636e\u8f93\u5165\u5c4f\u5e55\uff1a\u8be5\u529f\u80fd\u5141\u8bb8\u7528\u6237\u8f93\u5165\u6709\u5173\u4ed6\u4eec\u7684\u996e\u98df\u6444\u5165\u91cf\u548c\u65e5\u5e38\u953b\u70bc\u7684\u4fe1\u606f\u3002</p> </li> <li> <p>Map Screen: Using a free map API to assist users to locate nearby healthy food restaurants or gyms would be a useful feature.     \u5730\u56fe\u5c4f\u5e55\uff1a\u4f7f\u7528\u514d\u8d39\u7684\u5730\u56fe API \u6765\u5e2e\u52a9\u7528\u6237\u5b9a\u4f4d\u9644\u8fd1\u7684\u5065\u5eb7\u98df\u54c1\u9910\u5385\u6216\u5065\u8eab\u623f\u5c06\u662f\u4e00\u4e2a\u6709\u7528\u7684\u529f\u80fd\u3002</p> </li> <li> <p>Reports Screen - Graphs: This feature should display and summarize data from the user's entries, showing their improvement over time. This can include a bar or pie chart showing dietary and exercise intake in comparison to goals set by the user.     \u62a5\u544a\u5c4f\u5e55 - \u56fe\u8868\uff1a\u6b64\u529f\u80fd\u5e94\u663e\u793a\u548c\u6c47\u603b\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\uff0c\u663e\u793a\u4ed6\u4eec\u968f\u65f6\u95f4\u7684\u6539\u8fdb\u3002\u8fd9\u53ef\u4ee5\u5305\u62ec\u4e00\u4e2a\u6761\u5f62\u56fe\u6216\u997c\u56fe\uff0c\u663e\u793a\u4e0e\u7528\u6237\u8bbe\u5b9a\u7684\u76ee\u6807\u76f8\u6bd4\u7684\u996e\u98df\u548c\u8fd0\u52a8\u6444\u5165\u91cf\u3002</p> </li> <li> <p>Chatbot API: The app should provide users with dietary and exercise advice/options through a chatbot API.     \u804a\u5929\u673a\u5668\u4eba API\uff1a\u8be5\u5e94\u7528\u7a0b\u5e8f\u5e94\u901a\u8fc7\u804a\u5929\u673a\u5668\u4eba API \u4e3a\u7528\u6237\u63d0\u4f9b\u996e\u98df\u548c\u953b\u70bc\u5efa\u8bae/\u9009\u9879\u3002</p> </li> <li> <p>Social Media Sharing: The app should allow users to share their exercise and healthy diet status with the world via Facebook.     \u793e\u4ea4\u5a92\u4f53\u5206\u4eab\uff1a\u8be5\u5e94\u7528\u7a0b\u5e8f\u5e94\u5141\u8bb8\u7528\u6237\u901a\u8fc7 Facebook \u4e0e\u5168\u4e16\u754c\u5206\u4eab\u4ed6\u4eec\u7684\u953b\u70bc\u548c\u5065\u5eb7\u996e\u98df\u72b6\u51b5\u3002</p> </li> <li> <p>Group creation/competition: A feature that enables users to create groups and compete healthily against each other for rewards.     \u7ec4\u521b\u5efa/\u7ade\u4e89\uff1a\u4f7f\u7528\u6237\u80fd\u591f\u521b\u5efa\u7ec4\u5e76\u76f8\u4e92\u5065\u5eb7\u5730\u7ade\u4e89\u4ee5\u83b7\u5f97\u5956\u52b1\u7684\u529f\u80fd\u3002</p> </li> </ol> <p>The limitations could include the accuracy of the provided nutrition and exercise information from public web APIs. Additionally, some advanced features like integration with wearable health devices might require additional resources. \u8fd9\u4e9b\u9650\u5236\u53ef\u80fd\u5305\u62ec\u4ece\u516c\u5171\u7f51\u7edc API \u63d0\u4f9b\u7684\u8425\u517b\u548c\u953b\u70bc\u4fe1\u606f\u7684\u51c6\u786e\u6027\u3002\u6b64\u5916\uff0c\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\uff08\u5982\u4e0e\u53ef\u7a7f\u6234\u5065\u5eb7\u8bbe\u5907\u7684\u96c6\u6210\uff09\u53ef\u80fd\u9700\u8981\u989d\u5916\u7684\u8d44\u6e90\u3002</p> <p>In terms of the Android key components, Fragments can be used to construct various screens for smooth navigation. Navigation Drawer can be added to enhance the user experience. Room and LiveData can be incorporated to store user data locally. Retrofit can be used to interact with public web APIs. FirebaseAuth and FireStore can authenticate and store user data, with the chatbot API integrated through Dialogflow. \u5728Android\u5173\u952e\u7ec4\u4ef6\u65b9\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528Fragments\u6784\u5efa\u5404\u79cd\u5c4f\u5e55\uff0c\u5b9e\u73b0\u6d41\u7545\u7684\u5bfc\u822a\u3002\u53ef\u4ee5\u6dfb\u52a0\u5bfc\u822a\u62bd\u5c49\u4ee5\u589e\u5f3a\u7528\u6237\u4f53\u9a8c\u3002\u53ef\u4ee5\u5408\u5e76 Room \u548c LiveData \u4ee5\u5728\u672c\u5730\u5b58\u50a8\u7528\u6237\u6570\u636e\u3002 Retrofit \u53ef\u7528\u4e8e\u4e0e\u516c\u5171 Web API \u4ea4\u4e92\u3002 FirebaseAuth \u548c FireStore \u53ef\u4ee5\u901a\u8fc7 Dialogflow \u96c6\u6210\u804a\u5929\u673a\u5668\u4eba API \u6765\u9a8c\u8bc1\u548c\u5b58\u50a8\u7528\u6237\u6570\u636e\u3002</p> <p>In conclusion, your proposed healthy Android app can be a fresh and unique alternative to other apps in the market that focus solely on one aspect of health or wellness. By providing users with both exercise and dietary tracking features and a chatbot API, the app can provide a comprehensive approach to maintaining and improving overall health and wellness. \u603b\u4e4b\uff0c\u60a8\u5efa\u8bae\u7684\u5065\u5eb7 Android \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u6210\u4e3a\u5e02\u573a\u4e0a\u5176\u4ed6\u4ec5\u5173\u6ce8\u5065\u5eb7\u6216\u4fdd\u5065\u67d0\u4e00\u65b9\u9762\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u65b0\u9c9c\u800c\u72ec\u7279\u7684\u66ff\u4ee3\u54c1\u3002\u901a\u8fc7\u4e3a\u7528\u6237\u63d0\u4f9b\u8fd0\u52a8\u548c\u996e\u98df\u8ddf\u8e2a\u529f\u80fd\u4ee5\u53ca\u804a\u5929\u673a\u5668\u4eba API\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u63d0\u4f9b\u4e00\u79cd\u5168\u9762\u7684\u65b9\u6cd5\u6765\u7ef4\u6301\u548c\u6539\u5584\u6574\u4f53\u5065\u5eb7\u72b6\u51b5</p>"},{"location":"course_notes/fit5057/","title":"FIT5057 project management 2022 s2","text":"<p>Create time: 2022-10-29  Last update: 2022-11-09</p>"},{"location":"course_notes/fit5057/#contact","title":"contact","text":"<p>email huangshixin47@163.com  </p>"},{"location":"course_notes/fit5057/#week1","title":"week1","text":"<pre><code>pip install\n</code></pre>"},{"location":"course_notes/fit5057/#pic","title":"pic","text":""},{"location":"course_notes/fit5057/#week-2","title":"week 2","text":"<p>aaa</p>"},{"location":"course_notes/fit5057/#test","title":"test","text":"<p>bbb</p>"},{"location":"course_notes/fit5120/","title":"FIT5120 Industry experience studio project - S2 2023","text":""},{"location":"course_notes/fit5120/#fit5120-industry-experience-studio-project-s2-2023","title":"FIT5120 Industry experience studio project - S2 2023","text":"<p>FIT5120 - Industry experience studio project - Monash University </p> Week\u00a0\u5468 Project Phase\u00a0\u9879\u76ee\u9636\u6bb5 Topic\u00a0\u4e3b\u9898 1 Onboarding\u00a0\u5165\u804c\u57f9\u8bad - Unit expectations- Design thinking principals- Teamwork- Leankit  - \u5355\u4f4d\u671f\u671b-  \u8bbe\u8ba1\u601d\u7ef4\u539f\u5219  - \u56e2\u961f\u5408\u4f5c  - \u7cbe\u76ca 2 Onboarding\u00a0\u5165\u804c\u57f9\u8bad - Agile- Meeting cadences- Iteration planning- User journey- Peer reviews- Acceptance testing  - \u654f\u6377 -  \u4f1a\u8bae\u8282\u594f -  \u8fed\u4ee3\u89c4\u5212 -  \u7528\u6237\u65c5\u7a0b -  \u540c\u884c\u8bc4\u5ba1  - \u9a8c\u6536\u6d4b\u8bd5 3 Expo/Go-Live Onboarding\u00a0\u535a\u89c8\u4f1a/\u4e0a\u7ebf\u5165\u804c - UI/UX fundamentals- Integrity testing- Retrospectives  - UI/UX \u57fa\u7840\u77e5\u8bc6 -  \u5b8c\u6574\u6027\u6d4b\u8bd5  - \u56de\u987e 4 IM Proposal\u00a0IM \u63d0\u6848 - Importance of understanding your users- How to pitch your idea- Iteration expectations  - \u4e86\u89e3\u7528\u6237\u7684\u91cd\u8981\u6027 -  \u5982\u4f55\u63a8\u9500\u60a8\u7684\u60f3\u6cd5  - \u8fed\u4ee3\u671f\u671b 5 Iteration 1\u00a0\u8fed\u4ee3 1 - Copyright- IP- Effort estimation  - \u7248\u6743-  \u77e5\u8bc6\u4ea7\u6743  - \u5de5\u4f5c\u91cf\u4f30\u7b97 6 Iteration 1\u00a0\u8fed\u4ee3 1 - Agile manifesto- Quality assurance- Being innovative with open data  - \u654f\u6377\u5ba3\u8a00 -  \u8d28\u91cf\u4fdd\u8bc1  - \u5229\u7528\u5f00\u653e\u6570\u636e\u8fdb\u884c\u521b\u65b0 7 Iteration 2\u00a0\u8fed\u4ee3 2 - Customer collaboration- Systems thinking- Integrity testing  - \u5ba2\u6237\u534f\u4f5c-  \u7cfb\u7edf\u601d\u7ef4  - \u5b8c\u6574\u6027\u6d4b\u8bd5 8 Iteration 2\u00a0\u8fed\u4ee3 2 - Learning journey expectations- Importance of continuous improvement- Handover expectations  - \u5b66\u4e60\u4e4b\u65c5\u671f\u671b-  \u6301\u7eed\u6539\u8fdb\u7684\u91cd\u8981\u6027  - \u4ea4\u63a5\u671f\u671b 9 Iteration 3\u00a0\u8fed\u4ee3 3 - Storytelling through data- How to demo a product- Deep dive into quality assurance  - \u901a\u8fc7\u6570\u636e\u8bb2\u6545\u4e8b -  \u5982\u4f55\u6f14\u793a\u4ea7\u54c1  - \u6df1\u5165\u4e86\u89e3\u8d28\u91cf\u4fdd\u8bc1 10 Iteration 3\u00a0\u8fed\u4ee3 3 - How to plan for your career- Expo expectations- Deep dive into user testing  - \u5982\u4f55\u89c4\u5212\u60a8\u7684\u804c\u4e1a\u751f\u6daf -  \u4e16\u535a\u4f1a\u671f\u671b  - \u6df1\u5165\u4e86\u89e3\u7528\u6237\u6d4b\u8bd5 11 Iteration 3\u00a0\u8fed\u4ee3 3 - Deep dive into handover guidelines- Elevator pitch- Exit interview expectations  - \u6df1\u5165\u4e86\u89e3\u4ea4\u63a5\u6307\u5357-  \u7535\u68af\u63a8\u4ecb  - \u79bb\u804c\u9762\u8bd5\u671f\u671b 12 Expo &amp; Learning Journey &amp; Handover Package  \u535a\u89c8\u4f1a\u548c\u5b66\u4e60\u4e4b\u65c5\u548c\u79fb\u4ea4\u5957\u9910 - Demonstrate your final product- Finalize your handover package- Reflect on the semester and roles currently in the industry  - \u5c55\u793a\u60a8\u7684\u6700\u7ec8\u4ea7\u54c1 -  \u5b8c\u6210\u60a8\u7684\u79fb\u4ea4\u5305  - \u53cd\u601d\u76ee\u524d\u5728\u884c\u4e1a\u4e2d\u7684\u5b66\u671f\u548c\u89d2\u8272 14 Exit Interviews &amp; Final reflective diary  \u79bb\u804c\u9762\u8c08\u548c\u6700\u7ec8\u53cd\u601d\u65e5\u8bb0 - Conduct the exit interview with the teaching team- Submit your final reflective diary  - \u4e0e\u6559\u5b66\u56e2\u961f\u8fdb\u884c\u79bb\u804c\u9762\u8c08  - \u63d0\u4ea4\u60a8\u7684\u6700\u7ec8\u53cd\u601d\u65e5\u8bb0"},{"location":"course_notes/fit5120/#oweek","title":"Oweek","text":"<p>DISC Theory and DISC Personality Traits - DISC Insights </p>"},{"location":"course_notes/fit5120/#to-do-before-week-1","title":"To do before Week 1","text":"<ul> <li>Read Student Unit Guide (10mins)<ul> <li>Watch How is IE unit run Video (10mins)</li> <li>Watch Assessments (10mins)</li> <li>Read DISC requirements (10mins)</li> <li>Read Design Thinking (5 mins)</li> <li>Read Empathy Map (10 mins)</li> <li>Read Lotus Blossom (5mins)</li> <li>Read IT for Social Good (5mins)</li> <li>Watch Industry Mentor importance (10mins)</li> </ul> </li> </ul>"},{"location":"course_notes/fit5120/#week1","title":"week1","text":"<p>About LeanKit - Planview Personas | Usability.gov User Stories | Examples and Template | Atlassian </p>"},{"location":"course_notes/fit5120/#problem-statement","title":"Problem Statement","text":"<p>How to Build a Problem Statement. Have you ever tried to write a problem\u2026 | by Dan Brown | EightShapes | Medium Problem Statements: How to Use the Problem Framing Method </p>"},{"location":"course_notes/fit5120/#design-thinking","title":"Design Thinking","text":"<p>What Is Design Thinking?. Customer-centric design is about\u2026 | by Kaan Turnali | Medium Getting Started with Design Thinking | Highland Solutions Empathy Mapping: The First Step in Design Thinking Empathy Mapping: A Guide to Getting Inside a User's Head | UX Booth What is an Empathy Map | Accenture </p>"},{"location":"course_notes/fit5120/#personas-and-user-stories","title":"Personas and User Stories","text":"<p>Personas | Usability.gov 9 Empathy Exercises that Help Product Teams Improve CX | InMoment Gherkin Language: Format, Syntax &amp; Gherkin Test in Cucumber User Story Acceptance Criteria Examples and Definition | RubyGarage User Stories | Examples and Template | Atlassian </p>"},{"location":"course_notes/fit5120/#reflective-diary","title":"Reflective Diary","text":"<p>Reflective Diary - what is required? : Identify and describe significant events/incidents/learning including: - a brief description of what happened including your own and others actions - how you felt at the time \u53cd\u601d\u65e5\u8bb0\u2014\u2014\u9700\u8981\u4ec0\u4e48\uff1f \uff1a\u8bc6\u522b\u5e76\u63cf\u8ff0\u91cd\u5927\u4e8b\u4ef6/\u4e8b\u4ef6/\u5b66\u4e60\uff0c\u5305\u62ec\uff1a - \u7b80\u8981\u63cf\u8ff0\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u5305\u62ec\u60a8\u81ea\u5df1\u548c\u4ed6\u4eba\u7684\u884c\u4e3a - \u60a8\u5f53\u65f6\u7684\u611f\u53d7 Evaluation: What was most satisfactory and/or troubling about the event/incident/learning? Analysis: Why do you think it happened? What else could you have done? Action Plan: What are the implications for the future? If it happened again, what would you do? Report back on actions you have tried \u8bc4\u4f30\uff1a\u4e8b\u4ef6/\u4e8b\u4ef6/\u5b66\u4e60\u4e2d\u6700\u4ee4\u4eba\u6ee1\u610f\u548c/\u6216\u6700\u4ee4\u4eba\u4e0d\u5b89\u7684\u662f\u4ec0\u4e48\uff1f \u25cf \u5206\u6790\uff1a\u60a8\u8ba4\u4e3a\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff1f\u4f60\u8fd8\u80fd\u505a\u4ec0\u4e48\uff1f \u25cf \u884c\u52a8\u8ba1\u5212\uff1a\u5bf9\u672a\u6765\u6709\u4f55\u5f71\u54cd\uff1f\u5982\u679c\u518d\u53d1\u751f\u4e00\u6b21\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f\u62a5\u544a\u60a8\u5c1d\u8bd5\u8fc7\u7684\u64cd\u4f5c  </p> <p>Yourself \u2013 to reflect on your personal growth and learning over any given week and the life of the project. To develop a range of strategies and techniques to draw upon \u4f60\u81ea\u5df1\u53cd\u601d\u4f60\u5728\u4efb\u610f\u4e00\u5468\u548c\u9879\u76ee\u751f\u547d\u5468\u671f\u4e2d\u7684\u4e2a\u4eba\u6210\u957f\u548c\u5b66\u4e60\u3002\u5236\u5b9a\u4e00\u7cfb\u5217\u53ef\u4f9b\u501f\u9274\u7684\u7b56\u7565\u548c\u6280\u672f Identifying significant events / incidents / learning including \u25cf A brief description of what happened including your own and others actions \u25cf How you felt at the time \u25cf What was most satisfactory and/or troubling about the event / incident / learning? \u25cf What are the implications for future practice \u2013 What could you have done differently? \u25cf What was learned? \u25cf What action (if any) will you take as a result of this experience? \u8bc6\u522b\u91cd\u5927\u4e8b\u4ef6/\u4e8b\u4ef6/\u5b66\u4e60\uff0c\u5305\u62ec \u25cf \u7b80\u8981\u63cf\u8ff0\u6240\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u5305\u62ec\u60a8\u81ea\u5df1\u548c\u4ed6\u4eba\u7684\u884c\u4e3a \u25cf \u60a8\u5f53\u65f6\u7684\u611f\u53d7 \u25cf \u5bf9\u4e8b\u4ef6/\u4e8b\u4ef6/\u5b66\u4e60\u6700\u6ee1\u610f\u548c/\u6216\u6700\u56f0\u6270\u7684\u662f\u4ec0\u4e48\uff1f \u25cf \u5bf9\u672a\u6765\u5b9e\u8df5\u6709\u4f55\u5f71\u54cd\u2014\u2014\u60a8\u53ef\u4ee5\u91c7\u53d6\u54ea\u4e9b\u4e0d\u540c\u7684\u505a\u6cd5\uff1f \u25cf \u5b66\u5230\u4e86\u4ec0\u4e48\uff1f \u25cf \u7531\u4e8e\u8fd9\u6b21\u7ecf\u5386\uff0c\u60a8\u5c06\u91c7\u53d6\u4ec0\u4e48\u884c\u52a8\uff08\u5982\u679c\u6709\uff09\uff1f  </p> <p>Instead, reflect on. How did you meet? \u76f8\u53cd\uff0c\u53cd\u601d\u4e00\u4e0b\u3002\u4f60\u4eec\u662f\u600e\u4e48\u8ba4\u8bc6\u7684\uff1f What did you how did you feel when you met your team? What did you learn from the marshmallow challenge? \u5f53\u4f60\u9047\u5230\u4f60\u7684\u56e2\u961f\u65f6\uff0c\u4f60\u6709\u4ec0\u4e48\u611f\u89c9\uff1f\u4f60\u4ece\u68c9\u82b1\u7cd6\u6311\u6218\u4e2d\u5b66\u5230\u4e86\u4ec0\u4e48\uff1f What would you change if you did that marshmallow challenge again? \u5982\u679c\u4f60\u518d\u6b21\u505a\u68c9\u82b1\u7cd6\u6311\u6218\uff0c\u4f60\u4f1a\u6539\u53d8\u4ec0\u4e48\uff1f What would you do differently? What did you learn about your team members? \u4f60\u4f1a\u505a\u4ec0\u4e48\u4e0d\u540c\u7684\u4e8b\u60c5\uff1f\u4f60\u4ece\u4f60\u7684\u56e2\u961f\u6210\u5458\u8eab\u4e0a\u5b66\u5230\u4e86\u4ec0\u4e48\uff1f Maybe you have noticed that you were sitting back and being quiet. \u4e5f\u8bb8\u4f60\u5df2\u7ecf\u6ce8\u610f\u5230\u4f60\u5750\u4e0b\u6765\u4fdd\u6301\u5b89\u9759\u3002 Maybe the action next time is that I shouldn't be voice my opinion in a very polite and professional way. \u4e5f\u8bb8\u4e0b\u4e00\u6b21\u7684\u884c\u52a8\u662f\u6211\u4e0d\u5e94\u8be5\u4ee5\u975e\u5e38\u793c\u8c8c\u548c\u4e13\u4e1a\u7684\u65b9\u5f0f\u8868\u8fbe\u6211\u7684\u610f\u89c1\u3002 Well, maybe I was taking the lead and I wasn't giving my team members a chance or so excited with this challenge. \u597d\u5427\uff0c\u4e5f\u8bb8\u6211\u5e26\u5934\u4e86\uff0c\u6211\u6ca1\u6709\u7ed9\u6211\u7684\u56e2\u961f\u6210\u5458\u673a\u4f1a\uff0c\u4e5f\u6ca1\u6709\u5bf9\u8fd9\u4e2a\u6311\u6218\u611f\u5230\u5174\u594b\u3002 Or I've done this before so I know what to do. \u6216\u8005\u6211\u4ee5\u524d\u505a\u8fc7\u8fd9\u4e2a\uff0c\u6240\u4ee5\u6211\u77e5\u9053\u8be5\u600e\u4e48\u505a\u3002 So what action would you do differently and how would you take those learnings for the next 11 weeks of of this unit? \u90a3\u4e48\uff0c\u4f60\u4f1a\u91c7\u53d6\u4ec0\u4e48\u4e0d\u540c\u7684\u884c\u52a8\uff0c\u4f60\u5c06\u5982\u4f55\u5728\u672c\u5355\u5143\u63a5\u4e0b\u6765\u768411\u5468\u91cc\u5b66\u4e60\u8fd9\u4e9b\u4e1c\u897f\uff1f So my recommendation to you is that perhaps putting these sentences as headings, I'm going to slip them one scenario, maybe even two scenarios. \u6240\u4ee5\u6211\u5bf9\u4f60\u7684\u5efa\u8bae\u662f\uff0c\u4e5f\u8bb8\u628a\u8fd9\u4e9b\u53e5\u5b50\u4f5c\u4e3a\u6807\u9898\uff0c\u6211\u4f1a\u628a\u5b83\u4eec\u585e\u8fdb\u4e00\u4e2a\u573a\u666f\uff0c\u751a\u81f3\u4e24\u4e2a\u573a\u666f\u3002 So for an example we can talk about the event will be a marshmallow challenge, \u56e0\u6b64\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u8c08\u8bba\u8be5\u4e8b\u4ef6\u5c06\u662f\u68c9\u82b1\u7cd6\u6311\u6218\uff0c a brief description of of of your what you did and others actions and how you \u7b80\u8981\u63cf\u8ff0\u60a8\u7684\u6240\u4f5c\u6240\u4e3a\u548c\u5176\u4ed6\u884c\u4e3a\u4ee5\u53ca\u60a8\u5982\u4f55 felt at the time of meeting your team during the challenge for the first time. \u5728\u6311\u6218\u671f\u95f4\u7b2c\u4e00\u6b21\u89c1\u5230\u4f60\u7684\u56e2\u961f\u65f6\u7684\u611f\u89c9\u3002 What was the most satisfactory or troubling about the marshmallow challenge or just meeting your team? \u68c9\u82b1\u7cd6\u6311\u6218\u6216\u53ea\u662f\u4e0e\u60a8\u7684\u56e2\u961f\u4f1a\u9762\u6700\u4ee4\u4eba\u6ee1\u610f\u6216\u6700\u9ebb\u70e6\u7684\u662f\u4ec0\u4e48\uff1f What could you done differently from the marshmallow challenge as yourself, and what did you learn? \u4f5c\u4e3a\u4f60\u81ea\u5df1\uff0c\u4f60\u80fd\u505a\u4e9b\u4ec0\u4e48\u4e0e\u68c9\u82b1\u7cd6\u6311\u6218\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u4f60\u5b66\u5230\u4e86\u4ec0\u4e48\uff1f\u3001</p>"},{"location":"course_notes/fit5120/#week2","title":"week2","text":""},{"location":"course_notes/fit5120/#learning-objectives-and-deliverables","title":"Learning Objectives and Deliverables","text":"<p>Agile \u654f\u6377 Meeting cadences \u4f1a\u8bae\u8282\u594f Iteration planning \u8fed\u4ee3\u89c4\u5212 User journey \u7528\u6237\u65c5\u7a0b Peer reviews \u540c\u884c\u8bc4\u5ba1 Acceptance testing \u9a8c\u6536\u6d4b\u8bd5  </p>"},{"location":"course_notes/fit5120/#reading","title":"reading","text":"<p>Acceptance Testing Documentation With Real Time Scenarios Iteration Planning 101 | Smartsheet Scrum: A Breathtakingly Brief And Agile Introduction | Agile Learning Labs Retrospective Formats for High-Performing Teams | by Olivia Adams | Medium UX/UI Case Study: Redesigning a Public Transportation App for a Large Touristic City | by BraveGeeks Team | UX Planet What Is a User Story Template and Why Does It Work So Well? Beware the Cut \u2018n\u2019 Paste Persona \u2013 A List Apart Write SMART Goals &amp; INVEST for User Stories Scenarios &amp; Task Flows: Aligning design with user behavior | UX Collective Acceptance Testing Documentation With Real Time Scenarios Iteration Planning 101 | Smartsheet </p>"},{"location":"course_notes/fit5120/#week-3","title":"week 3","text":"<p>Retrospective Formats for High-Performing Teams | by Olivia Adams | Medium UX/UI Case Study: Redesigning a Public Transportation App for a Large Touristic City | by BraveGeeks Team | UX Planet How To Setup a Mobile Usability Test (Video) What is User Testing in Web Design? - 21 Designs Australia UX Templates - UX Mastery Task Scenarios for Usability Testing </p>"},{"location":"course_notes/fit5120/#week-5","title":"week 5","text":"<p>Home - Copyright free and Creative Commons resources - Subject guides at Monash University User Journey Maps or User Flows, what to do first? | by Thalion | Design + Sketch | Medium User Journey Maps or User Flows, what to do first? | by Thalion | Design + Sketch | Medium What 'systems thinking' actually means - and why it matters today | World Economic Forum Asking the right questions during user research, interviews and testing | by Fabricio Teixeira | UX Collective 10 Real World Data Science Case Studies Projects with Example </p>"},{"location":"course_notes/fit5120/#week6","title":"week6","text":"<p>A case study: Uncover the user\u2019s world with systems thinking - UX Magazine Site Unreachable 15 Stunning Data Visualization Examples to Get Inspired By The greatest example ever of MVP and iterative, incremental development | by Gert Erasmus | Medium </p>"},{"location":"course_notes/fit5120/#week-8","title":"week 8","text":"<p>Kanban at Scale \u2013 A Siemens Success Story Redesigning Airbnb for the new normal \u2014 a UX case study | by Hauwau Sonia Bello | UX Collective What are story points and how do you estimate them? A case study: Uncover the user\u2019s world with systems thinking - UX Magazine Standard Chartered | Innovation Lab | Thoughtworks </p>"},{"location":"course_notes/fit5122/","title":"Fit5122","text":""},{"location":"course_notes/fit5122/#handbook","title":"handbook","text":"<p>FIT5122 - Professional practice - Monash University </p> Week\u00a0\u5468 Commencing\u00a0\u5f00\u59cb Weekly Topic\u00a0\u6bcf\u5468\u4e3b\u9898 Topics covered in this week  \u672c\u5468\u6db5\u76d6\u7684\u4e3b\u9898 1 24/07/2023 Effective communication\u00a0\u6709\u6548\u6c9f\u901a Effective meetings and presentations  \u6709\u6548\u7684\u4f1a\u8bae\u548c\u6f14\u793a 2 31/07/2023 Teams and leadership\u00a0\u56e2\u961f\u548c\u9886\u5bfc\u529b - Managing conflict resolution- Benefits of teams  - \u7ba1\u7406\u51b2\u7a81\u89e3\u51b3  - \u56e2\u961f\u7684\u597d\u5904 3 07/08/2023 Conflict resolution and intercultural challenges  \u89e3\u51b3\u51b2\u7a81\u548c\u6587\u5316\u95f4\u6311\u6218 - Managing conflict resolution and intercultural issues- Cross-cultural behavior and awareness  - \u7ba1\u7406\u51b2\u7a81\u89e3\u51b3\u548c\u8de8\u6587\u5316\u95ee\u9898  - \u8de8\u6587\u5316\u884c\u4e3a\u548c\u610f\u8bc6 4 14/08/2023 Intercultural challenges\u00a0\u8de8\u6587\u5316\u6311\u6218 Strategies to improve cross-cultural awareness and intercultural team performance  \u63d0\u9ad8\u8de8\u6587\u5316\u610f\u8bc6\u548c\u8de8\u6587\u5316\u56e2\u961f\u7ee9\u6548\u7684\u7b56\u7565 5 21/08/2023 Professional Responsibility  \u804c\u4e1a\u8d23\u4efb Effect of quality and reliability on systems- Strategies for implementing quality and reliability into IE projects  \u8d28\u91cf\u548c\u53ef\u9760\u6027\u5bf9\u7cfb\u7edf\u7684\u5f71\u54cd  - \u5728IE\u9879\u76ee\u4e2d\u5b9e\u65bd\u8d28\u91cf\u548c\u53ef\u9760\u6027\u7684\u7b56\u7565 6 28/08/2023 Professional Responsibility  \u804c\u4e1a\u8d23\u4efb - Measure Quality and Reliability- Understanding your audience  - \u8861\u91cf\u8d28\u91cf\u548c\u53ef\u9760\u6027  - \u4e86\u89e3\u60a8\u7684\u53d7\u4f17 7 04/09/2023 Effective communication\u00a0\u6709\u6548\u6c9f\u901a - Using Empathy Forecasting to craft a more complex message- Create a complex means of communication (Product Video)  - \u4f7f\u7528\u540c\u7406\u5fc3\u9884\u6d4b\u6765\u5236\u4f5c\u66f4\u590d\u6742\u7684\u6d88\u606f  - \u521b\u5efa\u590d\u6742\u7684\u6c9f\u901a\u65b9\u5f0f\uff08\u4ea7\u54c1\u89c6\u9891\uff09 8 11/09/2023 Effective communication\u00a0\u6709\u6548\u6c9f\u901a - Effective communication in organizations- Strategies for more complex communications- Applying these strategies in IE projects (Business report, elevator pitches, emails)  - \u7ec4\u7ec7\u4e2d\u7684\u6709\u6548\u6c9f\u901a -  \u66f4\u590d\u6742\u7684\u6c9f\u901a\u7b56\u7565  - \u5728IE\u9879\u76ee\u4e2d\u5e94\u7528\u8fd9\u4e9b\u7b56\u7565\uff08\u4e1a\u52a1\u62a5\u544a\uff0c\u7535\u68af\u63a8\u4ecb\uff0c\u7535\u5b50\u90ae\u4ef6\uff09 9 18/09/2023 Professional Responsibility  \u804c\u4e1a\u8d23\u4efb - Learn the right way of using other people\u2019s work- Understanding what is permissible regarding intellectual property and copyright as an IT professional  - \u5b66\u4e60\u4f7f\u7528\u4ed6\u4eba\u5de5\u4f5c\u7684\u6b63\u786e\u65b9\u5f0f  - \u4e86\u89e3\u4f5c\u4e3aIT\u4e13\u4e1a\u4eba\u5458\u5728\u77e5\u8bc6\u4ea7\u6743\u548c\u7248\u6743\u65b9\u9762\u7684\u5141\u8bb8\u5185\u5bb9 10 02/10/2023 Professional Responsibility  \u804c\u4e1a\u8d23\u4efb Ethics: Strategies to help navigate IT ethical dilemmas  \u9053\u5fb7\uff1a\u5e2e\u52a9\u5e94\u5bf9 IT \u9053\u5fb7\u56f0\u5883\u7684\u7b56\u7565 11 09/10/2023 Professional Responsibility  \u804c\u4e1a\u8d23\u4efb Ethics: Ethical issues facing the IT profession - the unintended (and intended) social consequences of our decisions  \u9053\u5fb7\uff1aIT\u884c\u4e1a\u9762\u4e34\u7684\u9053\u5fb7\u95ee\u9898 - \u6211\u4eec\u51b3\u7b56\u7684\u610f\u5916\uff08\u548c\u9884\u671f\uff09\u793e\u4f1a\u540e\u679c 12 16/10/2023 Professional Responsibility  \u804c\u4e1a\u8d23\u4efb Your career\u00a0\u60a8\u7684\u804c\u4e1a\u751f\u6daf"},{"location":"course_notes/fit5122/#week-1","title":"week 1","text":""},{"location":"course_notes/fit5122/#meeting","title":"meeting","text":"<p>How to Run a Great Virtual Meeting Chairing a meeting | Resource Centre How to run effective virtual and in-person meetings How to Write an Agenda for a Meeting: Tips and Template </p>"},{"location":"course_notes/fit5122/#presentations","title":"Presentations","text":"<p>14 Dos and Don'ts for an Effective Presentation | Renderforest </p>"},{"location":"course_notes/fit5122/#impromptu-speaking","title":"Impromptu Speaking","text":"<p>10 top tips for delivering an impromptu speech 3 Ways Effective Communicators Structure Unforgettable Messages | Entrepreneur </p>"},{"location":"course_notes/fit5122/#week-2","title":"week 2","text":"<p>Using I-statements in effective communication and conflict resolution Professional Communication Etiquette Rules Tuckman\u2019s stages of group development | NS4B - Net Solution For Business Using the Z-Process to Develop an Effective Team Workflow Six Thinking Hats Technique explained - Toolshero Social Contracts for Agile Teams Agile Ways of Working\u2014 Social Contracts | by Marty Drill | The Startup | Medium </p>"},{"location":"course_notes/fit5122/#week-3","title":"week 3","text":"<p>The Chief People Officer Of Cisco Shares Her Top Three Tips For Building High-Performing Teams The Top 7 Management Styles: Which Ones Are Most Effective? Everything about time - Monochronism - Polychronism - Orientation </p>"},{"location":"course_notes/fit5122/#week-4","title":"week 4","text":"<p> High Context Culture vs Low Context Culture: Communication Design For Avoiding Uncertainty - TechTello DMIS Model - IDRInstitute Getting Cross-Cultural Teamwork Right Cross-Cultural Communication Takes More than Manners </p>"},{"location":"course_notes/fit5122/#week-5","title":"week 5","text":"<p>Software error caused \u2018serious incident\u2019 for airline | Information Age | ACS Cambridge GCSE Computing Online weblinks </p>"},{"location":"course_notes/fit5122/#week6","title":"week6","text":"<p>The Impact of Poor Software Quality - BuildingBetterSoftware The $2t cost of poor software quality Software Testing Best Practices: 11 Ways to Improve Testing Process | AltexSoft Software Quality Management Best Practices | 5 Do's &amp; Don'ts Software Quality Standards \u2013 ISO 5055 - CISQ ISO/IEC 9126 in Software Engineering - GeeksforGeeks </p>"},{"location":"course_notes/fit5125/","title":"FIT5125 IT research methods 2022 s2","text":"<p>Create time: 2022-10-05  Last update: 2022-12-05</p>"},{"location":"course_notes/fit5125/#how-to-use-the-fit-study-note-document","title":"How to use the FIT study Note document","text":"<ol> <li>download the markdown file repository and  navigate to the <code>docs</code> folder</li> <li>view all the markdown files via Obsidian vault that can show the linked section in the note document   </li> <li> <p>You may find some extra material or program template  repository in the Course Brief introduction for the FIT Note markdown Document (some course don't have )</p> </li> <li> <p>you can view the web page which transfer from MD file online but will lose the extra information or wrong    markdown display</p> </li> </ol>"},{"location":"course_notes/fit5125/#fit5125-course-brief-introduction","title":"FIT5125 Course Brief introduction","text":"week Introduction 3 Literature 4 Configuring Research 5 Surveys 6 interviews 7 qualitative analysis 8 descriptive stats 9 inferential  stats 10 &amp; 11 communicating research 11 creating IP <p>FIT5125 - IT research methods done for the year 2022. (Semester 2)  </p>"},{"location":"course_notes/fit5125/#week-3-literature","title":"Week 3 - Literature","text":""},{"location":"course_notes/fit5125/#exercise","title":"EXERCISE","text":""},{"location":"course_notes/fit5125/#week-4-configuring-research","title":"Week 4 Configuring Research","text":""},{"location":"course_notes/fit5125/#exercise_1","title":"EXERCISE","text":""},{"location":"course_notes/fit5125/#week-4-assessment-effective-configuration-of-research","title":"Week 4 Assessment \u2013 Effective Configuration of Research","text":""},{"location":"course_notes/fit5125/#scenario","title":"scenario","text":"<p>You work for a large IT consultancy who is contracted by Monash University eSolutions to improve the  design of university wide unit Moodle pages, specifically in relation to its mobile usability. The university  already has anecdotal data that this aspect of Moodle is not a great experience for users, and needs  work. As per your consultancies standard practice, after an initial meeting with the client, you are tasked  by your team with the following</p>"},{"location":"course_notes/fit5125/#task-1","title":"Task 1","text":"<ol> <li>Define what you consider the three main research questions that need to be answered in the course  of your conducting this consultancy project.  (limit 100 words) \u5b9a\u4e49\u4f60\u8ba4\u4e3a\u5728\u5f00\u5c55\u8be5\u54a8\u8be2\u9879\u76ee\u8fc7\u7a0b\u4e2d\u9700\u8981\u56de\u7b54\u7684\u4e09\u4e2a\u4e3b\u8981\u7814\u7a76\u95ee\u9898</li> </ol> <p>\u8be5\u5927\u5b66\u5df2\u7ecf\u6709\u4f20\u95fb\u6570\u636e\u8868\u660e\uff0cMoodle \u7684\u8fd9\u4e00\u65b9\u9762\u5bf9\u7528\u6237\u6765\u8bf4\u4e0d\u662f\u5f88\u597d\u7684\u4f53\u9a8c\uff0c\u9700\u8981\u6539\u8fdb\u3002  Moodle \u9875\u9762\u8bbe\u8ba1 --&gt; \u79fb\u52a8\u53ef\u7528\u6027 \u2022 \u786e\u5b9a\u5229\u76ca\u76f8\u5173\u8005\u671f\u671b-\u5229\u76ca\u76f8\u5173\u8005\u548c\u7814\u7a76\u4eba\u5458\u7684\u671f\u671b\u5339\u914d \u2022 \u786e\u5b9a\u53ef\u7528\u8d44\u6e90\u2014\u2014\u65f6\u95f4\u3001\u91d1\u94b1\u3001\u4eba\u5458 \u2022 \u786e\u5b9a\u7814\u7a76\u65b9\u6cd5 \u2022 \u7528\u6237\u662f\u8c01\uff08\u5b66\u751f&amp;\u8001\u5e08\uff09 \u2022 \u7528\u6237\u7f3a\u5c11\u4ec0\u4e48/\u54ea\u91cc\u4e0d\u597d \u2022 \u7528\u6237\u9700\u8981\u4ec0\u4e48/\u4ec0\u4e48\u6837\u7b97\u597d \u2022 \u9700\u8981\u54ea\u4e9b\u6570\u636e\uff08\u73b0\u5b58\uff08\u8bb0\u5f55\u7cfb\u7edf\u4ea4\u4e92\u7684\u6587\u4ef6\uff09/\u521b\u9020\uff09\u5b9a\u6027\u6570\u636e\u6216\u5b9a\u91cf\u6570\u636e \u2022 \u8c01\uff0c\u7528\u4ec0\u4e48\u65b9\u6cd5\uff0c\u5206\u6790\u4ec0\u4e48\u6570\u636e</p>"},{"location":"course_notes/fit5125/#task-2","title":"Task 2","text":"<ol> <li>Describe how qualitative and quantitative methods will be used to answer these questions and draw out the best findings for your client outlining existing data and that which requires collection. \u63cf\u8ff0\u5982\u4f55\u4f7f\u7528\u5b9a\u6027\u548c\u5b9a\u91cf\u65b9\u6cd5\u6765\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u5e76\u4e3a\u5ba2\u6237\u5f97\u51fa\u6700\u4f73\u53d1\u73b0\uff0c\u6982\u8ff0\u73b0\u6709\u6570\u636e\u548c\u9700\u8981\u6536\u96c6\u7684\u6570\u636e(limit 300 words)</li> </ol>"},{"location":"course_notes/fit5125/#qualitative-methods","title":"Qualitative methods\uff1a\u5b9a\u6027\u5206\u6790\u6cd5","text":"<p>\u4ec0\u4e48\u662f\u5b9a\u6027\u5206\u6790\uff1f</p> <p>Tutor \u80c3\u53e3\u5927/\u80c3\u53e3\u5c0f</p> <p>\u5b9a\u6027\u7814\u7a76\u65b9\u6cd5\u5219\u65e8\u5728\u5bf9\u4f5c\u4e3a\u7814\u7a76\u4eba\u5458\u7684\u4f60\u6240\u89c2\u5bdf\u5230\u7684\u4e1c\u897f\u5efa\u7acb\u4e00\u4e2a\u5b8c\u6574\u800c\u8be6\u7ec6\u7684\u63cf\u8ff0\u3002\u5b9a\u6027\u7684\u65b9\u6cd5\u4e0d\u662f\u63d0\u4f9b\u9884\u6d4b\u548c\u56e0\u679c\u89e3\u91ca\uff0c\u800c\u662f\u63d0\u4f9b\u6536\u96c6\u5230\u7684\u6570\u636e\u7684\u80cc\u666f\u548c\u89e3\u91ca\u3002</p> <p>\u5b9a\u6027\u6570\u636e\u5206\u6790\u6cd5\u6709\u54ea\u4e9b\uff1f 1) \u8bbf\u8c08\u6216\u5c0f\u7ec4\u8ba8\u8bba (Interviews or focus groups) \u63cf\u8ff0\u91c7\u8bbf\u7684\u5730\u70b9\u3001\u65f6\u95f4\u548c\u65b9\u5f0f\uff0c\u9700\u8981\u89e3\u7b54\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a \u4f60\u662f\u5982\u4f55\u53d1\u73b0\u548c\u9009\u62e9\u53c2\u4e0e\u8005\u7684\uff1f \u6709\u591a\u5c11\u4eba\u53c2\u52a0\uff1f \u8bbf\u8c08\u7684\u5f62\u5f0f\u662f\u4ec0\u4e48\uff08\u7ed3\u6784\u5316\u3001\u534a\u7ed3\u6784\u5316\u3001\u975e\u7ed3\u6784\u5316\uff09\uff1f \u91c7\u8bbf\u65f6\u957f\u662f\u591a\u5c11\uff1f \u91c7\u8bbf\u5185\u5bb9\u662f\u5982\u4f55\u5f55\u5236\u7684\uff1f</p> <p>2) \u53c2\u4e0e/\u884c\u4e3a\u89c2\u5bdf (Participant/behavioral observation) \u63cf\u8ff0\u4f60\u5728\u54ea\u91cc\u3001\u4f55\u65f6\u4ee5\u53ca\u5982\u4f55\u8fdb\u884c\u89c2\u5bdf\u6216\u8fdb\u884c\u4eba\u79cd\u5b66\u7814\u7a76\uff1a \u4f60\u89c2\u5bdf\u4e86\u54ea\u4e9b\u56e2\u4f53\u6216\u793e\u533a\uff1f \u4f60\u662f\u5982\u4f55\u63a5\u89e6\u5230\u4ed6\u4eec\u7684\uff1f \u4f60\u82b1\u4e86\u591a\u957f\u65f6\u95f4\u8fdb\u884c\u8fd9\u9879\u7814\u7a76\uff0c\u7814\u7a76\u5730\u70b9\u5728\u54ea\u91cc\uff1f \u4f60\u5728\u793e\u533a\u91cc\u626e\u6f14\u4e86\u4ec0\u4e48\u89d2\u8272\uff1f \u4f60\u5982\u4f55\u8bb0\u5f55\u4f60\u7684\u8d44\u6599\uff08\u4f8b\u5982\u89c6\u542c\u8bb0\u5f55\u3001\u7b14\u8bb0\uff09\uff1f</p> <p>3) \u73b0\u6709\u6570\u636e (Existing data) \u89e3\u91ca\u4f60\u5982\u4f55\u9009\u62e9\u6848\u4f8b\u7814\u7a76\u6750\u6599\uff08\u4f8b\u5982\u6587\u672c\u6216\u56fe\u50cf\uff09\u4f5c\u4e3a\u4f60\u5206\u6790\u7684\u7126\u70b9\uff1a \u4f60\u5206\u6790\u4e86\u4ec0\u4e48\u7c7b\u578b\u7684\u6750\u6599\uff1f \u4f60\u662f\u5982\u4f55\u6536\u96c6\u548c\u6311\u9009\u5b83\u4eec\u7684\uff1f</p>"},{"location":"course_notes/fit5125/#quantitative-methods","title":"Quantitative methods\uff1a\u5b9a\u91cf\u5206\u6790\u6cd5","text":"<p>\u4ec0\u4e48\u662f\u5b9a\u91cf\u5206\u6790\uff1f</p> <p>Tutor \u4e00\u987f\u5403\u4e24\u4e2a\u5de8\u65e0\u9738 Tutor \u5403\u5b8c\u4e24\u4e2a\u6c49\u5821\u4e4b\u540e\u8fd8\u80fd\u54036\u4e2a\u9e21\u5757\u548c\u4e00\u4efd\u5927\u85af</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u8bd5\u56fe\u91cf\u5316\u6570\u636e\u5e76\u4ece\u76ee\u6807\u4eba\u7fa4\u7684\u6837\u672c\u4e2d\u5f52\u7eb3\u7ed3\u679c\u3002\u5b83\u9075\u5faa\u7ed3\u6784\u5316\u7684\u6570\u636e\u6536\u96c6\u8fc7\u7a0b\uff0c\u4ee5\u6570\u5b57\u7684\u5f62\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5b9a\u91cf\u7814\u7a76\u4e5f\u89c2\u5bdf\u4f7f\u7528\u7edf\u8ba1\u624b\u6bb5\u7684\u5ba2\u89c2\u5206\u6790\u3002 \u5728\u5b9a\u91cf\u7814\u7a76\u4e2d\uff0c\u4e3a\u4e86\u5f97\u5230\u6709\u6548\u7684\u53ef\u6982\u62ec\u7684\u7ed3\u679c\uff0c\u4f60\u5e94\u8be5\u8db3\u591f\u8be6\u7ec6\u5730\u63cf\u8ff0\u4f60\u7684\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u5176\u4ed6\u7814\u7a76\u4eba\u5458\u91c7\u7528\u4f60\u7684\u7814\u7a76\u6210\u679c\u3002\u89e3\u91ca\u4f60\u5982\u4f55\u64cd\u4f5c\u5316\u6982\u5ff5\u548c\u6d4b\u91cf\u53d8\u91cf\uff0c\u62bd\u6837\u65b9\u6cd5\u6216\u7eb3\u5165\u6807\u51c6\uff0c\u4ee5\u53ca\u4f60\u7528\u4e8e\u6536\u96c6\u6570\u636e\u7684\u4efb\u4f55\u5de5\u5177\u3001\u7a0b\u5e8f\u548c\u6750\u6599\u3002</p> <p>\u5b9a\u91cf\u5206\u6790\u65b9\u6cd5\u6709\u54ea\u4e9b\uff1f 1) \u8c03\u67e5 (Surveys) \u63cf\u8ff0\u8c03\u67e5\u7684\u5730\u70b9\u3001\u65f6\u95f4\u548c\u65b9\u5f0f\uff0c\u9700\u8981\u89e3\u7b54\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a \u4f60\u662f\u5982\u4f55\u8bbe\u8ba1\u9898\u76ee\u7684\uff1f\u9898\u76ee\u7684\u5f62\u5f0f\u662f\u4ec0\u4e48\uff1f\u4f60\u7528\u4ec0\u4e48\u62bd\u6837\u65b9\u6cd5\u9009\u62e9\u53c2\u4e0e\u8005\uff1f \u4f60\u662f\u901a\u8fc7\u7535\u8bdd\u3001\u90ae\u4ef6\u3001\u7f51\u7edc\u8fd8\u662f\u5f53\u9762\u8fdb\u884c\u8c03\u67e5\u7684\uff1f\u53c2\u4e0e\u8005\u9700\u8981\u591a\u957f\u65f6\u95f4\u56de\u590d\uff1f \u6837\u672c\u91cf\u548c\u53cd\u5e94\u7387\u662f\u591a\u5c11\uff1f \u4f60\u53ef\u4ee5\u5c06\u5b8c\u6574\u7684\u95ee\u5377\u4f5c\u4e3a\u9644\u5f55\uff0c \u4ee5\u4fbf\u4f60\u7684\u8bfb\u8005\u80fd\u591f\u786e\u5207\u5730\u770b\u5230\u6240\u6536\u96c6\u7684\u6570\u636e\u3002</p> <p>2) \u5b9e\u9a8c (Experiments) \u8be6\u7ec6\u8bf4\u660e\u4f60\u7528\u6765\u8fdb\u884c\u5b9e\u9a8c\u7684\u5de5\u5177\u3001\u6280\u672f\u548c\u7a0b\u5e8f\uff1a \u4f60\u662f\u5982\u4f55\u8bbe\u8ba1\u8fd9\u4e2a\u5b9e\u9a8c\u7684\uff1f \u4f60\u662f\u5982\u4f55\u62db\u52df\u53c2\u4e0e\u8005\u7684\uff1f \u4f60\u662f\u5982\u4f55\u5904\u7406\u548c\u6d4b\u91cf\u8fd9\u4e9b\u53d8\u91cf\u7684\uff1f \u4f60\u5728\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u4e86\u4ec0\u4e48\u5de5\u5177\u6216\u6280\u672f\uff1f \u5728\u5b9e\u9a8c\u7814\u7a76\u4e2d\uff0c\u63d0\u4f9b\u8db3\u591f\u7684\u7ec6\u8282\u8ba9\u53e6\u4e00\u4f4d\u7814\u7a76\u4eba\u5458 \u91cd\u73b0\u4f60\u7684\u7ed3\u679c\u662f\u7279\u522b\u91cd\u8981\u7684\u3002</p> <p>3) \u73b0\u6709\u6570\u636e (Existing data) \u89e3\u91ca\u4f60\u5982\u4f55\u6536\u96c6\u548c\u9009\u62e9\u76f8\u5173\u8d44\u6599\uff08\u4f8b\u5982\u51fa\u7248\u7269\u6216\u6863\u6848\u6570\u636e\uff09\u4ee5\u5305\u542b\u5728\u4f60\u4eec\u7684\u7814\u7a76\u4e2d\uff1a \u4f60\u4ece\u54ea\u91cc\u83b7\u5f97\u8d44\u6599\u7684\uff1f \u6570\u636e\u6700\u521d\u662f\u5982\u4f55\u4ea7\u751f\u7684\uff1f \u4f60\u9009\u62e9\u6750\u6599\u7684\u6807\u51c6\u662f\u4ec0\u4e48\uff08\u6bd4\u5982\u65e5\u671f\u8303\u56f4\uff09</p>"},{"location":"course_notes/fit5125/#task-3","title":"task 3","text":"<ol> <li>Describe the resources you expect to be necessary, considering time, money and expertise, breaking this down into key activities that will be required. \u63cf\u8ff0\u60a8\u9884\u8ba1\u9700\u8981\u7684\u8d44\u6e90\uff0c\u8003\u8651\u65f6\u95f4\u3001\u91d1\u94b1\u548c\u4e13\u4e1a\u77e5\u8bc6\uff0c\u5c06\u5176\u5206\u89e3\u4e3a\u6240\u9700\u7684\u5173\u952e\u6d3b\u52a8\u3002(limit 300 words)</li> </ol> <p> \u6536\u96c6\u6570\u636e \u5b9a\u6027 - \u91c7\u8bbf/\u8bbf\u8c08\uff1a \u91c7\u8bbf\u8005/\u88ab\u91c7\u8bbf\u8005\u82b1\u8d39 - \u95ee\u5377\u8c03\u67e5\uff1a\u95ee\u5377\u5efa\u7acb/\u53d1\u9001/\u6536\u56de/\u5956\u52b1\u7684\u82b1\u8d39</p> <p>\u5b9a\u91cf - \u6570\u636e\u6536\u96c6\u65b9\u5f0f\u5bf9\u5e94\u82b1\u8d39</p> <p>**\u5206\u6790\u6570\u636e ** \u5b9a\u6027 - \u8f6c\u5f55\u7c7b\u578b\u5bf9\u5e94\u82b1\u8d39 - \u662f\u5426\u9700\u8981\u4e13\u4e1a\u4eba\u58eb\u5206\u6790  </p> <p>\u5b9a\u91cf - \u6570\u636e\u5c55\u793a\u82b1\u8d39 - \u6570\u636e\u6e05\u7406\u82b1\u8d39 - \u6570\u636e\u5206\u6790/\u53ef\u89c6\u5316\u82b1\u8d39 - \u6570\u636e\u4fdd\u5b58\u82b1\u8d39</p>"},{"location":"course_notes/fit5125/#week-5-surveys","title":"WEEK 5 Surveys","text":""},{"location":"course_notes/fit5125/#exercise_2","title":"EXERCISE","text":""},{"location":"course_notes/fit5125/#assessed-exercise-week-5-critique-and-development-of-a-questionnaire","title":"Assessed Exercise (Week 5)  \"Critique and development of a questionnaire\"","text":""},{"location":"course_notes/fit5125/#scenario_1","title":"scenario","text":"<p>During the Week 5 studio you participated in an online questionnaire.  The area of focus (i.e. overall topic) of the questionnaire is \"how technology has transformed the weekly  grocery shop\"  The Week 5 assignment requires you to critique and develop the questionnaire. A PDF version of the  questionnaire is available on the Moodle page for Week 5.\u6280\u672f\u5982\u4f55\u6539\u53d8\u4e86\u6bcf\u5468\u7684\u65e5\u5e38\u91c7\u8d2d</p>"},{"location":"course_notes/fit5125/#task-1_1","title":"task 1","text":"<p>Critique the provided questionnaire based on your understanding of good questionnaire  design. Identify 4 different problems with the questionnaire, an example question for each problem,  and your proposal for how each example question could be improved.\u00b7\u00a0\u00a0\u00a0\u627e\u51fa\u63d0\u4f9b\u7684\u95ee\u5377\u4e2d\u7684\u56db\u4e2a\u9519\u8bef\u00a0\u00a0\u00a0\u00a0  50 words maximum for each description of an issue identified.  50 words maximum for each suggestion of how to improve.</p> <p> </p>"},{"location":"course_notes/fit5125/#task-2_1","title":"task 2","text":"<p>develop an additional sub-topic for the questionnaire. Create a sub-topic heading, a  description of the sub-topic, and 4 additional questions that could be included within this sub-topic.  Briefly justify why each new question should be included.</p> <p>Overall topic\uff1a \" how technology has transformed the weekly grocery shop \".  \u6280\u672f\u5982\u4f55\u6539\u53d8\u4e86\u6bcf\u5468\u7684\u65e5\u5e38\u91c7\u8d2d</p> <p>\u5982\u4f55\u521b\u5efa\u5c0f\u6807\u9898 \u4ece\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u7ed3\u5408\u601d\u8003 - \u7f51\u7ad9 - App - \u4f18\u70b9 - \u7f3a\u9677 - \u8bbe\u5907  </p> <p>\u5982\u4f55\u63cf\u8ff0\u5c0f\u6807\u9898 \u4e3a\u4e86\u4e86\u89e3\u3002\u3002\u5bf9\u4e8eweekly grocery shop\u7684\u6539\u53d8\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u3002\u3002\u3002\u65b9\u9762\u8fdb\u884c\u8fdb\u4e00\u6b65\u8ba8\u8bba</p> <p>\u95ee\u9898\u7c7b\u578b - open questions - closed questions -  scale questions</p> <p></p> <p>\u5177\u4f53\u95ee\u9898 - \u660e\u786e&amp;\u8be6\u7ec6 \uff08\u5177\u4f53\u54ea\u65b9\u9762\uff09 - \u76ee\u7684\u660e\u786e - \u95ee\u9898\u7c7b\u578b\u660e\u786e - \u63d0\u4f9b\u7684\u9009\u9879\u7406\u7531\u5145\u8db3</p> <p></p> <p>\u6bcf\u4e2a\u9648\u8ff0\u90fd\u6709\u4e00\u4e2a\u6570\u503c\uff0c\u8868\u660e\u5b83\u88ab\u5224\u65ad\u4e3a\u6709\u5229\u8fd8\u662f\u4e0d\u5229\u3002 \u68c0\u67e5\u4eba\u4eec\u662f\u5426\u540c\u610f\u7684\u6bcf\u4e2a\u9648\u8ff0\uff0c\u5e76\u8ba1  \u7b97\u5e73\u5747\u5206\u6570 </p>"},{"location":"course_notes/fit5125/#week-6-interviews","title":"WEEK 6 Interviews","text":""},{"location":"course_notes/fit5125/#exercise_3","title":"EXERCISE","text":""},{"location":"course_notes/fit5125/#assessed-exercise-week-6-interviews-and-focus-groups-planning-and-conducting-an-interview","title":"Assessed Exercise (Week 6)  \"Interviews and Focus Groups: Planning and conducting an  interview\"","text":""},{"location":"course_notes/fit5125/#scenario_2","title":"scenario","text":"<p>Technology has transformed the way we interact with day-to-day services such as shopping and  transport. However, these activities are increasingly individualistic and private activities. We are  interested in people's experiences of these daily activities and the opportunities for technology to  support richer social interaction during these tasks.\u4e3b\u9898\uff1a\u6280\u672f\u5df2\u7ecf\u6539\u53d8\u4e86\u6211\u4eec\u4e0e\u8d2d\u7269\u548c\u4ea4\u901a\u7b49\u65e5\u5e38\u670d\u52a1\u4e92\u52a8\u7684  \u65b9\u5f0f\u3002 \u7136\u800c\uff0c\u8fd9\u4e9b\u6d3b\u52a8\u8d8a\u6765\u8d8a\u6210\u4e3a\u4e2a\u4eba\u6d3b\u52a8\u3002 \u6211\u4eec\u5bf9\u4eba\u4eec  \u5bf9\u8fd9\u4e9b\u65e5\u5e38\u6d3b\u52a8\u7684\u4f53\u9a8c\u4ee5\u53ca\u5728\u8fd9\u4e9b\u4efb\u52a1\u4e2d\u652f\u6301\u66f4\u4e30\u5bcc\u7684\u793e\u4ea4  \u4e92\u52a8\u7684\u6280\u672f\u673a\u4f1a\u611f\u5174\u8da3 1. PDF of your interview schedule named \"STUDENT-ID-Week5-schedule.pdf\". 2. PDF of your manual transcription of the interview using the Week 6 assignment template provided on Moodle named  \"STUDENT-ID-Week6-transcript.pdf\" 3. Completed consent form named \"STUDENT-ID-Week6-consent.pdf\" 4.  Audio recording of your 20 minute (or longer) interview named \"STUDENT-ID-Week6-recording.mp3\"</p>"},{"location":"course_notes/fit5125/#task-1_2","title":"task 1 \u91c7\u8bbf\u7eb2\u9886\u81f3\u5c11\u516d\u4e2a\u95ee\u9898","text":"<p>Create an interview schedule for a semi-structured interview of students. Include at least 6  questions in your interview schedule (not including follow-up \"probes\"). Add your schedule to the  assessment template for Week 5 (provided on Moodle) but there is a strict 500-word word limit for your interview schedule.</p> <p>\u4e3b\u9898\u53ef\u53c2\u8003\u4e0a\u5468\u95ee\u5377\uff0c\u6280\u672f\u5bf9\u65e5\u5e38\u670d\u52a1\u4e92\u52a8\u7684\u65b9\u5f0f\u5f71\u54cd + \u8d2d\u7269 + \u4ea4\u901a\u2014\u2014\u516c\u4ea4\u5361\u5145\u503c\uff0c\u67e5\u8be2\u5230\u7ad9\u95f4\u9694\uff0c\u7f51\u7ea6\u8f66 + \u5b66\u4e60 + \u4e0a\u73ed + \u751f\u6d3b</p> <p>task1 interview schedule 1. \u81ea\u6211\u4ecb\u7ecd \u201cHi, I\u2019m XXX, a student from Monash university, thank you for your  time to participate an interview with me. Today\u2019s interview is  about ...\u201d  </p> <ol> <li> <p>\u8ba9\u91c7\u8bbf\u8005\u8fdb\u884c\u81ea\u6211\u4ecb\u7ecd \u4ecb\u7ecd\u4e0d\u5145\u8db3\u7684\u5730\u65b9\u53ef\u4ee5\u8fdb\u884c\u8ffd\u95ee\uff0c\u4f8b\u5982\u6240\u5728\u4f4d\u7f6e\uff0c\u7b2c\u51e0\u5b66\u671f\u7b49  </p> </li> <li> <p>\u6b63\u5f0f\u5f00\u59cb\u8bdd\u9898 \u81f3\u5c116\u4e2a\u6b63\u5f0f\u95ee\u9898\uff0c\u6bcf\u4e2a\u95ee\u9898\u90fd\u53ef\u4ee5\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u65b9\u9762 \u683c\u5f0f1\uff1a\u4e3a\u4e86\u4e86\u89e3\u3002\u3002\u3002\u6211\u5c06\u5bf9\u88ab\u91c7\u8bbf\u8005\u63d0\u51fa\u7684\u95ee\u9898\u662f\uff1a\u201c\u3002\u3002\u3002\u201d \u683c\u5f0f2: \u4e3a\u4e86\u3002\u3002\u6211\u5c06\u8be2\u95ee\u4ed6\u3002</p> </li> </ol> <p>sample  \u6280\u672f\u5bf9\u4e8e\u65e5\u5e38\u91c7\u8d2d\u5f71\u54cd\uff1f  \u2014\u2014\u6709\u5f71\u54cd\uff0c\u4ee5\u524d\u53bbcoles\uff0c\u73b0\u5728\u7ebf\u4e0a</p> <p>\u6211\u540c\u610f\uff0c\u597d\u591a\u4eba\u90fd\u7ebf\u4e0a\u8d2d\u7269\u4e86\uff0c\u90a3\u4e48\u4f60\u7ebf\u4e0a\u8d2d\u7269\u7684\u9891\u7387\u662f\u591a\u5c11\uff1f  \u2014\u2014\u6bcf\u5468\u4e00\u6b21\u5e73\u65f6\u7ecf\u5e38\u5237\u624b\u673a\u52a0\u5165\u8d2d\u7269\u8f66</p>"},{"location":"course_notes/fit5125/#task-2_2","title":"task 2 \u5f55\u97f3+\u540c\u610f\u4e66","text":"<p>Recruit a fellow student (from any unit, program or course) to interview. Make sure you audio  record the interview. Make sure your participant fills in a consent form (provided on Moodle). Submit  your consent form and audio file to Moodle. your interview must be at least 20 minutes long (may be longer)</p> <ol> <li>\u5efa\u8bae\u63d0\u524d\u5199\u597d\u5bf9\u8bdd \u518d\u627e\u961f\u53cb\u4e00\u8d77\u5f55\u97f3  </li> <li>\u4f46\u9700\u8981\u8868\u73b0\u51fa\u8fd9\u662f\u4e00\u6bb5\u771f\u5b9e\u7684\u91c7\u8bbf\u4e0d\u662f\u8bfb\u7a3f\u5b50</li> <li>20mins \u5927\u7ea61500+\u5b57\u6570  </li> <li>\u57fa\u4e8e\u521a\u521a\u76846\u4e2a\u4e3b\u8981\u95ee\u9898\u5728\u88ab\u91c7\u8bbf\u8005\u56de\u7b54\u540e\u6839\u636e\u56de\u7b54\u8fdb\u884c\u6df1\u5165  </li> </ol> <p>\u6280\u5de7\uff1a + \u9002\u5f53\u91cd\u590d\uff0c\u603b\u7ed3\u88ab\u91c7\u8bbf\u8005\u56de\u7b54\u3002 + \u6839\u636e\u56de\u7b54\u7ec6\u8282\u8fdb\u884c\u8ffd\u95ee\u3002 + \u5bf9\u88ab\u91c7\u8bbf\u8005\u7684\u56de\u7b54\u4f5c\u51fa\u56de\u5e94\u6216\u80af\u5b9a\u3002 + \u53ef\u4ee5\u7ed9\u51fa\u60c5\u666f\u8ba9\u88ab\u91c7\u8bbf\u8005\u56de\u7b54\u6765\u589e\u52a0\u7b54\u6848\u7684\u5177\u4f53\u6027\u3002 + \u7ed3\u5c3e\u65f6\u8868\u8fbe\u611f\u8c22\u3002 Thank you again for your par/cipa/on. Your answer is very helpful to my research.</p>"},{"location":"course_notes/fit5125/#task-3_1","title":"task 3","text":"<p>Task 3: Manually transcribe the interview. use Intelligent transcription, rather than verbatim  transcription (which takes much longer). Add your transcription to the assessment template for Week  5 (provided on Moodle) \u667a\u80fd\u8f6c\u5f55 \u8f7b\u5ea6\u7f16\u8f91 \u5220\u9664\u4e0e\u5bf9\u8bdd\u6216\u8ba8\u8bba\u7684\u4e3b\u9898\u65e0\u5173\u7684  \u77ed\u8bed</p>"},{"location":"course_notes/fit5125/#week-7-qualitative-analysis","title":"WEEK 7 Qualitative Analysis","text":""},{"location":"course_notes/fit5125/#exercise_4","title":"EXERCISE","text":""},{"location":"course_notes/fit5125/#communication","title":"communication","text":""},{"location":"course_notes/fit5125/#week-7-assessment-thematic-analysis-of-interviews","title":"Week 7 Assessment \"Thematic analysis of interviews\u201d","text":""},{"location":"course_notes/fit5125/#reference","title":"reference","text":"<p>https://gradcoach.com/what-is-thematic-analysis/</p> <p>https://www.scribbr.com/methodology/thematic-analysis/</p> <p>https://www.interaction-design.org/literature/article/how-to-do-a-thematic-analysis-of-user-interviews</p>"},{"location":"course_notes/fit5125/#scenario_3","title":"scenario","text":"<p>We have conducted three interviews in which people discuss  their grocery shopping habits and how using technology transformed their experience  check Transcripts for A3.pdf  </p>"},{"location":"course_notes/fit5125/#task-1_3","title":"task 1","text":"<p>Task 1: Thematically analyse the transcripts of all three interviews and derive THREE themes (groups  of codes). Write down your theme names, and the names of the associated codes, using the Week 6  template.    \u9605\u8bfb\u4e09\u4e2a\u8f6c\u5f55\uff0c\u4e09\u4e2a\u8f6c\u5f55\u4e00\u8d77\u7ed9\u4e09\u4e2a\u4e3b\u9898\uff0c\u6bcf\u4e00\u4e2a\u4e3b\u9898\u7ed9\u4e09\u4e2acode \u2690 Remember the order in which analysis was carried out in the workshops: i) thoroughly read the  transcripts, ii) code (and refine) your codes, iii) group the codes into interesting themes.</p> <p></p>"},{"location":"course_notes/fit5125/#task-2_3","title":"Task 2","text":"<p>For each code you included in Task 1, provide a description of the code and at least 2 illustrative quotes from the transcript. Use the Week 6 template. \u2690 Limit your description of each code (not including the illustrative quotes) to no more than 50 words \u7ed9Task1\u4e2d\u7684\u6bcf\u4e00\u4e2acode\uff08\u5171\u4e5d\u4e2a\uff09\u8fdb\u884c\u8bf4\u660e\u5e76\u4ec5\u7528\u81f3\u5c11\u4e24\u6bb5\u5bf9\u8bdd\u5185\u5bb9\uff08\u8bf4\u660e\u90e8\u5206\u4e0d\u8d85\u8fc750\u5b57\uff09</p> <p></p>"},{"location":"course_notes/fit5125/#task-3_2","title":"Task 3","text":"<p>Write a description of each theme included in your response to Task 1. Your description should include a justification for its inclusion, and an explanation of how the theme captures something interesting about students' experience of, and beliefs about, feedback. Use the Week 6  template. \u2690 Limit your description of each theme to no more than 150 words. \u89e3\u91caTask1\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4e3b\u9898 1\uff09\u4e3b\u9898\u7684\u89e3\u91ca 2\uff09\u8fd9\u4e2a  \u4e3b\u9898\u662f\u5982\u4f55\u4e0e\u5b66\u751f\u7684\u53cd\u9988\u548c\u60f3\u6cd5\u76f8\u5173\u7684  \uff08\u4e0d\u8d85\u8fc7150\u5b57</p> <p></p>"},{"location":"course_notes/fit5125/#how-to-thematically-analyse","title":"how to Thematically analyse","text":"<p>Thematic analysis is a method of analyzing qualitative data. It is usually applied to a set of texts, such as an interview or transcripts. The researcher closely examines the data to identify common themes \u2013 topics, ideas and patterns of meaning that come up repeatedly. \u4e3b\u9898\u5206\u6790\u662f\u4e00\u79cd\u5206\u6790\u5b9a\u6027\u6570\u636e\uff08\u4e00\u7ec4\u8868\u793a\u4e8b\u7269\u6027\u8d28\u3001\u89c4\u5b9a\u4e8b\u7269\u7c7b\u522b\u7684\u6587\u5b57\u8868\u8ff0\u578b\u6570\u636e\uff0c\u4e0d\u80fd\u5c06\u5176\u91cf\u5316\uff0c\u53ea\u80fd\u5c06\u5176 \u5b9a\u6027\uff09\u7684\u65b9\u6cd5\u3002\u5b83\u901a\u5e38\u5e94\u7528\u4e8e\u4e00\u7ec4\u6587\u672c\uff0c\u4f8b\u5982\u91c7\u8bbf\u7b14\u5f55\u3002\u7814\u7a76\u4eba\u5458\u4ed4\u7ec6\u68c0\u67e5\u6570\u636e\u4ee5\u8bc6\u522b\u5e38\u89c1\u4e3b\u9898-\u4e3b\u9898\uff0c\u601d\u60f3\u548c\u610f\u4e49\u6a21\u5f0f\uff0c\u8fd9\u4e9b\u4e3b\u9898\u4f1a\u53cd\u590d\u51fa\u73b0</p>"},{"location":"course_notes/fit5125/#step-1-familiarization","title":"Step 1: Familiarization","text":"<p>\u5168\u9762\u4e86\u89e3\u6211\u4eec\u6536\u96c6\u7684\u6240\u6709\u6570\u636e</p>"},{"location":"course_notes/fit5125/#step-2-coding","title":"Step 2: Coding","text":"<p>\u6211\u4eec\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u7f16\u7801\u3002\u7f16\u7801\u610f\u5473\u7740\u7a81\u51fa\u6211\u4eec\u6587\u672c\u7684\u90e8\u5206\u2014\u2014\u901a\u5e38\u662f\u77ed\u8bed\u6216\u53e5\u5b50\u2014\u2014\u5e76\u63d0\u51fa\u901f\u8bb0\u6807\u7b7e\u6216\u201c\u4ee3\u7801\u201d\u6765\u63cf\u8ff0\u5b83\u4eec\u7684\u5185\u5bb9\u3002\u6bcf\u4e2a\u4ee3\u7801\u90fd\u63cf\u8ff0\u4e86\u8be5\u90e8\u5206\u6587\u672c\u4e2d\u8868\u8fbe\u7684\u60f3\u6cd5\u6216\u611f\u89c9\u3002</p>"},{"location":"course_notes/fit5125/#step-3-generating-themes","title":"Step 3: Generating themes","text":"<p>\u6211\u4eec\u67e5\u770b\u6211\u4eec\u521b\u5efa\u7684\u4ee3\u7801\uff0c\u8bc6\u522b\u5176\u4e2d\u7684\u6a21\u5f0f\uff0c\u5e76\u5f00\u59cb\u63d0\u51fa\u4e3b\u9898\u3002</p>"},{"location":"course_notes/fit5125/#step-4-reviewing-themes","title":"Step 4: Reviewing themes","text":"<p>\u5fc5\u987b\u786e\u4fdd\u6211\u4eec\u7684\u4e3b\u9898\u662f\u6709\u7528\u4e14\u51c6\u786e\u7684\u6570\u636e\u8868\u793a\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8fd4\u56de\u6570\u636e\u96c6\u5e76\u5c06\u6211\u4eec\u7684\u4e3b\u9898\u4e0e\u5b83\u8fdb\u884c\u6bd4\u8f83\u3002</p>"},{"location":"course_notes/fit5125/#step-5-defining-and-naming-themes","title":"Step 5: Defining and naming themes","text":"<p>\u5b9a\u4e49\u4e3b\u9898\u5305\u62ec\u51c6\u786e\u8868\u8ff0\u6bcf\u4e2a\u4e3b\u9898\u7684\u542b\u4e49\uff0c\u5e76\u5f04\u6e05\u695a\u5b83\u5982\u4f55\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u6570\u636e\u3002 \u547d\u540d\u4e3b\u9898\u6d89\u53ca\u4e3a\u6bcf\u4e2a\u4e3b\u9898\u63d0\u51fa\u4e00\u4e2a\u7b80\u6d01\u6613\u61c2\u7684\u540d\u79f0\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u67e5\u770b\u201c\u5bf9\u4e13\u5bb6\u7684\u4e0d\u4fe1\u4efb\u201d\uff0c\u5e76\u51c6\u786e\u786e\u5b9a\u6211\u4eec\u5728\u8fd9\u4e2a\u4e3b\u9898\u4e2d\u6240\u8bf4\u7684\u201c\u4e13\u5bb6\u201d\u6307\u7684\u662f\u8c01\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8fd9\u4e2a\u4e3b\u9898\u7684\u4e00\u4e2a\u66f4\u597d\u7684\u540d\u79f0\u662f\u201c\u4e0d\u4fe1\u4efb\u6743\u5a01\u201d\u6216\u201c\u9634\u8c0b\u601d\u7ef4\u201d\u3002</p>"},{"location":"course_notes/fit5125/#step-6-writing-up","title":"Step 6: Writing up","text":"<p>\u64b0\u5199\u4e3b\u9898\u5206\u6790\u9700\u8981\u4ecb\u7ecd\u6765\u786e\u5b9a\u6211\u4eec\u7684\u7814\u7a76\u95ee\u9898\u3001\u76ee\u6807\u548c\u65b9\u6cd5\u3002 \u6211\u4eec\u8fd8\u5e94\u8be5\u5305\u62ec\u4e00\u4e2a\u65b9\u6cd5\u90e8\u5206\uff0c\u63cf\u8ff0\u6211\u4eec\u5982\u4f55\u6536\u96c6\u6570\u636e\uff08\u4f8b\u5982\u901a\u8fc7\u534a\u7ed3\u6784\u5316\u8bbf\u8c08\u6216\u5f00\u653e\u5f0f\u8c03\u67e5\u95ee\u9898\uff09\u5e76\u89e3\u91ca\u6211\u4eec\u5982\u4f55\u8fdb\u884c\u4e3b\u9898\u5206\u6790\u672c\u8eab\u3002 \u7ed3\u679c\u6216\u53d1\u73b0\u90e8\u5206\u901a\u5e38\u4f9d\u6b21\u89e3\u51b3\u6bcf\u4e2a\u4e3b\u9898\u3002\u6211\u4eec\u63cf\u8ff0\u4e86\u4e3b\u9898\u51fa\u73b0\u7684\u9891\u7387\u53ca\u5176\u542b\u4e49\uff0c\u5305\u62ec\u4f5c\u4e3a\u8bc1\u636e\u7684\u6570\u636e\u793a\u4f8b\u3002\u6700\u540e\uff0c\u6211\u4eec\u7684\u7ed3\u8bba\u89e3\u91ca\u4e86\u4e3b\u8981\u5185\u5bb9\uff0c\u5e76\u5c55\u793a\u4e86\u5206\u6790\u5982\u4f55\u56de\u7b54\u4e86\u6211\u4eec\u7684\u7814\u7a76\u95ee\u9898\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u5173\u4e8e\u6c14\u5019\u53d8\u5316\u7684\u9634\u8c0b\u601d\u7ef4\u5728\u5e74\u957f\u7684\u4fdd\u5b88\u6d3e\u9009\u6c11\u4e2d\u5f88\u666e\u904d\uff0c\u6307\u51fa\u8bb8\u591a\u9009\u6c11\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u770b\u6cd5\u5b58\u5728\u4e0d\u786e\u5b9a\u6027\uff0c\u5e76\u8ba8\u8bba\u4e86\u9519\u8bef\u4fe1\u606f\u5728\u53d7\u8bbf\u8005\u770b\u6cd5\u4e2d\u7684\u4f5c\u7528\u3002</p>"},{"location":"course_notes/fit5125/#week-8-descriptive-stats","title":"WEEK 8 Descriptive Stats","text":""},{"location":"course_notes/fit5125/#exercise_5","title":"EXERCISE","text":""},{"location":"course_notes/fit5125/#communication_1","title":"communication","text":""},{"location":"course_notes/fit5125/#week-8-assessment-descriptive-statistics","title":"Week 8 Assessment \u2013 Descriptive Statistics","text":""},{"location":"course_notes/fit5125/#task-1_4","title":"TASK 1","text":"<p>Select a single metric that relates to a personal characteristic of the respondents (from Q1-Q8)</p> <ul> <li> <p>import file data https://au.mathworks.com/matlabcentral/answers/72545-how-to-import-csv-file-in-matlab </p> </li> <li> <p>Convert Text to Numeric Values https://au.mathworks.com/help/matlab/matlab_prog/converting-from-string-to-numeric.html</p> </li> </ul> <pre><code>X = str2double('3.1416')\n\n&gt;&gt;X = 3.1416\n</code></pre> <ul> <li>remove empty elements https://au.mathworks.com/matlabcentral/answers/293562-how-to-delete-empty-lines-in-a-table</li> </ul> <pre><code>idx=all(cellfun(@isempty,A{:,:}),2)\n\nA(idx,:)=[]\n</code></pre>"},{"location":"course_notes/fit5125/#task-2_4","title":"TASK 2","text":"<p>Design a MATLAB script to compute the population standard deviation and the Interquartile Range of  this metric. Annotate each line of your script to describe what it does and the result it produces \u8ba1\u7b97\u603b\u4f53\u6807\u51c6\u5dee\u548c\u8be5\u6307\u6807\u7684\u56db\u5206\u4f4d\u8ddd</p>"},{"location":"course_notes/fit5125/#population-standard-deviation","title":"population standard deviation","text":"<p>https://au.mathworks.com/help/matlab/ref/std.html</p> <pre><code>Age_PSD = std(Age_mat,1);\n</code></pre>"},{"location":"course_notes/fit5125/#interquartile-range-of-this-metric","title":"Interquartile Range of  this metric","text":"<p>https://au.mathworks.com/help/stats/prob.normaldistribution.iqr.html</p> <pre><code>Age_IR = iqr(Age_mat);\n</code></pre>"},{"location":"course_notes/fit5125/#task-3_3","title":"TASK  3","text":"<p>Imagine that this data is a sample of a wider population (e.g. all students at Monash). Create a script to  compute the sample standard deviation. Annotate each line of your script to describe what it does and  the result it produce \u8ba1\u7b97\u6837\u672c\u6807\u51c6\u5dee</p> <pre><code>Age_STD = std(Age_mat,0);\n</code></pre>"},{"location":"course_notes/fit5125/#task-4","title":"TASK 4","text":"<p>Select a numeric scale metric from the data, use MATLAB to produce a boxplot of this metric, and label  the boxplot appropriately. Annotate your boxplot using MATLAB to indicate what each element means.  Annotate each line of your script to describe what it does \u505a\u4efb\u610f\u7eaf\u6570\u5b57\u5217\uf99c\u7684boxplot\u5e76\u6807\u6ce8\u6bcf\u6761\u7ebf</p> <pre><code>boxplot(Age_mat);\nxlabel('student');\nylabel('age');\ntitle('What is your age?');\n</code></pre> <p></p>"},{"location":"course_notes/fit5125/#week-9-inferential-stats","title":"WEEK 9 Inferential Stats","text":""},{"location":"course_notes/fit5125/#exercise_6","title":"EXERCISE","text":""},{"location":"course_notes/fit5125/#week-9-working-with-hypotheses","title":"Week 9 \"Working with hypotheses\"","text":""},{"location":"course_notes/fit5125/#scenario_4","title":"scenario","text":"<p>In this exercise you will formulate a hypothesis, prepare a plan of your study (including statistical testing) and  justify it, including the potential limitations of it. Consider the topic of the survey that you participated in during  the unit, and used for the Week 8 assessment task</p>"},{"location":"course_notes/fit5125/#task-1_5","title":"task 1","text":"<p>Propose a hypothesis. It should be something you can realistically test using one or more of the  statistical tests covered in this course. It can concern any topic or natural phenomena which relates in  some way to the survey topic (max. 50 words) \u5173\u4e8e\u4ec0\u4e48\u7684\u5047\u8bbe\u3002\u5047\u8bbe\u7684\u80cc\u666f.\u8981\u53ef\u6d4b\u91cf\u7684\u56e0\u53d8\u91cf</p> <p>https://grammar.yourdictionary.com/for-students-and-parents/how-create-hypothesis.html \u5047\u8bbe\u5728\u7ebf\u5b66\u4e60\u6a21\u5f0f\u5bf9\u5b66\u751f\u6bcf\u5468\u5e73\u5747\u5b66\u4e60\u65f6\u95f4\u7684\u5f71\u54cd\u3002 \u53cc\u9762\u6d4b\u8bd5\u6765\u67e5\u770b\u540c\u4e00\u7ec4\u5b66\u751f\u57282019 \u5e74\u7b2c\u4e8c\u5b66\u671f\u548c2020\u5e74\u7b2c\u4e00\u5b66\u671f\u7684\u5e73\u5747\u6bcf\u5468\u5b66\u4e60\u65f6\u95f4\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\uff082019\u5e74\u7b2c\u4e8c\u5b66\u671f\u662f\u9762\u5bf9\u9762\u5b66\u4e60\uff0c\u5e76\u4e142020  \u5e74\u7b2c\u4e00\u5b66\u671f\u4e3a\u5728\u7ebf\u5b66\u4e60\u6a21\u5f0f\u3002\uff09  </p>"},{"location":"course_notes/fit5125/#task-2_5","title":"task 2","text":"<p>Write down the null hypothesis (max. 50 words). \u4e00\u53e5\u8bdd\u89e3\u91ca\u539f\u5047\u8bbe</p> <p>H0\uff1a\u4e0e\u539f\u59cb\u7684\u9762\u5bf9\u9762\u6559\u5b66\u76f8\u6bd4\uff0c\u5728\u7ebf\u6559\u5b66\u4e0d\u4f1a\u5f71\u54cd\u5b66\u751f\u6bcf\u5468\u7684\u5e73\u5747\u5b66\u4e60\u65f6\u95f4\u3002 H1\uff1a\u4e0e\u539f\u59cb\u7684\u9762\u5bf9\u9762\u6559\u5b66\u76f8\u6bd4\uff0c\u5728\u7ebf\u6559\u5b66\u5c06\u5bf9\u5b66\u751f\u6bcf\u5468\u7684\u5e73\u5747\u5b66\u4e60\u65f6\u95f4\u4ea7\u751f\u5f71\u54cd\u3002</p>"},{"location":"course_notes/fit5125/#task-3_4","title":"task 3","text":"<p>Write down the independent and dependent variables as well as at least three confounding  variables  (max. 50 words). \u81ea\u53d8\u91cf \u56e0\u53d8\u91cf \u6df7\u6dc6\u53d8\u91cf</p> <p>https://www.scribbr.com/methodology/independent-and-dependent-variables/ https://www.scribbr.com/methodology/confounding-variables/ </p> <p>\u81ea\u53d8\u91cf:  + \u5728\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u5b9e\u9a8c\u8005\u4e3b\u52a8\u52a0\u4ee5\u64cd\u7eb5\u3001\u63a7\u5236\u5e76\u5bf9\u88ab\u8bd5\u7684\u53cd\u5e94\u53ef\u80fd\u4ea7\u751f\u5f71\u54cd\u7684\u53d8\u91cf\u3002\u5b83\u72ec\u7acb\u4e8e\u88ab\u8bd5\u7684\u884c\u4e3a\u5b58\u5728\u3002 \u81ea\u53d8\u91cfindependent variables\uff1a\u5b66\u4e60\u65b9\u6cd5\u3002 </p> <p>\u56e0\u53d8\u91cf: + \u56e0\u81ea\u53d8\u91cf\u6539\u53d8\u800c\u6539\u53d8\u7684\u53d8\u91cf\uff0c\u662f\u5b9e\u9a8c\u8005\u89c2\u5bdf\u7684\u53d8\u91cf\u3002 \u56e0\u53d8\u91cfdependent variables\uff1a\u6bcf\u5468\u5e73\u5747\u5b66\u4e60\u65f6\u95f4\u3002  </p> <p>\u6df7\u6742\u53d8\u91cfconfounding variables\uff1a + \u4e0d\u540c\u5b66\u79d1\u3002\u5b66\u751f\u7d20\u8d28\u3002\u5b66\u751f\u5e74\u9f84\u3002</p>"},{"location":"course_notes/fit5125/#task-4_1","title":"task 4","text":"<p>magine you had a budget of up to 1000AUD (in addition to up to 100 hours of your time to conduct the  study). Explain what data you will collect to investigate this hypothesis and how you would obtain the  data in a practical fashion (max. 100 words) \u54ea\u4e9b\u6570\u636e\u3002\u83b7\u53d6\u65b9\u5f0f\u3002\u82b1\u9500\u3002\u65f6\u95f4\u8ba1\u5212</p> <p>\u6536\u96c6\u4ec0\u4e48\u6570\u636e\uff1a + \u6211\u4eec\u9700\u8981\u6536\u96c6\u4e0d\u540c\u65f6\u671f\u5b66\u751f\u7684\u5e73\u5747\u6bcf\u5468\u5b66\u4e60\u65f6\u95f4\u3002\u8be5\u7ec4\u5b66\u751f\u5c06\u5c5e\u4e8e\u540c\u4e00\u4e13\u4e1a\u7684\u540c\u4e00\u7ec4\u5b66\u751f\u3002 </p> <p>\u4ece\u54ea\u91cc\u6536\u96c6\u6570\u636e\uff1a + \u6211\u4eec\u5c06\u4ecebis\u4e13\u4e1a\u4e2d\u968f\u673a\u9009\u62e950\u540d\u5b66\u751f\u6765\u6536\u96c6\u6570\u636e\u3002  </p> <p>\u7528\u4ec0\u4e48\u65b9\u5f0f\u6536\u96c6\u4ee5\u53ca\u5982\u4f55\u7b5b\u9009\u6570\u636e\uff1a + \u8be5\u8fc7\u7a0b\u5c06\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u3002\u4e3a\u4e86\u9632\u6b62\u672a\u7b54\u590d\uff0c\u6211\u4eec\u5c06\u5411\u6240\u6709\u5546\u52a1\u4fe1\u606f\u7cfb \u7edf\u4e13\u4e1a\u7684\u5b66\u751f\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u5e76\u4ece\u6536\u5230\u7684\u7b54\u590d\u4e2d\u968f\u673a\u9009\u62e950\u4e2a\u7b54\u590d\u3002  </p> <p>\u82b1\u9500\uff0c + \u4f8b\u5982\u5956\u52b1\u673a\u5236\uff08\u6536\u96c6\u6570\u636e\u65f6\u4e5f\u4f1a\u7531\u4e8e\u4e0d\u540c\u7684\u65b9\u6cd5\u4ea7\u751f\u82b1\u9500\uff09\uff1a\u4e3a\u4e86\u9f13\u52b1\u5b66\u751f\u5feb\u901f\u56de\u7b54\u95ee\u9898\uff0c\u6211\u4eec\u4f1a\u5728\u524d 50\u540d\u5b66\u751f\u6210\u529f\u56de\u7b54\u540e\u7ed9\u4e88$ 5\u7684\u4ee3\u91d1\u5238\u3002\u6b64\u8fc7\u7a0b\u5c06\u82b1\u8d39$ 250\u3002</p> <p>\u65f6\u95f4\uff1a  + \u5c06\u75281\u5929\u65f6\u95f4\u8fdb\u884c\u90ae\u4ef6\u53d1\u9001\uff0c2\u5929\u7b49\u5f85\u56de\u590d\uff0c1\u5929\u7b5b\u9009\u6570\u636e</p>"},{"location":"course_notes/fit5125/#task-5","title":"task 5","text":"<p>What statistical tests do you expect to conduct to test the hypothesis. Please explain the circumstances  in which you would conduct each test (max. 150 words). \u6d4b\u8bd5\u65b9\u5f0f\u4ee5\u53ca\u5b83\u4eec\u7684\u4f18\u52a3\u52bf\u3002  \u53ef\u4ee5\u5217\u4e3e2-4\u79cd\u65b9\u6cd5\u8fdb\u884c\u6d4b\u8bd5</p> <p>https://www.scribbr.com/statistics/statistical-tests/</p> <p>https://stats.oarc.ucla.edu/spss/whatstat/what-statistical-analysis-should-i-usestatistical-analyses-using-spss/ T-test https://prosancons.com/education/pros-and-cons-of-t-test/ Mann-Whitney U http://www.stat.ucla.edu/~rgould/x401f01/mannwhitney.html Chi-square test https://passel2.unl.edu/view/lesson/9beaa382bf7e/2 https://passel2.unl.edu/view/lesson/9beaa382bf7e/14</p>"},{"location":"course_notes/fit5125/#task-6","title":"task 6","text":"<p>What are the limitations of your study? Write a paragraph that explains these limitations as well as  potential future investigations you might conduct (max. 200 words). \u5c40\u9650\u6027&amp;\u672a\u6765\u8fdb\u4e00\u6b65\u8c03\u67e5</p> <p>\u5c40\u9650\u6027\uff1a https://blog.wordvice.com/how-to-present-study-limitations-and-alternatives/ https://libguides.usc.edu/writingguide/limitations#:~:text=Definition,the%20findings%20from%20your%20research. + \u6570\u636e\u6570\u91cf\u662f\u5426\u8db3\u591f + \u6570\u636e\u6837\u672c\u662f\u5426\u80fd\u6ee1\u8db3\u6d4b\u8bd5\u65b9\u6cd5 + confounding variables\u662f\u5426\u4f1a\u4e25\u91cd\u5f71\u54cd\u8bd5\u9a8c\u7ed3\u679c  </p> <p>future investigations\uff1a https://research-methodology.net/research-methodology/suggestions-future-research/ + \u5982\u4f55&amp;\u4f55\u65f6\u83b7\u53d6\u66f4\u591a\u6570\u636e + \u662f\u5426\u9700\u8981\u6539\u53d8\u6d4b\u8bd5\u65b9\u5f0f</p>"},{"location":"course_notes/fit5125/#week-1011-communicating-research","title":"WEEK 10&amp;11 Communicating Research","text":""},{"location":"course_notes/fit5125/#exercise_7","title":"EXERCISE","text":""},{"location":"course_notes/fit5125/#weekly-communication","title":"weekly communication","text":"<p>Describe what steps you took in identifying the arguments and  concepts in your groups chosen paper and communicating this  to your class audience?</p> <p>\u5982\u4f55\u603b\u7ed3\u8bba\u70b9  -  \u5206\u914d\u5230\u7684\u6587\u7ae0\u4e3b\u9898\u662f\u4ec0\u4e48 - \u6839\u636eabstract\u548cconclusion\u7684\u5185\u5bb9\u63d0\u70bcarguments - \u89c2\u70b9\u662f\u4ec0\u4e48  </p> <p>\u5982\u4f55\u4e0e\u89c2\u4f17\u4ea4\u6d41 - \u4ee5\u6613\u4e8e\u7406\u89e3\u7684\u65b9\u5f0f\u8868\u8fbe - \u4e13\u4e1a\u8bcd\u6c47\u8fdb\u884c\u7b80\u5316 - \u903b\u8f91\u4ece\u5927\u5230\u5c0f\u8fdb\u884c\u8bb2\u89e3</p>"},{"location":"course_notes/fit5125/#assessed-exercise-week-10-creating-a-video-communication-plan","title":"Assessed Exercise (Week 10) \u201cCreating a Video Communication Plan\u201d","text":""},{"location":"course_notes/fit5125/#scenario_5","title":"scenario","text":"<p>As part of your assessment submission for Assignment 4, you need to produce a video which communicates a specific piece of FIT research. You can select from any of the papers listed on the Moodle page for Week 10. Your task is to create a \u2018video treatment\u2019 document, filling in the time, content and script columns that will effectively communicate your chosen paper.Your 90 second video will be sent to a number of investment companies seeking opportunities.what the nature of a specific piece of research is (in your case the that described in the papers).he only goal of the video is to stimulate interest in the organisations to find out more about the research. Therefore, your video will be used to introduce the core technical innovations and the significance of these to gain potential meetings with members of the organisations at which the detail and opportunities can be discussed further</p> <p>what to submit + create a \u2018video treatment\u2019 document, filling in the time, content and script columns that effectively communicate your chosen paper + 90 second video</p> <p>Target audience + where the business engagement staff are seeking to communicate to investment companies and other organisations (such as private donors and charities)</p> <p>Purpose + stimulate interest in the organisations to find out more  about the research. + gain potential meetings with members of the organisations at which the detail and opportunities can be discussed further</p> <p>Content + what the nature of a specific piece of research is (in your case the that described in the papers) + introduce the core technical innovations and the significance of these </p>"},{"location":"course_notes/fit5125/#how-to-do-it","title":"How to do it","text":"<p> Time + the length of each part (10 ~ 15s)</p> <p>Content + what thing will be discussed in this section</p> <p>Script \u65c1\u767d\u5b57\u5e55 + dialogue captain display in video</p> <p>Visual \u89c6\u89c9\u6548\u679c + BGM + pictures + video segment + Other visual elements</p> <p>Justification + reason to select this part + why in this display format + How to draw attention</p>"},{"location":"course_notes/fit5125/#part-of-my-outline","title":"part of my outline","text":""},{"location":"course_notes/fit5125/#week-12","title":"week 12","text":""},{"location":"course_notes/fit5125/#assessed-exercise-week-12-reporting-with-an-impact-declaration","title":"Assessed Exercise (Week 12) \u201cReporting with an impact declaration","text":""},{"location":"course_notes/fit5125/#scenario_6","title":"scenario","text":"<p>in this part of the assignment your task is to fill in a simple \u2018Impact Declaration\u2019 that will accompany your video plan and your final video. This form summaries the potential impact of the IP and will be used by the Business Development team to decide how to approach relevant investors.</p>"},{"location":"course_notes/fit5125/#how-to-do-it_1","title":"how to do it","text":"<ul> <li>SUMMARY / BACKGROUND (max 50 words) \u8be6\u7ec6\u7684\u80cc\u666f\u6458\u8981\uff0c\u5bf9\u7814\u7a76\u53ca\u5176\u7ed3\u679c\u8fdb\u4e00\u6b65\u63cf\u8ff0</li> <li>WHAT IS THE PROBLEM BEING TACKLED? (max 50 words) \u95ee\u9898\u9648\u8ff0\u3002\u6211\u4eec\u7528\u8fd9\u9879\u79d1\u6280\u60f3\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff1f</li> <li>WHAT IS THE POTENTIAL SOLUTION / APPLICATION FOR A PARTNER? (max 50 words) \u6f5c\u5728\u7684\u89e3\u51b3\u65b9\u6848\u548c\u5e94\u7528 \u8fd9\u9879\u79d1\u6280\u5982\u4f55\u89e3\u51b3\u95ee\u9898\u7684\u4ee5\u53ca\u5982\u4f55\u5e94\u7528\u8fd9\u9879\u6280\u672f\u3002</li> <li>WHAT IS THE IMPACT/HOW DOES IT MAKE THE INDUSTRY PARTNER SUCCESSFUL (max 50 words) e.g. Social good, ROI (cost savings) efficiency/productivity), What would they be interested in on a commercial level? What\u2019s in it for them? E.g, How will they reach their KPI\u2019s, sales targets \u4f1a\u5bf9\u6295\u8d44\u8005\u5728\u5546\u4e1a\u65b9\u9762\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\u3002\u4e3b\u8981\u8003\u8651\u4ed6\u4eec\u5728\u5546\u4e1a\u65b9\u9762\u5982 \u4f55\u83b7\u5229\u3002\u6bd4\u5982\u793e\u4f1a\u5f71\u54cd\uff08\u516c\u76ca\uff09\uff0c\u5229\u6da6\u53d8\u9ad8\uff08\u6210\u672c\u964d\u4f4e/\u63d0\u9ad8\u751f\u4ea7\u7387\uff09</li> <li>WHAT IS THE TECHNOLOGY BEING USED? (max 50 words) \u628a\u8fd9\u9879\u6280\u672f\u4e2d\u4f7f\u7528\u5230\u7684\u6240\u6709\u6280\u672f\u90fd\u5217\u4e3e\u51fa\u6765\u3002 \u6bd4\u5982\uff1a\u76d1\u89c6\u529f\u80fd\uff0c\u8bed\u97f3\u6536\u96c6\u529f\u80fd\uff0c\u533f\u540d\u6280\u672f\uff0c\u5206\u6790\u6280\u672f\u7b49\u3002</li> <li>IS THERE POTENTIAL TO PATENT THIS WORK? (max 50 words) Do you think this idea should be patented, briefly explain your answer? \u8fd9\u9879\u6280\u672f\u662f\u5426\u53ef\u4ee5\u7533\u8bf7\u4e13\u5229\uff1f \u9996\u5148\u8bf4\u662f/\u5426\u3002 \u5176\u6b21\uff0c\u8bf4\u660e\u4e13\u5229\u7684\u653f\u7b56\uff1a\u65b0\u9896\u6027\u548c\u5b9e\u7528\u6027 Your invention must be unique and inventive or innovative in order to gain patent protection.\u53d1\u660e\u5fc5\u987b\u662f\u72ec\u7279\u7684\uff0c\u6709\u521b\u9020\u529b\u7684 \u6216\u521b\u65b0\u7684\uff0c\u624d\u80fd\u83b7\u5f97\u4e13\u5229\u4fdd\u62a4\u3002\u6700\u540e\uff0c\u5206\u6790\u4f60\u7684\u79d1\u6280\u662f\u5426\u5177\u6709\u8fd9\u4e24\u4e2a\u7279\u6027</li> <li>potential CONFLICTS WITH EXISTING PRIOR ART? (max 50 words inc. links to prior) \u8be5\u79d1\u6280\u4e2d\u662f\u5426\u5b58\u5728\u73b0\u6709\u6280\u672f\u3002\u662f\u5426\u6709\u4eba\u5728\u67d0\u4e2a\u65f6\u95f4\u4e4b\u524d\u5df2\u7ecf\u63cf\u8ff0\u6216\u5c55\u793a\u6216\u505a\u51fa\u4e86\u5305\u542b\u4e0e\u672c\u53d1\u660e\u975e\u5e38\u76f8\u4f3c\u7684\u6280\u672f\u7528\u9014\u7684\u4e1c\u897f\u3002\u672c\u79d1\u6280\u5b58\u5728\u54ea\u4e9b\u73b0\u6709\u6280\u672f\u3002</li> <li>WHAT IS THE COMMERCIAL POTENTIAL OF THIS RESEARCH? (max 50 words) Note this is different to patent, as work can be commercialised without having a patent  \u8be5\u6280\u672f\u7684\u5546\u4e1a\u6f5c\u529b\u3002\u8fd9\u4e0e\u4e13\u5229\u4e0d\u540c\uff0c\u56e0\u4e3a\u65e0\u9700\u4e13\u5229\u5c31\u53ef\u4ee5\u5c06\u4f5c\u54c1\u5546\u4e1a\u5316\u3002\u5f80\u5927\u4e86\u8bf4\uff0c\u4e0d\u8981\u53ea\u5173\u6ce8\u8be5\u6280\u672f\u672c\u8eab\u5b58\u5728\u7684\u884c\u4e1a\u800c\u662f\u5173\u6ce8\u4e8e\u8be5\u6280\u672f\u7684\u6f5c\u529b\u3002\u4f8b\u5982\uff1a\u5b83\u5728\u672a\u6765\u53ef\u80fd\u4f1a\u53d1\u5c55\u6210\u5e94\u7528\u4e8e\u6bcf\u4e2a\u4eba\u751f\u6d3b\u4e2d\u7684\u6280\u672f\uff0c\u4e3a\u4ec0\u4e48\u3002</li> <li>WHICH INDUSTRIES CAN BENEFIT FROM THIS RESEARCH, WHY? (max 50 words) e.g. financial institutions, utilities, companies? \u8be5\u6280\u672f\u53ef\u4ee5\u4f7f\u54ea\u4e9b\u884c\u4e1a\u53d7\u76ca\u3002\u8be5\u6280\u672f\u53ef\u4ee5\u5e94\u7528\u7684\u8303\u56f4\u6709\u591a\u5e7f\u6cdb\u3002\u53ef\u4ee5\u8de8\u8d8a\u54ea\u4e9b\u884c\u4e1a\u8fdb\u884c\u5e94\u7528\u3002\u516c\u76ca\uff0c\u91d1\u878d\uff0c\u533b\u7597\uff0c\u6559\u80b2\u7b49\u3002</li> </ul>"},{"location":"course_notes/fit5136/","title":"FIT5136 software engineering 2022 s2","text":"<p>Create time: 2022-10-05  Last update: 2022-11-28</p>"},{"location":"course_notes/fit5136/#how-to-use-the-fit-study-note-document","title":"How to use the FIT study Note document","text":"<ol> <li>download the markdown file repository and  navigate to the <code>docs</code> folder</li> <li>view all the markdown files via Obsidian vault that can show the linked section in the note document   </li> <li> <p>You may find some extra material or program template  repository in the Course Brief introduction for the FIT Note markdown Document (some course don't have )</p> </li> <li> <p>you can view the web page which transfer from MD file online but will lose the extra information or wrong    markdown display</p> </li> </ol>"},{"location":"course_notes/fit5136/#fit5136-course-brief-introduction","title":"FIT5136 Course Brief introduction","text":"week Introduction 1 Intro to software development methodology 2 Requirements Engineering 3 Analysis and OOP concepts 4 Working as a Team, The Unified Process, More on Agile, VCS 5 Initial Class Diagram,Sequence Diagram, State Chart 6 From Modules to Objects 7 design 8 SE Code of Ethics 9 Implementation Issues + Continuous Integration 10 quality and testing 11 software testing <p>FIT5136 - Software engineering handbook done for the year 2022. (Semester 2)  </p>"},{"location":"course_notes/fit5136/#fit5136-week-1","title":"FIT5136 Week  1","text":""},{"location":"course_notes/fit5136/#waterfall-life-cycle-model","title":"Waterfall life-cycle model","text":"<ul> <li>Plan-driven processes, all activities are  planned,</li> <li>however, waterfall model leaves limited space  for the changes or frequent client interaction</li> </ul>"},{"location":"course_notes/fit5136/#rapid-prototyping-life-cycle-model","title":"Rapid prototyping life-cycle model","text":"<ul> <li>It is client-oriented, where the client get to provide  feedback on the prototype before moving on</li> </ul>"},{"location":"course_notes/fit5136/#incremental-development","title":"Incremental Development","text":"<p> + Initial version: developing an initial implementation \u521d\u59cb\u7248\u672c\uff1a\u5f00\u53d1\u521d\u59cb\u5b9e\u65bd +  Intermediate versions: getting feedback from the clients and users and evolving the software through versions until the system is developed \u4e2d\u95f4\u7248\u672c\uff1a\u4ece\u5ba2\u6237\u548c\u7528\u6237\u90a3\u91cc\u83b7\u5f97\u53cd\u9988\uff0c\u5e76\u901a\u8fc7\u7248\u672c\u6539\u8fdb\u8f6f\u4ef6\uff0c\u76f4\u5230\u5f00\u53d1\u51fa\u7cfb\u7edf +  Each \u201cincrement\u201d includes some of the functionality requested by the client \u6bcf\u4e2a\u201c\u589e\u91cf\u201d\u5305\u62ec\u5ba2\u6237\u8981\u6c42\u7684\u4e00\u4e9b\u529f\u80fd</p>"},{"location":"course_notes/fit5136/#agile-methodology","title":"Agile methodology","text":""},{"location":"course_notes/fit5136/#fit5136-week-2-requirements-engineering","title":"FIT5136 Week 2 Requirements engineering","text":"<p> + Business: what is it that the business requires  the system to do  \u4e1a\u52a1\u9700\u8981\u7cfb\u7edf\u505a\u4ec0\u4e48 + User: what is it that the user (or customer)  requires the system to do. A user can be a  stakeholder.  \u7528\u6237\uff08\u6216\u5ba2\u6237\uff09\u9700\u8981\u7cfb\u7edf\u505a\u4ec0\u4e48\u3002\u7528\u6237\u53ef\u4ee5\u662f\u5229\u76ca\u76f8\u5173\u8005 + Functional: what the system should  functionally do  \u7cfb\u7edf\u5728\u529f\u80fd\u4e0a\u5e94\u8be5\u505a\u4ec0\u4e48 + Non-functional: quality of service system  required to provide  \u7cfb\u7edf\u9700\u8981\u63d0\u4f9b\u7684\u670d\u52a1\u8d28\u91cf + Constraint: things that system should prohibit  the user to do  \u7cfb\u7edf\u5e94\u8be5\u7981\u6b62\u7528\u6237\u505a\u7684\u4e8b\u60c5 + Implementation: platform, etc requirements of  the system\u5e73\u53f0\u7b49\u7cfb\u7edf\u8981\u6c42</p>"},{"location":"course_notes/fit5136/#functional-requirements","title":"Functional requirements","text":"<ul> <li>\u5b9a\u4e49\u7cfb\u7edf\u7684\u884c\u4e3a</li> <li>Describe functionality or system services \u63cf\u8ff0\u529f\u80fd\u6216\u7cfb\u7edf\u670d\u52a1  </li> <li>Describe how the system should react to particular inputs  and how the system should behave in particular  situations  \u63cf\u8ff0\u7cfb\u7edf\u5e94\u5982\u4f55\u5bf9\u7279\u5b9a\u8f93\u5165\u505a\u51fa\u53cd\u5e94\u4ee5\u53ca\u7cfb\u7edf\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u5e94\u5982\u4f55\u8868\u73b0</li> <li>Expressed as inputs and outputs \u8868\u793a\u4e3a\u8f93\u5165\u548c\u8f93\u51fa</li> </ul>"},{"location":"course_notes/fit5136/#example","title":"Example","text":"<ul> <li>A user shall be able to search properties for all suburbs</li> <li>At the end of each month, the system shall generate a  list of properties sold or rented</li> <li>Each property agent shall be uniquely identified by his or her 8-digit employee number.</li> <li>login  \u4e0d\u662f\u529f\u80fd\u6027\u8981\u6c42</li> </ul>"},{"location":"course_notes/fit5136/#non-functional-requirements","title":"Non-functional requirements","text":"<ul> <li>\u5b9a\u4e49\u7cfb\u7edf\u7684\u7279\u6027, \u4e00\u822c\u662f\u9690\u6027\u7684</li> <li>A specific criteria that can be used to judge the operation of a system, rather than specific behaviours\u53ef\u7528\u4e8e\u5224\u65ad\u7cfb\u7edf\u8fd0\u884c\u800c\u975e\u7279\u5b9a\u884c\u4e3a\u7684\u7279\u5b9a\u6807\u51c6</li> <li>The nitty-gritty of the services or functions offered by the system. The requirements that makes the quality of the system better\u7cfb\u7edf\u63d0\u4f9b\u7684\u670d\u52a1\u6216\u529f\u80fd\u7684\u672c\u8d28\u3002\u4f7f\u7cfb\u7edf\u8d28\u91cf\u66f4\u597d\u7684\u8981\u6c42</li> <li>Often apply to the system as a whole rather than individual features or functions.\u901a\u5e38\u9002\u7528\u4e8e\u6574\u4e2a\u7cfb\u7edf\u800c\u4e0d\u662f\u5355\u4e2a\u7279\u6027\u6216\u529f\u80fd</li> <li>Non-functional requirements may be more critical than functional requirements. If they are not met, the system may be useless\u975e\u529f\u80fd\u6027\u9700\u6c42\u53ef\u80fd\u6bd4\u529f\u80fd\u6027\u9700\u6c42\u66f4\u91cd\u8981\u3002  \u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u7cfb\u7edf\u53ef\u80fd\u65e0\u7528</li> </ul>"},{"location":"course_notes/fit5136/#example_1","title":"Example","text":"<ul> <li>number of customers allowed, password requirements, response time, storage requirements, I/O device capability, among others.\u5141\u8bb8\u7684\u5ba2\u6237\u6570\u91cf\u3001\u5bc6\u7801\u8981\u6c42\u3001\u54cd\u5e94\u65f6\u95f4\u3001\u5b58\u50a8\u8981\u6c42\u3001I/O \u8bbe\u5907\u80fd\u529b\u7b49\u3002</li> <li>the property management system shall be available to all property agents during normal working hours (Mon\u2013Fri, 0830\u20131730</li> <li>Customers must authenticate themselves using their drivers license</li> <li>After receiving an inspection request, the system must acknowledge with a response e-mail within 10 seconds</li> <li>login  \u4e0d\u662f\u975e\u529f\u80fd\u6027\u8981\u6c42</li> </ul>"},{"location":"course_notes/fit5136/#use-case-diagrams","title":"==\u91cd\u70b9USE CASE DIAGRAMS==","text":"<p>TO DESCRIBE AND DOCUMENT ALL INTERACTIONS WITH THE SYSTEM \u63cf\u8ff0\u548c\u8bb0\u5f55\u4e0e\u7cfb\u7edf\u7684\u6240\u6709\u4ea4\u4e92 </p> <p>A use case models an interaction between the software product itself and the users  (actors) of that software product Tool for formalizing your understanding of requirements. Captures some user-visible function or behaviour. Relationship(s) between actors and use cases \u7528\u4f8b\u5bf9\u8f6f\u4ef6\u4ea7\u54c1\u672c\u8eab\u4e0e\u8be5\u8f6f\u4ef6\u4ea7\u54c1\u7684\u7528\u6237\uff08\u53c2\u4e0e\u8005\uff09\u4e4b\u95f4\u7684\u4ea4\u4e92\u8fdb\u884c\u5efa\u6a21 \u2022 \u7528\u4e8e\u5f62\u5f0f\u5316\u60a8\u5bf9\u9700\u6c42\u7684\u7406\u89e3\u7684\u5de5\u5177\u3002 \u2022 \u6355\u6349\u4e00\u4e9b\u7528\u6237\u53ef\u89c1\u7684\u529f\u80fd\u6216\u884c\u4e3a\u3002 \u2022 \u53c2\u4e0e\u8005\u548c\u7528\u4f8b\u4e4b\u95f4\u7684\u5173\u7cfb</p>"},{"location":"course_notes/fit5136/#syntax","title":"syntax","text":""},{"location":"course_notes/fit5136/#actor","title":"Actor","text":"<p>An actor is a member of the world outside the software product</p> <p>How to identify + An actor is a frequent user of the software product + Most of the software have more than one type of actor  </p> <p> + As an initiator:\u53d1\u8d77\u4eba \u2022 is generally an actor who initiates/start the use case  \u901a\u5e38\u662f\u53d1\u8d77/\u542f\u52a8\u7528\u4f8b\u7684\u53c2\u4e0e\u8005 \u2022 is placed on the left-side of the use case diagram \u4f4d\u4e8e\u7528\u4f8b\u56fe\u7684\u5de6\u4fa7 +  As a participant;  \u53c2\u4e0e\u8005 \u2022 is generally an actor who participates in the use case  \u53c2\u4e0e\u7528\u4f8b \u2022 placed on the right-side of the use case diagram  \u653e\u7f6e\u5728\u7528\u4f8b\u56fe\u7684\u53f3\u4fa7 \u2022 one actor can participant in multiple use case \u4e00\u4e2a\u53c2\u4e0e\u8005\u53ef\u4ee5\u53c2\u4e0e\u591a\u4e2a\u7528\u4f8b </p> <p>Customer must go to the real estate agent\u2019s office with proof of ownership (of the house/apartment) to let the real estate agent add the property to the system for sale.  Real estate agent is the initiator and customer is the participant </p> <p>Overlapping actors (Actor Generalization) If two actors communicate with the same set of use cases in the same way,  we can express this as a generalization to another (possibly abstract)  actor \u5982\u679c\u4e24\u4e2a\u53c2\u4e0e\u8005\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u4e0e\u540c\u4e00\u7ec4\u7528\u4f8b\u8fdb\u884c\u901a\u4fe1\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u8868\u793a\u4e3a\u5bf9\u53e6\u4e00\u4e2a\uff08\u53ef\u80fd\u662f\u62bd\u8c61\u7684\uff09\u53c2\u4e0e\u8005\u7684\u6982\u62ec </p>"},{"location":"course_notes/fit5136/#inclusion-and-extension","title":"Inclusion and extension","text":"<p>Inclusion:  <code>&lt;&lt;Include&gt;&gt;</code> + The inclusion are compulsory part of the use case.  \u5305\u542b\u662f\u7528\u4f8b\u7684\u5f3a\u5236\u6027\u90e8\u5206 + An including use case never stands alone. It always includes the included use case \u5305\u542b\u7528\u4f8b\u6c38\u8fdc\u4e0d\u4f1a\u5b64\u7acb\u3002\u5b83\u59cb\u7ec8\u5305\u62ec\u5305\u542b\u7684\u7528\u4f8b </p> <p>Extension:  <code>&lt;&lt;Extend&gt;&gt;</code> +   is used to separate optional behaviour from mandatory  behaviour.  \u7528\u4e8e\u5c06\u53ef\u9009\u884c\u4e3a\u4e0e\u5f3a\u5236\u884c\u4e3a\u5206\u5f00 + The extended use case may stand alone, but, under certain conditions,  it may be extended by another use case\u6269\u5c55\u7528\u4f8b\u53ef\u80fd\u662f\u72ec\u7acb\u7684\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ef\u80fd\u4f1a\u88ab\u53e6\u4e00\u4e2a\u7528\u4f8b\u6269\u5c55 </p> <p>Example </p> <p>When a student is enrolled, a confirmation is required to be sent to the student When a student is enrolled, a student can choose to enroll to the units  How to find what to include or extend?  Check your client\u2019s requirements </p>"},{"location":"course_notes/fit5136/#user-stories","title":"==\u5fc5\u8003User stories==","text":"<ul> <li>A user story is an informal, general explanation of a software feature written from the perspective of the end user or customer. \u4ece\u5ba2\u6237\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u975e\u6b63\u5f0f\u7684\uff0c\u666e\u904d\u7684\u8f6f\u4ef6\u529f\u80fd\u7684\u89e3\u91ca \u529f\u80fd\u6027\u8981\u6c42</li> <li>The purpose of a user story is to articulate how a piece of work will deliver a particular value back to the customer. \u76ee\u7684\u662f\u9610\u660e\u4e00\u9879\u5de5\u4f5c\u5c06\u5982\u4f55\u5411\u5ba2\u6237\u4ea4\u4ed8\u7279\u5b9a\u7684\u4ef7\u503c</li> <li>\u7528\u6237\u6545\u4e8b\u5e94\u8be5\u975e\u5e38\u7b80\u77ed\uff0c\u5e76\u4ece\u5ba2\u6237\u7684\u89d2\u5ea6\u7f16\u5199\u2014\u2014\u5b83\u4eec\u901a\u5e38\u9700\u8981\u653e\u5728\u7d22\u5f15\u5361\u4e0a\u3002  </li> <li>\u7531\u4e8e\u5b83\u4eec\u662f\u6839\u636e\u9700\u8981\u6765\u8868\u8ff0\u7684\uff0c\u56e0\u6b64\u901a\u5e38\u5f88\u5bb9\u6613\u4e3a\u5b83\u4eec\u7f16\u5199\u6d4b\u8bd5\u3002  </li> <li>\u8fd9\u4e9b\u7528\u6237\u6545\u4e8b\u5e94\u4ee5\u5ba2\u6237\u7684\u8bed\u8a00\u7f16\u5199\uff0c\u5e76\u4f7f\u7528\u9002\u5408\u5176\u4e1a\u52a1\u7684\u672f\u8bed\u3002</li> </ul> <p><code>As a &lt;user&gt;, I want to &lt;goal&gt; so that &lt;benefit&gt;</code> + As a (who wants to accomplish something)\u8c01\u9700\u8981\u8fd9\u4e2a\u529f\u80fd [user] + I want to (what they want to achieve) \u4ed6\u4eec\u60f3\u8981\u505a\u4ec0\u4e48\uff1f[goal]  + So that (why they want to achieve the goal) \u8fd9\u6837\u505a\u4f1a\u5e26\u6765\u4ec0\u4e48\u597d\u5904\u5462\uff1f[benefit] + Benefit is optional, but is it?</p> <p>Example + As a wiki user, I want to upload a file to the wiki so that I can share it with my colleagues + As a survey  participant, I want an  indication of  progress so that I  know how much I  have left to complete + As a customer, I  would like the  system to not  corrupt the  database</p> <p>the INVEST mnemonic to guide user stories + Independent\uff08\u72ec\u7acb\u7684\uff09\u7528\u6237\u6545\u4e8b\u4e4b\u95f4\u5e94\u8be5\u5c3d\u91cf\u907f\u514d\u76f8\u4e92\u4f9d\u8d56 + Negotiable\uff08\u53ef\u534f\u5546\u7684\uff09\u6240\u6709\u4e4b\u524d\u8fbe\u6210\u7684\u4e00\u81f4\u5728\u65b0\u7684\u53d8\u5316\u53d1\u751f\u60c5\u51b5\u4e0b\uff0c\u534f\u5546\u540e\u8fbe\u6210\u65b0\u7684\u4e00\u81f4\uff0c\u4ece\u800c\u63a8\u52a8\u7cfb\u7edf\u7684\u7814\u53d1\u8fdb\u5c55\u3002 + Valuable to users or customers\uff08\u5bf9\u7528\u6237\u6216\u8005\u5ba2\u6237\u662f\u6709\u4ef7\u503c\u7684\uff09\u5982\u679c\u4e0d\u77e5\u9053\u7528\u6237\u6545\u4e8b\u7ed9\u7528\u6237\u5e26\u6765\u4ec0\u4e48\u597d\u5904\uff0c\u5c31\u65e0\u6cd5\u77e5\u9053\u7528\u6237\u6545\u4e8b\u7684\u4ef7\u503c + Estimable\uff08\u53ef\u4f30\u7b97\u7684\uff09user stories \u5e94\u8be5\u4e0e\u53ef\u4ee5\u4f30\u8ba1\u5b9e\u73b0\u5de5\u4f5c\u91cf\u7684\u529f\u80fd\u76f8\u5bf9\u5e94\u3002 + Small\uff08\u5c0f\u7684\uff09user stories \u5fc5\u987b\u8db3\u591f\u5c0f \u8ffd\u6c42\u5feb\u901f\u4ea4\u4ed8 + Testable\uff08\u53ef\u6d4b\u8bd5\u7684\uff09\uff0c\u6240\u6709\u5408\u683c\u7684\u9700\u6c42\u5fc5\u987b\u662f\u53ef\u6d4b\u8bd5\u7684</p>"},{"location":"course_notes/fit5136/#acceptance-criteria","title":"==\u5fc5\u8003Acceptance criteria==","text":"<p>the criteria to test that the user story is implemented as expected. \u6d4b\u8bd5\u7528\u6237\u6545\u4e8b\u662f\u5426\u6309\u9884\u671f\u5b9e\u65bd\u7684\u6807\u51c6 user story\u7684\u8fb9\u754c\uff0c\u7528\u4e8e\u786e\u8ba4\u8f6f\u4ef6\u4f55\u65f6\u6309\u9884\u671f\u5de5\u4f5c\uff0c\u5373\u6545\u4e8b\u4f55\u65f6\u5b8c\u6210 + Good Acceptance Criteria \u4f1a\u5e26\u6709\u975e\u529f\u80fd\u6027\u9700\u6c42\u3002 + \u5b83\u662f\u4e00\u4e2a\u987a\u5e8f\u7ed3\u6784\uff0c\u5199\u5b83\u7684\u8bed\u6cd5\u4f7f\u7528\u4e00\u822c\u73b0\u5728\u65f6 + \u7981\u6b62\u4f7f\u7528 can, will, be able to \u7b49\u8bcd + \u52a8\u8bcd\u7684\u4f7f\u7528\u5fc5\u987b\u51c6\u786e\u548c\u5c0f\u7ec4\u9009\u62e9\u7684\u7a0b\u5e8f\u7c7b\u578b\u6709\u5173\u3002  Text-based \uff1a \u4e0d\u53ef\u4ee5\u7528choose, click, select\u3002 \u53ef\u4ee5\u7528 enter.  Desktop-based: \u4e0d\u53ef\u4ee5\u7528enter + \u987a\u5e8f \u4e0d\u4f1a\u62a5\u9519 \u7406\u60f3 positive test + \u5728\u54ea\u4e2a\u9875\u9762\u8ba9\u6211\u5e72\u4ec0\u4e48 \u5bfc\u822a\u5230\u4e0b\u4e00\u4e2a\u9875\u9762 + \u6700\u540e\u975e\u529f\u80fd\u6027\u9700\u6c42</p>"},{"location":"course_notes/fit5136/#example_2","title":"example","text":"<p>user story 1</p> <p>For a smart home app, one of the user stories could be: \u201cAs a homeowner, I want to be able to dim or brighten individual light globes so that I can create my ideal lighting.</p> <p>The acceptance criteria for this user story might be + The user will select a globe and then see this view; + This view should use a slider control so that the user has the full range of brightness levels  available to them; + When opening this view, the initial slider position should reflect the current brightness of the  selected globe; + The time for a light globe to respond to a change made by the user should be no greater  than 1 second</p> <p>User story 2</p> <p>As a Customer I want to to check the  balance of my bank account so that I  can perform transactions</p> <p>The acceptance criteria 2 + Customer logged in before  checking balance. + Balance for all accounts is  displayed</p> <p>User story 3</p> <p>As a Customer I want to transfer money from my  account to another bank account so that I don\u2019t  have to go to the bank for making such  transactions</p> <p>The acceptance criteria 3 + Customer logged in before transferring  amount. + System check the receivers account number  and validate it prior to performing the  transactions. + If Ok the local account balance is updated  and displayed. + System update both accounts concurrently</p>"},{"location":"course_notes/fit5136/#usability-design-principles","title":"USABILITY DESIGN  PRINCIPLES","text":"<p>USABILITY DESIGN PRINCIPLES HELPS US  UNDERSTAND THE BETTER WAY TO DESIGN THE  USER-INTERFACE OF A SOFTWARE \u53ef\u7528\u6027\u8bbe\u8ba1\u539f\u5219\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u8bbe\u8ba1\u8f6f\u4ef6\u7528\u6237\u754c\u9762\u7684\u66f4\u597d\u65b9\u6cd5</p>"},{"location":"course_notes/fit5136/#donald-normans-design-principles","title":"Donald Norman\u2019s design principles","text":"<ul> <li>(1) Visibility: relevant objects should be in view and obvious to recognise (1) \u53ef\u89c1\u6027\uff1a\u76f8\u5173\u7269\u4f53\u5e94\u6e05\u6670\u53ef\u89c1\u4e14\u6613\u4e8e\u8bc6\u522b</li> <li>(2) Affordance: the appearance of an object should indicate how it should be used \uff082\uff09\u53ef\u4f9b\u6027\uff1a\u4e00\u4e2a\u7269\u4f53\u7684\u5916\u89c2\u5e94\u8be5\u8868\u660e\u5b83\u5e94\u8be5\u5982\u4f55\u4f7f\u7528</li> <li>(3) Constraints: limiting the possible actions of an object, to prevent user making errors (3) \u7ea6\u675f\uff1a\u9650\u5236\u4e00\u4e2a\u5bf9\u8c61\u53ef\u80fd\u7684\u52a8\u4f5c\uff0c\u9632\u6b62\u7528\u6237\u51fa\u9519</li> <li>(4) Cognitive aids/ Feedback: External representations intended to gain our attention (4) \u8ba4\u77e5\u8f85\u52a9/\u53cd\u9988\uff1a\u65e8\u5728\u5f15\u8d77\u6211\u4eec\u6ce8\u610f\u7684\u5916\u90e8\u8868\u5f81</li> <li>(5) Consistency/ Transfer effects: transferring learning and expectations of similar  objects/interfaces to the current task (5) \u4e00\u81f4\u6027/\u8fc1\u79fb\u6548\u679c\uff1a\u5c06\u76f8\u4f3c\u5bf9\u8c61/\u63a5\u53e3\u7684\u5b66\u4e60\u548c\u671f\u671b\u8fc1\u79fb\u5230\u5f53\u524d\u4efb\u52a1</li> <li>(6) Natural mapping: laying out screens to better represent their function (6) \u81ea\u7136\u6620\u5c04\uff1a\u5e03\u5c40\u5c4f\u5e55\u4ee5\u66f4\u597d\u5730\u8868\u73b0\u5176\u529f\u80fd</li> </ul>"},{"location":"course_notes/fit5136/#ben-shneidermans-8-golden-rules","title":"Ben Shneiderman\u2019s 8 golden rules","text":"<ul> <li>Strive for consistency: consistent user-interfaces \u529b\u6c42\u4e00\u81f4\u6027\uff1a\u4e00\u81f4\u7684\u7528\u6237\u754c\u9762</li> <li>Cater to universal usability: for all range of users (age, disability, etc) \u8fce\u5408\u901a\u7528\u53ef\u7528\u6027\uff1a\u9002\u7528\u4e8e\u6240\u6709\u8303\u56f4\u7684\u7528\u6237\uff08\u5e74\u9f84\u3001\u6b8b\u75be\u7b49\uff09</li> <li>Offer informative feedback: give user feedback on their actions (green, tick, sound,  highlighting, etc) \u63d0\u4f9b\u4fe1\u606f\u53cd\u9988\uff1a\u5411\u7528\u6237\u63d0\u4f9b\u6709\u5173\u5176\u64cd\u4f5c\u7684\u53cd\u9988\uff08\u7eff\u8272\u3001\u52fe\u9009\u3001\u58f0\u97f3\u3001\u7a81\u51fa\u663e\u793a\u7b49\uff09</li> <li>Design dialogue to yield closure: feedback or warnings at the end of the action \u8bbe\u8ba1\u5bf9\u8bdd\u4ee5\u4ea7\u751f\u5173\u95ed\uff1a\u884c\u52a8\u7ed3\u675f\u65f6\u7684\u53cd\u9988\u6216\u8b66\u544a</li> <li>Prevent errors: detect error, let the user undo their mistake \u9884\u9632\u9519\u8bef\uff1a\u68c0\u6d4b\u9519\u8bef\uff0c\u8ba9\u7528\u6237\u64a4\u6d88\u9519\u8bef</li> <li>Permit easy reversal of actions: offer an easy way out where possible (change of mind,  unsubscribe) \u5141\u8bb8\u8f7b\u677e\u9006\u8f6c\u884c\u52a8\uff1a\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u63d0\u4f9b\u7b80\u5355\u7684\u51fa\u8def\uff08\u6539\u53d8\u4e3b\u610f\uff0c\u53d6\u6d88\u8ba2\u9605\uff09</li> <li>Support internal locus of control: give the user a sense of control. Let the user initiate, and  control actions \u652f\u6301\u5185\u90e8\u63a7\u5236\u70b9\uff1a\u7ed9\u7528\u6237\u4e00\u79cd\u63a7\u5236\u611f\u3002\u8ba9\u7528\u6237\u53d1\u8d77\u548c\u63a7\u5236\u52a8\u4f5c</li> <li>Reduce short-term memory load: Don\u2019t make navigation and tasks excessively complex\u2014use  meaningful mnemonics, icons, and abbreviations or \u201chint\u201d \u51cf\u5c11\u77ed\u671f\u8bb0\u5fc6\u8d1f\u8377\uff1a\u4e0d\u8981\u8ba9\u5bfc\u822a\u548c\u4efb\u52a1\u8fc7\u4e8e\u590d\u6742\u2014\u2014\u4f7f\u7528\u6709\u610f\u4e49\u7684\u52a9\u8bb0\u7b26\u3001\u56fe\u6807\u548c\u7f29\u5199\u6216\u201c\u63d0\u793a\u201d</li> </ul>"},{"location":"course_notes/fit5136/#fit5136-week-3-analysis-and-oop-concepts","title":"FIT5136 Week 3 Analysis and OOP Concepts","text":""},{"location":"course_notes/fit5136/#uml","title":"UML","text":"<p>for specifying, visualizing,  constructing and documenting the artefacts of software  systems, as well as for business modeling and other non-  software systems\u7528\u4e8e\u6307\u5b9a\u3001\u53ef\u89c6\u5316\u3001\u6784\u5efa\u548c\u8bb0\u5f55\u8f6f\u4ef6\u7cfb\u7edf\u7684\u4eba\u5de5\u5236\u54c1\uff0c\u4ee5\u53ca\u7528\u4e8e\u4e1a\u52a1\u5efa\u6a21\u548c\u5176\u4ed6\u975e\u8f6f\u4ef6\u7cfb\u7edf</p> <p>Static diagrams \u9759\u6001\u56fe + display the organization of a system in terms  of the components that make up that system and their  relationships \u6839\u636e\u6784\u6210\u8be5\u7cfb\u7edf\u7684\u7ec4\u4ef6\u53ca\u5176\u5173\u7cfb\u663e\u793a\u7cfb\u7edf\u7684\u7ec4\u7ec7</p> <p>Dynamic diagrams \u52a8\u6001\u56fe + show the dynamic behaviour of the objects in  a system   E.g., how different components communicate with each other to  perform a task \u663e\u793a\u7cfb\u7edf\u4e2d\u5bf9\u8c61\u7684\u52a8\u6001\u884c\u4e3a \u2022 \u4f8b\u5982\uff0c\u4e0d\u540c\u7ec4\u4ef6\u5982\u4f55\u76f8\u4e92\u901a\u4fe1\u4ee5\u6267\u884c\u4efb\u52a1  </p> <p> 1. Use case diagrams, which show the interactions between a system and its environment, together with use case scenarios which provide more interaction details \u7528\u4f8b\u56fe\uff0c\u663e\u793a\u7cfb\u7edf\u4e0e\u5176\u73af\u5883\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u4ee5\u53ca\u63d0\u4f9b\u66f4\u591a\u4ea4\u4e92\u7ec6\u8282\u7684\u7528\u4f8b\u573a\u666f 2. Class diagrams, which show the object classes in the system  and the associations between these classes \u7c7b\u56fe\uff0c\u663e\u793a\u7cfb\u7edf\u4e2d\u7684\u5bf9\u8c61\u7c7b\u4ee5\u53ca\u8fd9\u4e9b\u7c7b\u4e4b\u95f4\u7684\u5173\u8054 3. interaction Diagrams, which show interactions between actors  and the system and between system components.  \u2022 Sequence diagram shows object interactions arranged in  time sequence \u4ea4\u4e92\u56fe\uff0c\u663e\u793a\u53c2\u4e0e\u8005\u4e0e\u7cfb\u7edf\u4e4b\u95f4\u4ee5\u53ca\u7cfb\u7edf\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002 \u2022 \u5e8f\u5217\u56fe\u663e\u793a\u6309\u65f6\u95f4\u987a\u5e8f\u6392\u5217\u7684\u5bf9\u8c61\u4ea4\u4e92 4. Statecharts , which show how the system reacts to internal and  external events. \u72b6\u6001\u56fe\uff0c\u663e\u793a\u7cfb\u7edf\u5982\u4f55\u5bf9\u5185\u90e8\u548c\u5916\u90e8\u4e8b\u4ef6\u4f5c\u51fa\u53cd\u5e94</p>"},{"location":"course_notes/fit5136/#requirements-analysis-the-3-steps-overview","title":"Requirements Analysis: The 3 steps - Overview","text":"<ul> <li>Functional modelling Present scenarios of all the use cases Use case scenario \u529f\u80fd\u5efa\u6a21 o \u6240\u6709\u7528\u4f8b\u7684\u5f53\u524d\u573a\u666f o \u8981\u521b\u5efa\u7684\u4eba\u5de5\u5236\u54c1\uff1a\u7528\u4f8b\u573a\u666f</li> <li>Class modelling   Determine the entity classes and their attributes  Determine the interrelationships and interactions between the entity classes   Class diagram \u7c7b\u5efa\u6a21 o \u786e\u5b9a\u5b9e\u4f53\u7c7b\u53ca\u5176\u5c5e\u6027 o \u786e\u5b9a\u5b9e\u4f53\u7c7b\u4e4b\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u548c\u4ea4\u4e92 o \u8981\u521b\u5efa\u7684\u4eba\u5de5\u5236\u54c1\uff1a\u7c7b\u56fe</li> <li>Dynamic modelling  Determine the operations performed by or to each entity class   State chart \u52a8\u6001\u5efa\u6a21 o \u786e\u5b9a\u6bcf\u4e2a\u5b9e\u4f53\u7c7b\u6267\u884c\u7684\u64cd\u4f5c\u6216\u5bf9\u6bcf\u4e2a\u5b9e\u4f53\u7c7b\u6267\u884c\u7684\u64cd\u4f5c \u72b6\u6001\u56fe</li> </ul>"},{"location":"course_notes/fit5136/#use-case-scenario","title":"Use case scenario","text":"<p>A scenario = a description of a use case A scenario can be \u201cnormal\u201d and \u201cexception\u201d \u573a\u666f = \u7528\u4f8b\u7684\u63cf\u8ff0 \u573a\u666f\u53ef\u4ee5\u662f\u201c\u6b63\u5e38\u201d\u548c\u201c\u5f02\u5e38\u201d  + Use Case Name - short, descriptive verb phrase;  \u7b80\u77ed\u7684\u63cf\u8ff0\u6027\u52a8\u8bcd\u77ed\u8bed  + Scenario - a sentence that captures the essence of the use case (functionality);  \u6355\u6349\u7528\u4f8b\u672c\u8d28\uff08\u529f\u80fd\uff09\u7684\u53e5\u5b50 + Trigger \u2013 the actor who perform certain actions to triggers the use case;  \u5b9e\u9645\u89e6\u53d1\u7528\u4f8b\u7684\u53c2\u4e0e\u8005 + Brief description - a paragraph that captures the goal of the use case;  \u7b80\u8981\u63cf\u8ff0\uff1a\u63cf\u8ff0\u7528\u4f8b\u76ee\u6807\u7684\u6bb5\u843d + Actors - actors involved in the use case (initiator and participant actors);  \u7528\u4f8b\u4e2d\u6d89\u53ca\u7684\u53c2\u4e0e\u8005\uff08\u53d1\u8d77\u8005\u548c\u53c2\u4e0e\u8005\u53c2\u4e0e\u8005\uff09 + Related use cases - does the use case have any relation with other use cases \u2013 inclusion/exclusion/generalization?  \u00a0\u76f8\u5173\u7528\u4f8b\uff1a\u8be5\u7528\u4f8b\u662f\u5426\u4e0e\u5176\u4ed6\u7528\u4f8b\u6709\u4efb\u4f55\u5173\u7cfb - \u5305\u542b/\u6392\u9664/\u6cdb\u5316 + Preconditions \u2013 the conditions that must met before the use case can execute, they can be considered as constraints;  \u5148\u51b3\u6761\u4ef6\uff1a\u5728\u7528\u4f8b\u53ef\u4ee5\u6267\u884c\u4e4b\u524d\u5fc5\u987b\u4e3a\u771f\u7684\u4e8b\u60c5\u2014\u2014\u5b83\u4eec\u662f\u5bf9\u7cfb\u7edf\u72b6\u6001\u7684\u7ea6\u675f\uff1b + Postconditions \u2013 the conditions that must be met at the end of the use case, they can be considered as outcomes  \u540e\u7f6e\u6761\u4ef6\uff1a \u5728\u7528\u4f8b\u7ed3\u675f\u65f6\u5fc5\u987b\u4e3a\u771f\u7684\u4e8b\u60c5\uff1b + Flow of events - the steps in the use case (if everything goes well \u2013 no error, interruption);  \u4e8b\u4ef6\u6d41\uff1a\u7528\u4f8b\u4e2d\u7684\u6b65\u9aa4\uff08\u5982\u679c\u4e00\u5207\u987a\u5229\u2014\u2014\u6ca1\u6709\u9519\u8bef\u3001\u4e2d\u65ad\uff09\uff1b + Exception conditions - a list of alternatives to the main flow (capture errors, interruption to the main flow)\u5f02\u5e38\u6761\u4ef6\uff1a \u4e3b\u8981\u6d41\u7a0b\u7684\u66ff\u4ee3\u5217\u8868\uff08\u6355\u83b7\u9519\u8bef\uff0c\u4e2d\u65ad\u4e3b\u8981\u6d41\u7a0b\uff09</p>"},{"location":"course_notes/fit5136/#class-diagram","title":"Class diagram","text":"<p>Class diagrams are used when developing an object-oriented  system model to show the classes in a system and the associations  between these classes.\u5728\u5f00\u53d1\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u6a21\u578b\u65f6\u4f7f\u7528\u7c7b\u56fe\u6765\u663e\u793a\u7cfb\u7edf\u4e2d\u7684\u7c7b\u4ee5\u53ca\u8fd9\u4e9b\u7c7b\u4e4b\u95f4\u7684\u5173\u8054\u3002</p> <p>objects represent something in the  real world Easy way to remember: they are usually nouns, such as a patient, a prescription, a recipe, a doctor, a  lecturer, student, etc.   \u5bf9\u8c61\u4ee3\u8868\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u67d0\u4e9b\u4e8b\u7269\uff0c\u4f8b\u5982\u60a3\u8005\u3001\u5904\u65b9\u3001\u98df\u8c31\u3001\u533b\u751f\u3001\u8bb2\u5e08\u3001\u5b66\u751f\u7b49\u3002 \u2022 \u6613\u4e8e\u8bb0\u5fc6\uff1a\u5b83\u4eec\u901a\u5e38\u662f\u540d\u8bcd</p>"},{"location":"course_notes/fit5136/#essential-elements-of-a-uml-class-diagram","title":"Essential Elements of a UML Class Diagram","text":"<ul> <li>Class  \u7c7b</li> <li>Attributes  \u5c5e\u6027</li> <li>Operations  \u64cd\u4f5c</li> <li>Relationships  \u5173\u7cfb</li> <li>Associations  Generalization  Composition/Aggregation  Dependency  \u5173\u8054 \u2022 \u6cdb\u5316 \u2022 \u7ec4\u5408/\u805a\u5408 \u2022 \u4f9d\u8d56\u5173\u7cfb</li> <li>Constraint Rules and Notes \u7ea6\u675f\u89c4\u5219\u548c\u6ce8\u91ca</li> </ul>"},{"location":"course_notes/fit5136/#fit5136-week-4","title":"FIT5136 WEEK 4","text":""},{"location":"course_notes/fit5136/#weekly-quiz","title":"WEEKLY QUIZ","text":""},{"location":"course_notes/fit5136/#workflows","title":"==\u5fc5\u8003Workflows==","text":"<p> + \u8fd9\u56db\u4e2aPhase\u52a0\u8d77\u6765\u53eb\u4e00\u4e2aEvent\uff0c\u53e6\u5916Event\u4e4b\u95f4\u9700\u8981\u89e3\u91ca + Person-hour = amount of work 1 person can do in 1 hr \u5de5\u65f6 = 1 \u4eba\u5728 1 \u5c0f\u65f6\u5185\u53ef\u4ee5\u5b8c\u6210\u7684\u5de5\u4f5c\u91cf + Shaded area = person-hrs x time = total effort \u9634\u5f71\u9762\u79ef = \u5de5\u65f6 x\u65f6\u957f = \u603b\u52aa\u529b</p> <p> </p>"},{"location":"course_notes/fit5136/#week-5-initial-class-diagramsequence-diagram-state-chart","title":"==\u91cd\u70b9WEEK 5 Initial Class Diagram,Sequence Diagram, State Chart==","text":""},{"location":"course_notes/fit5136/#weekly-quiz_1","title":"WEEKLY QUIZ","text":"<p>answer content in 5136w5.pdf</p>"},{"location":"course_notes/fit5136/#associations","title":"Associations","text":"<p>https://www.visual-paradigm.com/guide/uml-unified-modeling-language/what-is-class-diagram/</p> <p> + If the association has a navigability (i.e.an arrow on one end) it indicates that one class knows about the other but not vice versa \u5982\u679c\u5173\u8054\u5177\u6709\u53ef\u5bfc\u822a\u6027\uff08\u5373\u4e00\u7aef\u6709\u7bad\u5934\uff09\uff0c\u5219\u8868\u660e\u4e00\u4e2a\u7c7b\u77e5\u9053\u53e6\u4e00\u4e2a\u7c7b\uff0c\u53cd\u4e4b\u5219\u4e0d\u7136</p> <p> + Sometimes, the association is complex \u2013 needs a class  (sometimes called Association Class) to represent it\u6709\u65f6\uff0c\u5173\u8054\u5f88\u590d\u6742\u2014\u2014\u9700\u8981\u4e00\u4e2a\u7c7b\uff08\u6709\u65f6\u79f0\u4e3a\u5173\u8054\u7c7b\uff09\u6765\u8868\u793a\u5b83\u3002 </p> <ul> <li>Each end of an association can have its multiplicity shown. This indicates how many objects of each class are involved in the association. One to one;  One to Many;  Many to one; Many to many; We read multiplicities from left to right \u5173\u8054\u7684\u6bcf\u4e00\u7aef\u90fd\u53ef\u4ee5\u663e\u793a\u5176\u591a\u91cd\u6027\u3002 \u25aa \u8fd9\u8868\u793a\u5173\u8054\u4e2d\u6d89\u53ca\u6bcf\u4e2a\u7c7b\u7684\u5bf9\u8c61\u6570\u3002 \u2013 \u4e00\u5bf9\u4e00 \u2013 \u4e00\u5bf9\u591a \u2013 \u591a\u5bf9\u4e00 \u2013 \u591a\u5bf9\u591a \u25aa \u6211\u4eec\u4ece\u5de6\u5230\u53f3\u9605\u8bfb\u591a\u91cd\u6027 </li> </ul>"},{"location":"course_notes/fit5136/#the-generalization-relationship","title":"==\u91cd\u70b9The Generalization Relationship \u5bf9\u5e94\u5173\u7cfb==","text":"<p>Lots of different terms for this + Inheritance +  \u201cis-a\u201d + Generalization  +  Superclass/subclass</p>"},{"location":"course_notes/fit5136/#generalization","title":"Generalization \u5f52\u5316 \u7a7a\u5fc3\u7bad\u5934\u6307\u5411\u7236\u7c7b","text":"<p>  + \u80fd\u591f\u63a8\u65ad\u8fd9\u4e9b\u7c7b\u7684\u4e0d\u540c\u6210\u5458\u5177\u6709\u4e00\u4e9b\u5171\u540c\u7279\u5f81 + \u6982\u62ec\u5730\u8bf4\uff0c\u4e0e\u8f83\u9ad8\u7ea7\u522b\u7684\u7c7b\u76f8\u5173\u8054\u7684\u5c5e\u6027\u548c\u64cd\u4f5c\u4e5f\u4e0e\u8f83\u4f4e\u7ea7\u522b\u7684\u7c7b\u76f8\u5173\u8054</p>"},{"location":"course_notes/fit5136/#the-is-a-relationship","title":"The \u201cis-a\u201d relationship","text":"<p>  Subclasses inherit the attributes and operations of their  superclass \u5b50\u7c7b\u7ee7\u627f\u5176\u8d85\u7c7b\u7684\u5c5e\u6027\u548c\u64cd\u4f5c + Every lecturer and every tutor have name, id and password,  inherited from the User class.  \u6bcf\u4e2a\u8bb2\u5e08\u548c\u6bcf\u4e2a\u5bfc\u5e08\u90fd\u6709\u4ece User \u7c7b\u7ee7\u627f\u7684\u59d3\u540d\u3001ID \u548c\u5bc6\u7801 + Lecturers and Tutors can mark assignments, because Users  can\u8bb2\u5e08\u548c\u5bfc\u5e08\u53ef\u4ee5\u6807\u8bb0\u4f5c\u4e1a\uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u4ee5</p> <p>Subclasses provide extra operations and attributes \u5b50\u7c7b\u63d0\u4f9b\u989d\u5916\u7684\u64cd\u4f5c\u548c\u5c5e\u6027 + Lecturers can create assignments \u8bb2\u5e08\u53ef\u4ee5\u521b\u5efa\u4f5c\u4e1a</p>"},{"location":"course_notes/fit5136/#aggregation-has-a-relationship-a-b","title":"Aggregation (has-a relationship) \u805a\u5408 a \u662fb \u7684\u4e00\u90e8\u5206 \u7a7a\u5fc3\u83f1\u5f62","text":"<p>  + An aggregation model shows how classes that are collections are composed of other classes. \u805a\u5408\u6a21\u578b\u663e\u793a\u4f5c\u4e3a\u96c6\u5408\u7684\u7c7b\u5982\u4f55\u7531\u5176\u4ed6\u7c7b\u7ec4\u6210 + An aggregation is the kind of association that exists between a group and its members \u805a\u5408\u662f\u5b58\u5728\u4e8e\u7ec4\u53ca\u5176\u6210\u5458\u4e4b\u95f4\u7684\u4e00\u79cd\u5173\u8054 + the aggregate object may potentially exist without  its constituent objects (although not necessarily in  a useful state),  \u805a\u5408\u5bf9\u8c61\u53ef\u80fd\u5728\u6ca1\u6709\u5176\u7ec4\u6210\u5bf9\u8c61\u7684\u60c5\u51b5\u4e0b\u5b58\u5728\uff08\u5c3d\u7ba1\u4e0d\u4e00\u5b9a\u5904\u4e8e\u6709\u7528\u72b6\u6001\uff09 + at any time, each object may be a constituent of  more than one aggregate (e.g. a person may  belong to several clubs)\u5728\u4efb\u4f55\u65f6\u5019\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u53ef\u80fd\u662f\u591a\u4e2a\u805a\u5408\u7684\u7ec4\u6210\u90e8\u5206\uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u4eba\u53ef\u80fd\u5c5e\u4e8e\u591a\u4e2a\u4ff1\u4e50\u90e8\uff09 + constituent objects are typically of the same class  (but, again, that\u2019s not always the case)\u7ec4\u6210\u90e8\u5206\u5bf9\u8c61\u901a\u5e38\u5c5e\u4e8e\u540c\u4e00\u7c7b\uff08\u4f46\u540c\u6837\uff0c\u60c5\u51b5\u5e76\u975e\u603b\u662f\u5982\u6b64\uff09</p>"},{"location":"course_notes/fit5136/#how-do-we-get-from-requirements-to-classes","title":"==\u91cd\u70b9how do we get from requirements to classes==","text":"<ul> <li>Determine entity classes and their attributes  (particularly entity)  \u786e\u5b9a\u5b9e\u4f53\u7c7b\u53ca\u5176\u5c5e\u6027\uff08\u5c24\u5176\u662f\u5b9e\u4f53 </li> <li> Determine the interrelationships and  interactions between the classes  \u786e\u5b9a\u7c7b\u4e4b\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u548c\u4ea4\u4e92</li> <li>Represented as a class diagram \u8868\u793a\u4e3a\u7c7b\u56fe</li> </ul> <p>Goal + to create a dictionary of abstractions.</p> <p>How? + Study use case scenarios + other requirements docs.</p> <p>Steps: + Start by looking for tangible things.\u5bfb\u627e\u6709\u5f62\u7684\u4e1c\u897f\u5f00\u59cb + Figure out what is inside and outside the problem boundary\u5f04\u6e05\u695a\u95ee\u9898\u8fb9\u754c\u7684\u5185\u90e8\u548c\u5916\u90e8\u662f\u4ec0\u4e48 + Some things may be classes \u6709\u4e9b\u4e1c\u897f\u53ef\u80fd\u662f\u7c7b + Some may be simple attributes \u6709\u4e9b\u53ef\u80fd\u662f\u7b80\u5355\u7684\u5c5e\u6027</p>"},{"location":"course_notes/fit5136/#scenario","title":"Scenario","text":""},{"location":"course_notes/fit5136/#classification-of-identified-nouns","title":"Classification of identified nouns \u5df2\u8bc6\u522b\u540d\u8bcd\u7684\u5206\u7c7b","text":"<p>Candidate entity classes \u5019\u9009\u5b9e\u4f53\u7c7b: + RealEstateSystem, Agent, Property, House, Apartment, Category, ForRent, ForSale, RealEstateCompany</p> <p>Abstract nouns (attributes) \u62bd\u8c61\u540d\u8bcd\uff08\u5c5e\u6027\uff09 + list of properties, list of agents, name of the agent, mobile number,  business name, address of the company, number of storeys, age of  the property, unit number, floor number, id, street address, suburb,  no of bedrooms, no of bathrooms, number of car spaces, floor plan,  type, inspection time, price per week, bond, available date, land  size, selling price</p> <p>Outside problem domain: + system (redundant), city, Parallex, council, council administrators  (redundant), property\u2019s information (synonym), amount (redundant),  market, companies, month, administrator</p>"},{"location":"course_notes/fit5136/#identify-multiplicities-and-relationships","title":"identify multiplicities and relationships \u8bc6\u522b\u591a\u91cd\u6027\u548c\u5173\u7cfb","text":"<ul> <li>Not all the classes will have a relationship with each other It could be: Association \u25aa Generalisation \u25aa Aggregation \u5e76\u975e\u6240\u6709\u7684\u7c7b\u90fd\u4f1a\u76f8\u4e92\u5173\u8054\u2014\u2014\u53ef\u80fd\u662f\uff1a \u25aa \u5173\u8054 \u25aa \u6cdb\u5316 \u25aa \u805a\u5408</li> <li>If two classes do not have a relationship with each other, they do  not have multiplicity either \u5982\u679c\u4e24\u4e2a\u7c7b\u4e4b\u95f4\u6ca1\u6709\u5173\u7cfb\uff0c\u5b83\u4eec\u4e5f\u4e0d\u5177\u6709\u591a\u91cd\u6027</li> <li>Multiplicities are only added for association and aggregation  Could be:  \u25aa One to one  \u25aa One to many  \u25aa Many to many (\u2013 If it is many to many, leave it as it is for initial class diagram)  \u591a\u91cd\u6027\u4ec5\u7528\u4e8e\u5173\u8054\u548c\u805a\u5408 \u2013 \u53ef\u80fd\u662f\uff1a \u25aa \u4e00\u5bf9\u4e00 \u25aa \u4e00\u5bf9\u591a \u25aa \u591a\u5bf9\u591a \u2013 \u5982\u679c\u662f\u591a\u5bf9\u591a\uff0c\u5219\u4fdd\u7559\u5176\u4e3a\u521d\u59cb\u7c7b\u56fe</li> <li>For each class, find out what other classes it needs to  interact.   to manage the data of the other class  \u25aa is dependent on the data of the other class  \u25aa the two classes in question needs to work together\u5bf9\u4e8e\u6bcf\u4e2a\u7c7b\uff0c\u627e\u51fa\u5b83\u9700\u8981\u4ea4\u4e92\u7684\u5176\u4ed6\u7c7b\u3002 \u2013 \u4ea4\u4e92\u662f \u25aa \u7ba1\u7406\u5176\u4ed6\u7c7b\u7684\u6570\u636e \u25aa \u4f9d\u8d56\u4e8e\u5176\u4ed6\u7c7b\u7684\u6570\u636e \u25aa \u6709\u95ee\u9898\u7684\u4e24\u4e2a\u7c7b\u9700\u8981\u4e00\u8d77\u5de5\u4f5c</li> </ul>"},{"location":"course_notes/fit5136/#commonalities-in-responsibilities","title":"commonalities in responsibilities","text":"<p>Look for commonalities in responsibilities between classes. \u25aa See whether these can be simplified using inheritance \u2013 does an \u201cis-a\u201d relationship exist? \u5bfb\u627e\u7c7b\u4e4b\u95f4\u804c\u8d23\u7684\u5171\u540c\u70b9\u3002 \u25aa \u770b\u770b\u8fd9\u4e9b\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u7ee7\u627f\u6765\u7b80\u5316\u2014\u2014\u662f\u5426\u5b58\u5728\u201cis-a\u201d\u5173\u7cfb\uff1f</p> <p>Example of inheritance: + Type of Properties  \u25aa House  \u25aa Apartment + Type of Category  \u25aa ForRent  \u25aa ForSale</p>"},{"location":"course_notes/fit5136/#initial-class-diagram","title":"==\u91cd\u70b9Initial Class Diagram==","text":""},{"location":"course_notes/fit5136/#how-to-draw-diagram","title":"==\u91cd\u70b9how to draw diagram==","text":"<ol> <li>\u4ed4\u7ec6\u9605\u8bfb\u6536\u96c6\u5230\u7684\u5ba2\u6237\u9700\u6c42</li> <li>\u5b9a\u4e49\u6240\u6709\u6536\u96c6\u5230\u8d44\u6599\u7684\u540d\u8bcd\u90e8\u5206\uff0c\u5e76\u5bf9\u4ed6\u4eec\u5177\u4f53\u5206\u7c7b\uff1a Classification of identified nouns \u5df2\u8bc6\u522b\u540d\u8bcd\u7684\u5206\u7c7b</li> <li>Abstract Noun; </li> <li>Outside problem Noun; </li> <li>Candidate entity class</li> <li>\u753b\u51fa\u6240\u6709\u7684Candidate entity class, \u5b9a\u4e49\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li>\u201cis-a\u201drelationship (Inheritance);  Generalization \u5f52\u5316 \u7a7a\u5fc3\u7bad\u5934\u6307\u5411\u7236\u7c7b</li> <li>Aggregation relationship; Aggregation (has-a relationship) \u805a\u5408 a \u662fb \u7684\u4e00\u90e8\u5206 \u7a7a\u5fc3\u83f1\u5f62</li> <li>Association relationship;Associations</li> <li>Identify the multiplicity between classes identify multiplicities and relationships \u8bc6\u522b\u591a\u91cd\u6027\u548c\u5173\u7cfb</li> <li>One to One; </li> <li>One to many;</li> <li>Many to many (\u5fc5\u987b\u907f\u514d)</li> <li>\u628a\u6536\u96c6\u5230\u7684abstract noun \u586b\u5165attribute \u91cc\uff0c\u68c0\u67e5\u662f\u5426\u5408\u9002</li> </ol>"},{"location":"course_notes/fit5136/#three-types-of-classes","title":"Three Types of Classes","text":"<p>Model = Entity Classes;   View = Boundary Classes;  Controller = Control Classes </p>"},{"location":"course_notes/fit5136/#entity-class-model","title":"Entity Class \u5b9e\u4f53\u7c7b Model","text":"<ul> <li>Models \u201clong-lived\u201d information  \u6a21\u578b\u201c\u957f\u671f\u5b58\u5728\u7684\u201d\u4fe1\u606f </li> <li>Usually \u201cpassive\u201d But they may still contain complex algorithms.  Examples: Property, Agent, Real Estate Company\u901a\u5e38\u662f\u201c\u88ab\u52a8\u7684\u201d\u2014\u2014\u4f46\u5b83\u4eec\u53ef\u80fd\u4ecd\u5305\u542b\u590d\u6742\u7684\u7b97\u6cd5\u3002 \u2022 \u793a\u4f8b\uff1a\u7269\u4e1a\u3001\u4ee3\u7406\u3001\u623f\u5730\u4ea7\u516c\u53f8</li> <li></li> </ul>"},{"location":"course_notes/fit5136/#boundary-class-view","title":"Boundary Class \u8fb9\u754c\u7c7b View","text":"<ul> <li>Class that lives on the system\u2019s  \u201cautomation boundary\u201d\u5b58\u5728\u4e8e\u7cfb\u7edf\u201c\u81ea\u52a8\u5316\u8fb9\u754c\u201d\u4e0a\u7684\u7c7b</li> <li>Models the interaction between  product and environment  (actor)  \u2022 \u5bf9\u4ea7\u54c1\u548c\u73af\u5883\uff08\u53c2\u4e0e\u8005\uff09\u4e4b\u95f4\u7684\u4ea4\u4e92\u8fdb\u884c\u5efa\u6a21</li> <li>Associated with input or output  \u2022 \u4e0e\u8f93\u5165\u6216\u8f93\u51fa\u76f8\u5173\u8054</li> <li></li> </ul>"},{"location":"course_notes/fit5136/#control-class-controller","title":"Control Class \u63a7\u5236\u7c7b Controller","text":"<ul> <li>Mediate interaction between  boundary and entity classes.  \u8c03\u89e3\u8fb9\u754c\u548c\u5b9e\u4f53\u7c7b\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002</li> <li>Models complex computations and  algorithms  \u4e3a\u590d\u6742\u7684\u8ba1\u7b97\u548c\u7b97\u6cd5\u5efa\u6a21</li> <li>Sometimes relate to use cases \u2013 but  not always.  \u6709\u65f6\u4e0e\u7528\u4f8b\u76f8\u5173\u2014\u2014\u4f46\u5e76\u975e\u603b\u662f\u5982\u6b64</li> <li>For simple program, possibly the class  that contains the main() method \u5bf9\u4e8e\u7b80\u5355\u7a0b\u5e8f\uff0c\u53ef\u80fd\u662f\u5305\u542b main() \u65b9\u6cd5\u7684\u7c7b</li> <li></li> </ul>"},{"location":"course_notes/fit5136/#class-communication","title":"class communication","text":""},{"location":"course_notes/fit5136/#sequence_diagram","title":"==\u91cd\u70b9Sequence_diagram==","text":"<p>  + The realization of a specific scenario of a use case is  depicted using an interaction diagram \u4f7f\u7528\u4ea4\u4e92\u56fe\u6765\u63cf\u8ff0\u7528\u4f8b\u7684\u7279\u5b9a\u573a\u666f\u7684\u5b9e\u73b0 + Models the flow of logic within the system \u5bf9\u7cfb\u7edf\u5185\u7684\u903b\u8f91\u6d41\u8fdb\u884c\u5efa\u6a21 +  Describes how\u2014and in what order\u2014a group of objects  works together  \u63cf\u8ff0\u4e00\u7ec4\u5bf9\u8c61\u5982\u4f55\u4ee5\u53ca\u4ee5\u4f55\u79cd\u987a\u5e8f\u534f\u540c\u5de5\u4f5c + Shows the interactions between objects.  \u663e\u793a\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92 +  Plan and understand the detailed functionality of an existing or future scenario.  \u89c4\u5212\u548c\u7406\u89e3\u73b0\u6709\u6216\u672a\u6765\u573a\u666f\u7684\u8be6\u7ec6\u529f\u80fd + Models the details of a use case \u2013 a use case scenario\u4e3a\u7528\u4f8b\u7684\u7ec6\u8282\u5efa\u6a21 \u7528\u4f8b\u573a\u666f</p>"},{"location":"course_notes/fit5136/#sequence-diagram-for-use-case","title":"==Sequence Diagram for Use Case==","text":"<ul> <li>==Boundary class (view) for presenting something to user only !==</li> <li>==Control class (controller) for verifying inputs and interacting with entity class!==</li> <li>==Entity Class (model) for doing something that we really want==</li> <li>==User \u7684\u90e8\u5206==</li> <li>==Forward pass\u4f7f\u7528\u5b9e\u7ebf==</li> <li>==Back pass \u4f7f\u7528\u865a\u7ebf==</li> </ul> <p>How to refine the scenario and use it to show the  interactions between objects \u5982\u4f55\u7ec6\u5316\u573a\u666f\u5e76\u4f7f\u7528\u5b83\u6765\u663e\u793a\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92 + Use the information from the class diagram   \u4f7f\u7528\u7c7b\u56fe\u4e2d\u7684\u4fe1\u606f + Then, add boundary and control class  \u6dfb\u52a0\u8fb9\u754c\u548c\u63a7\u5236\u7c7b +  If required, you can add more arrows to show inner working of  the system  \u60a8\u53ef\u4ee5\u6dfb\u52a0\u66f4\u591a\u7bad\u5934\u4ee5\u663e\u793a\u7cfb\u7edf\u7684\u5185\u90e8\u5de5\u4f5c + Add as much of information as possible \u6dfb\u52a0\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f</p> <p>  + Message sent from a Class A object to a  Class B object corresponds to a method in  Class B \u4ece A \u7c7b\u5bf9\u8c61\u53d1\u9001\u5230 B \u7c7b\u5bf9\u8c61\u7684\u6d88\u606f\u5bf9\u5e94\u4e8e B \u7c7b\u4e2d\u7684\u4e00\u4e2a\u65b9\u6cd5 + Actor interacts with the system via  UserInterface obj (boundary class view) Actor \u901a\u8fc7 UserInterface \u4e0e\u7cfb\u7edf\u4ea4\u4e92 + there are 8 actions sent by the Actor into the system. Therefore, in the sequence diagram, there must be exactly 8 messages sent to the Boundary classes Actor \u5411\u7cfb\u7edf\u53d1\u9001\u4e86 8 \u4e2a\u52a8\u4f5c\u3002\u56e0\u6b64\uff0c\u5728\u5e8f\u5217\u56fe\u4e2d\uff0c\u5fc5\u987b\u6070\u597d\u6709 8 \u6761\u6d88\u606f\u53d1\u9001\u5230 Boundary \u7c7b + Boundary classes interacts with the  entities via control object(s) \u8fb9\u754c\u7c7b\u901a\u8fc7\u63a7\u5236\u5bf9\u8c61\u4e0e\u5b9e\u4f53\u4ea4\u4e92 + user's input will be verified in controller  </p>"},{"location":"course_notes/fit5136/#uml-state-chart","title":"==\u91cd\u70b9\u9009\u8003UML state chart==","text":"<p>\u52a8\u6001\u5efa\u6a21\uff0c\u4f7f\u7528\u7279\u5b9a\u573a\u666f\u7684\u72b6\u6001\u56fe\u5bf9\u5bf9\u8c61\u7684\u884c\u4e3a\u8fdb\u884c\u5efa\u6a21 + \u8d77\u70b9\u9ed1\u5706\u5708 \u7ec8\u70b9\u9ed1\u5706\u5708\u5957\u4e00\u4e2a\u540c\u5fc3\u5706\u73af + \u4e0d\u7528\u8de8\u7ea7\u8fd4\u56de\u5faa\u73af + \u53ef\u4ee5\u753b\u767b\u5f55 \u6ca1\u65f6\u95f4\u7684\u8bdd\u4ecemainpage\u5f00\u59cb\u753b + \u8d77\u59cb\u70b9-&gt;\u5404\u4e2astate-&gt;state\u4e4b\u95f4\u8fc7\u7a0b\u3001\u64cd\u4f5c-&gt;\u7ec8\u6b62\u70b9 +  \u5f53\u524d\u754c\u9762\u7528\u6237\u53ef\u4ee5\u770b\u89c1\u4ec0\u4e48\u5185\u5bb9 \u4e3b\u8981\u529f\u80fd\u9009\u9879 \u53ef\u4e0d\u5199</p> <p>https://sparxsystems.com/resources/tutorials/uml2/state-diagram.html  </p> <p> </p> <p>Scenario</p> <p>The door can be in one of three states: \"Opened\", \"Closed\" or \"Locked\". It can respond to the events Open, Close, Lock and Unlock. Notice that not all events are valid in all states; for example, if a door is opened, you cannot lock it until you close it. Also notice that a state transition can have a guard condition attached: if the door is Opened, it can only respond to the Close event if the condition doorWay-&gt;isEmpty is fulfilled\u95e8\u53ef\u4ee5\u5904\u4e8e\u4ee5\u4e0b\u4e09\u79cd\u72b6\u6001\u4e4b\u4e00\uff1a\u201c\u6253\u5f00\u201d\u3001\u201c\u5173\u95ed\u201d\u6216\u201c\u9501\u5b9a\u201d\u3002\u5b83\u53ef\u4ee5\u54cd\u5e94\u6253\u5f00\u3001\u5173\u95ed\u3001\u9501\u5b9a\u548c\u89e3\u9501\u4e8b\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u5e76\u975e\u6240\u6709\u4e8b\u4ef6\u5728\u6240\u6709\u72b6\u6001\u4e0b\u90fd\u6709\u6548\uff1b\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u6247\u95e8\u662f\u6253\u5f00\u7684\uff0c\u5728\u60a8\u5173\u95ed\u5b83\u4e4b\u524d\u60a8\u65e0\u6cd5\u9501\u5b9a\u5b83\u3002\u53e6\u8bf7\u6ce8\u610f\uff0c\u72b6\u6001\u8f6c\u6362\u53ef\u4ee5\u9644\u52a0\u4e00\u4e2a\u8b66\u6212\u6761\u4ef6\uff1a\u5982\u679c\u95e8\u5df2\u6253\u5f00\uff0c\u5219\u53ea\u6709\u5728\u6ee1\u8db3 doorWay-&gt;isEmpty \u6761\u4ef6\u65f6\u624d\u80fd\u54cd\u5e94\u5173\u95ed\u4e8b\u4ef6 </p> <p> </p>"},{"location":"course_notes/fit5136/#fit5136-week-6","title":"FIT5136 WEEK 6","text":""},{"location":"course_notes/fit5136/#weekly-quiz_2","title":"WEEKLY QUIZ","text":"<p>content in  week6 FLUX.pdf</p>"},{"location":"course_notes/fit5136/#fit5136-week-7","title":"FIT5136 WEEK 7","text":""},{"location":"course_notes/fit5136/#weekly-quiz_3","title":"WEEKLY QUIZ","text":""},{"location":"course_notes/fit5136/#fit5136-week-8-se-code-of-ethics","title":"FIT5136 WEEK 8 SE Code of Ethics","text":""},{"location":"course_notes/fit5136/#weekly-quiz_4","title":"WEEKLY QUIZ","text":""},{"location":"course_notes/fit5136/#software-engineering-code-of-ethic","title":"==\u91cd\u70b9software Engineering Code of Ethic==","text":"<ul> <li>\u627e\u5230\u51e0\u79cd\u4eba</li> <li>\u5b9a\u4e49\u6bcf\u4e2a\u4eba\u7684\u884c\u4e3a</li> <li>ethical ? professional? legal?</li> <li>if good  code of ethic</li> <li>if bad where bad and violate which aspect</li> <li>each action evaluate within 2 code</li> </ul> <p>ACM SE ethics code https://ethics.acm.org/code-of-ethics/software-engineering-code/ to address the complexity of  moral issues \u89e3\u51b3\u9053\u5fb7\u95ee\u9898\u7684\u590d\u6742\u6027 </p> <ol> <li>==PUBLIC== Software engineers shall act consistently  with the ==public interest== \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u884c\u4e3a\u5e94\u7b26\u5408\u516c\u5171\u5229\u76ca</li> <li>==CLIENT AND EMPLOYER== Software engineers shall act  in a manner that is in the ==best interests of their client and  employer== consistent with the public interest \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u884c\u4e3a\u65b9\u5f0f\u5e94\u7b26\u5408\u5176\u5ba2\u6237\u548c\u96c7\u4e3b\u7684\u6700\u5927\u5229\u76ca\uff0c\u5e76\u7b26\u5408\u516c\u5171\u5229\u76ca</li> <li>==PRODUCT== Software engineers shall ensure that their products and related modifications ==meet the highest professional standards possible==. In particular, software engineers shall, as appropriate \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u786e\u4fdd\u4ed6\u4eec\u7684\u4ea7\u54c1\u548c\u76f8\u5173\u4fee\u6539\u7b26\u5408\u6700\u9ad8\u7684\u4e13\u4e1a\u6807\u51c6\u3002\u7279\u522b\u662f\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u914c\u60c5</li> <li>==JUDGEMENT== Software engineers shall ==maintain integrity and independence in their professional judgment.== In particular, software engineers shall, as appropriate \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u4fdd\u6301\u5176\u4e13\u4e1a\u5224\u65ad\u7684\u5b8c\u6574\u6027\u548c\u72ec\u7acb\u6027\u3002\u7279\u522b\u662f\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u914c\u60c5</li> <li>==MANAGEMENT== Software engineering managers and leaders shall subscribe to and promote an ==ethical approach to the management of software development and maintenance== . In particular, those managing or leading software engineers shall, as appropriate \u8f6f\u4ef6\u5de5\u7a0b\u7ecf\u7406\u548c\u9886\u5bfc\u8005\u5e94\u8d5e\u540c\u5e76\u63d0\u5021\u4ee5\u5408\u4e4e\u9053\u5fb7\u7684\u65b9\u5f0f\u7ba1\u7406\u8f6f\u4ef6\u5f00\u53d1\u548c\u7ef4\u62a4\u3002\u7279\u522b\u662f\uff0c\u90a3\u4e9b\u7ba1\u7406\u6216\u9886\u5bfc\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u4eba\u5e94\u914c\u60c5</li> <li>==PROFESSION== Software engineers shall ==advance the integrity and reputation of the profession consistent== with the public interest. In particular, software engineers shall, as appropriate: \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u4fc3\u8fdb\u7b26\u5408\u516c\u5171\u5229\u76ca\u7684\u804c\u4e1a\u8bda\u4fe1\u548c\u58f0\u8a89\u3002\u7279\u522b\u662f\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u914c\u60c5\uff1a</li> <li>==COLLEAGUES== Software engineers shall ==be fair to and supportive of their colleagues.== In particular, software engineers shall, as appropriate: \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u516c\u5e73\u5bf9\u5f85\u5e76\u652f\u6301\u4ed6\u4eec\u7684\u540c\u4e8b\u3002\u7279\u522b\u662f\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u914c\u60c5\uff1a</li> <li>==SELF== Software engineers shall participate in lifelong learning regarding the practice of their profession and shall promote an ethical approach to the practice of the profession. In particular, software engineers shall continually endeavor to: \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u53c2\u4e0e\u6709\u5173\u5176\u804c\u4e1a\u5b9e\u8df5\u7684\u7ec8\u8eab\u5b66\u4e60\uff0c\u5e76\u5e94\u4fc3\u8fdb\u804c\u4e1a\u5b9e\u8df5\u7684\u9053\u5fb7\u65b9\u6cd5\u3002\u7279\u522b\u662f\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u4e0d\u65ad\u52aa\u529b\uff1a</li> </ol> <p></p>"},{"location":"course_notes/fit5136/#public","title":"PUBLIC","text":"<p>Software engineers shall act consistently  with the ==public interest== \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u884c\u4e3a\u5e94\u7b26\u5408\u516c\u5171\u5229\u76ca + \u627f\u62c5\u8d23\u4efb + \u5e73\u8861\u5229\u76ca + \u5b89\u5168\u5408\u89c4 + \u516c\u793a\u5371\u5bb3 + \u89e3\u51b3\u516c\u4f17\u95ee\u9898 + \u516c\u5f00\u58f0\u660e + \u6b8b\u969c\u652f\u6301 + \u516c\u76ca\u4e8b\u4e1a</p>"},{"location":"course_notes/fit5136/#client-and-employer","title":"CLIENT AND EMPLOYER","text":"<p>Software engineers shall act  in a manner that is in the best interests of their client and  employer consistent with the public interest \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u884c\u4e3a\u65b9\u5f0f\u5e94\u7b26\u5408\u5176\u5ba2\u6237\u548c\u96c7\u4e3b\u7684\u6700\u5927\u5229\u76ca\uff0c\u5e76\u7b26\u5408\u516c\u5171\u5229\u76ca + \u7aed\u5c3d\u6240\u80fd \u8bda\u5b9e\u516c\u5f00 + \u4e0d\u7528 \u76d7\u7248\u8f6f\u4ef6 + \u6388\u6743\u4f7f\u7528\u96c7\u4e3b\u8d22\u4ea7 + \u6587\u4ef6\u6279\u51c6 + \u4fdd\u5bc6 + \u6536\u96c6\u8bc1\u636e + \u8bc6\u522b\u95ee\u9898 + \u4e0d\u53c2\u4e0e\u540c\u4e1a\u7ade\u4e89 + \u4e0d\u4f7f\u7528\u4e0d\u5f53\u5229\u76ca</p>"},{"location":"course_notes/fit5136/#product","title":"Product","text":"<p>Software engineers shall ensure that their products and related modifications meet the highest professional standards possible. In particular, software engineers shall, as appropriate \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u786e\u4fdd\u4ed6\u4eec\u7684\u4ea7\u54c1\u548c\u76f8\u5173\u4fee\u6539\u7b26\u5408\u6700\u9ad8\u7684\u4e13\u4e1a\u6807\u51c6\u3002\u7279\u522b\u662f\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u914c\u60c5 + \u4fdd\u8d28\u4fdd\u65f6 + \u5b8c\u6210\u76ee\u6807 + \u8bc6\u522b\u89e3\u51b3\u95ee\u9898 + \u57f9\u8bad\u80dc\u4efb + \u5408\u9002\u65b9\u6cd5 + \u9075\u5b88\u4e13\u4e1a\u6807\u51c6 + \u7406\u89e3\u8f6f\u4ef6\u89c4\u8303 + \u786e\u4fdd\u4f7f\u7528\u8f6f\u4ef6\u89c4\u8303 + \u9879\u76ee\u5b9a\u91cf\u8bc4\u4f30 + \u5145\u5206\u6d4b\u8bd5\u5ba1\u67e5 + \u51c6\u5907\u6587\u6863\u89e3\u51b3\u65b9\u6848 + \u5c0a\u91cd\u9690\u79c1 + \u6570\u636e\u6388\u6743\u4f7f\u7528 + \u6570\u636e\u5b8c\u6574\u6709\u6548</p>"},{"location":"course_notes/fit5136/#judgement","title":"Judgement","text":"<p>Software engineers shall maintain integrity and independence in their professional judgment. In particular, software engineers shall, as appropriate \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u4fdd\u6301\u5176\u4e13\u4e1a\u5224\u65ad\u7684\u5b8c\u6574\u6027\u548c\u72ec\u7acb\u6027\u3002\u7279\u522b\u662f\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u914c\u60c5 + \u8c03\u6574\u6280\u672f\u5224\u65ad + \u53ea\u7b7e\u7f72\u53d7\u76d1\u7763\u6587\u4ef6 + \u8bc4\u4f30\u6587\u6863\u5ba2\u89c2 + \u4e0d\u5f97 \u8d22\u52a1\u4e0d\u5f53 + \u62ab\u9732\u5229\u76ca\u51b2\u7a81</p>"},{"location":"course_notes/fit5136/#management","title":"Management","text":"<p>Software engineering managers and leaders shall subscribe to and promote an ethical approach to the management of software development and maintenance . In particular, those managing or leading software engineers shall, as appropriate \u8f6f\u4ef6\u5de5\u7a0b\u7ecf\u7406\u548c\u9886\u5bfc\u8005\u5e94\u8d5e\u540c\u5e76\u63d0\u5021\u4ee5\u5408\u4e4e\u9053\u5fb7\u7684\u65b9\u5f0f\u7ba1\u7406\u8f6f\u4ef6\u5f00\u53d1\u548c\u7ef4\u62a4\u3002\u7279\u522b\u662f\uff0c\u90a3\u4e9b\u7ba1\u7406\u6216\u9886\u5bfc\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u4eba\u5e94\u914c\u60c5 + \u786e\u4fdd\u826f\u597d\u7ba1\u7406 + \u4e86\u89e3\u5f00\u53d1\u6807\u51c6 + \u4fdd\u5bc6 + \u529b\u6240\u80fd\u53ca + \u9879\u76ee\u8bc4\u4f30 + \u62db\u8058\u5408\u9002\u4eba\u624d + \u85aa\u916c\u5408\u7406 + \u63d0\u62d4\u4eba\u624d + \u4ea7\u6743\u6240\u6709\u660e\u786e + \u89c4\u5b9a\u5ba1\u7406\u6307\u63a7 + \u8a00\u884c\u4e00\u81f4</p>"},{"location":"course_notes/fit5136/#profession","title":"PROFESSION","text":"<p>Software engineers shall advance the integrity and reputation of the profession consistent with the public interest. In particular, software engineers shall, as appropriate: \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u4fc3\u8fdb\u7b26\u5408\u516c\u5171\u5229\u76ca\u7684\u804c\u4e1a\u8bda\u4fe1\u548c\u58f0\u8a89\u3002\u7279\u522b\u662f\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u914c\u60c5\uff1a + \u6709\u9053\u5fb7\u7684\u73af\u5883 + \u4fc3\u8fdb\u4e86\u89e3\u8f6f\u4ef6 + \u5171\u4eab\u8f6f\u4ef6\u77e5\u8bc6 + \u9075\u5b88\u672c\u5b88\u5219 + \u81ea\u6211\u63d0\u5347\u2018 + \u9075\u5b88\u6cd5\u5f8b + \u8bda\u5b9e\u5b88\u4fe1 + \u7ea0\u6b63\u9519\u8bef + \u907f\u514d\u5229\u76ca\u51b2\u7a81</p>"},{"location":"course_notes/fit5136/#colleagues","title":"Colleagues","text":"<p>Software engineers shall be fair to and supportive of their colleagues. In particular, software engineers shall, as appropriate: \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u516c\u5e73\u5bf9\u5f85\u5e76\u652f\u6301\u4ed6\u4eec\u7684\u540c\u4e8b\u3002\u7279\u522b\u662f\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u914c\u60c5\uff1a + \u9f13\u52b1\u540c\u4e8b\u9075\u5b88 + \u534f\u52a9\u53d1\u5c55 + \u5145\u5206\u4fe1\u4efb + \u5ba2\u89c2\u5766\u7387 + \u516c\u5e73 + \u4e0d\u8fc7\u5ea6\u5e72\u9884 + \u5f81\u6c42\u610f\u89c1</p>"},{"location":"course_notes/fit5136/#self","title":"Self","text":"<p>Software engineers shall participate in lifelong learning regarding the practice of their profession and shall promote an ethical approach to the practice of the profession. In particular, software engineers shall continually endeavour to: \u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u53c2\u4e0e\u6709\u5173\u5176\u804c\u4e1a\u5b9e\u8df5\u7684\u7ec8\u8eab\u5b66\u4e60\uff0c\u5e76\u5e94\u4fc3\u8fdb\u804c\u4e1a\u5b9e\u8df5\u7684\u9053\u5fb7\u65b9\u6cd5\u3002\u7279\u522b\u662f\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5e94\u4e0d\u65ad\u52aa\u529b\uff1a + \u4e86\u89e3\u89c4\u8303 + \u63d0\u9ad8\u5f00\u53d1\u8d28\u91cf + \u6587\u6863\u7ba1\u7406 + \u6cd5\u5f8b\u6cd5\u89c4 + \u516c\u5e73\u516c\u6b63</p>"},{"location":"course_notes/fit5136/#ip-copyright","title":"IP Copyright","text":"<p>IP + Intellectual property (IP) refers to creations of the mind: inventions, literary and artistic works, and symbols, names, images, and designs used in commerce\u77e5\u8bc6\u4ea7\u6743 (IP) \u662f\u6307\u5fc3\u7075\u7684\u521b\u9020\uff1a\u53d1\u660e\u3001\u6587\u5b66\u548c\u827a\u672f\u4f5c\u54c1\u4ee5\u53ca\u5546\u4e1a\u4e2d\u4f7f\u7528\u7684\u7b26\u53f7\u3001\u540d\u79f0\u3001\u56fe\u50cf\u548c\u8bbe\u8ba1 + Give authors and inventors rights for a limited time  \u6388\u4e88\u4f5c\u8005\u548c\u53d1\u660e\u8005\u5728\u6709\u9650\u65f6\u95f4\u5185\u7684\u6743\u5229 + 4 Ways to Protect Intellectual Property Trade Secrets; Trademarks and Service Marks; Patents; Copyrights  \u4fdd\u62a4\u77e5\u8bc6\u4ea7\u6743\u7684\u65b9\u6cd5 \u5546\u4e1a\u79d8\u5bc6 \u5546\u6807\u548c\u670d\u52a1\u6807\u5fd7  \u4e13\u5229 \u7248\u6743 </p> <p>Copyright + Copyright law secures for the owner of a  creative work the exclusive right to control who  can make copies, or make works derived from  the original work\u7248\u6743\u6cd5\u786e\u4fdd\u521b\u610f\u4f5c\u54c1\u7684\u6240\u6709\u8005\u62e5\u6709\u63a7\u5236\u8c01\u53ef\u4ee5\u590d\u5236\u6216\u5236\u4f5c\u6e90\u81ea\u539f\u59cb\u4f5c\u54c1\u7684\u4f5c\u54c1\u7684\u4e13\u6709\u6743 Protect specific expressions of ideas, not ideas  themselves \u4fdd\u62a4\u601d\u60f3\u7684\u5177\u4f53\u8868\u8fbe\uff0c\u800c\u4e0d\u662f\u601d\u60f3\u672c\u8eab</p> <p>\u77e5\u8bc6\u4ea7\u6743\u662f\u601d\u60f3\u7684\u8868\u8fbe\uff0c\u800c\u4e0d\u662f\u601d\u60f3\u672c\u8eab\u3002 + \u8f6f\u4ef6\u8457\u4f5c\u6743 + \u8f6f\u4ef6\u4e13\u5229 + \u5f00\u6e90\u8f6f\u4ef6\uff08Copyleft\uff09</p>"},{"location":"course_notes/fit5136/#fit5136-week-10-quality-and-testing","title":"FIT5136 WEEK 10 Quality and Testing","text":""},{"location":"course_notes/fit5136/#weekly-quiz_5","title":"WEEKLY QUIZ","text":""},{"location":"course_notes/fit5136/#quality-assurance-qa-qa","title":"quality assurance (QA) \u8d28\u91cf\u4fdd\u8bc1 (QA)","text":"<ul> <li>Human Reviews -   \u4eba\u5de5\u5ba1\u6838\uff08\u6f14\u7ec3Walkthroughs\u548c\u68c0\u67e5Inspections\uff0cNon-execution-based\uff09</li> <li>Proving \uff08\u6b63\u5f0f\u65b9\u5f0f\uff0cNon-execution-based\uff09</li> <li>Software Testing -   \u8f6f\u4ef6\u6d4b\u8bd5\uff08Execution-based\uff09</li> </ul>"},{"location":"course_notes/fit5136/#week-11-software-testing","title":"==\u91cd\u70b9WEEK 11 Software Testing==","text":"<ul> <li>Test Workflow should cover testings during every workflow\u6d4b\u8bd5\u8d2f\u7a7f\u6574\u4e2a\u9636\u6bb5</li> <li>Positive and Negative Testing</li> <li>Unit Testing</li> <li>Test case selection</li> <li>Black-box testing techniques (functional) Ignore the code, use the specs to select test case \uff08\u529f\u80fd\u6027\uff09\u2013 \u5ffd\u7565\u4ee3\u7801\uff0c\u4f7f\u7528\u89c4\u8303\u9009\u62e9\u6d4b\u8bd5\u7528\u4f8b</li> <li>Glass-box testing technique (statement, branch, path)   Ignore the specs, use the code to select test cases (statement, branch, path) \u2013 \u5ffd\u7565\u89c4\u8303\uff0c\u4f7f\u7528\u4ee3\u7801\u9009\u62e9\u6d4b\u8bd5\u7528\u4f8b</li> </ul>"},{"location":"course_notes/fit5136/#positive-and-negative-test","title":"Positive and Negative Test","text":"<ul> <li>Positive testing determines that your application works as  expected. If an error is encountered during positive testing, the   test fails \u6b63\u9762\u6d4b\u8bd5\u786e\u5b9a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6309\u9884\u671f\u5de5\u4f5c\u3002\u5982\u679c\u5728\u6b63\u9762\u6d4b\u8bd5\u671f\u95f4\u9047\u5230\u9519\u8bef\uff0c\u5219\u6d4b\u8bd5\u5931\u8d25</li> <li>Negative testing ensures that your application can gracefully handle invalid input or unexpected user behavior The purpose of negative testing is to detect such situations  and prevent applications from crashing.\u8d1f\u6d4b\u8bd5\u786e\u4fdd\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f18\u96c5\u5730\u5904\u7406\u65e0\u6548\u8f93\u5165\u6216\u610f\u5916\u7684\u7528\u6237\u884c\u4e3a \u8d1f\u9762\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u68c0\u6d4b\u6b64\u7c7b\u60c5\u51b5\u5e76\u9632\u6b62\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\u3002</li> </ul>"},{"location":"course_notes/fit5136/#black-box-testing","title":"Black Box Testing \u9ed1\u76d2\u6d4b\u8bd5","text":"<ul> <li>We base the test data on the functionality of the code artifacts \u5c06\u6d4b\u8bd5\u6570\u636e\u57fa\u4e8e\u4ee3\u7801\u5de5\u4ef6\u7684\u529f\u80fd</li> <li>Each item of functionality or function is identified \u8bc6\u522b\u6bcf\u4e2a\u529f\u80fd\u6216\u529f\u80fd\u9879</li> <li>Test data are devised to test each (lower-level) function separately \u8bbe\u8ba1\u6d4b\u8bd5\u6570\u636e\u4ee5\u5206\u522b\u6d4b\u8bd5\u6bcf\u4e2a\uff08\u4f4e\u7ea7\uff09\u529f\u80fd</li> <li>Then, higher-level functions composed of these lower-level functions are tested \u7136\u540e\uff0c\u7531\u8fd9\u4e9b\u4f4e\u7ea7\u529f\u80fd\u7ec4\u6210\u7684\u9ad8\u7ea7\u529f\u80fd\u88ab\u6d4b\u8bd5</li> </ul>"},{"location":"course_notes/fit5136/#white-box-testing-glass-box-testing-structural-testing","title":"White Box Testing \u767d\u76d2\u6d4b\u8bd5 (Glass Box Testing / Structural testing)","text":"<ul> <li>Code Flow Graphs help in finding the correct coverage manually \u4ee3\u7801\u6d41\u56fe\u6709\u52a9\u4e8e\u624b\u52a8\u67e5\u627e\u6b63\u786e\u7684\u8986\u76d6\u7387 </li> <li>Issues (Coverage): \u2022 Statement coverage \u2022 Branch coverage \u2022 Path coverage \u2022 All-definition-use path coverage \u95ee\u9898\uff08\u8986\u76d6\u7387\uff09\uff1a \u2022 \u8bed\u53e5\u8986\u76d6\u7387 \u2022 \u5206\u652f\u8986\u76d6\u7387 \u2022 \u8def\u5f84\u8986\u76d6\u7387 \u2022 \u5168\u5b9a\u4e49\u4f7f\u7528\u8def\u5f84\u8986\u76d6\u7387</li> </ul>"},{"location":"course_notes/fit5136/#statement-coverage","title":"Statement coverage","text":"<ul> <li>Running a set of test cases in which every statement is executed at least once \u8fd0\u884c\u4e00\u7ec4\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5176\u4e2d\u6bcf\u6761\u8bed\u53e5\u81f3\u5c11\u6267\u884c\u4e00\u6b21</li> <li>A CASE tool needed to keep track \u9700\u8981\u4e00\u4e2a CASE \u5de5\u5177\u6765\u8ddf\u8e2a</li> <li>weakness Both statements can be executed  without the fault showing up \u4e24\u4e2a\u8bed\u53e5\u90fd\u53ef\u4ee5\u6267\u884c\u800c\u4e0d\u4f1a\u51fa\u73b0\u9519\u8bef</li> <li></li> </ul>"},{"location":"course_notes/fit5136/#branch-coverage","title":"Branch Coverage","text":"<ul> <li>Running a set of test cases in which every branch is executed at least once (as well as all statements) \u8fd0\u884c\u4e00\u7ec4\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5206\u652f\u81f3\u5c11\u6267\u884c\u4e00\u6b21\uff08\u4ee5\u53ca\u6240\u6709\u8bed\u53e5\uff09</li> </ul>"},{"location":"course_notes/fit5136/#path-coverage","title":"path Coverage","text":"<ul> <li>Running a set of test cases in which every path is executed at least once (as well as all statements) \u8fd0\u884c\u4e00\u7ec4\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5176\u4e2d\u6bcf\u6761\u8def\u5f84\u81f3\u5c11\u6267\u884c\u4e00\u6b21\uff08\u4ee5\u53ca\u6240\u6709\u8bed\u53e5</li> <li>Problem: The number of paths may be very large eg. for loops \u8def\u5f84\u7684\u6570\u91cf\u53ef\u80fd\u975e\u5e38\u5927\u2014\u2014\u4f8b\u5982\u3002 for \u5faa\u73af</li> </ul>"},{"location":"course_notes/fit5136/#test-compare","title":"test compare","text":"<pre><code>public int returnInput(int input, boolean condition1, boolean condition2, boolean condition3)\n{ \n    int x = input;\n    int y = 0;\n    if (condition1) x++;\n    if (condition2) x--;\n    if (condition3) y=x;\n    return y;\n}\n</code></pre> <p>Branch coverage</p> <p>Goal: cover 100% of branches Two test case is needed Test case 1: returnInput(x, true, true, true) Test case 2: returnInput(x, false, false, false) 100% statement covered 100% of branches covered only two paths</p> <p>Statement coverage</p> <p>Goal: execute every statement One test case is needed Test case 1: returnInput(x, true, true, true) 100% statement covered only half of branches only one path </p> <p>Path Coverage</p> <p>Goal: to cover 100% of paths 8 test cases are needed  100% statement covered 100% of branches covered 100% of paths covered</p>"},{"location":"course_notes/fit5136/#fit5136-week-12","title":"FIT5136 WEEK 12","text":""},{"location":"course_notes/fit5136/#weekly-quiz_6","title":"WEEKLY QUIZ","text":""},{"location":"course_notes/fit5136/#exam-note","title":"Exam note","text":"<ul> <li>\u5c3d\u7ba1\u90e8\u5206\u5f00\u5377\u8003\u8bd5\uff0c \u4f46\u662f\u57fa\u672c\u6ca1\u65f6\u95f4\u770b\u4e66\uff01 \uff08\u63d0\u524d\u590d\u4e60\u5f88\u91cd\u8981\uff09</li> <li>\u8003\u8bd5\u65f6\u95f4\uff1a 2\u5c0f\u65f610\u5206\u949f</li> <li>\u9700\u8981\u7528\u7b14\u753b\u56fe\uff0c \u56e0\u6b64\u5e26\u597d\u94c5\u7b14\u548c\u6a61\u76ae</li> <li>\u9898\u76ee\u7c7b\u578b\uff1a</li> <li>(10 pts) function /no + user story + acceptance criteria</li> <li>(20 pts) initial class diagram</li> <li>(20 pts) sequence diagram</li> <li>(10 pts) UML / state chart / unifed</li> <li>(15 pts) extra  (test / ip copyright)</li> <li>(25 pts) ethics</li> <li>\u6ca1\u6709Programming \u9898\u76ee\uff0c\u6ca1\u6709 ER-digram for class diagram</li> <li>\u9664\u4e86\u4f5c\u4e1a\u76f8\u5173\u7684\u9898\u76ee\uff0c\u53ef\u80fd\u8fd8\u670910\u5206\u4ee5\u5185\u7684\u975e\u4f5c\u4e1a\u5185\u5bb9\uff0c\u6bd4\u5982\u8bf4IP\u7b49</li> </ul>"},{"location":"course_notes/fit5136/#sample-exam-and-question","title":"Sample exam and question","text":""},{"location":"course_notes/fit5136/#question-1-workflow","title":"question 1 workflow","text":""},{"location":"course_notes/fit5136/#scenario_1","title":"scenario","text":"<p>After graduation, three IT students decided to start a software company called SmartComputing. You had just been hired as a software engineer by the founders. On your first day in the new job you asked the Chief Technology Officer (CTO) about SmartComputing\u2019s software engineering process. She replied: We follow the Unified Process to make sure we develop the right product in the right way. The process consists of five distinct workflows. We complete all the tasks and confirm all the documentations in each workflow before we move on to the next workflow. (waterfall plan driven\u53ea\u6709\u7eb5\u5411\u6ca1\u6709 \u6a2a\u5411)</p> <p>The first workflow is the Requirements Workflow, where we brainstorm ideas about features that our customers will love to have. The next workflow is the Analysis Workflow. This involves analysing the problem domain more deeply and describing the requirements in the kind of exacting detail that developers need. Typically, in this workflow we will produce conceptual class diagrams,detailed use case scenarios, interaction diagrams and statecharts. Once the Analysis Workflow is completed, we begin the Design Workflow, where we refine the conceptual class diagram into something more concrete, producing a detailed class diagram. The next workflow of the process is the Implementation Workflow. In this workflow, we write the code to implement the detailed class diagram produced in the previous workflow. Finally, we will have the Test Workflow, where we test our program to ensure that the system works correctly. Based on what you have learned in FIT5136, analyse and critique the company\u2019s software engineering process described above by the CTO</p>"},{"location":"course_notes/fit5136/#1a-workflow","title":"1a workflow","text":"<p>==\u5fc5\u8003Workflows== The Unified Process has two dimensions:  The vertical process that are more technical oriented (Requirement, Analysis, Design, Implementation, Testing,  The horizontal processes that are more business oriented (Inception, Elaboration, Construction and Transition). The vertical process is similar to the company\u2019s description of the \u201cUnified process\u201d (incrementation) The company does not focus on horizontal process at all (Iterations among workflows) which are more business oriented.The main thing that makes unified process is the combination of these two dimensions-iteration and incrementation. From the CTO description, the company process is therefore too similar to traditional waterfall model \u2013step by step \u2013 one workflow after another is like one phase after another. From the description, the company focuses on testing at the end of the process. Testing should not just be done at the end for the Unified Process! Testing should also be done in every workflow \u2013 the entire process! Test Workflow should cover testings during every workflow \u2013 inspection, human reviews and checking for traceability of artefacts There should also be more testing of program at the end like integration testing, system testing and acceptance testing in the final testing  </p>"},{"location":"course_notes/fit5136/#question-2-use-case-diagram-use-case-scenario","title":"question 2 use case diagram + use case scenario","text":""},{"location":"course_notes/fit5136/#scenario_2","title":"scenario","text":"<p>You then asked the CTO about the latest project the company is undertaking. She mentioned that the project is to develop an on-line learning platform called Poodle 2 system for the university. The first task you, as the software engineer, are assigned for ==Poodle 2== is the analysis of the functionality of adding students to the system: ==An administrator is able to add a student enrolled in a unit==. An ==administrator can also list the students added in the last 24 hours== and also ==delete a student if it was added by mistake== (a) Draw a UML use case diagram for this functionality. (b) On the next page is a detailed description of the normal scenario for the \u201cAdd Student\u201d use case, with no exception conditions. ==Write three exception conditions, including reasonable actions to be taken==. </p>"},{"location":"course_notes/fit5136/#2a-uml-use-case-diagram","title":"2a UML use case diagram","text":"<p>==\u91cd\u70b9USE CASE DIAGRAMS== admin is initiator so in the left </p>"},{"location":"course_notes/fit5136/#2b-use-case-scenario","title":"2b use case scenario","text":"<p>Use case scenario Question 2 (b) Solutions (reasonable exceptions include (but not limited to): + 2.1 If the administrator enters the wrong id, then System displays message to try again + 2.1 If the administrator enters the wrong password, then System displays message to try again. + 3.1 If the student is not found, go back to the main page. + 3.1 If the id entered is not a student, go back to the main page. + 4.1 If the unit is not found, go back to the main page. + 5.1 If the student cannot be added because he is already enrolled in the unit, go back to the main page. + 6.1 Administrator hits cancel, go back to the main page</p>"},{"location":"course_notes/fit5136/#question-3-noun-extractions-initial-class-diagram","title":"question 3 noun extractions +  initial class diagram","text":""},{"location":"course_notes/fit5136/#scenario_3","title":"scenario","text":"<p>The CTO provides more description about the Poodle 2 project below: The ==university== that we graduated from has a very bad ==on-line learning platform called Poodle==. We were asked to improve and extend the current system. I think we were successful in getting the project because three of us were former students and we had used their system before. Based on my experience, I can confirm that the system is really bad and definitely needs improvements. We ==call this project Poodle 2.== Every user of Poodle 2 is identified by ==an id and a name==. To use the system, every user will need a ==password== to log in. In Poodle 2, ==administrators== can ==create units==. Each ==unit is identified by a unit code and a unit name==. ==Teaching staff== can ==create contents in units== they teach and each teaching staff can teach up to ==four unit==s. ==Students have access to the contents as long as they are enrolled in the unit==. Every student can enrol in up to ==four units==. An ==administrator can add a student to the unit== if the student is officially enrolled in the unit. An ==administrator can also delete a student from the unit if the student is no longer enrolled.== Students are allowed to ==comment on units and contents in Poodle 2==. Comments on a unit and comments on its contents can ==only be created and viewed by students currently enrolled in the unit and staff teaching the unit==.  ==Users given authorisation can post replies to a comment.== A  ==lecturer of a unit or an administrator can remove a comment== if the comment is deemed inappropriate, irrelevant or not useful in general Based on the CTO\u2019s description of the Poodle 2 project and the use case scenario in Question 2, you are tasked  to produce an initial class diagram for the project</p>"},{"location":"course_notes/fit5136/#3a-noun-extractions","title":"3a noun extractions","text":"<p>Classification of identified nouns \u5df2\u8bc6\u522b\u540d\u8bcd\u7684\u5206\u7c7b</p> <p>(a) Perform noun extractions and build a dictionary of abstractions for the system. Use it to decide on your candidate classes by assessing each abstraction and considering whether it:  lies outside the problem boundary and may therefore be ignored,  is a candidate entity class,  or is likely to be a simple attribute of a class</p> <p>Outside the problem boundary and may therefore be ignored:  + platform, experience, Poodle 2 (okay to make this an entity class), project, system, Poodle, Improvement</p> <p>Candidate entity classes: + University, Unit, Administrator, User, Teaching Staff, Student, Comment, Lecturer, Content</p> <p>Attributes:  + id, name, password, unit code, unit name, replies (reply), authorisation.</p>"},{"location":"course_notes/fit5136/#3b-initial-uml-class-diagram","title":"3b initial UML class diagram","text":"<p>==\u91cd\u70b9Initial Class Diagram==</p> <p>(b) Develop an initial UML class diagram for the system, with the relevant classes and attributes resulting from your dictionary of abstractions. Concentrate on modelling the problem domain rather than any boundary or control classes. Make sure you:  include appropriate attributes for the classes  describe the relationship between classes using generalization, association, aggregation and composition (as appropriate)   indicate the multiplicity (cardinality) of the relationships properly.    DO NOT include responsibilities or operations. You do not have all the information at this point to do so</p> <p></p>"},{"location":"course_notes/fit5136/#question-4","title":"question 4","text":"<p>Based on the initial class diagram you have produced for Question 3 and the use case scenario in Question 2, produce a sequence diagram to show the messages exchanged between objects needed to carry out the Add Student use case scenario</p>"},{"location":"course_notes/fit5136/#4a-sequence-diagram","title":"4a sequence diagram","text":"<p>==\u91cd\u70b9Sequence_diagram== </p>"},{"location":"course_notes/fit5136/#question-5-statechart-diagram","title":"question 5 statechart diagram","text":""},{"location":"course_notes/fit5136/#scenario_4","title":"scenario","text":"<p>After some discussions inside the company, it was decided that the commenting feature should be enhanced to make it more useful. An informal description of the new feature was documented below. \u201cA ==user can create comments about any content== in Poodle 2. The comment is ==publicly visible by default==. However, the ==author of the comment can subsequently make the comment visible only to a group of users==. A ==comment can be reported by a user== if she deems it to be inappropriate, irrelevant or not useful. Once reported, a ==comment can be deleted by a member of the teaching staff or a system administrator.== An accidentally ==deleted comment can be subsequently restored by a member of the teaching staff or an administrator==. A ==comment can also be promoted by a member of the teaching staff== if it is deemed to be highly informative, relevant or useful. A ==promoted comment cannot be reported, nor can it be deleted.== However, if the ==content itself is deleted, all comments associated with this content will be permanently deleted.==\u201d</p>"},{"location":"course_notes/fit5136/#5a-state-chart-diagram","title":"5a state chart diagram","text":"<p>==\u91cd\u70b9\u9009\u8003UML state chart==</p> <p>Develop a UML statechart diagram as a precise representation of the above informal specification of the enhanced commenting feature. When there is ambiguity in the informal specification, clarify it by stating your assumptions explicitly (separately from the statechart diagram)</p> <p></p>"},{"location":"course_notes/fit5136/#question-6-etheic","title":"question 6 etheic","text":"<p>Having completed a few features with tight schedules, your talent had finally been recognised by the founders of SmartComputing with good recommendations from your team leader. One week before the project deadline, the ==Chief Technical Officer (CTO)== called ==your team leader== into her office and showed him a piece of functionality implemented in the latest version of a competitor\u2019s software, Noodle. The CTO said, \u201cThis is a feature we must have! Please ask the team to implement it by the end of the week so that we can demo the feature to the university.\u201d You were asked by your team leader to start designing it. After thinking for a couple of hours, you came to the conclusion that Poodle 2 was so different from Noodle that this feature simply didn\u2019t make sense for Poodle 2. Moreover, it was not only difficult to implement, it would also make the system less reliable. ==You went back to the team leader to discuss these issues with him. The team leader then had a meeting with the CTO and explained your concerns to her (good).== After hearing the team leader\u2019s explanation, the CTO was still adamant about including the feature in Poodle 2. To convince the team leader that it was easy to implement, she showed him the ==source code of Noodle, which is free and open-source==, and asked him to ==\u201cjust copy their code then you\u2019re done!\u201d(bad illegal)== The team ==leader went ahead, followed her suggestions and completed the implementation on time for the demo==</p>"},{"location":"course_notes/fit5136/#6a-ethical","title":"6a ethical","text":"<p>==\u91cd\u70b9software Engineering Code of Ethic==</p> <p>What are the ethical and professional issues that arise with the behaviour of the CTO and the team leader in this situation? How would you evaluate their behaviours? In your answer, you must refer to the applicable parts of the Software Engineering code of ethics</p> <p>Team leader (and I) did the right thing initially because we try to raise the initial concerns with the CTO. We tried to adhere to the following clauses: + 2.06 Identify, document, collect evidence and report to the employer promptly if, in their opinion, a project is likely to be problematic.(\u62a5\u544a\u95ee\u9898) + 3.10 Ensure adequate testing, debugging and review of software and related documents on which they work \uff08\u4e13\u4e1a\u5224\u65ad\uff09</p> <p>However, after the initial meeting CTO as well as the team leader did not take care of the issue with free and open source software: + \u00a7 \u201cOpen Source\u201d doesn\u2019t necessarily mean you can reuse portions of the code for your work. + \u00a7 They need to find out what OS (Open Source) license the author has before they can reuse and copy.</p> <p>They are therefore in breach of the following clauses: + 2.02 Not knowingly use software that is obtained or retained either illegally or unethically. + 3.03 Identify, define and address ethical, economic, cultural, legal and environmental issues related to work projects. + 3.05 Ensure an appropriate method is used for any project on which they work or propose to work + 3.13 Be careful to use only accurate data derived by ethical and lawful means, and use it only in ways properly authorised. (copy code)</p> <p>By telling the team leader to go ahead and copy, CTO has also breached the following management clauses: + 5.01 Ensure good management for any project on which they work, including effective procedures for promotion of quality and reduction of risk (This risk is breaking IP law!) + 5.11 Not ask a software engineer to do anything inconsistent with this Code (copy code) + 8.08 Not influenced others to undertake any action that involves a breach of the Code</p> <p>By right, the team leader should: + 6.12 Express concerns to the people involved when significant violations of this Code are detected</p> <p>Therefore, they both should go find out about the legality issues with Open Source, because they should: + 8.05 Improve their knowledge of relevant standards and the law governing the software and related documents on which they work,</p>"},{"location":"course_notes/fit5136/#question-7-workflow","title":"question 7 workflow","text":""},{"location":"course_notes/fit5136/#scenario_5","title":"scenario","text":"<p>The SmartSolutions software company had a contract with a transportation company, TransCo, to add a new component to their existing scheduling tool. The new component was to be a smart reasoning component for recommending routes to drivers. After the first version was delivered, TransCo decided that the new component would have to ==contain more features== to allow maximum flexibility for users (\u201cevent 1\u201d). After incorporating these and the second version was delivered, SmartSolutions found out that the company producing the constraint solver library that it was using had gone broke, so it needed to ==change the design== to use a different library(\u201cevent 2\u201d). Then SmartSolutions realized its own analysts had misunderstood one of TransCo\u2019s requirements, so they had to ==re-do some of the analysis== (\u201cevent 3\u201d). Below is an \u201cempty\u201d depiction of the Unified Process. Extend the figure to represent (roughly) the relative effort given to the different workflows during this project. Indicate on the x (time) axis roughly when \u201cevent 1\u201d, \u201cevent 2\u201d and \u201cevent 3\u201d occurred </p>"},{"location":"course_notes/fit5136/#7a-workflow","title":"7a workflow","text":"<p>==\u5fc5\u8003Workflows== normal flow  event 1 requirement  change  event 2 design change  event 3 analysis change </p>"},{"location":"course_notes/fit5136/#question-8-testing","title":"question 8 testing","text":"<p>Suppose that you are a software engineer working on a car simulation system. You are given the pseudocode for the drive method in the Driver class</p> <p></p>"},{"location":"course_notes/fit5136/#8a-testing","title":"8.a testing","text":"<p>==\u91cd\u70b9WEEK 11 Software Testing==</p> <p>Write a set of 10 test cases for glass box unit testing of the drive() method.</p> <p></p>"},{"location":"course_notes/fit5136/#question-9-nofunctional-requirement","title":"Question 9 no/functional requirement","text":"<p>You are a software engineer working on an online shopping application. Web customers can browse items, but has to register the first time they make a purchase. When making a purchase, the customer can go back at any time and view the items in their shopping basket. When they proceed to the \u201ccheckout\u201d phase, the system allows them the option of paying by credit card (which means the system has to connect to a credit payment service), or by PayPal. A separate database system will store all the customer registration information</p>"},{"location":"course_notes/fit5136/#9a-nofunctional-requirement","title":"9a no/functional requirement","text":"<p>FIT5136 Week 2 Requirements engineering</p> <p>Below are 3 of the requirements, written in English. Each of these is not well-written (well-written requirements should be precise, unambiguous, complete and consistent.) For each (i) indicate whether this is a functional or non-functional requirement (1 mark) (ii) re-write the requirement (2 marks)</p> <p>(a) \u201cWhen customers register they have to provide a password, which must be a \u2018strong\u2019 one.\u201d +   functional requirement + (Note: what is meant by strong password?)  + When users register they must provide a password, which should be comprised of at least 8 characters, at least one of which numeric or taken from the following set: '-', '_', '.', '$', '#'</p> <p>(b) \u201cThe shopping website has to work on all the main web browsers.\u201d + non-functional requirement + (Note: \u201cwork\u201d? which browsers?) + The shopping website must display and react to user input in the same manner on the following browsers: IE7+, Firefox 3.x+, Safari 4.x.</p> <p>(c) \u201cCustomers will be able to search for items\u201d + functional requirement + (Note: simple or more complex search?) + Customers will be able to search for items in the database by entering a query either including the name or the brand of the product. The system will display all results in a list.</p>"},{"location":"course_notes/fit5136/#extra-exercise-css","title":"Extra exercise css","text":""},{"location":"course_notes/fit5136/#c1-use-case-diagram-one","title":"c1 use case diagram one","text":"<p>a. The computer shop sells laptops and desktops b. You can search and buy a product based on brand, memory, screen size, price, and/or VGA cards c. You can borrow a device on rent d. You can buy a device on loan, in addition to other payment methods e. A customer can sell products, review a product, request to assemble a device f. Admin can manage products and customers</p> <p>==\u91cd\u70b9USE CASE DIAGRAMS==</p>"},{"location":"course_notes/fit5136/#c2-use-case-scenario","title":"c2 use case scenario","text":"<p>a. Write a use case scenario on \u201cLoan a device\u201d with exception conditions a. Write a use case scenario on \u201cReview a product\u201d with exception condition</p> <p>Use case scenario</p>"},{"location":"course_notes/fit5136/#c3-sequence-diagram","title":"c3 sequence diagram","text":"<p>b. Draw a sequence diagram on the above-mentioned use case</p> <p>==\u91cd\u70b9Sequence_diagram==</p>"},{"location":"course_notes/fit5136/#c4-statechart","title":"c4  statechart","text":"<p>d. Draw a statechart on the above-mentioned use case</p> <p>==\u91cd\u70b9\u9009\u8003UML state chart==</p>"},{"location":"course_notes/fit5136/#c5-initial-class-diagram-on-css","title":"c5 initial class diagram on CSS","text":"<p>==\u91cd\u70b9Initial Class Diagram==</p>"},{"location":"course_notes/fit5136/#c6-black-box-test-cases","title":"c6 black box test cases","text":"<ol> <li>Write black box test cases on Loan a device and review a product use cases</li> </ol> <p>==\u91cd\u70b9WEEK 11 Software Testing==</p>"},{"location":"course_notes/fit5136/#extra-exercise-two","title":"Extra exercise two","text":""},{"location":"course_notes/fit5136/#e1-functional-requirement","title":"e1. functional requirement","text":"<p>select some function and write down:  Functional requirements  + download photo + system read photo + tag + upload + watermark</p>"},{"location":"course_notes/fit5136/#e2-non-functional-requirement","title":"e2. Non functional requirement:","text":"<p>Non-functional requirements + colour theme can be switch for easier reading + API linked  to system + flag design icon to show different options + system accept file type</p>"},{"location":"course_notes/fit5136/#e3-user-story","title":"e3. User story","text":"<p>==\u5fc5\u8003User stories== + \u529f\u80fd\u6027\u9700\u6c42\u9009\u62e9\u6765\u5199 + as a staff, i want to add a watermark so that user can identify their photo + as a user, i want to upload photo to the cloud so that i can view the photo in different device anywhere anytime</p>"},{"location":"course_notes/fit5136/#e4-acceptance-criteria","title":"e4. Acceptance criteria","text":"<p>==\u5fc5\u8003Acceptance criteria==</p> <p>as a staff, i want to add a watermark so that user can identify their photo</p> <p>Acceptance criteria 1  + desktop system select click choose page + staff login + staff choose photos on XX page,  + add watermark + confirm and response within 2 second</p> <p>as a user, i want to upload photo to the cloud so that i can view the photo in different device anywhere anytime</p> <p>Acceptance criteria 2 + d</p>"},{"location":"course_notes/fit5136/#e5-initial-class-diagram-20pts","title":"e5. Initial class diagram 20pts","text":"<p>==\u91cd\u70b9Initial Class Diagram== + desktop user client staff system +  + api + </p> <p></p> <p>My Initial class diagram in lucidchart</p>"},{"location":"course_notes/fit5136/#e6-sequence-diagram-20-pts","title":"e6. Sequence diagram 20 pts","text":"<p>==\u91cd\u70b9Sequence diagram==</p> <p> </p>"},{"location":"course_notes/fit5137/","title":"Fit5137","text":""},{"location":"course_notes/fit5137/#unit-overview","title":"Unit Overview \u5355\u4f4d\u6982\u89c8","text":"<p>Welcome to FIT5137 Advanced Database Technology Semester 2, 2023. \u6b22\u8fce\u6765\u5230 FIT5137 \u9ad8\u7ea7\u6570\u636e\u5e93\u6280\u672f 2023 \u5e74\u7b2c 2 \u5b66\u671f\u3002</p> <p>This unit provides an in-depth exploration of advanced database technologies, focusing on three main topics: \u672c\u5355\u5143\u6df1\u5165\u63a2\u8ba8\u4e86\u9ad8\u7ea7\u6570\u636e\u5e93\u6280\u672f\uff0c\u91cd\u70b9\u5173\u6ce8\u4e09\u4e2a\u4e3b\u8981\u4e3b\u9898\uff1a</p> <ol> <li>Data Engineering: 1. \u6570\u636e\u5de5\u7a0b\uff1a</li> <li>Data transformation: Techniques for manipulating and converting data to meet specific requirements.</li> <li>\u6570\u636e\u8f6c\u6362\uff1a\u7528\u4e8e\u64cd\u4f5c\u548c\u8f6c\u6362\u6570\u636e\u4ee5\u6ee1\u8db3\u7279\u5b9a\u8981\u6c42\u7684\u6280\u672f\u3002</li> <li>Data cleaning: Strategies to identify and rectify errors, inconsistencies, and missing values in datasets.</li> <li>\u6570\u636e\u6e05\u7406\uff1a\u8bc6\u522b\u548c\u7ea0\u6b63\u6570\u636e\u96c6\u4e2d\u7684\u9519\u8bef\u3001\u4e0d\u4e00\u81f4\u548c\u7f3a\u5931\u503c\u7684\u7b56\u7565\u3002</li> <li>Working with public data: How to access, analyze, and leverage publicly available datasets.</li> <li> <p>\u4f7f\u7528\u516c\u5171\u6570\u636e\uff1a\u5982\u4f55\u8bbf\u95ee\u3001\u5206\u6790\u548c\u5229\u7528\u516c\u5f00\u53ef\u7528\u7684\u6570\u636e\u96c6\u3002</p> </li> <li> <p>Data Warehouse: 2. \u6570\u636e\u4ed3\u5e93\uff1a</p> </li> <li>Understanding the concept and architecture of a data warehouse.</li> <li>\u4e86\u89e3\u6570\u636e\u4ed3\u5e93\u7684\u6982\u5ff5\u548c\u4f53\u7cfb\u7ed3\u6784\u3002</li> <li>Designing and querying data warehouses for efficient data retrieval and analysis.</li> <li> <p>\u8bbe\u8ba1\u548c\u67e5\u8be2\u6570\u636e\u4ed3\u5e93\uff0c\u4ee5\u5b9e\u73b0\u9ad8\u6548\u7684\u6570\u636e\u68c0\u7d22\u548c\u5206\u6790\u3002</p> </li> <li> <p>Geospatial Databases: 3. \u5730\u7406\u7a7a\u95f4\u6570\u636e\u5e93\uff1a</p> </li> <li>Introduction to geospatial data and its unique characteristics.</li> <li>\u4ecb\u7ecd\u5730\u7406\u7a7a\u95f4\u6570\u636e\u53ca\u5176\u72ec\u7279\u7279\u5f81\u3002</li> <li>Geospatial database management systems (DBMS) and their features.</li> <li>\u5730\u7406\u7a7a\u95f4\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08DBMS\uff09\u53ca\u5176\u529f\u80fd\u3002</li> <li>Spatial data modeling, indexing, and querying techniques.</li> <li>\u7a7a\u95f4\u6570\u636e\u5efa\u6a21\u3001\u7d22\u5f15\u548c\u67e5\u8be2\u6280\u672f\u3002</li> </ol> <p>Throughout this unit, you will gain a comprehensive understanding of these topics and develop practical skills in data engineering, data warehousing, and geospatial databases. \u5728\u672c\u5355\u5143\u4e2d\uff0c\u60a8\u5c06\u5168\u9762\u4e86\u89e3\u8fd9\u4e9b\u4e3b\u9898\uff0c\u5e76\u57f9\u517b\u6570\u636e\u5de5\u7a0b\uff0c\u6570\u636e\u4ed3\u5e93\u548c\u5730\u7406\u7a7a\u95f4\u6570\u636e\u5e93\u65b9\u9762\u7684\u5b9e\u8df5\u6280\u80fd\u3002</p> Week\u00a0\u5468 Topics\u00a0\u4e3b\u9898 Week 1\u00a0\u7b2c 1 \u5468 Introduction to data engineering, Data transformation and data warehousing, SQL revision  \u6570\u636e\u5de5\u7a0b\u7b80\u4ecb\u3001\u6570\u636e\u8f6c\u6362\u548c\u6570\u636e\u4ed3\u5e93\u3001SQL \u4fee\u8ba2\u7248 Week 2\u00a0\u7b2c 2 \u5468 Star schema modelling and implementation, More advanced dimension modelling  \u661f\u578b\u67b6\u6784\u5efa\u6a21\u548c\u5b9e\u73b0\uff0c\u66f4\u9ad8\u7ea7\u7684\u7ef4\u5ea6\u5efa\u6a21 Week 3\u00a0\u7b2c 3 \u5468 Case studies of data cleaning in data warehousing, Pre and post data warehousing, Extended fact tables and pivot tables  \u6570\u636e\u4ed3\u5e93\u3001\u6570\u636e\u4ed3\u5e93\u524d\u540e\u3001\u6269\u5c55\u4e8b\u5b9e\u6570\u636e\u8868\u548c\u6570\u636e\u900f\u89c6\u8868\u4e2d\u6570\u636e\u6e05\u7406\u7684\u6848\u4f8b\u7814\u7a76 Week 4\u00a0\u7b2c 4 \u5468 Concepts of granularity in data warehousing, Designing high and low granularity data warehousing  \u6570\u636e\u4ed3\u5e93\u4e2d\u7684\u7c92\u5ea6\u6982\u5ff5\uff0c\u8bbe\u8ba1\u9ad8\u7c92\u5ea6\u548c\u4f4e\u7c92\u5ea6\u6570\u636e\u4ed3\u5e93 Week 5\u00a0\u7b2c 5 \u5468 How to use public data, How to use third party data, Data privacy  \u5982\u4f55\u4f7f\u7528\u516c\u5171\u6570\u636e\uff0c \u5982\u4f55\u4f7f\u7528\u7b2c\u4e09\u65b9\u6570\u636e\uff0c \u6570\u636e\u9690\u79c1 Week 6\u00a0\u7b2c 6 \u5468 Differences between common data analytics and data analytics for data warehousing, Data analytics techniques: clustering and classification  \u5e38\u89c1\u6570\u636e\u5206\u6790\u548c\u6570\u636e\u4ed3\u5e93\u6570\u636e\u5206\u6790\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c \u6570\u636e\u5206\u6790\u6280\u672f\uff1a\u805a\u7c7b\u548c\u5206\u7c7b Week 7\u00a0\u7b2c 7 \u5468 Introduction to Spatial Databases, Spatial DBMS (PostGIS), Spatial concepts, Spatial objects  \u7a7a\u95f4\u6570\u636e\u5e93\u7b80\u4ecb\uff0c \u7a7a\u95f4DBMS \uff08PostGIS\uff09\uff0c \u7a7a\u95f4\u6982\u5ff5\uff0c \u7a7a\u95f4\u5bf9\u8c61 Week 8\u00a0\u7b2c 8 \u5468 Spatial SQL, Spatial functions, Spatial distances  \u7a7a\u95f4 SQL\uff0c \u7a7a\u95f4\u51fd\u6570\uff0c \u7a7a\u95f4\u8ddd\u79bb Week 9\u00a0\u7b2c 9 \u5468 Spatial queries, Spatial SQL, KNN and Range Queries  \u7a7a\u95f4\u67e5\u8be2\u3001\u7a7a\u95f4 SQL\u3001KNN \u548c\u8303\u56f4\u67e5\u8be2 Week 10\u00a0\u7b2c 10 \u5468 Import objects, Spatial data formats, QGIS visualization  \u5bfc\u5165\u5bf9\u8c61\u3001\u7a7a\u95f4\u6570\u636e\u683c\u5f0f\u3001QGIS \u53ef\u89c6\u5316 Week 11\u00a0\u7b2c 11 \u5468 Spatial query optimization, Spatial data pre-processing  \u7a7a\u95f4\u67e5\u8be2\u4f18\u5316\u3001\u7a7a\u95f4\u6570\u636e\u9884\u5904\u7406 Week 12\u00a0\u7b2c 12 \u5468 Roads structure, Trajectories and Trajectory tracker apps  \u9053\u8def\u7ed3\u6784\u3001\u8f68\u8ff9\u548c\u8f68\u8ff9\u8ddf\u8e2a\u5668\u5e94\u7528\u7a0b\u5e8f Deadline\u00a0\u9650\u671f Task Name\u00a0\u4efb\u52a1\u540d\u79f0 Task Content\u00a0\u4efb\u52a1\u5185\u5bb9 Assignment 2 (10%)\u00a0\u4f5c\u4e1a 2 \uff0810%\uff09 Video Presentation (Individual), Week 8  \u89c6\u9891\u6f14\u793a\uff08\u4e2a\u4eba\uff09\uff0c\u7b2c 8 \u5468 Create a 5-minute video presentation discussing topics such as public/3rd party data, data privacy, granularity, and analytics. Utilize materials from lectures and labs covered in week 4-6.  \u521b\u5efa 5 \u5206\u949f\u7684\u89c6\u9891\u6f14\u793a\uff0c\u8ba8\u8bba\u516c\u5171/\u7b2c\u4e09\u65b9\u6570\u636e\u3001\u6570\u636e\u9690\u79c1\u3001\u7c92\u5ea6\u548c\u5206\u6790\u7b49\u4e3b\u9898\u3002\u5229\u7528\u7b2c 4-6 \u5468\u6db5\u76d6\u7684\u8bb2\u5ea7\u548c\u5b9e\u9a8c\u5ba4\u6750\u6599\u3002 Assignment 3 (30%)\u00a0\u4f5c\u4e1a 3 \uff0830%\uff09 Major Assignment-1 (Group), Week 9  \u4e3b\u8981\u4f5c\u4e1a-1\uff08\u5c0f\u7ec4\uff09\uff0c\u7b2c9\u5468 Perform data cleaning and preparation using a public dataset. Collaborate in groups of 2 or 3 students. Utilize the lecture and lab materials from week 4.  \u4f7f\u7528\u516c\u5171\u6570\u636e\u96c6\u6267\u884c\u6570\u636e\u6e05\u7406\u548c\u51c6\u5907\u3002\u4ee5 2 \u6216 3 \u540d\u5b66\u751f\u4e3a\u4e00\u7ec4\u8fdb\u884c\u534f\u4f5c\u3002\u5229\u7528\u7b2c 4 \u5468\u7684\u8bb2\u5ea7\u548c\u5b9e\u9a8c\u6750\u6599\u3002 Assignment 4 (30%)\u00a0\u4f5c\u4e1a 4 \uff0830%\uff09 Major Assignment-2 (Group), Week 12  \u4e3b\u8981\u4f5c\u4e1a-2\uff08\u5c0f\u7ec4\uff09\uff0c\u7b2c12\u5468 Conduct geospatial data analysis on public transport accessibility in Melbourne. Collaborate in groups of 2 or 3 students. Utilize the lectures and labs materials covered in week 7-10.  \u5bf9\u58a8\u5c14\u672c\u7684\u516c\u5171\u4ea4\u901a\u53ef\u8fbe\u6027\u8fdb\u884c\u5730\u7406\u7a7a\u95f4\u6570\u636e\u5206\u6790\u3002\u4ee5 2 \u6216 3 \u540d\u5b66\u751f\u4e3a\u4e00\u7ec4\u8fdb\u884c\u534f\u4f5c\u3002\u5229\u7528\u7b2c 7-10 \u5468\u6db5\u76d6\u7684\u8bb2\u5ea7\u548c\u5b9e\u9a8c\u6750\u6599\u3002 Assignment 5 (10%)\u00a0\u4f5c\u4e1a 5 \uff0810%\uff09 Trajectory Report (Individual), Week 14  \u8f68\u8ff9\u62a5\u544a\uff08\u4e2a\u4eba\uff09\uff0c\u7b2c 14 \u5468 Create your own trajectory and write a 1000-word report based on it. Utilize the lectures and labs materials covered in week 11-12.  \u521b\u5efa\u81ea\u5df1\u7684\u8f68\u8ff9\uff0c\u5e76\u636e\u6b64\u7f16\u51991000\u5b57\u7684\u62a5\u544a\u3002\u5229\u7528\u7b2c 11-12 \u5468\u6db5\u76d6\u7684\u8bb2\u5ea7\u548c\u5b9e\u9a8c\u6750\u6599\u3002"},{"location":"course_notes/fit5137/#week-2","title":"week 2","text":""},{"location":"course_notes/fit5137/#star-schema-notation","title":"Star Schema Notation","text":"<p>Star Schema Notation is a graphical representation of a star schema used in data warehousing. A star schema is a type of dimensional modeling where data is organized into a central fact table surrounded by dimension tables. It is called a star schema because the diagrammatic representation resembles a star with the fact table in the center and dimension tables radiating outward like the arms of a star. \u661f\u578b\u67b6\u6784\u8868\u793a\u6cd5\u662f\u6570\u636e\u4ed3\u5e93\u4e2d\u4f7f\u7528\u7684\u661f\u578b\u67b6\u6784\u7684\u56fe\u5f62\u8868\u793a\u5f62\u5f0f\u3002\u661f\u578b\u67b6\u6784\u662f\u4e00\u79cd\u7ef4\u5ea6\u5efa\u6a21\uff0c\u5176\u4e2d\u6570\u636e\u88ab\u7ec4\u7ec7\u5230\u7531\u7ef4\u5ea6\u8868\u5305\u56f4\u7684\u4e2d\u592e\u4e8b\u5b9e\u6570\u636e\u8868\u4e2d\u3002\u4e4b\u6240\u4ee5\u79f0\u4e3a\u661f\u578b\u6a21\u5f0f\uff0c\u662f\u56e0\u4e3a\u56fe\u89e3\u8868\u793a\u7c7b\u4f3c\u4e8e\u4e00\u9897\u661f\u661f\uff0c\u4e8b\u5b9e\u8868\u4f4d\u4e8e\u4e2d\u5fc3\uff0c\u7ef4\u5ea6\u8868\u50cf\u661f\u661f\u7684\u81c2\u4e00\u6837\u5411\u5916\u8f90\u5c04\u3002</p> <p>In Star Schema Notation, the fact table is represented as a large rectangle in the center, and the dimension tables are represented as smaller rectangles connected to the fact table with lines. Each dimension table represents a different aspect of the data, such as time, geography, or product. \u5728\u661f\u578b\u67b6\u6784\u8868\u793a\u6cd5\u4e2d\uff0c\u4e8b\u5b9e\u6570\u636e\u8868\u8868\u793a\u4e3a\u4e2d\u5fc3\u7684\u4e00\u4e2a\u5927\u77e9\u5f62\uff0c\u7ef4\u5ea6\u8868\u8868\u793a\u4e3a\u7528\u7ebf\u6761\u8fde\u63a5\u5230\u4e8b\u5b9e\u6570\u636e\u8868\u7684\u8f83\u5c0f\u77e9\u5f62\u3002\u6bcf\u4e2a\u7ef4\u5ea6\u8868\u8868\u793a\u6570\u636e\u7684\u4e0d\u540c\u65b9\u9762\uff0c\u4f8b\u5982\u65f6\u95f4\u3001\u5730\u7406\u4f4d\u7f6e\u6216\u4ea7\u54c1\u3002</p> <p>The notation also includes labels or descriptions on the lines connecting the fact table to the dimension tables, specifying the relationship type (e.g., one-to-one, one-to-many) between the tables. \u8be5\u8868\u793a\u6cd5\u8fd8\u5305\u62ec\u5c06\u4e8b\u5b9e\u6570\u636e\u8868\u8fde\u63a5\u5230\u7ef4\u5ea6\u8868\u7684\u7ebf\u4e0a\u7684\u6807\u7b7e\u6216\u8bf4\u660e\uff0c\u6307\u5b9a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\u7c7b\u578b\uff08\u4f8b\u5982\uff0c\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\uff09\u3002</p> <p>This graphical representation helps in visually understanding the structure of the star schema, including the relationships between the tables and the hierarchies within each dimension. It is commonly used in data modeling and data warehousing to design, understand, and communicate the structure of star schemas. \u8fd9\u79cd\u56fe\u5f62\u8868\u793a\u6709\u52a9\u4e8e\u76f4\u89c2\u5730\u7406\u89e3\u661f\u578b\u67b6\u6784\u7684\u7ed3\u6784\uff0c\u5305\u62ec\u8868\u4e0e\u6bcf\u4e2a\u7ef4\u5ea6\u5185\u7684\u5c42\u6b21\u7ed3\u6784\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u6570\u636e\u5efa\u6a21\u548c\u6570\u636e\u4ed3\u5e93\uff0c\u4ee5\u8bbe\u8ba1\u3001\u7406\u89e3\u548c\u4f20\u8fbe\u661f\u578b\u6a21\u5f0f\u7684\u7ed3\u6784\u3002 </p>"},{"location":"course_notes/fit5137/#fact-and-dimensions","title":"Fact and Dimensions","text":"<p>Fact and Dimensions contain attributes \u2022 Each Dimension has a Dimension ID (PK) \u2022 Dimension IDs in Fact are FK and PK \u2022 Fact can only have numerical values \u4e8b\u5b9e\u548c\u7ef4\u5ea6\u5305\u542b\u5c5e\u6027 \u2022 \u6bcf\u4e2a\u7ef4\u5ea6\u90fd\u6709\u4e00\u4e2a\u7ef4\u5ea6 ID (PK) \u2022 \u4e8b\u5b9e\u4e2d\u7684\u7ef4\u5ea6 ID \u4e3a FK \u548c PK \u2022 \u4e8b\u5b9e\u53ea\u80fd\u6709\u6570\u503c  </p>"},{"location":"course_notes/fit5137/#transfer-er-to-star","title":"transfer ER to star","text":"<ol> <li> <p>Identify the Fact Table:     \u6807\u8bc6\u4e8b\u5b9e\u6570\u636e\u8868\uff1a</p> <ul> <li>Look for the entity in the E/R Diagram that represents the main business transaction or event. This entity will be the fact table in the star schema.     \u5728 E/R \u56fe\u4e2d\u67e5\u627e\u8868\u793a\u4e3b\u8981\u4e1a\u52a1\u4e8b\u52a1\u6216\u4e8b\u4ef6\u7684\u5b9e\u4f53\u3002\u6b64\u5b9e\u4f53\u5c06\u662f\u661f\u578b\u67b6\u6784\u4e2d\u7684\u4e8b\u5b9e\u6570\u636e\u8868\u3002</li> <li>Determine the attributes of the fact table, which will become the columns in the fact table.     \u786e\u5b9a\u4e8b\u5b9e\u6570\u636e\u8868\u7684\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5c06\u6210\u4e3a\u4e8b\u5b9e\u6570\u636e\u8868\u4e2d\u7684\u5217\u3002</li> <li> <p>Identify the Dimension Tables: \u6807\u8bc6\u7ef4\u5ea6\u8868\uff1a</p> </li> <li> <p>Identify the entities in the E/R Diagram that are directly related to the fact table.     \u6807\u8bc6 E/R \u56fe\u4e2d\u4e0e\u4e8b\u5b9e\u6570\u636e\u8868\u76f4\u63a5\u76f8\u5173\u7684\u5b9e\u4f53\u3002</p> </li> <li>Each of these entities will become a dimension table in the star schema.     \u5176\u4e2d\u6bcf\u4e2a\u5b9e\u4f53\u90fd\u5c06\u6210\u4e3a\u661f\u578b\u67b6\u6784\u4e2d\u7684\u7ef4\u5ea6\u8868\u3002</li> <li>Determine the attributes of each dimension table, which will become the columns in the dimension tables.     \u786e\u5b9a\u6bcf\u4e2a\u7ef4\u5ea6\u8868\u7684\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5c06\u6210\u4e3a\u7ef4\u5ea6\u8868\u4e2d\u7684\u5217\u3002</li> <li>Include a primary key column in each dimension table to uniquely identify the dimension records.     \u5728\u6bcf\u4e2a\u7ef4\u5ea6\u8868\u4e2d\u5305\u542b\u4e00\u4e2a\u4e3b\u952e\u5217\uff0c\u4ee5\u552f\u4e00\u6807\u8bc6\u7ef4\u5ea6\u8bb0\u5f55\u3002</li> <li> <p>Map the Relationships:\u00a0\u6620\u5c04\u5173\u7cfb\uff1a</p> </li> <li> <p>Identify the relationships between the fact table and dimension tables in the E/R Diagram.     \u6807\u8bc6 E/R \u56fe\u4e2d\u7684\u4e8b\u5b9e\u6570\u636e\u8868\u548c\u7ef4\u5ea6\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> </li> <li>For each relationship, create a foreign key column in the fact table that references the primary key column of the related dimension table.     \u5bf9\u4e8e\u6bcf\u4e2a\u5173\u7cfb\uff0c\u5728\u4e8b\u5b9e\u6570\u636e\u8868\u4e2d\u521b\u5efa\u4e00\u4e2a\u5f15\u7528\u76f8\u5173\u7ef4\u5ea6\u8868\u7684\u4e3b\u952e\u5217\u7684\u5916\u952e\u5217\u3002</li> <li> <p>Denormalize the Dimension Tables (Optional): \u975e\u89c4\u8303\u5316\u7ef4\u5ea6\u8868\uff08\u53ef\u9009\uff09\uff1a</p> </li> <li> <p>Analyze the attributes in the dimension tables and consider whether denormalization is needed.     \u5206\u6790\u7ef4\u5ea6\u8868\u4e2d\u7684\u5c5e\u6027\uff0c\u5e76\u8003\u8651\u662f\u5426\u9700\u8981\u975e\u89c4\u8303\u5316\u3002</p> </li> <li>If certain attributes are frequently used together or need to be efficiently queried, you may consider combining them into a single denormalized dimension table to avoid joins.     \u5982\u679c\u67d0\u4e9b\u5c5e\u6027\u7ecf\u5e38\u4e00\u8d77\u4f7f\u7528\u6216\u9700\u8981\u9ad8\u6548\u67e5\u8be2\uff0c\u5219\u53ef\u4ee5\u8003\u8651\u5c06\u5b83\u4eec\u5408\u5e76\u5230\u5355\u4e2a\u975e\u89c4\u8303\u5316\u7ef4\u5ea6\u8868\u4e2d\u4ee5\u907f\u514d\u8054\u63a5\u3002</li> <li> <p>Design the Star Schema: \u8bbe\u8ba1\u661f\u578b\u67b6\u6784\uff1a</p> </li> <li> <p>Create the tables in the star schema based on the identified fact table and dimension tables.     \u6839\u636e\u6807\u8bc6\u7684\u4e8b\u5b9e\u6570\u636e\u8868\u548c\u7ef4\u5ea6\u8868\u5728\u661f\u578b\u67b6\u6784\u4e2d\u521b\u5efa\u8868\u3002</p> </li> <li>Define the columns of each table based on the identified attributes.     \u6839\u636e\u6807\u8bc6\u7684\u5c5e\u6027\u5b9a\u4e49\u6bcf\u4e2a\u8868\u7684\u5217\u3002</li> <li>Establish the relationships between the fact table and dimension tables using foreign key columns.     \u4f7f\u7528\u5916\u952e\u5217\u5efa\u7acb\u4e8b\u5b9e\u6570\u636e\u8868\u548c\u7ef4\u5ea6\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> </ul> </li> </ol> <p>Remember, the E/R Diagram and the star schema serve different purposes. The E/R Diagram is a logical representation of the entities, attributes, and relationships in a system, while the star schema is a specific data modeling technique for data warehousing. The process described above is a general guideline and may vary depending on your specific requirements and the complexity of your E/R Diagram. \u8bf7\u8bb0\u4f4f\uff0cE/R \u56fe\u548c\u661f\u578b\u6a21\u5f0f\u6709\u4e0d\u540c\u7684\u7528\u9014\u3002E/R \u56fe\u662f\u7cfb\u7edf\u4e2d\u5b9e\u4f53\u3001\u5c5e\u6027\u548c\u5173\u7cfb\u7684\u903b\u8f91\u8868\u793a\u5f62\u5f0f\uff0c\u800c\u661f\u578b\u67b6\u6784\u662f\u7528\u4e8e\u6570\u636e\u4ed3\u5e93\u7684\u7279\u5b9a\u6570\u636e\u5efa\u6a21\u6280\u672f\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u662f\u4e00\u822c\u51c6\u5219\uff0c\u53ef\u80fd\u4f1a\u6839\u636e\u60a8\u7684\u7279\u5b9a\u8981\u6c42\u548c E/R \u56fe\u7684\u590d\u6742\u6027\u800c\u6709\u6240\u4e0d\u540c\u3002</p>"},{"location":"course_notes/fit5137/#week5","title":"Week5","text":""},{"location":"course_notes/fit5137/#k-anonymity","title":"k-Anonymity","text":"<p>K-Anonymity is a concept and technique used in privacy and data anonymization to protect sensitive data. It aims to prevent the identification of individuals within a dataset while still allowing useful analysis to be performed. K-Anonymity\u662f\u4e00\u79cd\u7528\u4e8e\u9690\u79c1\u548c\u6570\u636e\u533f\u540d\u5316\u7684\u6982\u5ff5\u548c\u6280\u672f\uff0c\u4ee5\u4fdd\u62a4\u654f\u611f\u6570\u636e\u3002\u5b83\u65e8\u5728\u9632\u6b62\u5728\u6570\u636e\u96c6\u4e2d\u8bc6\u522b\u4e2a\u4eba\uff0c\u540c\u65f6\u4ecd\u5141\u8bb8\u6267\u884c\u6709\u7528\u7684\u5206\u6790\u3002</p> <p>The concept of k-anonymity ensures that each individual's information in a dataset is indistinguishable from at least k-1 other individuals, making it difficult to re-identify a specific person. k-anonymity\u7684\u6982\u5ff5\u786e\u4fdd\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u4eba\u7684\u4fe1\u606f\u4e0e\u81f3\u5c11k-1\u5176\u4ed6\u4e2a\u4f53\u65e0\u6cd5\u533a\u5206\uff0c\u56e0\u6b64\u5f88\u96be\u91cd\u65b0\u8bc6\u522b\u7279\u5b9a\u7684\u4eba\u3002</p> <p>To achieve k-anonymity, certain data transformations are applied to the dataset, such as generalizing or suppressing specific attributes or replacing values with ranges or categories. These transformations ensure that no individual's information can be uniquely distinguished within the dataset. \u4e3a\u4e86\u5b9e\u73b0 k \u533f\u540d\u6027\uff0c\u67d0\u4e9b\u6570\u636e\u8f6c\u6362\u5c06\u5e94\u7528\u4e8e\u6570\u636e\u96c6\uff0c\u4f8b\u5982\u6982\u5316\u6216\u7981\u6b62\u663e\u793a\u7279\u5b9a\u5c5e\u6027\uff0c\u6216\u8005\u5c06\u503c\u66ff\u6362\u4e3a\u8303\u56f4\u6216\u7c7b\u522b\u3002\u8fd9\u4e9b\u8f6c\u6362\u53ef\u786e\u4fdd\u5728\u6570\u636e\u96c6\u4e2d\u65e0\u6cd5\u552f\u4e00\u533a\u5206\u4efb\u4f55\u4e2a\u4eba\u4fe1\u606f\u3002</p> <p>For example, if a dataset includes age as an attribute, applying k-anonymity might involve replacing specific ages with age ranges (e.g., 20-30, 30-40) to ensure that an individual's age cannot be pinpointed. \u4f8b\u5982\uff0c\u5982\u679c\u6570\u636e\u96c6\u5305\u542b\u5e74\u9f84\u4f5c\u4e3a\u5c5e\u6027\uff0c\u5219\u5e94\u7528 k-anonymity \u53ef\u80fd\u6d89\u53ca\u5c06\u7279\u5b9a\u5e74\u9f84\u66ff\u6362\u4e3a\u5e74\u9f84\u8303\u56f4\uff08\u4f8b\u5982\uff0c20-30\u300130-40\uff09\uff0c\u4ee5\u786e\u4fdd\u65e0\u6cd5\u786e\u5b9a\u4e2a\u4eba\u7684\u5e74\u9f84\u3002</p> <p>The goal of k-anonymity is to balance privacy protection with the usability and utility of the data. By ensuring that each record is sufficiently similar to a group of others, it becomes much more challenging to re-identify individuals. k-anonymity\u7684\u76ee\u6807\u662f\u5728\u9690\u79c1\u4fdd\u62a4\u4e0e\u6570\u636e\u7684\u53ef\u7528\u6027\u548c\u5b9e\u7528\u6027\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u3002\u901a\u8fc7\u786e\u4fdd\u6bcf\u6761\u8bb0\u5f55\u4e0e\u5176\u4ed6\u8bb0\u5f55\u7ec4\u8db3\u591f\u76f8\u4f3c\uff0c\u91cd\u65b0\u8bc6\u522b\u4e2a\u4eba\u53d8\u5f97\u66f4\u5177\u6311\u6218\u6027\u3002</p> <p>However, it's important to note that k-anonymity alone may not be sufficient to guarantee complete privacy protection. Additional techniques, such as perturbation, randomization, and differential privacy, may be required to further protect sensitive data. \u4f46\u662f\uff0c\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\uff0c\u4ec5\u9760k-anonymity\u53ef\u80fd\u4e0d\u8db3\u4ee5\u4fdd\u8bc1\u5b8c\u5168\u7684\u9690\u79c1\u4fdd\u62a4\u3002\u53ef\u80fd\u9700\u8981\u5176\u4ed6\u6280\u672f\uff0c\u4f8b\u5982\u6270\u52a8\u3001\u968f\u673a\u5316\u548c\u5dee\u5206\u9690\u79c1\uff0c\u4ee5\u8fdb\u4e00\u6b65\u4fdd\u62a4\u654f\u611f\u6570\u636e\u3002</p>"},{"location":"course_notes/fit5137/#-diversity","title":"!-Diversity","text":"<p>iversity is another concept in privacy and data anonymization that builds upon the foundation of k-anonymity. While k-anonymity focuses on ensuring indistinguishability among individuals, -Diversity adds an additional level of protection by considering the diversity of sensitive attributes within each group of k-anonymous records. \u591a\u6837\u6027\u662f\u9690\u79c1\u548c\u6570\u636e\u533f\u540d\u5316\u7684\u53e6\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u5efa\u7acb\u5728k-anonymity\u7684\u57fa\u7840\u4e0a\u3002\u867d\u7136 k-anonymity \u4fa7\u91cd\u4e8e\u786e\u4fdd\u4e2a\u4eba\u4e4b\u95f4\u7684\u4e0d\u53ef\u533a\u5206\u6027\uff0c\u4f46 -diversity \u901a\u8fc7\u8003\u8651\u6bcf\u7ec4 k \u533f\u540d\u8bb0\u5f55\u4e2d\u654f\u611f\u5c5e\u6027\u7684\u591a\u6837\u6027\u6765\u589e\u52a0\u989d\u5916\u7684\u4fdd\u62a4\u7ea7\u522b\u3002</p> <p>!-Diversity is an extension of k-anonymity that ensures that within each group of k-anonymous records, the sensitive attribute values are diverse enough to prevent unique identification of individuals based on those attributes. \uff01-\u591a\u6837\u6027\u662f k-anonymity \u7684\u6269\u5c55\uff0c\u53ef\u786e\u4fdd\u5728\u6bcf\u7ec4 k \u533f\u540d\u8bb0\u5f55\u4e2d\uff0c\u654f\u611f\u5c5e\u6027\u503c\u8db3\u591f\u591a\u6837\u5316\uff0c\u4ee5\u9632\u6b62\u57fa\u4e8e\u8fd9\u4e9b\u5c5e\u6027\u5bf9\u4e2a\u4eba\u8fdb\u884c\u552f\u4e00\u6807\u8bc6\u3002</p> <p>For example, consider a dataset with age, gender, and income as attributes. With k-anonymity alone, it may be possible to identify an individual based on their unique combination of age and gender. Adding !-diversity helps by ensuring that there is more diversity in the income attribute within each group of k-anonymous records, making it harder to determine an individual's income solely based on their age and gender. \u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u5e74\u9f84\u3001\u6027\u522b\u548c\u6536\u5165\u4f5c\u4e3a\u5c5e\u6027\u7684\u6570\u636e\u96c6\u3002\u4ec5\u901a\u8fc7k-anonymity\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u5176\u72ec\u7279\u7684\u5e74\u9f84\u548c\u6027\u522b\u7ec4\u5408\u6765\u8bc6\u522b\u4e2a\u4eba\u3002\u6dfb\u52a0 \uff01-diversity \u6709\u52a9\u4e8e\u786e\u4fdd\u6bcf\u7ec4 k-anonymous \u8bb0\u5f55\u4e2d\u7684\u6536\u5165\u5c5e\u6027\u5177\u6709\u66f4\u591a\u591a\u6837\u6027\uff0c\u4ece\u800c\u66f4\u96be\u4ec5\u6839\u636e\u5e74\u9f84\u548c\u6027\u522b\u786e\u5b9a\u4e2a\u4eba\u7684\u6536\u5165\u3002</p> <p>By incorporating !-diversity, the risk of re-identification based on specific sensitive attribute values is reduced. It provides an additional layer of privacy protection by making it challenging to infer unique characteristics of individuals within each group. \u901a\u8fc7\u5408\u5e76 \uff01-diversity\uff0c\u53ef\u4ee5\u964d\u4f4e\u57fa\u4e8e\u7279\u5b9a\u654f\u611f\u5c5e\u6027\u503c\u91cd\u65b0\u8bc6\u522b\u7684\u98ce\u9669\u3002\u5b83\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u9690\u79c1\u4fdd\u62a4\u5c42\uff0c\u4f7f\u63a8\u65ad\u6bcf\u4e2a\u7fa4\u4f53\u4e2d\u4e2a\u4eba\u7684\u72ec\u7279\u7279\u5f81\u53d8\u5f97\u5177\u6709\u6311\u6218\u6027\u3002</p>"},{"location":"course_notes/fit5137/#apply-the-method","title":"apply the method","text":"<p>Original Table:\u00a0\u539f\u59cb\u8868\uff1a</p> Postcode\u00a0\u90ae\u653f\u7f16\u7801 Age Nationality\u00a0\u56fd\u7c4d Disease_Condition 12345 35 US Heart Disease\u00a0\u5fc3\u810f\u75c5 12345 45 UK Heart Disease\u00a0\u5fc3\u810f\u75c5 56789 30 US Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 56789 20 UK Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 56789 55 US Cancer\u00a0\u764c\u75c7 <p>Applied k-anonymity to generalize attributes: \u5e94\u7528 k \u533f\u540d\u6027\u6765\u6982\u62ec\u5c5e\u6027\uff1a</p> Postcode\u00a0\u90ae\u653f\u7f16\u7801 Age Nationality\u00a0\u56fd\u7c4d Disease_Condition 123** 30s US Heart Disease\u00a0\u5fc3\u810f\u75c5 123** 40s UK Heart Disease\u00a0\u5fc3\u810f\u75c5 567** 30s US Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 567** 20s UK Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 567** 50s US Cancer\u00a0\u764c\u75c7 <p>Applied !-diversity to enhance diversity: \u5e94\u7528\u591a\u6837\u6027\u6765\u589e\u5f3a\u591a\u6837\u6027\uff1a</p> Postcode\u00a0\u90ae\u653f\u7f16\u7801 Age Nationality\u00a0\u56fd\u7c4d Disease_Condition 123** 30s US Heart Disease\u00a0\u5fc3\u810f\u75c5 123** 40s UK Heart Disease\u00a0\u5fc3\u810f\u75c5 567** 30s US Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 567** 20s UK Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 567** 50s US Random1\u00a0\u968f\u673a1 567** 50s US Random2\u00a0\u968f\u673a2 <p>In this example, we initially applied k-anonymity by generalizing the Postcode to the first three digits, and the Age to age ranges (e.g., 30s, 40s). This ensures that each group has at least two similar records. \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6700\u521d\u901a\u8fc7\u5c06\u90ae\u653f\u7f16\u7801\u63a8\u5e7f\u5230\u524d\u4e09\u4f4d\u6570\u5b57\uff0c\u5c06\u5e74\u9f84\u63a8\u5e7f\u5230\u5e74\u9f84\u8303\u56f4\uff08\u4f8b\u5982\uff0c30\u591a\u5c81\u300140\u591a\u5c81\uff09\u6765\u5e94\u7528 k-anonymity\u3002\u8fd9\u53ef\u786e\u4fdd\u6bcf\u4e2a\u7ec4\u81f3\u5c11\u6709\u4e24\u4e2a\u7c7b\u4f3c\u7684\u8bb0\u5f55\u3002</p> <p>Next, we applied !-diversity by introducing diversity within each group. In the last two rows, we replaced the original \"Disease_Condition\" values with random values (e.g., Random1, Random2). This adds an additional layer of protection and prevents exact identification of the underlying disease condition for those individuals. \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u5728\u6bcf\u4e2a\u7ec4\u4e2d\u5f15\u5165\u591a\u6837\u6027\u6765\u5e94\u7528\uff01-diversity\u3002\u5728\u6700\u540e\u4e24\u884c\u4e2d\uff0c\u6211\u4eec\u5c06\u539f\u59cb\u7684\u201cDisease_Condition\u201d\u503c\u66ff\u6362\u4e3a\u968f\u673a\u503c\uff08\u4f8b\u5982\uff0cRandom1\uff0cRandom2\uff09\u3002\u8fd9\u589e\u52a0\u4e86\u4e00\u5c42\u989d\u5916\u7684\u4fdd\u62a4\uff0c\u5e76\u9632\u6b62\u51c6\u786e\u8bc6\u522b\u8fd9\u4e9b\u4eba\u7684\u6f5c\u5728\u75be\u75c5\u72b6\u51b5\u3002</p>"},{"location":"course_notes/fit5137/#t-closeness","title":"t-closeness","text":"<p>T-closeness is a privacy concept and technique used in data anonymization to protect sensitive data. It extends the concepts of k-anonymity and !-diversity by ensuring that the distribution of sensitive attributes within each group is similar to the overall distribution in the entire dataset. T-closeness\u662f\u4e00\u79cd\u9690\u79c1\u6982\u5ff5\u548c\u6280\u672f\uff0c\u7528\u4e8e\u6570\u636e\u533f\u540d\u5316\u4ee5\u4fdd\u62a4\u654f\u611f\u6570\u636e\u3002\u5b83\u901a\u8fc7\u786e\u4fdd\u6bcf\u4e2a\u7ec4\u4e2d\u654f\u611f\u5c5e\u6027\u7684\u5206\u5e03\u4e0e\u6574\u4e2a\u6570\u636e\u96c6\u4e2d\u7684\u6574\u4f53\u5206\u5e03\u76f8\u4f3c\u6765\u6269\u5c55 k-anonymity \u548c \uff01-diversity \u7684\u6982\u5ff5\u3002</p> <p>The goal of t-closeness is to prevent the leakage of sensitive information by reducing the risk of re-identification or attribute disclosure through the distribution of sensitive attribute values. t-closeness \u7684\u76ee\u6807\u662f\u901a\u8fc7\u5206\u53d1\u654f\u611f\u5c5e\u6027\u503c\u6765\u964d\u4f4e\u91cd\u65b0\u8bc6\u522b\u6216\u5c5e\u6027\u6cc4\u9732\u7684\u98ce\u9669\uff0c\u4ece\u800c\u9632\u6b62\u654f\u611f\u4fe1\u606f\u6cc4\u9732\u3002</p> <p>In a t-closeness model, a parameter \"t\" is defined, which represents the maximum allowed difference in distribution between the sensitive attribute values within a group and the overall dataset. \u5728 t \u63a5\u8fd1\u5ea6\u6a21\u578b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53c2\u6570\u201ct\u201d\uff0c\u8be5\u53c2\u6570\u8868\u793a\u7ec4\u4e2d\u654f\u611f\u5c5e\u6027\u503c\u4e0e\u6574\u4e2a\u6570\u636e\u96c6\u4e4b\u95f4\u5141\u8bb8\u7684\u6700\u5927\u5206\u5e03\u5dee\u5f02\u3002</p> <p>To achieve t-closeness, the following steps are typically followed: \u8981\u5b9e\u73b0 t \u63a5\u8fd1\u5ea6\uff0c\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li> <p>Partition the dataset into groups based on the generalized attributes (such as age, gender, or location) using k-anonymity.     \u4f7f\u7528 k-anonymity \u6839\u636e\u901a\u7528\u5c5e\u6027\uff08\u4f8b\u5982\u5e74\u9f84\u3001\u6027\u522b\u6216\u4f4d\u7f6e\uff09\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a\u591a\u4e2a\u7ec4\u3002</p> </li> <li> <p>Compute the distribution of the sensitive attribute values within each group.     \u8ba1\u7b97\u6bcf\u4e2a\u7ec4\u4e2d\u654f\u611f\u5c5e\u6027\u503c\u7684\u5206\u5e03\u3002</p> </li> <li> <p>Measure the distance between the distribution of the sensitive attribute values in each group and the overall dataset distribution (e.g., using methods like Jensen-Shannon divergence or earth mover's distance).     \u6d4b\u91cf\u6bcf\u4e2a\u7ec4\u4e2d\u654f\u611f\u5c5e\u6027\u503c\u7684\u5206\u5e03\u4e0e\u6574\u4f53\u6570\u636e\u96c6\u5206\u5e03\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 Jensen-Shannon \u6563\u5ea6\u6216\u63a8\u571f\u673a\u8ddd\u79bb\u7b49\u65b9\u6cd5\uff09\u3002</p> </li> <li> <p>Ensure that the distance metric is less than or equal to the defined \"t\" parameter to achieve t-closeness. If the distance exceeds the threshold, additional privacy measures, such as data perturbation or suppression, may be required.     \u786e\u4fdd\u8ddd\u79bb\u5ea6\u91cf\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5b9a\u4e49\u7684\u201ct\u201d\u53c2\u6570\u4ee5\u5b9e\u73b0 t \u63a5\u8fd1\u5ea6\u3002\u5982\u679c\u8ddd\u79bb\u8d85\u8fc7\u9608\u503c\uff0c\u5219\u53ef\u80fd\u9700\u8981\u91c7\u53d6\u5176\u4ed6\u9690\u79c1\u63aa\u65bd\uff0c\u4f8b\u5982\u6570\u636e\u6270\u52a8\u6216\u6291\u5236\u3002</p> </li> </ol>"},{"location":"course_notes/fit5137/#apply-t-closeness","title":"apply t-closeness","text":"<p>Original Table:\u00a0\u539f\u59cb\u8868\uff1a</p> Postcode\u00a0\u90ae\u653f\u7f16\u7801 Age Nationality\u00a0\u56fd\u7c4d Disease_Condition 12345 35 US Heart Disease\u00a0\u5fc3\u810f\u75c5 12345 45 UK Heart Disease\u00a0\u5fc3\u810f\u75c5 56789 30 US Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 56789 20 UK Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 56789 55 US Cancer\u00a0\u764c\u75c7 <p>Applied k-anonymity to generalize attributes: \u5e94\u7528 k \u533f\u540d\u6027\u6765\u6982\u62ec\u5c5e\u6027\uff1a</p> Postcode\u00a0\u90ae\u653f\u7f16\u7801 Age Nationality\u00a0\u56fd\u7c4d Disease_Condition 123** 30s US Heart Disease\u00a0\u5fc3\u810f\u75c5 123** 40s UK Heart Disease\u00a0\u5fc3\u810f\u75c5 567** 30s US Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 567** 20s UK Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 567** 50s US Cancer\u00a0\u764c\u75c7 <p>For t-closeness, we need to consider the distribution of the \"Disease_Condition\" attribute within each group compared to the overall dataset: \u5bf9\u4e8et-closeness\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u6bcf\u4e2a\u7ec4\u4e2d\u201cDisease_Condition\u201d\u5c5e\u6027\u4e0e\u6574\u4f53\u6570\u636e\u96c6\u7684\u5206\u5e03\uff1a</p> <p>Overall \"Disease_Condition\" distribution: \u603b\u4f53\u201cDisease_Condition\u201d\u5206\u5e03\uff1a</p> <ul> <li>Heart Disease: 2 cases (40%)     \u5fc3\u810f\u75c5\uff1a 2 \u4f8b \uff0840%\uff09</li> <li>Viral Infection: 2 cases (40%)     \u75c5\u6bd2\u611f\u67d3\uff1a2\u4f8b\uff0840%\uff09</li> <li>Cancer: 1 case (20%)     \u764c\u75c7\uff1a1\u4f8b\uff0820%\uff09</li> </ul> <p>Group 1 (123):\u00a0\u7b2c1\u7ec4\uff08123\uff09\uff1a</p> <ul> <li>Heart Disease: 2 cases (100%)     \u5fc3\u810f\u75c5\uff1a2\u4f8b\uff08100%\uff09</li> <li>Viral Infection: 0 cases (0%)     \u75c5\u6bd2\u611f\u67d3\uff1a 0 \u4f8b \uff080%\uff09</li> <li>Cancer: 0 cases (0%)     \u764c\u75c7\uff1a 0 \u4f8b \uff080%\uff09</li> </ul> <p>Group 2 (567):\u00a0\u7b2c2\u7ec4\uff08567\uff09\uff1a</p> <ul> <li>Heart Disease: 0 cases (0%)     \u5fc3\u810f\u75c5\uff1a 0 \u4f8b \uff080%\uff09</li> <li>Viral Infection: 2 cases (100%)     \u75c5\u6bd2\u611f\u67d3\uff1a2\u4f8b\uff08100%\uff09</li> <li>Cancer: 1 case (50%)     \u764c\u75c7\uff1a1\u4f8b\uff0850%\uff09</li> </ul> <p>In this example, let's assume our t-closeness threshold is set to 0.2 (20% maximum difference). \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u5047\u8bbe\u6211\u4eec\u7684 t \u63a5\u8fd1\u9608\u503c\u8bbe\u7f6e\u4e3a 0.2\uff0820% \u6700\u5927\u5dee\u503c\uff09\u3002</p> <p>For Group 1, the \"Disease_Condition\" distribution only includes Heart Disease, which differs from the overall distribution. To achieve t-closeness, we can introduce artificial diversity within Group 1: \u5bf9\u4e8e\u7b2c 1 \u7ec4\uff0c\u201cDisease_Condition\u201d\u5206\u5e03\u4ec5\u5305\u62ec\u5fc3\u810f\u75c5\uff0c\u8fd9\u4e0e\u6574\u4f53\u5206\u5e03\u4e0d\u540c\u3002\u4e3a\u4e86\u5b9e\u73b0t-closeness\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7b2c1\u7ec4\u4e2d\u5f15\u5165\u4eba\u5de5\u591a\u6837\u6027\uff1a</p> <p>Modified Group 1:\u00a0\u4fee\u6539\u7ec4 1\uff1a</p> Postcode\u00a0\u90ae\u653f\u7f16\u7801 Age Nationality\u00a0\u56fd\u7c4d Disease_Condition 123** 30s US Heart Disease\u00a0\u5fc3\u810f\u75c5 123** 40s UK Heart Disease\u00a0\u5fc3\u810f\u75c5 123** 40s US Viral Infection\u00a0\u75c5\u6bd2\u611f\u67d3 <p>Now the modified \"Disease_Condition\" distribution within Group 1 becomes: \u73b0\u5728\uff0c\u7ec4 1 \u4e2d\u4fee\u6539\u540e\u7684\u201cDisease_Condition\u201d\u5206\u5e03\u53d8\u4e3a\uff1a</p> <ul> <li>Heart Disease: 2 cases (66.66%)     \u5fc3\u810f\u75c5\uff1a2\u4f8b\uff0866.66%\uff09</li> <li>Viral Infection: 1 case (33.33%)     \u75c5\u6bd2\u611f\u67d3\uff1a1\u4f8b\uff0833.33%\uff09</li> <li>Cancer: 0 cases (0%)     \u764c\u75c7\uff1a 0 \u4f8b \uff080%\uff09</li> </ul> <p>By adding diversity to Group 1, the distribution of \"Disease_Condition\" values becomes closer to the overall distribution, achieving t-closeness. \u901a\u8fc7\u5c06\u591a\u6837\u6027\u6dfb\u52a0\u5230\u7ec4 1\uff0c\u201cDisease_Condition\u201d\u503c\u7684\u5206\u5e03\u66f4\u63a5\u8fd1\u6574\u4f53\u5206\u5e03\uff0c\u4ece\u800c\u5b9e\u73b0 t \u63a5\u8fd1\u3002</p> <p>In Group 2, the \"Disease_Condition\" distribution already includes multiple conditions, and it aligns with the overall distribution. Therefore, no modifications are required in this case. \u5728\u7b2c 2 \u7ec4\u4e2d\uff0c\u201cDisease_Condition\u201d\u5206\u5e03\u5df2\u5305\u542b\u591a\u4e2a\u6761\u4ef6\uff0c\u5e76\u4e14\u5b83\u4e0e\u6574\u4f53\u5206\u5e03\u4e00\u81f4\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u4fee\u6539\u3002</p> <p>This demonstrates how t-closeness aims to align the distribution of sensitive attribute values within each group with the overall dataset's distribution, reducing the risk of attribute disclosure and ensuring strong privacy protection. \u8fd9\u5c55\u793a\u4e86 t-closeness \u65e8\u5728\u4f7f\u6bcf\u4e2a\u7ec4\u4e2d\u654f\u611f\u5c5e\u6027\u503c\u7684\u5206\u5e03\u4e0e\u6574\u4e2a\u6570\u636e\u96c6\u7684\u5206\u5e03\u4fdd\u6301\u4e00\u81f4\uff0c\u4ece\u800c\u964d\u4f4e\u5c5e\u6027\u6cc4\u9732\u7684\u98ce\u9669\u5e76\u786e\u4fdd\u5f3a\u5927\u7684\u9690\u79c1\u4fdd\u62a4\u3002</p>"},{"location":"course_notes/fit5137/#data-anatomy-analysis","title":"data anatomy analysis","text":"<p>In the context of data privacy, \"anatomy\" refers to the detailed understanding and analysis of data in order to identify and protect sensitive information. It involves examining the structure, content, and relationships within a dataset to determine the types of data present and the potential risks associated with them. \u5728\u6570\u636e\u9690\u79c1\u7684\u80cc\u666f\u4e0b\uff0c\u201c\u5256\u6790\u201d\u662f\u6307\u5bf9\u6570\u636e\u7684\u8be6\u7ec6\u7406\u89e3\u548c\u5206\u6790\uff0c\u4ee5\u8bc6\u522b\u548c\u4fdd\u62a4\u654f\u611f\u4fe1\u606f\u3002\u5b83\u6d89\u53ca\u68c0\u67e5\u6570\u636e\u96c6\u4e2d\u7684\u7ed3\u6784\u3001\u5185\u5bb9\u548c\u5173\u7cfb\uff0c\u4ee5\u786e\u5b9a\u5b58\u5728\u7684\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u4e0e\u4e4b\u76f8\u5173\u7684\u6f5c\u5728\u98ce\u9669\u3002</p> <p>The goal of conducting an anatomy is to gain insights into the data's privacy characteristics, such as the presence of personally identifiable information (PII), protected health information (PHI), financial information, or any other sensitive data elements that may require protection. By understanding the anatomy of data, organizations can implement appropriate security measures and privacy controls to safeguard sensitive information against unauthorized access or disclosure. \u8fdb\u884c\u5256\u6790\u7684\u76ee\u7684\u662f\u6df1\u5165\u4e86\u89e3\u6570\u636e\u7684\u9690\u79c1\u7279\u5f81\uff0c\u4f8b\u5982\u662f\u5426\u5b58\u5728\u4e2a\u4eba\u8eab\u4efd\u4fe1\u606f \uff08PII\uff09\u3001\u53d7\u4fdd\u62a4\u7684\u5065\u5eb7\u4fe1\u606f \uff08PHI\uff09\u3001\u8d22\u52a1\u4fe1\u606f\u6216\u4efb\u4f55\u5176\u4ed6\u53ef\u80fd\u9700\u8981\u4fdd\u62a4\u7684\u654f\u611f\u6570\u636e\u5143\u7d20\u3002\u901a\u8fc7\u4e86\u89e3\u6570\u636e\u7684\u5256\u6790\uff0c\u7ec4\u7ec7\u53ef\u4ee5\u5b9e\u65bd\u9002\u5f53\u7684\u5b89\u5168\u63aa\u65bd\u548c\u9690\u79c1\u63a7\u5236\uff0c\u4ee5\u4fdd\u62a4\u654f\u611f\u4fe1\u606f\u514d\u53d7\u672a\u7ecf\u6388\u6743\u7684\u8bbf\u95ee\u6216\u62ab\u9732\u3002</p>"},{"location":"course_notes/fit5137/#how-vertical-partitioning-can-be-used-in-data-anatomy-analysis","title":"how vertical partitioning can be used in data anatomy analysis","text":"<p>Original Table:\u00a0\u539f\u59cb\u8868\uff1a</p> Customer ID\u00a0\u5ba2\u6237\u7f16\u53f7 Name\u00a0\u540d\u5b57 Address\u00a0\u5730\u5740 Email\u00a0\u7535\u5b50\u90ae\u4ef6 Phone\u00a0\u7535\u8bdd 123 John Doe\u00a0\u65e0\u540d\u6c0f 123 Main Street\u00a0123\u5927\u8857 johndoe@example.com 555-123-4567 456 Jane Smith\u00a0\u7b80\u00b7\u53f2\u5bc6\u65af 456 Elm Street\u00a0456\u6986\u6811\u8857 janesmith@example.com 555-987-6543 789 Bob Brown\u00a0\u9c8d\u52c3\u00b7\u5e03\u6717 789 Oak Street\u00a0789\u6a61\u6811\u8857 bobbrown@example.com 555-555-5555 <p>In this example, we can use vertical partitioning to logically group and separate sensitive and non-sensitive data elements into different tables. Let's assume that the \"Name\" and \"Email\" attributes are considered sensitive data in this scenario: \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5782\u76f4\u5206\u533a\u5c06\u654f\u611f\u548c\u975e\u654f\u611f\u6570\u636e\u5143\u7d20\u903b\u8f91\u5206\u7ec4\u548c\u5206\u79bb\u5230\u4e0d\u540c\u7684\u8868\u4e2d\u3002\u5047\u8bbe\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u540d\u79f0\u201d\u548c\u201c\u7535\u5b50\u90ae\u4ef6\u201d\u5c5e\u6027\u88ab\u89c6\u4e3a\u654f\u611f\u6570\u636e\uff1a</p> <p>Sensitive Data Table:\u00a0\u654f\u611f\u6570\u636e\u8868\uff1a</p> Customer ID\u00a0\u5ba2\u6237\u7f16\u53f7 Name\u00a0\u540d\u5b57 Email\u00a0\u7535\u5b50\u90ae\u4ef6 123 John Doe\u00a0\u65e0\u540d\u6c0f johndoe@example.com 456 Jane Smith\u00a0\u7b80\u00b7\u53f2\u5bc6\u65af janesmith@example.com 789 Bob Brown\u00a0\u9c8d\u52c3\u00b7\u5e03\u6717 bobbrown@example.com <p>Non-Sensitive Data Table: \u975e\u654f\u611f\u6570\u636e\u8868\uff1a</p> Customer ID\u00a0\u5ba2\u6237\u7f16\u53f7 Address\u00a0\u5730\u5740 Phone\u00a0\u7535\u8bdd 123 123 Main Street\u00a0123\u5927\u8857 555-123-4567 456 456 Elm Street\u00a0456\u6986\u6811\u8857 555-987-6543 789 789 Oak Street\u00a0789\u6a61\u6811\u8857 555-555-5555 <p>By vertically partitioning the data, we separate the sensitive attributes (Name and Email) into a dedicated table, while the remaining non-sensitive attributes (Address and Phone) are stored in another table. This partitioning allows us to apply different security controls and access restrictions based on the sensitivity of the data. \u901a\u8fc7\u5bf9\u6570\u636e\u8fdb\u884c\u5782\u76f4\u5206\u533a\uff0c\u6211\u4eec\u5c06\u654f\u611f\u5c5e\u6027\uff08\u59d3\u540d\u548c\u7535\u5b50\u90ae\u4ef6\uff09\u5206\u79bb\u5230\u4e00\u4e2a\u4e13\u7528\u8868\u4e2d\uff0c\u800c\u5176\u4f59\u7684\u975e\u654f\u611f\u5c5e\u6027\uff08\u5730\u5740\u548c\u7535\u8bdd\uff09\u5b58\u50a8\u5728\u53e6\u4e00\u4e2a\u8868\u4e2d\u3002\u8fd9\u79cd\u5206\u533a\u5141\u8bb8\u6211\u4eec\u6839\u636e\u6570\u636e\u7684\u654f\u611f\u6027\u5e94\u7528\u4e0d\u540c\u7684\u5b89\u5168\u63a7\u5236\u548c\u8bbf\u95ee\u9650\u5236\u3002</p> <p>Through data anatomy analysis, we can now easily identify and protect sensitive data by focusing on the Sensitive Data Table. This allows us to implement stricter controls, such as encryption, access restrictions, and auditing on the sensitive attributes, while handling the non-sensitive attributes with less stringent controls. \u901a\u8fc7\u6570\u636e\u5256\u6790\u5206\u6790\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u4e13\u6ce8\u4e8e\u654f\u611f\u6570\u636e\u8868\u6765\u8f7b\u677e\u8bc6\u522b\u548c\u4fdd\u62a4\u654f\u611f\u6570\u636e\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5bf9\u654f\u611f\u5c5e\u6027\u5b9e\u65bd\u66f4\u4e25\u683c\u7684\u63a7\u5236\uff0c\u4f8b\u5982\u52a0\u5bc6\u3001\u8bbf\u95ee\u9650\u5236\u548c\u5ba1\u6838\uff0c\u540c\u65f6\u4f7f\u7528\u4e0d\u592a\u4e25\u683c\u7684\u63a7\u5236\u6765\u5904\u7406\u975e\u654f\u611f\u5c5e\u6027\u3002</p> <p>Vertical partitioning helps in minimizing the risk of unauthorized access or exposure of sensitive data since it segregates the sensitive attributes into a separate table, making it easier to enforce privacy policies and apply additional security measures if needed. It also enables organizations to simplify compliance efforts by applying specific controls only where necessary, reducing the attack surface and potential impact of a data breach. \u5782\u76f4\u5206\u533a\u6709\u52a9\u4e8e\u6700\u5927\u7a0b\u5ea6\u5730\u964d\u4f4e\u672a\u7ecf\u6388\u6743\u8bbf\u95ee\u6216\u6cc4\u9732\u654f\u611f\u6570\u636e\u7684\u98ce\u9669\uff0c\u56e0\u4e3a\u5b83\u5c06\u654f\u611f\u5c5e\u6027\u9694\u79bb\u5230\u5355\u72ec\u7684\u8868\u4e2d\uff0c\u4ece\u800c\u66f4\u8f7b\u677e\u5730\u5b9e\u65bd\u9690\u79c1\u7b56\u7565\u5e76\u5728\u9700\u8981\u65f6\u5e94\u7528\u5176\u4ed6\u5b89\u5168\u63aa\u65bd\u3002\u5b83\u8fd8\u4f7f\u7ec4\u7ec7\u80fd\u591f\u4ec5\u5728\u5fc5\u8981\u65f6\u5e94\u7528\u7279\u5b9a\u63a7\u5236\u6765\u7b80\u5316\u5408\u89c4\u6027\u5de5\u4f5c\uff0c\u4ece\u800c\u51cf\u5c11\u6570\u636e\u6cc4\u9732\u7684\u653b\u51fb\u9762\u548c\u6f5c\u5728\u5f71\u54cd\u3002</p>"},{"location":"course_notes/fit5137/#differential-privacy","title":"Differential privacy","text":"<p>Differential privacy is a privacy framework that provides a mathematical definition and methodology for preserving the privacy of individuals when analyzing or releasing statistical data. It aims to enable the analysis of aggregate data while minimizing the risk of revealing sensitive information about specific individuals within the dataset. \u5dee\u5206\u9690\u79c1\u662f\u4e00\u79cd\u9690\u79c1\u6846\u67b6\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u5b66\u5b9a\u4e49\u548c\u65b9\u6cd5\uff0c\u7528\u4e8e\u5728\u5206\u6790\u6216\u53d1\u5e03\u7edf\u8ba1\u6570\u636e\u65f6\u4fdd\u62a4\u4e2a\u4eba\u9690\u79c1\u3002\u5b83\u65e8\u5728\u5bf9\u6c47\u603b\u6570\u636e\u8fdb\u884c\u5206\u6790\uff0c\u540c\u65f6\u6700\u5927\u9650\u5ea6\u5730\u964d\u4f4e\u5728\u6570\u636e\u96c6\u4e2d\u6cc4\u9732\u6709\u5173\u7279\u5b9a\u4e2a\u4eba\u7684\u654f\u611f\u4fe1\u606f\u7684\u98ce\u9669\u3002</p> <p>The main goal of differential privacy is to add noise or randomness to the query results or data to prevent the identification of any individual's contribution to the dataset. Differential privacy ensures that the statistical results or insights obtained from the modified data are still accurate and useful, while protecting the privacy of individuals. \u5dee\u5206\u9690\u79c1\u7684\u4e3b\u8981\u76ee\u6807\u662f\u5411\u67e5\u8be2\u7ed3\u679c\u6216\u6570\u636e\u6dfb\u52a0\u566a\u58f0\u6216\u968f\u673a\u6027\uff0c\u4ee5\u9632\u6b62\u8bc6\u522b\u4efb\u4f55\u4e2a\u4eba\u5bf9\u6570\u636e\u96c6\u7684\u8d21\u732e\u3002\u5dee\u5206\u9690\u79c1\u786e\u4fdd\u4ece\u4fee\u6539\u540e\u7684\u6570\u636e\u4e2d\u83b7\u5f97\u7684\u7edf\u8ba1\u7ed3\u679c\u6216\u89c1\u89e3\u4ecd\u7136\u51c6\u786e\u548c\u6709\u7528\uff0c\u540c\u65f6\u4fdd\u62a4\u4e2a\u4eba\u9690\u79c1\u3002</p>"},{"location":"course_notes/fit5137/#demonstrate-how-differential-privacy-can-be-applied-to-protect-individual-privacy","title":"demonstrate how differential privacy can be applied to protect individual privacy","text":"<p>Original Table (Survey Responses): \u539f\u59cb\u8868\u683c\uff08\u8c03\u67e5\u56de\u590d\uff09\uff1a</p> Respondent ID\u00a0\u53d7\u8bbf\u8005\u7f16\u53f7 Age Group\u00a0\u5e74\u9f84\u7ec4 Has Medical Condition\u00a0\u6709\u533b\u7597\u72b6\u51b5 1 20-30 Yes 2 30-40 No 3 40-50 Yes 4 20-30 No 5 50-60 Yes 6 30-40 No <p>To achieve differential privacy, we need to introduce random noise into the analysis while ensuring that the privacy of individuals is preserved. Let's focus on computing the percentage of individuals in each age group who have a medical condition. \u4e3a\u4e86\u5b9e\u73b0\u5dee\u5206\u9690\u79c1\uff0c\u6211\u4eec\u9700\u8981\u5728\u5206\u6790\u4e2d\u5f15\u5165\u968f\u673a\u566a\u58f0\uff0c\u540c\u65f6\u786e\u4fdd\u4fdd\u62a4\u4e2a\u4eba\u9690\u79c1\u3002\u8ba9\u6211\u4eec\u4e13\u6ce8\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u5e74\u9f84\u7ec4\u4e2d\u60a3\u6709\u75be\u75c5\u7684\u4eba\u7684\u767e\u5206\u6bd4\u3002</p> <p>Modified Table with Noise: \u4fee\u6539\u540e\u7684\u5e26\u566a\u58f0\u8868\uff1a</p> Age Group\u00a0\u5e74\u9f84\u7ec4 Has Medical Condition\u00a0\u6709\u533b\u7597\u72b6\u51b5 20-30 Yes 30-40 No 40-50 Yes 20-30 Yes 50-60 Yes 30-40 No <p>To compute the percentage of individuals in each age group with a medical condition, we add random noise to the counts while preserving privacy. Let's say we add Laplace noise with a privacy parameter (\u03b5) of 0.5 to each count: \u4e3a\u4e86\u8ba1\u7b97\u6bcf\u4e2a\u5e74\u9f84\u7ec4\u4e2d\u60a3\u6709\u75be\u75c5\u7684\u4eba\u7684\u767e\u5206\u6bd4\uff0c\u6211\u4eec\u5728\u4fdd\u62a4\u9690\u79c1\u7684\u540c\u65f6\u5c06\u968f\u673a\u566a\u58f0\u6dfb\u52a0\u5230\u8ba1\u6570\u4e2d\u3002\u5047\u8bbe\u6211\u4eec\u5c06\u9690\u79c1\u53c2\u6570 \uff08\u03b5\uff09 \u4e3a 0.5 \u7684\u62c9\u666e\u62c9\u65af\u566a\u58f0\u6dfb\u52a0\u5230\u6bcf\u4e2a\u8ba1\u6570\u4e2d\uff1a</p> Age Group\u00a0\u5e74\u9f84\u7ec4 Has Medical Condition\u00a0\u6709\u533b\u7597\u72b6\u51b5 20-30 Yes 30-40 No 40-50 Yes 20-30 Yes 50-60 Yes 30-40 No <p>After adding the noise, the computation of percentages is as follows: \u6dfb\u52a0\u566a\u58f0\u540e\uff0c\u767e\u5206\u6bd4\u7684\u8ba1\u7b97\u5982\u4e0b\uff1a</p> <ul> <li>Age Group 20-30: 2 individuals have a medical condition (Noisy count: 2)     20-30\u5c81\u5e74\u9f84\u7ec4\uff1a2\u4eba\u6709\u5065\u5eb7\u95ee\u9898\uff08\u566a\u97f3\u8ba1\u6570\uff1a2\uff09</li> <li>Age Group 30-40: 0 individuals have a medical condition (Noisy count: 0)     \u5e74\u9f84\u7ec4 30-40\uff1a 0 \u4e2a\u4eba\u6709\u5065\u5eb7\u95ee\u9898 \uff08\u566a\u97f3\u8ba1\u6570\uff1a 0\uff09</li> <li>Age Group 40-50: 1 individual has a medical condition (Noisy count: 1)     \u5e74\u9f84\u7ec4 40-50\uff1a1 \u4eba\u6709\u5065\u5eb7\u95ee\u9898\uff08\u566a\u97f3\u8ba1\u6570\uff1a1\uff09</li> <li>Age Group 50-60: 1 individual has a medical condition (Noisy count: 1)     50-60\u5c81\u5e74\u9f84\u7ec4\uff1a1\u4eba\u60a3\u6709\u75be\u75c5\uff08\u566a\u97f3\u8ba1\u6570\uff1a1\uff09</li> </ul> <p>Now, we can compute the percentage of individuals in each age group with a medical condition: \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2a\u5e74\u9f84\u7ec4\u4e2d\u60a3\u6709\u75be\u75c5\u7684\u4eba\u7684\u767e\u5206\u6bd4\uff1a</p> <ul> <li>Age Group 20-30: 100% (Noisy Percentage: 100%)     20-30\u5c81\u5e74\u9f84\u7ec4\uff1a100%\uff08\u566a\u97f3\u767e\u5206\u6bd4\uff1a100%\uff09</li> <li>Age Group 30-40: 0% (Noisy Percentage: 0%)     \u5e74\u9f84\u7ec4 30-40\uff1a 0% \uff08\u566a\u97f3\u767e\u5206\u6bd4\uff1a 0%\uff09</li> <li>Age Group 40-50: 50% (Noisy Percentage: 50%)     40-50\u5c81\u5e74\u9f84\u7ec4\uff1a50%\uff08\u566a\u97f3\u767e\u5206\u6bd4\uff1a50%\uff09</li> <li>Age Group 50-60: 100% (Noisy Percentage: 100%)     50-60\u5c81\u5e74\u9f84\u7ec4\uff1a100%\uff08\u566a\u97f3\u767e\u5206\u6bd4\uff1a100%\uff09</li> </ul> <p>By adding random noise, we have protected the privacy of individuals while providing approximate aggregate insights. The noisy counts and percentages ensure that it becomes very difficult to identify the individual responses accurately. \u901a\u8fc7\u6dfb\u52a0\u968f\u673a\u566a\u58f0\uff0c\u6211\u4eec\u4fdd\u62a4\u4e86\u4e2a\u4eba\u9690\u79c1\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86\u8fd1\u4f3c\u7684\u6c47\u603b\u89c1\u89e3\u3002\u5608\u6742\u7684\u8ba1\u6570\u548c\u767e\u5206\u6bd4\u786e\u4fdd\u51c6\u786e\u8bc6\u522b\u5355\u4e2a\u54cd\u5e94\u53d8\u5f97\u975e\u5e38\u56f0\u96be\u3002</p>"},{"location":"course_notes/fit5147/","title":"FIT5147 Data exploration and visualisation 2023 s1","text":"<p>Create time: 2023-02-24  Last update: 2023-02-24</p>"},{"location":"course_notes/fit5147/#how-to-use-the-fit-study-note-document","title":"How to use the FIT study Note document","text":"<ol> <li>download the markdown file repository and  navigate to the <code>docs</code> folder</li> <li>view all the markdown files via Obsidian vault that can show the linked section in the note document   </li> <li> <p>You may find some extra material or program template  repository in the Course Brief introduction for the FIT Note markdown Document (some course don't have )</p> </li> <li> <p>you can view the web page which transfer from MD file online but will lose the extra information or wrong    markdown display</p> </li> </ol>"},{"location":"course_notes/fit5147/#fit5147-data-exploration-and-visualisation-course-brief-introduction","title":"FIT5147 Data exploration and visualisation Course Brief introduction","text":"week Introduction 1 Visual Analytics and Visualisation For Data Exploration 2 Visualisation of Tabular Data 3 Analysis of Trends and Patterns in Tabular Data 4 Data Maps, Tools For Creating Data Maps 5 Spatial Analytics 6 Network Data Analysis &amp; Visualisation 7 Textual Data Analysis &amp; Visualisation 8 Visualisation Design Methodology 9 Human Visual System 10 Visual Communication 11 Interactive Data Visualisation 12 History And Future Of Visualisation <p>FIT5147 - Data exploration and visualisation done for the year 2023. (Semester 1)  </p>"},{"location":"course_notes/fit5147/#r-introduction","title":"R introduction","text":"<p>For the introduction and basic syntax. Please refer to R introduction</p>"},{"location":"course_notes/fit5147/#week-1-visual-analytics-and-visualisation-for-data-exploration","title":"Week 1: Visual Analytics and Visualisation For Data Exploration","text":""},{"location":"course_notes/fit5147/#learning-objectives","title":"Learning Objectives:","text":"<p>At the end of this week, you should:</p> <ul> <li>be able to read data into\u00a0R\u00a0and\u00a0Tableau Public\u00a0and use visualisations to explore the data</li> <li>understand the role visualisation plays in data science: data checking and cleaning, exploration and discovery, and the presentation and communication of results</li> <li>know what visual analytics is and have an understanding of the complementary role visualisation and data analytics play in data science</li> </ul>"},{"location":"course_notes/fit5147/#week-2-visualisation-of-tabular-data","title":"Week 2 Visualisation Of Tabular Data","text":""},{"location":"course_notes/fit5147/#learning-objectives_1","title":"Learning objectives","text":"<ul> <li>seen the many standard visualisations (line graphs, bar charts, frequency distributions, time series data etc \u6298\u7ebf\u56fe\u3001\u6761\u5f62\u56fe\u3001\u9891\u7387\u5206\u5e03\u3001\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7b49) for showing tabular data and know when to use them;</li> <li>seen standard visualisations for multivariate tabular data (small multiples, MDS, SPLOMs etc) and know when to use them; \u591a\u5143\u8868\u683c\u6570\u636e\uff08\u5c0f\u500d\u6570\u3001MDS\u3001SPLOM \u7b49\uff09\u7684\u6807\u51c6\u53ef\u89c6\u5316</li> <li>the ability to use these visualisation to understand data distributions, to test assumptions such as normality and to guide transformation of data; \u7406\u89e3\u6570\u636e\u5206\u5e03\u3001\u6d4b\u8bd5\u6b63\u6001\u6027\u7b49\u5047\u8bbe\u5e76\u6307\u5bfc\u6570\u636e\u8f6c\u6362</li> <li>knowledge of curve and surface fitting to data; \u66f2\u7ebf\u548c\u66f2\u9762\u62df\u5408\u6570\u636e</li> <li>knowledge of data clustering techniques; \u6570\u636e\u805a\u7c7b\u6280\u672f</li> <li>have first-hand experience with R and the graphics package ggplot2 to<ul> <li>read, check, clean and transform data;\u8bfb\u53d6\u3001\u68c0\u67e5\u3001\u6e05\u7406\u548c\u8f6c\u6362\u6570\u636e\uff1b</li> <li>construct standard visualisations for tabular data, curve fitting, data clustering and to understand data distributions; \u4e3a\u8868\u683c\u6570\u636e\u3001\u66f2\u7ebf\u62df\u5408\u3001\u6570\u636e\u805a\u7c7b\u6784\u5efa\u6807\u51c6\u53ef\u89c6\u5316\u5e76\u7406\u89e3\u6570\u636e\u5206\u5e03</li> <li>create interactive visualisations using the package Shiny.\u4f7f\u7528\u5305 Shiny \u521b\u5efa\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u3002</li> </ul> </li> </ul>"},{"location":"course_notes/fit5147/#reference","title":"reference","text":"<p>Module 2 Making sense of tabular data</p>"},{"location":"course_notes/fit5147/#tutorial","title":"tutorial","text":"<ul> <li>be able to read, check, clean and transform data with R</li> <li>be able to do create advanced plots and visualisations using ggplot2</li> </ul>"},{"location":"course_notes/fit5147/#_1","title":"FIT5147 Data exploration and visualisation 2023 s1","text":""},{"location":"course_notes/fit5147/#assignment-1-project-proposal","title":"Assignment 1 Project Proposal","text":""},{"location":"course_notes/fit5147/#requirement","title":"requirement","text":"<pre><code>title: Requirment\ncollapse:\n\n1. Identify the project topic, related questions that you want to address, and data source(s) that you will be using to answer those questions.\n2. Submit your Project Proposal in the Assessment section of Moodle in Week 3 Project Proposal (2%) Monday, 13 March 2023, 9:30 AM  \n\nWrite a one page document consists of the following sections:\n &gt; 1. Your full name, student ID, tutors\u2019 names, and tutorial number.\n &gt; 2. Project title.\n &gt; 3. Brief introduction of your topic and motivation (max 1-2 paragraphs).\n &gt; 4. Up to 3 questions you wish to answer. The number of questions depends on the scope of the question itself. You can have one general question or three more detailed ones.\n &gt; 5. Data source(s) you plan to use to answer these questions, including a brief description of the data in each data source (e.g., number of rows; number of columns; type of data: tabular, spatial, network, textual or other; URL).\n &gt; 6. The bibliographical details of any references you have cited in the previous sections.  \n\nThe topic and questions should allow for interesting and detailed analysis in the Data Exploration Project (DEP) and the subsequent Data Visualisation Project (DVP, due at the end of semester), which involves presenting the findings from your DEP in a narrative format. It is strongly recommended that you do not include questions that are\n\u25cf too easy to answer (e.g., what is the correlation between x and y, what is the average value of z variable, what are the top/bottom N values), or\n\u25cf too difficult to do, or\n\u25cf not relevant to the unit (e.g., training a machine learning model), or\n\u25cf are not possible to find out from the data sources provided\n &gt; Proposals with such questions will all be rejected (and not receive the Suitability and Clarity grade, according to the marking rubric). If in doubt, you should talk to your tutor during their consultation before the due date.\n &gt;  Good questions are general enough that they are not linked to specific parts of the data, allowing for more open-ended and exploratory analysis. For instance, asking \u201cWhere is the safest part of the network?\u201d lets you explore various interpretations of how to link \u201cwhere\u201d and \u201csafest\u201d to the data about a network, whereas \u201cWhich LGA-code has the lowest value of number-of-deaths?\u201d is very specific to the data and limits the exploration and visualisations possible.\n &gt; The data must be accessible to the teaching staff, so the use of open data is encouraged (see the list of suggested data sources at the end of this document). Use of closed or proprietary data is allowed as long as explicit permission has been granted by the original source(s) for its use in the assignment.\n &gt;  The data should include the last couple of years. Avoid common topics like COVID-19, unless you can think of some novel questions relating to it, perhaps by also using data on another related topic and from a different source. In such a case, you must discuss your intentions with your tutor before the due date.\n &gt;  Please ensure you read the rest of this entire document before deciding on your project, as the proposal is for the entire Data Exploration Project. See the end of this document for an example proposal and potential data sources that you may look at to get yourself started\n\n</code></pre>"},{"location":"course_notes/fit5147/#how-to-write-the-proposal","title":"how to write the proposal","text":"<pre><code>title: Establish the research area based on:\n 1. your interest area   (Player transfer; Player Hot area; AirBNB )  \n1. which area is popular (covid; House price; Digital mining)   \n1. where can you find the available data ([Kaggle: Your Machine Learning and Data Science Community](https://www.kaggle.com/); [FiveThirtyEight | FiveThirtyEight uses statistical analysis \u2014 hard numbers \u2014 to tell compelling stories about politics, sports, science, economics and culture.](https://fivethirtyeight.com/))  \n2. Which research direction (Which city is the most popular vacation destination? Why this position has more chance to goal? From different month and area to analysis )  \n</code></pre> <pre><code>title: How to write:\n1.  Why come up this idea\n2. how to select the data  \n3.  relation between different column (logic integration)\n</code></pre>"},{"location":"course_notes/fit5147/#programming-exercise-1-tableau-public","title":"Programming Exercise 1: Tableau Public","text":"<pre><code>title: Requirment\ncollapse:\n\n1. Use data visualisation to check for and find the three aforementioned irregularities in the dataset. Each types of irregularity may occur multiple times in the data.  \n2. Amend the data to correct these errors using any tool of your choice (e.g., Excel,  Python, R, Tableau)  \n3. Using visual analysis, answer the following questions (Q1: Compare and contrast when different types of frogs were observed.  Consider this on both an hourly and a monthly timescale. What does this  suggest about the behaviour of the researchers or the frogs?  Q2: Compare and contrast the \u201cType of Observation\u201d used to gather the  data. How does this variable support, challenge or change your conclusions)\n4. Write a report that describes this data exploration process (see below for details)  \n\nWritten Report  \nOnce you have finished your data exploration, write a report that contains the following  information:  \n1. Data checking and cleaning (i.e., Steps 1 to 3)  \nAn image to show what your data looks like after loading it in Tableau  \nA brief explanation (maximum of one paragraph per error) and an  accompanying image of each of the errors or irregularities that you have  found, showing how you found them using Tableau, and explaining &amp;  justifying how you resolved them. The image must show a relevant  visualisation, not just the data or a table.  A\u7b80\u8981\u8bf4\u660e\uff08\u6bcf\u4e2a\u9519\u8bef\u6700\u591a\u4e00\u6bb5\uff09\u548c\u4e00\u5f20\u60a8\u53d1\u73b0\u7684\u6bcf\u4e2a\u9519\u8bef\u6216\u8fdd\u89c4\u884c\u4e3a\u7684\u56fe\u7247\uff0c\u663e\u793a\u60a8\u5982\u4f55\u4f7f\u7528 Tableau \u53d1\u73b0\u5b83\u4eec\uff0c\u5e76\u89e3\u91ca\u548c\u8bc1\u660e\u60a8\u662f\u5982\u4f55\u89e3\u51b3\u5b83\u4eec\u7684\u3002\u56fe\u7247\u5fc5\u987b\u663e\u793a\u76f8\u5173\u7684\u53ef\u89c6\u5316\u6548\u679c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6570\u636e\u6216\u8868\u683c\n2. Data exploration (i.e., Step 4)  \nYour answers to Q1 and Q2 with accompanying images of the data  visualisations that you used to support your analysis, and a brief explanation  of why you have used those type of visualisations \u60a8\u5bf9 Q1 \u548c Q2 \u7684\u56de\u7b54\uff0c\u4ee5\u53ca\u60a8\u7528\u4e8e\u652f\u6301\u5206\u6790\u7684\u6570\u636e\u53ef\u89c6\u5316\u7684\u9644\u5e26\u56fe\u50cf\uff0c\u4ee5\u53ca\u60a8\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\u7684\u53ef\u89c6\u5316\u7684\u539f\u56e0\u7684\u7b80\u8981\u8bf4\u660e\n\nsubmit requirment\n+ Be submitted as a PDF file  \n+ Be no more than 5 pages in length, including figures, with a minimum font size of  10 (title page and any table of contents are excluded from the page limit)  \n+ Be properly structured with headings, subheadings, figure captions, page  numbers, and references (if appropriate)  \n+ Have high quality images of your visualisations with clearly readable and legible  text/labels (presume that it is read as part of an A4 document with no zooming)  \n+ Not include any code snippets  \n+ No Generative AI software or system may be used to complete this assessment  task.\n\nssessment Criteria  \nThe following outlines the criteria which you will be assessed against.  \n+ Demonstrated ability to check and clean data and read into Tableau Public [1%]  \n+ Demonstrated ability to visually explore data using Tableau Public [2%]  \n+ Demonstrated ability to see trends/patterns in data [1%]  \n+ Quality of report [1%]  \n+ mandatory interviews to discuss your submission will occur  during the Tutorial in Week 5\n+ \n</code></pre>"},{"location":"course_notes/fit5147/#week-3","title":"week 3","text":""},{"location":"course_notes/fit5147/#quiz","title":"quiz","text":"<pre><code>Which of the following statements is incorrect? \na. Common analytic techniques are required to determine the values of visual variables. \nb. A visual variable can be used to help visually differentiate between different values in the data. \nc. The size and shape of each point in a scatter plot may be visual variables. \nd. Visual variables are encoded to parts of the data.\n\nWhich of the following statements is incorrect? a. Common analytic techniques are required to determine the values of visual variables. b. A visual variable can be used to help visually differentiate between different values in the data. c. The size and shape of each point in a scatter plot may be visual variables. d. Visual variables are encoded to parts of the data.\n</code></pre> <pre><code>What does visual encoding mean in visualisation design? \na. How data is aggregated and filtered \nb. How the user interacts with the visualisation \nc. How different views are arranged \nd. How data is mapped to visual and spatial variables e. How the visualisation is programmed\n\nD. Visual encoding in visualization design refers to the process of mapping data to visual and spatial variables, such as position, size, shape, color, and texture, among others. This involves assigning different visual variables to different data attributes in order to represent the data in a meaningful and effective way. By using visual encoding, designers can create visualizations that allow users to see patterns, trends, and relationships in the data more easily, and to gain insights that might be difficult to discern from raw data. Therefore, option D is the correct answer.\n</code></pre> <pre><code>Given the total sales for different product categories at multiple stores, which of the following would be the best visualisation idiom to compare the relative proportion of sales for different product categories across all stores? \na. Compound bar chart \nb. Spider diagram \nc. Normalised stacked bar chart \nd. Parallel coordinates for each store with axes for each product category \ne. Histogram\n\nA normalized stacked bar chart allows you to display the contribution of each product category to total sales in a stacked bar chart format, with each category represented by a different color. Normalizing the data means that each bar represents a percentage of the total sales for that store, making it easier to compare the relative contributions of each category across stores. Therefore, option C is the correct answer.\n</code></pre> <pre><code>Which of the following is NOT a characteristic of hierarchical clustering? \na. It can be visualised using a parallel coordinates plot \nb. It can be visualised using a dendrogram \nc. Cophenetic correlation coefficient can be used to measure how well the clustering explains the data \nd. An item that belong to a child group also belongs to the parent group \ne. It can be done using UPGMA (unweighted pair-group method using arithmetic averages) method\n\nparallel coordinates plot is a visualization technique used to display multivariate data by plotting each observation as a sequence of points along a set of parallel axes.\n</code></pre> <pre><code>Which of the following visualisations is a radial version of parallel coordinates? \na. Small multiples \nb. Pie chart \nc. Spider diagram or radar chart \nd. Doughnut chart e. Scatter plot matrix (SPLOM)\n\nThis chart displays multivariate data by plotting each observation as a point on a set of radial axes, with one axis for each variable. Each variable has a value that determines the position along its corresponding axis, and the resulting shape of the plot reveals patterns and relationships in the data. Therefore, option C is the correct answer.\n</code></pre> <pre><code>Which of the following is an example of categorical data? \na. Name \nb. Yearly salary \nc. Education level \nd. Age \ne. Height\nCategorical data consists of categories or labels that are not numerical in nature, and it can be further divided into nominal and ordinal categories. In this case, education level is an example of ordinal categorical data because it has a natural ordering (e.g., high school, bachelor's degree, master's degree, etc.). The other options are all examples of numerical data or continuous data. Therefore, option C is the correct answer.\n</code></pre>"},{"location":"course_notes/fit5147/#week-4","title":"Week 4","text":""},{"location":"course_notes/fit5147/#quiz_1","title":"Quiz","text":""},{"location":"course_notes/fit5147/#1-test-cases-for-weak-equivalence-class","title":"1 test cases for weak equivalence class","text":"<p>In the example, each of the three variables a, b and c is the length of a side from the range <code>[1, 10]</code>.\u00a0Come up with test cases for weak equivalence class testing that cover the same expected outputs (isosceles, equilateral, scalene, not a triangle). | Test Case | a   | b   | c   | Expected Output | |-----------|-----|-----|-----|----------------| | TC1       | 1   | 1   | 1   | Equilateral    | | TC2       | 2   | 2   | 3   | Isosceles       | | TC3       | 3   | 4   | 5   | Scalene         | | TC4       | 10  | 10  | 10  | Equilateral    | | TC5       | 6   | 8   | 8   | Isosceles       | | TC6       | 2   | 3   | 7   | Not a Triangle | | TC7       | 9   | 10  | 1  | Not a Triangle |</p>"},{"location":"course_notes/fit5147/#quiz-2","title":"Quiz 2","text":"<p>Check out this ShareGPT conversation</p>"},{"location":"course_notes/fit5147/#quiz-3","title":"Quiz 3","text":""},{"location":"course_notes/fit5147/#dvp","title":"DVP","text":""},{"location":"course_notes/fit5147/#five-design-sheet","title":"five design sheet","text":""},{"location":"course_notes/fit5147/#sheet-1-brainstorm","title":"Sheet 1: Brainstorm","text":"<p>Generate ideas, filter, categorize, combine, refine &amp; question </p>"},{"location":"course_notes/fit5147/#different-style-234-layout-focus-operations-evaluation","title":"Different style, 2,3,4. Layout, focus, operations, evaluation","text":"<p>Why we need different style: Each style has its own adv and disavd, Where we can find style: Refer week8 -week10 lecture materials, </p> <p></p> <p></p>"},{"location":"course_notes/fit5147/#sheet-5-final-version","title":"Sheet 5: final version","text":"<p>It can be same as previous sheet, or it can be formed by elements from sheet 2,3,4. Deriving from sheet 2,3,4 is much better way. why bar chart why this colour  </p> <p>In the DVP assignment, you have to explain in detail about sheet 2,3,4 design. The reasoning and process behind your design How you implemented the design What you learnt from the assignment Any small differences between Sheet 5 and the implementation</p>"},{"location":"course_notes/fit5147/#how-to-design","title":"How to design","text":""},{"location":"course_notes/fit5147/#stage-1-visual-channel","title":"stage 1 visual channel","text":"<p>colour, symbols, interactive, highlight</p>"},{"location":"course_notes/fit5147/#stage-2-grouping","title":"stage 2 grouping","text":"<p>see the difference between the data</p>"},{"location":"course_notes/fit5147/#stage-3-process","title":"stage 3 process","text":"<p>What is the kind of data to be visualised? Why is the data being visualised\u2014 what task does the user wish to perform? How is the data visually represented and what interaction is provided?</p> <p>What: Tabular data: Data organised in tables, a row for each data Item and a column for each of its attributes. Spatial data: Data which is naturally organised and understood in terms of its spatial location or extent. Network data: Nodes in the network are data items and links between the nodes are relations between. For instance a social network. Textual data: Textual documents and collections of textual documents</p> <p>Why (according to Munzner) has 3 main reasons: Discover: derive insight from the data. This includes both data checking and exploration. Present: present insight or knowledge to some intended audience; Enjoy: Visualisations that entice and entertain.</p> <p>Discover - Analytical tasks include: Search for elements that satisfy certain properties, if they exist. This might be locating a known data point, filtering the data, or finding outliers. Identify the properties of a single data item Compare or rank elements Visually identify patterns in some subset of elements. Calculate derived properties not originally in the data.</p> <p>Present - Presentation tasks include Visualise by mapping elements and their attributes to visual variables to create a view Manipulate (or configure) a view by navigating and selecting subsets of elements</p> <p>Providence tasks that further support analysis include Annotate visual elements with text or graphical elements Record visualisation elements so that they can be preserved and accessed outside the analytics tool. Revisit an earlier visualisation or relocate an element or pattern that was previously found by the analyst</p> <p>Providence tasks that further support analysis include Annotate visual elements with text or graphical elements Record visualisation elements so that they can be preserved and accessed outside the analytics tool. Revisit an earlier visualisation or relocate an element or pattern that was previously found by the analyst</p>"},{"location":"course_notes/fit5147/#quiz-4","title":"quiz 4","text":"<p>Check out this ShareGPT conversation </p>"},{"location":"course_notes/fit5171/","title":"FIT5171 System validation and verification, quality and standards 2023 s1","text":"<p>Create time: 2023-02-24  Last update: 2023-06-27</p>"},{"location":"course_notes/fit5171/#how-to-use-the-fit-study-note-document","title":"How to use the FIT study Note document","text":"<ol> <li>download the markdown file repository and  navigate to the <code>docs</code> folder</li> <li>view all the markdown files via Obsidian vault that can show the linked section in the note document   </li> <li> <p>You may find some extra material or program template  repository in the Course Brief introduction for the FIT Note markdown Document (some course don't have )</p> </li> <li> <p>you can view the web page which transfer from MD file online but will lose the extra information or wrong    markdown display</p> </li> </ol>"},{"location":"course_notes/fit5171/#fit5171-system-validation-and-verification-quality-and-standards-course-brief-introduction","title":"FIT5171 System validation and verification, quality and standards Course Brief introduction","text":""},{"location":"course_notes/fit5171/#course-outline","title":"course outline","text":"week Introduction 1 Overview of unit &amp; Fundamentals of software testing 2 Test Planning &amp; Test-driven development 3 Discrete mathematics refresher 4 Black box / functional testing 5 White box / structural testing 6 Component testing 7 Software quality &amp; metrics 8 System testing 9 Object-oriented testing 10 Software verification and validation techniques 11 Revisiting the fundamentals of testing <p>FIT5171 - System validation and verification, quality and standards - Monash University done for the year 2023. (Semester 1)  </p>"},{"location":"course_notes/fit5171/#git-repo-for-this-unit","title":"git repo for this unit","text":"<p>GitHub - GreenH47/FIT5171_2023s1: FIT5171 System validation and verification, quality and standards - S1 2023 </p>"},{"location":"course_notes/fit5171/#note-in-pdf-version","title":"Note in Pdf version","text":"<p>FIT5171_2023s1/exam/fit5171note.pdf at main \u00b7 GreenH47/FIT5171_2023s1 \u00b7 GitHub </p>"},{"location":"course_notes/fit5171/#what-do-you-need-to-know-before-hand","title":"What do you need to know before hand?","text":"<p>A solid foundation in software development Software Requirements Specification (SRS) Software development (Java) Software Development Life Cycle (SDLS) A good command of discrete mathematics concepts This unit covers the core software engineering disciplines concerned with managing and delivering quality software. Topics include processes, tools and techniques for system validation and verification, including major commercial tools used in industry. It shows how to detect, analyse and control defects in complex software systems. Inspection and testing methodologies, analysis of artefacts, robustness, quality assurance, and advanced software validation and verification methods are covered.</p>"},{"location":"course_notes/fit5171/#learning-outcomes","title":"Learning outcomes","text":"<ol> <li>Explain the importance of quality assurance in software engineering;  </li> <li>Articulate the role of validation and verification methods in the system development life cycle; key issues in software testing, testing levels and testing techniques;  </li> <li>Categorise and apply selection and combination of techniques and test related measures;  </li> <li>Measure, evaluate and analyse software under test using different quality and complexity metrics;  </li> <li>Develop adequate test cases to help detect software system defects using industry-strength IDEs, unit testing frameworks such as JUnit, code coverage tools such as Cobertura, and other similar products;  </li> <li>Implement continuous integration (CI) at unit, integration &amp; system testing level using a CI server such as Jenkins to automatically run regression test suites on the system under test.</li> </ol>"},{"location":"course_notes/fit5171/#exam-review","title":"Exam review","text":"<p>Prepare for following weeks thoroughly: 4, 5, 6, 8, 9, 10, 11 + Test strategy, test plan, TDD + Blackbox Testing (aka functional testing) + Boundary Value Testing (BVT) + normal/robust, weak/normal + Equivalent Class Testing (ECT) + Decision Table Testing (DTT) + White-box Testing (aka structural testing) + Program graph + DD-path graph + MM-Path graph + Basis Path testing + Cyclomatic complexity  </p>"},{"location":"course_notes/fit5171/#week-1","title":"week 1","text":""},{"location":"course_notes/fit5171/#tdd","title":"TDD","text":"<p>TDD stands for Test Driven Development, which is a software development process that follows a specific cycle. Here are the steps in the TDD cycle: \u5f53\u7136\uff01TDD \u4ee3\u8868 \u6d4b\u8bd5 \u9a71\u52a8 \u5f00\u53d1\uff0c \u662f \u4e00\u4e2a \u9075\u5faa \u7279\u5b9a \u5468\u671f \u7684 \u8f6f\u4ef6 \u5f00\u53d1 \u8fc7\u7a0b\u3002\u4ee5\u4e0b\u662fTDD\u5468\u671f\u4e2d\u7684\u6b65\u9aa4\uff1a 1. Add a test: The first step in TDD is to write a test. The test should be a small, focused piece of code that verifies a specific behavior or feature of the application.\u6dfb\u52a0\u6d4b\u8bd5\uff1aTDD \u7684\u7b2c\u4e00\u6b65\u662f\u7f16\u5199\u6d4b\u8bd5\u3002\u6d4b\u8bd5\u5e94\u8be5\u662f\u4e00\u5c0f\u6bb5\u91cd\u70b9\u4ee3\u7801\uff0c\u7528\u4e8e\u9a8c\u8bc1\u5e94\u7528\u7a0b\u5e8f\u7684\u7279\u5b9a\u884c\u4e3a\u6216\u529f\u80fd\u3002 2. Run the test: Once you have written the test, you should run it to verify that it fails. If it passes, then either the test or the code under test is incorrect.\u8fd0\u884c\u6d4b\u8bd5\uff1a\u7f16\u5199\u6d4b\u8bd5\u540e\uff0c\u5e94\u8fd0\u884c\u5b83\u4ee5\u9a8c\u8bc1\u5b83\u662f\u5426\u5931\u8d25\u3002\u5982\u679c\u901a\u8fc7\uff0c\u5219\u6d4b\u8bd5\u6216\u88ab\u6d4b\u4ee3\u7801\u4e0d\u6b63\u786e\u3002 3. Write the code: After the test fails, you need to write the minimum amount of code required to make the test pass. \u7f16\u5199\u4ee3\u7801\uff1a\u6d4b\u8bd5\u5931\u8d25\u540e\uff0c\u60a8\u9700\u8981\u7f16\u5199\u4f7f\u6d4b\u8bd5\u901a\u8fc7\u6240\u9700\u7684\u6700\u5c11\u4ee3\u7801\u91cf\u3002 4. Run all tests: Once you have written the code, you need to run the test suite again to make sure that everything continues to work correctly.\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\uff1a\u7f16\u5199\u4ee3\u7801\u540e\uff0c\u9700\u8981\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u5957\u4ef6\u4ee5\u786e\u4fdd\u4e00\u5207\u7ee7\u7eed\u6b63\u5e38\u5de5\u4f5c\u3002 5. Refactor the code: Once the test suite is passing, you can then begin to refactor the code to make it more efficient, maintainable, and extensible.\u91cd\u6784\u4ee3\u7801\uff1a\u6d4b\u8bd5\u5957\u4ef6\u901a\u8fc7\u540e\uff0c\u53ef\u4ee5\u5f00\u59cb\u91cd\u6784\u4ee3\u7801\uff0c\u4f7f\u5176\u66f4\u9ad8\u6548\u3001\u66f4\u6613\u4e8e\u7ef4\u62a4\u548c\u53ef\u6269\u5c55\u3002  6. Repeat: You should then repeat this cycle, adding new tests and features, and refactoring the code as needed until the software is complete.\u91cd\u590d\uff1a\u7136\u540e\uff0c\u5e94\u91cd\u590d\u6b64\u5faa\u73af\uff0c\u6dfb\u52a0\u65b0\u7684\u6d4b\u8bd5\u548c\u529f\u80fd\uff0c\u5e76\u6839\u636e\u9700\u8981\u91cd\u6784\u4ee3\u7801\uff0c\u76f4\u5230\u8f6f\u4ef6\u5b8c\u6210</p>"},{"location":"course_notes/fit5171/#comparison-of-different-level-of-testing","title":"Comparison of different level of testing","text":""},{"location":"course_notes/fit5171/#tdd-pros-cons","title":"TDD: pros &amp; cons","text":"Advantage\u00a0\u4f18\u52bf Disadvantage More tests, less debugging  \u66f4\u591a\u6d4b\u8bd5\uff0c\u66f4\u5c11\u8c03\u8bd5 Difficult in certain scenarios (UI, database, network)  \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff08UI\u3001\u6570\u636e\u5e93\u3001\u7f51\u7edc\uff09\u5f88\u96be More productive\u00a0\u66f4\u9ad8\u6548 Needs management support\u00a0\u9700\u6c42\u7ba1\u7406\u652f\u6301 Validates not only code, but also design  \u4e0d\u4ec5\u9a8c\u8bc1\u4ee3\u7801\uff0c\u8fd8\u9a8c\u8bc1\u8bbe\u8ba1 Developer blind spots\u00a0\u5f00\u53d1\u4eba\u5458\u76f2\u70b9 Better test coverage, greater confidence  \u66f4\u597d\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u66f4\u5927\u7684\u4fe1\u5fc3 False sense of security\u00a0\u865a\u5047\u7684\u5b89\u5168\u611f Better code structure\u00a0\u66f4\u597d\u7684\u4ee3\u7801\u7ed3\u6784 Maintenance overhead for (bad) tests  \uff08\u4e0d\u826f\uff09\u6d4b\u8bd5\u7684\u7ef4\u62a4\u5f00\u9500"},{"location":"course_notes/fit5171/#unit-test","title":"unit test","text":"<p>A unit test is a type of automated test that is designed to validate the behavior of a single unit of code, typically a method or function. The goal of unit testing is to verify that the code under test works as expected and adheres to its specified requirements. \u5355\u5143\u6d4b\u8bd5\u662f\u4e00\u79cd\u81ea\u52a8\u6d4b\u8bd5\uff0c\u65e8\u5728\u9a8c\u8bc1\u5355\u4e2a\u4ee3\u7801\u5355\u5143\uff08\u901a\u5e38\u662f\u65b9\u6cd5\u6216\u51fd\u6570\uff09\u7684\u884c\u4e3a\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u76ee\u6807\u662f\u9a8c\u8bc1\u5f85\u6d4b\u8bd5\u7684\u4ee3\u7801\u662f\u5426\u6309\u9884\u671f\u5de5\u4f5c\u5e76\u9075\u5b88\u5176\u6307\u5b9a\u7684\u8981\u6c42\u3002 Unit tests are typically written using a testing framework, which provides a set of tools and methods for defining test cases and verifying their results. In Java, popular testing frameworks include JUnit and TestNG. \u5355\u5143\u6d4b\u8bd5\u901a\u5e38\u4f7f\u7528\u6d4b\u8bd5\u6846\u67b6\u7f16\u5199\uff0c\u8be5\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u7ec4\u7528\u4e8e\u5b9a\u4e49\u6d4b\u8bd5\u7528\u4f8b\u548c\u9a8c\u8bc1\u5176\u7ed3\u679c\u7684\u5de5\u5177\u548c\u65b9\u6cd5\u3002\u5728Java\u4e2d\uff0c\u6d41\u884c\u7684\u6d4b\u8bd5\u6846\u67b6\u5305\u62ecJUnit\u548cTestNG\u3002 Unit tests should ideally be written using a suite of repeatable and isolated tests that verify different inputs, edge cases, and outputs. Because unit tests are automated, they are also faster and more reliable than manual testing. They can be executed either as part of a continuous integration pipeline or on-demand during development. \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5355\u5143\u6d4b\u8bd5\u5e94\u4f7f\u7528\u4e00\u5957\u53ef\u91cd\u590d\u548c\u9694\u79bb\u7684\u6d4b\u8bd5\u6765\u7f16\u5199\uff0c\u8fd9\u4e9b\u6d4b\u8bd5\u9a8c\u8bc1\u4e0d\u540c\u7684\u8f93\u5165\u3001\u8fb9\u7f18\u60c5\u51b5\u548c\u8f93\u51fa\u3002\u7531\u4e8e\u5355\u5143\u6d4b\u8bd5\u662f\u81ea\u52a8\u5316\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u4e5f\u6bd4\u624b\u52a8\u6d4b\u8bd5\u66f4\u5feb\u3001\u66f4\u53ef\u9760\u3002\u5b83\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u6301\u7eed\u96c6\u6210\u7ba1\u9053\u7684\u4e00\u90e8\u5206\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u5728\u5f00\u53d1\u671f\u95f4\u6309\u9700\u6267\u884c\u3002</p>"},{"location":"course_notes/fit5171/#benefits-of-unit-testing","title":"Benefits of unit testing","text":"<ul> <li>Identify defects early (at development time) Otherwise small defects will lead to larger problems  </li> <li>Allows easy defect isolation  </li> <li>Improves confidence of code  </li> <li>Encourage code review</li> </ul>"},{"location":"course_notes/fit5171/#week-2","title":"week 2","text":""},{"location":"course_notes/fit5171/#junit-basics","title":"JUnit Basics","text":"<p>JUnit tests are also called test methods in a test class Naming convention of test classes: name of class under test + Test E.g., ShoppingCartTest.java for ShoppingCart.java Test names should be meaningful and reflect purpose E.g., shouldReturnTrueWhenUsersHaveSameEmail()</p>"},{"location":"course_notes/fit5171/#test-annotations","title":"Test Annotations","text":"<ul> <li> <p><code>@BeforeEach</code>: This annotation is used to mark a method that should be run before each individual test case. This is typically used to set up any necessary test fixtures or dependencies before running the test. <code>@BeforeEach</code>\u00a0\uff1a\u6b64\u6ce8\u91ca\u7528\u4e8e\u6807\u8bb0\u5e94\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\u8fd0\u884c\u7684\u65b9\u6cd5\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u5728\u8fd0\u884c\u6d4b\u8bd5\u4e4b\u524d\u8bbe\u7f6e\u4efb\u4f55\u5fc5\u8981\u7684\u6d4b\u8bd5\u5939\u5177\u6216\u4f9d\u8d56\u9879\u3002</p> </li> <li> <p><code>@AfterEach</code>: This annotation is used to mark a method that should be run after each individual test case. This is typically used to clean up any resources that were created during setup, or to reset the state of the system under test. <code>@AfterEach</code>\u00a0\uff1a\u6b64\u6ce8\u91ca\u7528\u4e8e\u6807\u8bb0\u5e94\u5728\u6bcf\u4e2a\u5355\u72ec\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u540e\u8fd0\u884c\u7684\u65b9\u6cd5\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u6e05\u7406\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u521b\u5efa\u7684\u4efb\u4f55\u8d44\u6e90\uff0c\u6216\u91cd\u7f6e\u53d7\u6d4b\u7cfb\u7edf\u7684\u72b6\u6001\u3002</p> </li> <li> <p><code>@BeforeAll</code>: This annotation is used to mark a method that should be run once, before any test cases are executed. This is typically used to set up any resources or dependencies that will be used across all tests. <code>@BeforeAll</code>\u00a0\uff1a\u6b64\u6ce8\u91ca\u7528\u4e8e\u6807\u8bb0\u5728\u6267\u884c\u4efb\u4f55\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\u5e94\u8fd0\u884c\u4e00\u6b21\u7684\u65b9\u6cd5\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u8bbe\u7f6e\u5c06\u5728\u6240\u6709\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684\u4efb\u4f55\u8d44\u6e90\u6216\u4f9d\u8d56\u9879\u3002</p> </li> <li> <p><code>@AfterAll</code>: This annotation is used to mark a method that should be run once, after all test cases have been executed. This is typically used to clean up any resources or dependencies that were created in the\u00a0<code>@BeforeAll</code>\u00a0method. <code>@AfterAll</code>\u00a0\uff1a\u6b64\u6ce8\u91ca\u7528\u4e8e\u6807\u8bb0\u5728\u6267\u884c\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u540e\u5e94\u8fd0\u884c\u4e00\u6b21\u7684\u65b9\u6cd5\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u6e05\u7406\u5728\u00a0<code>@BeforeAll</code>\u00a0\u65b9\u6cd5\u4e2d\u521b\u5efa\u7684\u4efb\u4f55\u8d44\u6e90\u6216\u4f9d\u8d56\u9879\u3002</p> </li> </ul>"},{"location":"course_notes/fit5171/#test-assertions","title":"Test Assertions","text":"<p>Assertions allow us to compare expected vs actual behaviours (output values, exceptions, etc.) \u65ad\u8a00\u5141\u8bb8\u6211\u4eec\u6bd4\u8f83\u9884\u671f\u884c\u4e3a\u4e0e\u5b9e\u9645\u884c\u4e3a\uff08\u8f93\u51fa\u503c\u3001\u5f02\u5e38\u7b49\uff09 assertTrue() assertFalse()  assertEquals() assertNotEquals()  assertNull() assertNotNull()  assertSame() assertNotSame()  assertArrayEquals() assertThrows()  </p>"},{"location":"course_notes/fit5171/#the-difference-between-a-test-plan-and-a-test-strategy","title":"The difference between a test plan and a test strategy","text":"<p>The difference between a test plan and a test strategy - Inspired Testing </p> Test Plan\u00a0\u6d4b\u8bd5\u8ba1\u5212 Test Strategy\u00a0\u6d4b\u8bd5\u7b56\u7565 A test plan for software project can be defined as a document that defines the scope, objective, approach and emphasis on a software testing effort  \u8f6f\u4ef6\u9879\u76ee\u7684\u6d4b\u8bd5\u8ba1\u5212\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u5b9a\u4e49\u8f6f\u4ef6\u6d4b\u8bd5\u5de5\u4f5c\u7684\u8303\u56f4\u3001\u76ee\u6807\u3001\u65b9\u6cd5\u548c\u91cd\u70b9\u7684\u6587\u6863 Test strategy is a set of guidelines that explains test design and determines how testing needs to be done  \u6d4b\u8bd5\u7b56\u7565\u662f\u4e00\u7ec4\u6307\u5357\uff0c\u7528\u4e8e\u89e3\u91ca\u6d4b\u8bd5\u8bbe\u8ba1\u5e76\u786e\u5b9a\u9700\u8981\u5982\u4f55\u8fdb\u884c\u6d4b\u8bd5 Components of Test plan include- Test plan id, features to be tested, test techniques, testing tasks, features pass or fail criteria, test deliverables, responsibilities, and schedule, etc.  \u6d4b\u8bd5\u8ba1\u5212\u7684\u7ec4\u4ef6\u5305\u62ec - \u6d4b\u8bd5\u8ba1\u5212 ID\u3001\u8981\u6d4b\u8bd5\u7684\u529f\u80fd\u3001\u6d4b\u8bd5\u6280\u672f\u3001\u6d4b\u8bd5\u4efb\u52a1\u3001\u529f\u80fd\u901a\u8fc7\u6216\u5931\u8d25\u6807\u51c6\u3001\u6d4b\u8bd5\u53ef\u4ea4\u4ed8\u6210\u679c\u3001\u804c\u8d23\u548c\u65f6\u95f4\u8868\u7b49\u3002 Components of Test strategy includes- objectives and scope, documentation formats, test processes, team reporting structure, client communication strategy, etc.  \u6d4b\u8bd5\u7b56\u7565\u7684\u7ec4\u6210\u90e8\u5206\u5305\u62ec\u76ee\u6807\u548c\u8303\u56f4\u3001\u6587\u6863\u683c\u5f0f\u3001\u6d4b\u8bd5\u6d41\u7a0b\u3001\u56e2\u961f\u62a5\u544a\u7ed3\u6784\u3001\u5ba2\u6237\u6c9f\u901a\u7b56\u7565\u7b49\u3002 Test plan is carried out by a testing manager or lead that describes how to test, when to test, who will test and what to test  \u6d4b\u8bd5\u8ba1\u5212\u7531\u6d4b\u8bd5\u7ecf\u7406\u6216\u4e3b\u7ba1\u6267\u884c\uff0c\u63cf\u8ff0\u5982\u4f55\u6d4b\u8bd5\u3001\u4f55\u65f6\u6d4b\u8bd5\u3001\u8c01\u5c06\u6d4b\u8bd5\u4ee5\u53ca\u6d4b\u8bd5\u4ec0\u4e48 A test strategy is carried out by the project manager. It says what type of technique to follow and which module to test  \u6d4b\u8bd5\u7b56\u7565\u7531\u9879\u76ee\u7ecf\u7406\u6267\u884c\u3002\u5b83\u8bf4\u660e\u4e86\u8981\u9075\u5faa\u54ea\u79cd\u7c7b\u578b\u7684\u6280\u672f\u4ee5\u53ca\u8981\u6d4b\u8bd5\u7684\u6a21\u5757 Test plan narrates about the specification  \u6d4b\u8bd5\u8ba1\u5212\u53d9\u8ff0\u6709\u5173\u89c4\u8303 Test strategy narrates about the general approaches  \u6d4b\u8bd5\u7b56\u7565\u53d9\u8ff0\u4e86\u4e00\u822c\u65b9\u6cd5 Test plan can change\u00a0\u6d4b\u8bd5\u8ba1\u5212\u53ef\u4ee5\u66f4\u6539 Test strategy cannot be changed  \u65e0\u6cd5\u66f4\u6539\u6d4b\u8bd5\u7b56\u7565 Test planning is done to determine possible issues and dependencies in order to identify the risks.  \u6267\u884c\u6d4b\u8bd5\u8ba1\u5212\u4ee5\u786e\u5b9a\u53ef\u80fd\u7684\u95ee\u9898\u548c\u4f9d\u8d56\u9879\uff0c\u4ee5\u4fbf\u8bc6\u522b\u98ce\u9669\u3002 It is a long-term plan of action.You can abstract information that is not project specific and put it into test approach  \u8fd9\u662f\u4e00\u9879\u957f\u671f\u884c\u52a8\u8ba1\u5212\u3002\u60a8\u53ef\u4ee5\u62bd\u8c61\u51fa\u975e\u9879\u76ee\u7279\u5b9a\u7684\u4fe1\u606f\u5e76\u5c06\u5176\u653e\u5165\u6d4b\u8bd5\u65b9\u6cd5 A test plan exists individually  \u5355\u72ec\u5b58\u5728\u6d4b\u8bd5\u8ba1\u5212 In smaller projects, the test strategy is often found as a section of a test plan  \u5728\u8f83\u5c0f\u7684\u9879\u76ee\u4e2d\uff0c\u6d4b\u8bd5\u7b56\u7565\u901a\u5e38\u4f5c\u4e3a\u6d4b\u8bd5\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u3002 It is defined at project level  \u5b83\u662f\u5728\u9879\u76ee\u7ea7\u522b\u5b9a\u4e49\u7684 It is set at organization level and can be used by multiple projects  \u5b83\u662f\u5728\u7ec4\u7ec7\u7ea7\u522b\u8bbe\u7f6e\u7684\uff0c\u53ef\u4ee5\u7531\u591a\u4e2a\u9879\u76ee\u4f7f\u7528"},{"location":"course_notes/fit5171/#week-3-discrete-maths","title":"week 3 Discrete maths","text":""},{"location":"course_notes/fit5171/#label","title":"label","text":"<ul> <li>And(\u2227) \u4e0e\uff1b\u4e14  </li> <li>Or(\u2228) \u6216  </li> <li>Implies(\u21d2) \u5b9e\u8d28\u8574\u542b  </li> <li>Equiv(\u21d4)\u5b9e\u8d28\u7b49\u4ef7  </li> <li>\u22a2 \u63a8\u5bfc\u51fa  </li> </ul>"},{"location":"course_notes/fit5171/#predicate-logics","title":"Predicate Logics \u8c13\u8bcd\u903b\u8f91","text":"<ul> <li>Universal (\u2200) \u4efb\u610f  </li> <li>existential (\u2203) \u5b58\u5728  </li> <li>Set\uff08P\uff09\u96c6\u5408  </li> <li>\u2203x (P(x) \u22c0 Q(x)) \u5728P\uff0cQ\u4e24\u4e2a\u96c6\u5408\u4e2d\u90fd\u5b58\u5728x</li> </ul>"},{"location":"course_notes/fit5171/#set","title":"set","text":"<ul> <li>\u65e0\u987a\u5e8f\uff0c\u4e0d\u91cd\u590d == Java\u91cd\u7684set\u6982\u5ff5  </li> <li>{1,2,3,4}  {x : N | x \u2264 64}  </li> <li>N\uff1a\u975e\u8d1f\u6574\u6570\u96c6\u5408\u6216\u81ea\u7136\u6570\u96c6\u5408{0,1,2,3,...}  </li> <li>Z\uff1a\u6574\u6570\u96c6\u5408{...,-1,0,1,...}  </li> <li>Q\uff1a\u6709\u7406\u6570\u96c6\u5408  </li> <li>R\uff1a\u5b9e\u6570\u96c6\u5408(\u5305\u62ec\u6709\u7406\u6570\u548c\u65e0\u7406\u6570\uff09  </li> <li>\u2205 \uff1a\u7a7a\u96c6\uff08\u4e0d\u542b\u6709\u4efb\u4f55\u5143\u7d20\u7684\u96c6\u5408\uff09  </li> <li>N*\u6216N+\uff1a\u6b63\u6574\u6570\u96c6\u5408{1,2,3,...}</li> <li>Membership: \u5c5e\u4e8e  </li> <li>Set inclusion:  Subset: \u5b50\u96c6  Proper subset:\u771f\u5b50\u96c6  </li> <li>Set cardinality:  <code>#A</code> = 3 \u96c6\u5408\u5143\u7d20\u4e2a\u6570 \uff5cA\uff5c</li> <li> </li> </ul>"},{"location":"course_notes/fit5171/#power-set-p","title":"Power set P","text":"<p>A power set is set of all subsets, empty set and the original set itself \u5e42\u96c6\u662f\u6240\u6709\u5b50\u96c6\u3001\u7a7a\u96c6\u548c\u539f\u59cb\u96c6\u672c\u8eab\u7684\u96c6\u5408  + $\u2200X \u2022 X$   is a set, $Px = {A|A \u2286 X}$ + for every X, Px (which is defined as the set of all subsets of X) is a set.\u5bf9\u4e8e\u6bcf\u4e2a X\uff0cPx\uff08\u5b9a\u4e49\u4e3a X \u7684\u6240\u6709\u5b50\u96c6\u7684\u96c6\u5408\uff09\u662f\u4e00\u4e2a\u96c6\u5408\u3002 + power set of A = {1, 2} is P(A) = {{}, {1}, {2}, {1, 2}}</p>"},{"location":"course_notes/fit5171/#set-operations","title":"Set operations \u96c6\u5408\u8fd0\u7b97","text":"<ul> <li>Union\u5e76\u96c6 : $A \ud835\udd4c B$  The set containing all the elements of  which all other sets are subs</li> <li>Intersection\u4ea4\u96c6 : $A\u2229B$  Items common in A,B</li> <li>Difference : \u5dee\u96c6 A - B; A = {1, 2, 3, 4, 5, 6} and B = {3, 4, 5, 6, 7, 8},A \u2013 B = {1, 2},B \u2013 A = {7, 8},</li> <li>Cartesian product\u7b1b\u5361\u5c14\u79ef : <code>{a, b} \u21e5 {0, 1} = {(a, 0), (a, 1), (b, 0), (b, 1)}</code></li> </ul>"},{"location":"course_notes/fit5171/#relations","title":"Relations ( \u21d4) \u4e24\u4e2a\u96c6\u5408\u95f4\u7684\u903b\u8f91\u8054\u7cfb","text":"<p>Relations (R) are defined over sets  A relation is a collection of ordered pairs, which  contains an object from one set to the other set \u5173\u7cfb (R) \u662f\u5728\u96c6\u5408\u4e0a\u5b9a\u4e49\u7684 \u5173\u7cfb\u662f\u6709\u5e8f\u5bf9\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u5305\u542b\u4ece\u4e00\u4e2a\u96c6\u5408\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u5bf9\u8c61 Can be one-to-one, one-to-many  or many-to-one, many-to-many The Cartesian product deals with ordered pairs, so  the order in which the sets are considered is \u7b1b\u5361\u5c14\u79ef\u5904\u7406\u6709\u5e8f\u5bf9\uff0c\u56e0\u6b64\u8003\u8651\u96c6\u5408\u7684\u987a\u5e8f\u662f  <code>friends : Person \u21d4 Person</code> $X \u0445 Y = {(x, y)} | x \u2208 X and y \u2208 Y} Where X \u0445 Y \u2260 Y \u0445 X$ Using n(A) for the number of elements in a set A, we have $n(X \u0445 Y) = n(X) \u0445 n(Y)$ </p>"},{"location":"course_notes/fit5171/#functions","title":"functions (\u2192 )","text":"<p>\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5173\u7cfb\u7c7b\u578b\u3002\u8fd9\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u5173\u7cfb\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5143\u7d20\u5982\u4f55\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u6216\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u53e6\u4e00\u4e2a\u5143\u7d20 It is a relation that defines the set of  inputs to the set of outputs.  Note that all functions are relations, but  not all relations are functions \u5b83\u662f\u5b9a\u4e49\u8f93\u5165\u96c6\u5230\u8f93\u51fa\u96c6\u7684\u5173\u7cfb\u3002\u8bf7\u6ce8\u610f\uff0c\u6240\u6709\u51fd\u6570\u90fd\u662f\u5173\u7cfb\uff0c\u4f46\u5e76\u975e\u6240\u6709\u5173\u7cfb\u90fd\u662f\u51fd\u6570 <code>\u2192</code>  implies/ when used in functions, it  symbolises mapping A\u2192B, if A is true then B is also true.  If A is false then nothing said about  B <code>age : Person N</code> <code>birthday : Person \u2192 Date</code> </p>"},{"location":"course_notes/fit5171/#undirected-graphs","title":"Undirected graphs \u65e0\u5411\u56fe","text":"<p> $G = (V, E)$  \u5b9a\u4e49\u79f0\u4e8c\u5143\u7ec4G=(V,E)\u662f\u4e00\u4e2a\u65e0\u5411\u56fe(undirected graph) + V: a non-empty set of nodes {n1, n2 , n3, ..., nm }   V\u662f\u4e00\u4e2a\u975e\u7a7a\u6709\u9650\u96c6\u5408  + E: a set of edges {e1, e2, ..., ep}, where each ek = (ni, nj)  E\u662fV\u4e2d\u5143\u7d20\u7684\u65e0\u5e8f\u5bf9\u6240\u7ec4\u6210\u7684\u96c6\u5408 + \u628aV\u7684\u5143\u7d20\u53eb\u505a\u56fe\u7684\u9876\u70b9 (vertex)\uff0cE\u7684\u5143\u7d20\u53eb\u505a\u56fe\u7684\u8fb9 (edge)\u3002V(G)\u8868\u793a\u56feG\u7684\u9876\u70b9\u96c6\uff0cE(G)\u8868\u793a\u56feG\u7684\u8fb9\u96c6\u3002\u82e5 |V(G)|=n\uff0c\u5219\u79f0G\u4e3an\u9636\u56fe  </p>"},{"location":"course_notes/fit5171/#representation-degree","title":"Representation &amp; Degree","text":"<p><code>V = {n 1 , n 2 , n 3 , n 4 , n 5 , n 6 , n 7}</code> <code>E = {e1 , e2 , e3 , e4 , e 5 , } = {(n 1 , n 2 ), (n 1 , n 4 ), (n 2 , n 5 ), (n 3 , n 4 ), (n 4 , n 6 )}</code> Degree of node : No. of edges that have that node as  an endpoint <code>degree(n 1 ) = 2, degree(n 4 ) = 3,  degree(n 7 ) = 0</code> + Degree \u5ea6\uff0c \u8282\u70b9\u8fb9\u7684\u6570\u91cf \uff08\u73af\u7b97\u4f5c\u4e24\u6761\u8fb9\uff09 + Path\u8def\u5f84\uff0c\u591a\u6761\u76f8\u8fde\u7684\u8fb9\u7684\u7ec4\u5408 Nodes ni and nj are connected if they  are in a path.  A component is a maximal set of  connected node \u5982\u679c\u8282\u70b9 ni \u548c nj \u5728\u4e00\u6761\u8def\u5f84\u4e2d\uff0c\u5219\u5b83\u4eec\u662f\u8fde\u901a\u7684 \u5206\u91cf\u662f\u8fde\u901a\u8282\u70b9\u7684\u6700\u5927\u96c6\u5408 <code>Path(n1,n5) = (n1, n2, n5) = &lt;e1,  e4&gt;</code> </p>"},{"location":"course_notes/fit5171/#directed-graphs","title":"Directed graphs \u6709\u5411\u56fe","text":"<p> + \u5934/\u539f\u70b9 Source\uff0c indgree = 0 + \u7ec8\u70b9 Sink\uff0c outdgree = 0 + \u5165\u5ea6 indgree \u6c47\u5165\u8282\u70b9\u7684\u8fb9\u7684\u6570\u91cf + \u51fa\u5ea6 outdgree \u4ece\u8282\u70b9\u5f15\u51fa\u7684\u8fb9\u7684\u6570\u91cf</p>"},{"location":"course_notes/fit5171/#semi-paths","title":"Semi -Paths","text":""},{"location":"course_notes/fit5171/#n-connectedness","title":"n-Connectedness","text":""},{"location":"course_notes/fit5171/#strongly-connected-components","title":"Strongly connected components \u5f3a\u8fde\u901a\u5206\u91cf","text":""},{"location":"course_notes/fit5171/#mccabes-cyclomatic-complexity","title":"McCabe\u2019s Cyclomatic complexity\u5708\u590d\u6742\u5ea6","text":"<p>Cyclomatic Complexity in Software Testing (Example) Cyclomatic Complexity - GeeksforGeeks \u5708\u590d\u6742\u5ea6\uff08Cyclomatic Complexity\uff09\u662f\u8861\u91cf\u8ba1\u7b97\u673a\u7a0b\u5e8f\u590d\u6742\u7a0b\u5ea6\u7684\u4e00\u79cd\u63aa\u65bd\u3002\u5b83\u6839\u636e\u7a0b\u5e8f\u4ece\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u7ebf\u6027\u72ec\u7acb\u8def\u5f84\u7684\u6570\u91cf\u8ba1\u7b97\u5f97\u6765\u7684.\u5708\u590d\u6742\u5ea6\u8d8a\u9ad8\uff0c\u4ee3\u7801\u5c31\u8d8a\u96be\u590d\u6742\u96be\u7ef4\u62a4\u3002\u5751\u5c31\u8d8a\u5927\u3002 \u8ba1\u7b97\u516c\u5f0f1\uff1aV(G)=E-N+2P\u3002\u5176\u4e2d\uff0cE\u8868\u793a\u63a7\u5236\u6d41\u56fe\u4e2d\u8fb9\u7684\u6570\u91cf\uff0cN\u8868\u793a\u63a7  \u5236\u6d41\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\uff0cP\u56fe\u7684\u8fde\u63a5\u7ec4\u4ef6\u6570\u76ee\uff08\u56fe\u7684\u7ec4\u4ef6\u6570\u662f\u76f8\u8fde\u8282\u70b9\u7684\u6700\u5927\u96c6\u5408\uff09 <code>(G) = #E - #V + p</code> \u2014 Strongly connected graph <code>V(G) = #E - #V + 2p</code> \u2014 Not strongly connected graph  The cyclomatic complexity calculated for above code will be from control flow graph. The graph shows seven shapes(nodes), seven lines(edges), hence cyclomatic complexity is 7-7+2 = 2.\u00a0  \u4e3a\u4e0a\u8ff0\u4ee3\u7801\u8ba1\u7b97\u7684\u5708\u590d\u6742\u5ea6\u5c06\u6765\u81ea\u63a7\u5236\u6d41\u56fe\u3002\u8be5\u56fe\u663e\u793a\u4e86\u4e03\u4e2a\u5f62\u72b6\uff08\u8282\u70b9\uff09\uff0c\u4e03\u4e2a\u7ebf\uff08\u8fb9\uff09\uff0c\u56e0\u6b64\u5708\u590d\u6742\u5ea6\u4e3a 7-7+2 = 2\u3002</p> <pre><code>If (Condition 1)\nStatement 1\n\nElse\nStatement 2\n\nIf (Condition 2)\nStatement 3\n\nElse\nStatement 4\n</code></pre> <ul> <li>Nodes (N): \u8282\u70b9 \uff08N\uff09\uff1aThere are 6 nodes in the control flow graph.\u63a7\u5236\u6d41\u56fe\u4e2d\u6709 6 \u4e2a\u8282\u70b9\u3002</li> <li>Edges (E): \u8fb9\u7f18 \uff08E\uff09\uff1aThere are 7 edges in the control flow graph.\u63a7\u5236\u6d41\u56fe\u4e2d\u6709 7 \u6761\u8fb9\u3002</li> <li>Connected components (P):\u8fde\u63a5\u7684\u7ec4\u4ef6 \uff08P\uff09There is 1 connected component in the control flow graph.\u63a7\u5236\u6d41\u56fe\u4e2d\u6709 1 \u4e2a\u8fde\u63a5\u7684\u7ec4\u4ef6\u3002</li> <li>M = E - N + 2P = 7 - 6 + 2(1) = 3</li> <li>Therefore, the cyclomatic complexity of this code is 3. This value represents the number of independent paths through the code, and can be used to estimate the number of test cases needed to achieve full code coverage. In this case, we determined that at least 4 test cases are needed to cover all possible branches, which is consistent with the cyclomatic complexity metric of 3.\u56e0\u6b64\uff0c\u6b64\u4ee3\u7801\u7684\u5708\u590d\u6742\u5ea6\u4e3a 3\u3002\u6b64\u503c\u8868\u793a\u901a\u8fc7\u4ee3\u7801\u7684\u72ec\u7acb\u8def\u5f84\u6570\uff0c\u53ef\u7528\u4e8e\u4f30\u8ba1\u5b9e\u73b0\u5b8c\u6574\u4ee3\u7801\u8986\u76d6\u6240\u9700\u7684\u6d4b\u8bd5\u7528\u4f8b\u6570\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u786e\u5b9a\u81f3\u5c11\u9700\u8981 4 \u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6765\u8986\u76d6\u6240\u6709\u53ef\u80fd\u7684\u5206\u652f\uff0c\u8fd9\u4e0e\u5708\u590d\u6742\u5ea6\u5ea6\u91cf 3 \u4e00\u81f4\u3002</li> </ul> <p>This metric is useful because of properties of Cyclomatic complexity (M) \u2013 \u7531\u4e8e\u5708\u590d\u6742\u5ea6 \uff08M\uff09 \u2013 1. M can be number of test cases to achieve branch coverage (Upper Bound)     M\u53ef\u4ee5\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684\u6570\u91cf\uff0c\u4ee5\u5b9e\u73b0\u5206\u652f\u8986\u76d6\uff08\u4e0a\u9650\uff09 2. M can be number of paths through the graphs. (Lower Bound)     M \u53ef\u4ee5\u662f\u901a\u8fc7\u56fe\u5f62\u7684\u8def\u5f84\u6570\u3002\uff08\u4e0b\u9650\uff09</p> <p></p>"},{"location":"course_notes/fit5171/#week-4","title":"week 4","text":""},{"location":"course_notes/fit5171/#blackbox","title":"\u9ed1\u76d2\u6d4b\u8bd5 Blackbox","text":"<ol> <li>\u9ed1\u76d2\u4ee3\u8868\u76d2\u5b50\u662f\u4e0d\u900f\u660e\u7684  </li> <li>\u5173\u6ce8\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u800c\u5ffd\u7565\u76d2\u5b50\u91cc\u9762\u7684\u64cd\u4f5c  </li> <li>\u6709Functional \u548cNon-functional\u4e4b\u5206 Functional \uff1a\u5177\u4f53\u529f\u80fd\uff0c\u767b\u9646\uff0c\u6ce8\u518c\u7b49  Non-Functional\uff1a\u7a33\u5b9a\u6027\uff0c\u5b89\u5168\u6027\uff0c\u6613\u7528\u6027\u7b49  </li> <li>Equivalence Partitioning  Testers can divide possible inputs into groups or \u201cpartitions\u201d </li> <li>Boundary Value Analysis  Testers can identify that a system has a special response around a specific boundary value.  </li> <li>Decision Table Testing  Many systems provide outputs based on a set of conditions.</li> </ol>"},{"location":"course_notes/fit5171/#normal-boundary-value-testing-nbvt","title":"Normal Boundary Value Testing (NBVT) \u8fb9\u754c\u503c\u6d4b\u8bd5","text":""},{"location":"course_notes/fit5171/#robustness-testing","title":"Robustness testing","text":"<p>For each variable, we need to test its minimum and maximum values, which gives us 2n test cases. The total number of test cases required for the robust version of BVT is: 2n (minimum and maximum values) + 4n + 1 (normal values) \u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf\uff0c\u6211\u4eec\u9700\u8981\u6d4b\u8bd5\u5b83\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u8fd9\u7ed9\u4e86\u6211\u4eec 2n \u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002\u5065\u58ee\u7248BVT\u6240\u9700\u7684\u6d4b\u8bd5\u7528\u4f8b\u603b\u6570\u4e3a\uff1a2n\uff08\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff09+4n+1\uff08\u6b63\u5e38\u503c\uff09 </p>"},{"location":"course_notes/fit5171/#worst-case-testing","title":"Worst case testing","text":""},{"location":"course_notes/fit5171/#robust-worst-case-testing","title":"Robust worst-case testing","text":""},{"location":"course_notes/fit5171/#equivalence-class-testing","title":"Equivalence class testing \u7b49\u4ef7\u7c7b\u6d4b\u8bd5","text":""},{"location":"course_notes/fit5171/#weak-normal-equivalence-class-testing","title":"weak normal equivalence class testing","text":"<p>Let Cx denote the equivalence classes of valid values for variable x (Cx is a set of equivalence classes). Then the number of test cases is max (#Cxi ), for xi ranging over all variables. That is, the maximum number of equivalence classes for all variables \u4ee4 Cx \u8868\u793a\u53d8\u91cf x \u7684\u6709\u6548\u503c\u7684\u7b49\u4ef7\u7c7b\uff08Cx \u662f\u4e00\u7ec4\u7b49\u4ef7\u7c7b\uff09\u3002\u90a3\u4e48\u6d4b\u8bd5\u7528\u4f8b\u7684\u6570\u91cf\u662f\u6700\u5927\u7684\uff08#Cxi\uff09\uff0c\u56e0\u4e3a xi \u904d\u53ca\u6240\u6709\u53d8\u91cf\u3002\u5373\u6240\u6709\u53d8\u91cf\u7684\u6700\u5927\u7b49\u4ef7\u7c7b\u6570  </p>"},{"location":"course_notes/fit5171/#weak-robust-equivalence-class-testing","title":"Weak robust equivalence class testing.","text":"<p>We assume the same settings as in the previous question. Let Ixi denote the  equivalence classes of invalid values for variable xi . Let n denote the number of variables.  the number of tests is max (#Cxi ) +  nXi=1(#Ixi ), for xi ranging over all variables. Basically, we include also the total number of test cases in the invalid areas for each variable. Note that cardinality of Ixi may not always be 2 since there may be gaps between valid equivalence classes  \u6211\u4eec\u91c7\u7528\u4e0e\u4e0a\u4e00\u4e2a\u95ee\u9898\u76f8\u540c\u7684\u8bbe\u7f6e\u3002\u8bbe Ixi \u8868\u793a\u53d8\u91cf xi \u7684\u65e0\u6548\u503c\u7684\u7b49\u4ef7\u7c7b\u3002\u8bbe n \u8868\u793a\u53d8\u91cf\u7684\u6570\u91cf\u3002\u6d4b\u8bd5\u6b21\u6570\u4e3a max (#Cxi ) + nX i=1 (#Ixi )\uff0cxi \u904d\u53ca\u6240\u6709\u53d8\u91cf\u3002\u57fa\u672c\u4e0a\uff0c\u6211\u4eec\u8fd8\u5305\u62ec\u6bcf\u4e2a\u53d8\u91cf\u7684\u65e0\u6548\u533a\u57df\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u603b\u6570\u3002\u8bf7\u6ce8\u610f\uff0cIxi \u7684\u57fa\u6570\u53ef\u80fd\u5e76\u4e0d\u603b\u662f 2\uff0c\u56e0\u4e3a\u6709\u6548\u7b49\u4ef7\u7c7b\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u95f4\u9699</p>"},{"location":"course_notes/fit5171/#decision-table-testing","title":"Decision table Testing","text":""},{"location":"course_notes/fit5171/#how-to-make-dtt","title":"how to make dtt","text":"<p>in the example each of the three variables a, b and c is the length of a side from the range <code>[1, 200]</code>. Come up with test cases for weak normal equivalenceclass testing that cover the same expected outputs \u5728\u793a\u4f8b\u4e2d\uff0c\u4e09\u4e2a\u53d8\u91cf a\u3001b \u548c c \u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u662f\u8303\u56f4 [1, 200] \u4e2d\u7684\u8fb9\u7684\u957f\u5ea6\u3002\u63d0\u51fa\u6db5\u76d6\u76f8\u540c\u9884\u671f\u8f93\u51fa\u7684\u5f31\u6b63\u6001\u7b49\u4ef7\u7c7b\u6d4b\u8bd5\u7684\u6d4b\u8bd5\u7528\u4f8b equivalence classes: + D1 = {(a, b, c) | a = b = c} + D2 = {(a, b, c) | a = b \u2227 a\u0338 = c \u2227 c &lt; a + b} + D3 = {(a, b, c) | a\u0338 = b \u2227 a\u0338 = c \u2227 b\u0338 = c \u2227 a &lt; b + c \u2227 b &lt; a + c \u2227 c &lt; a + b} + D4 = {(a, b, c) | a = b + c} + D5 = {(a, b, c) | a &gt; b + c}  </p>"},{"location":"course_notes/fit5171/#testing-effort","title":"testing effort","text":""},{"location":"course_notes/fit5171/#difference-between-equivalence-class-testing-boundary-value-analysis","title":"Difference Between Equivalence Class Testing &amp; Boundary Value Analysis:","text":"<p>Equivalence Class Testing: Complete Guide |Professionalqa.com </p> Equivalence Class Testing  \u7b49\u6548\u7b49\u7ea7\u6d4b\u8bd5 Boundary Value Analysis\u00a0\u8fb9\u754c\u503c\u5206\u6790 1. Equivalence Class Testing is a type of black box technique.  1. \u7b49\u6548\u7c7b\u6d4b\u8bd5\u662f\u4e00\u79cd\u9ed1\u76d2\u6280\u672f\u3002 1. Next part of Equivalence Class Partitioning/Testing.  1. \u7b49\u6548\u7c7b\u5206\u533a/\u6d4b\u8bd5\u7684\u4e0b\u4e00\u90e8\u5206\u3002 2. It can be applied to any level of testing, like unit, integration, system, and more.  2.\u5b83\u53ef\u4ee5\u5e94\u7528\u4e8e\u4efb\u4f55\u7ea7\u522b\u7684\u6d4b\u8bd5\uff0c\u5982\u5355\u5143\uff0c\u96c6\u6210\uff0c\u7cfb\u7edf\u7b49\u3002 2. Boundary value analysis is usually a part of stress &amp; negative testing.  2. \u8fb9\u754c\u503c\u5206\u6790\u901a\u5e38\u662f\u538b\u529b\u548c\u8d1f\u6d4b\u8bd5\u7684\u4e00\u90e8\u5206\u3002 3. A test case design technique used to divide input data into different equivalence classes.  3. \u4e00\u79cd\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u6280\u672f\uff0c\u7528\u4e8e\u5c06\u8f93\u5165\u6570\u636e\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u7b49\u4ef7\u7c7b\u3002 3. This test case design technique used to test boundary value between partitions.  3. \u6b64\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u6280\u672f\u7528\u4e8e\u6d4b\u8bd5\u5206\u533a\u4e4b\u95f4\u7684\u8fb9\u754c\u503c\u3002 4. Reduces the time of testing, while using less and effective test cases.  4.\u51cf\u5c11\u6d4b\u8bd5\u65f6\u95f4\uff0c\u540c\u65f6\u4f7f\u7528\u66f4\u5c11\u548c\u6709\u6548\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 4. Reduces the overall time of test execution, while making defect detection faster &amp; easy.  4. \u51cf\u5c11\u6d4b\u8bd5\u6267\u884c\u7684\u603b\u65f6\u95f4\uff0c\u540c\u65f6\u4f7f\u7f3a\u9677\u68c0\u6d4b\u66f4\u5feb\u3001\u66f4\u5bb9\u6613\u3002 5. Tests only one from each partition of the equivalence classes.  5. \u4ece\u7b49\u6548\u7c7b\u7684\u6bcf\u4e2a\u5206\u533a\u4e2d\u4ec5\u6d4b\u8bd5\u4e00\u4e2a\u3002 5. Selects test cases from the edges of the equivalence classes.  5. \u4ece\u7b49\u6548\u7c7b\u7684\u8fb9\u7f18\u9009\u62e9\u6d4b\u8bd5\u7528\u4f8b\u3002 ## week 5 ### \u767d\u76d2\u6d4b\u8bd5 Whitebox 1. \u767d\u76d2\u4ee3\u8868\u76d2\u5b50\u662f\u900f\u660e\u7684 2. \u4e0d\u4ec5\u5173\u6ce8\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u540c\u65f6\u5173\u6ce8\u76d2\u5b50\u5185\u7684\u4ee3\u7801\u7ed3\u6784 3. Testing structure of the software 4. \u5c06\u4ee3\u7801\u8f6c\u6362\u6210\u6570\u5b66\u6a21\u578b ### Program graph 1. \u6709\u5411\u56fe 2. \u70b9Node\u4ee3\u8868 Statement 3. \u8fb9Edge\u4ee3\u8868 Flow 4. \u591a\u884cStatement\u53ef\u6d53\u7f29 ![t 400x00](../img/fit5171-20230614-20.png) ### DD-path \uff08Decision-to-decision path \u51b3\u7b56\u5230\u51b3\u7b56\u8def\u5f84\uff09 \u4e3b\u8981\u7740\u773c\u6d4b\u8bd5\u8986\u76d6\u7387\u95ee\u9898\u3002\u7a0b\u5e8f\u6709\u5411\u56fe\u4e2d\u5b58\u5728\u5206\u652f\uff0c\u8986\u76d6\u7387\u8003\u8651\u7684\u662f\u5bf9\u5404\u4e2a\u5206\u652f\u60c5\u51b5\u7684\u6d4b\u8bd5\u8986\u76d6\u7a0b\u5ea6\uff0c\u56e0\u6b64\u5bf9\u6709\u5411\u56fe\u4e2d\u7ebf\u6027\u4e32\u884c\u7684\u90e8\u5206\u8fdb\u884c\u538b\u7f29\uff0c\u5728\u538b\u7f29\u56fe(\u5373DD-\u8def\u5f84)\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\uff0c\u7528\u6d4b\u8bd5\u8986\u76d6\u6307\u6807\u8003\u5bdf\u6d4b\u8bd5\u6548\u679c ![t 400x00](../img/fit5171-20230614-21.png) ###  Basic Path Test \u57fa\u7840\u8def\u5f84\u6d4b\u8bd5 - \u627e\u51fa\u6700\u4f73\u6d4b\u8bd5\u8def\u5f84 ![t 400x00](../img/fit5171-20230614-22.png) ## week6 ### Functional decomposition \u529f\u80fd\u5206\u89e3 / Block Diagram \u6a21\u5757\u56fe 1. \u6bcf\u4e00\u4e2a\u65b9\u5757\u4ee3\u8868\u4e86\u7cfb\u7edf\u4e2d\u4e00\u79cd\u529f\u80fd 2. \u662f\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u7b2c\u4e00\u4e2a\u8349\u56fe ![t 400x00](../img/fit5171-20230615.png) ### Integration Testing 1. System - hierarchically composed of units 2. Objectives - testing of interfacing and interaction of units To expose problems arising from the combination To find a working solution from components 3. \u96c6\u6210\u6d4b\u8bd5\u662f\u5728\u5355\u5143\u6d4b\u8bd5\u7684\u57fa\u7840\u4e0a\uff0c\u6d4b\u8bd5\u5728\u5c06\u6240\u6709\u7684\u8f6f\u4ef6\u5355\u5143\u6309\u7167\u6982\u8981\u8bbe\u8ba1\u89c4\u683c\u8bf4\u660e\u7684\u8981\u6c42\u7ec4\u88c5\u6210\u6a21\u5757\u3001\u5b50\u7cfb\u7edf\u6216\u7cfb\u7edf\u7684\u8fc7\u7a0b\u4e2d\u5404\u90e8\u5206\u5de5\u4f5c\u662f\u5426\u8fbe\u5230\u6216\u5b9e\u73b0\u76f8\u5e94\u6280\u672f\u6307\u6807\u53ca\u8981\u6c42\u7684\u6d3b\u52a8\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u96c6\u6210\u6d4b\u8bd5\u4e4b\u524d\uff0c\u5355\u5143\u6d4b\u8bd5\u5e94\u8be5\u5df2\u7ecf\u5b8c\u6210,\u96c6\u6210\u6d4b\u8bd5\u4e2d\u6240\u4f7f\u7528\u7684\u5bf9\u8c61\u5e94\u8be5\u662f\u5df2\u7ecf\u7ecf\u8fc7\u5355\u5143\u6d4b\u8bd5\u7684\u8f6f\u4ef6\u5355\u5143 #### Potential hazards + Internal - between components (Method invocation; Parameter; Method return) \u5355\u5143\u95f4\u7684\u63a5\u53e3\uff0c\u6307\u7684\u662f\u4ee3\u7801\u95f4\u7684\u76f8\u4e92\u8c03\u7528\uff0c\u6211\u4eec\u4f20\u9012\u4e00\u4e9b\u53c2\u6570\u6765\u5224\u65ad\u6d4b\u8bd5\u8c03\u7528\u6709\u6ca1\u6709\u95ee\u9898 + Interaction - at system boundary \u96c6\u6210\u540e\u7684\u529f\u80fd\uff0c\u4e0d\u540c\u7684\u529f\u80fd\u4e4b\u95f4\u662f\u5426\u4f1a\u4ea7\u751f\u76f8\u4e92\u5f71\u54cd\uff1f ### Integration testing approaches #### Decomposition-based \u57fa\u4e8e\u5206\u89e3\uff0c\u529f\u80fd\u5206\u89e3\uff0c\u6a21\u5757\u5206\u89e3 1. Big bang - all units together, no error localisation  \u5927\u7206\u70b8\u7b56\u7565 \u4e00\u8d77\u8fd0\u884c \u8fc5\u901f \u4e00\u6b21\u8bd5\u8fd0\u884c\u6210\u529f\u7387\u4e0d\u5927 \u95ee\u9898\u5b9a\u4f4d\u548c\u4fee\u6539\u90fd\u6bd4\u8f83\u56f0\u96be \u529f\u80fd\u589e\u5f3a\u578b\u9879\u76ee 2. Top down - stubs, early demo  \u4ece\u4e0a\u81f3\u4e0b \u8f83\u65e9\u7684\u9a8c\u8bc1\u4e86\u4e3b\u8981\u7684\u63a7\u5236\u548c\u5224\u65ad\u70b9 \u9996\u5148\u5b9e\u73b0\u548c\u9a8c\u8bc1\u4e00\u4e2a\u5b8c\u6574\u7684\u8f6f\u4ef6\u529f\u80fd \u6869\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u65f6\u672c\u7b56\u7565\u5927 \u5e95\u5c42\u7ec4\u4ef6\u7684\u6d4b\u8bd5\u4e0d\u591f\u5145\u5206 \u9002\u5408\u4ea7\u54c1\u63a7\u5236\u7ed3\u6784\u76f8\u5bf9\u6e05\u6670\u548c\u7a33\u5b9a\uff0c\u4ea7\u54c1\u7684\u9ad8\u5c42\u63a5\u53e3\u53d8\u5316\u6bd4\u8f83\u5c0f\uff0c\u4ea7\u54c1\u7684\u5e95\u5c42\u63a5\u53e3\u672a\u5b9a\u4e49\u6216\u8005\u7ecf\u5e38\u53ef\u80fd\u88ab\u4fee\u6539\uff0c\u4ea7\u54c1\u7684\u63a7\u5236\u7ec4\u4ef6\u5177\u6709\u8f83\u5927\u7684\u6280\u672f\u98ce\u9669\uff0c\u9700\u8981\u5c3d\u65e9\u7684\u88ab\u9a8c\u8bc1 3. Bottom up - terminal, drivers  \u4ece\u4e0b\u81f3\u4e0a \u96c6\u6210\u6d4b\u8bd5\u5f00\u59cb\u9636\u6bb5\u53ef\u80fd\u4f1a\u5e76\u884c\u7684\u8fdb\u884c\u96c6\u6210 \u9a71\u52a8\u7684\u5f00\u53d1\u5de5\u4f5c\u91cf\u4e5f\u5f88\u5e9e\u5927\u3002\u5bf9\u4e8e\u9ad8\u5c42\u7684\u9a8c\u8bc1\u88ab\u63a8\u8fdf\u5230\u4e86\u6700\u540e\uff0c\u8bbe\u8ba1\u4e0a\u7684\u9519\u8bef\u4e0d\u80fd\u88ab\u53ca\u65f6\u53d1\u73b0 \u9002\u7528\u8303\u56f4 \u5e95\u5c42\u63a5\u53e3\u6bd4\u8f83\u7a33\u5b9a\u3001\u53d8\u52a8\u8f83\u5c11\u7684\u4ea7\u54c1\u9ad8\u5c42\u63a5\u53e3\u53d8\u5316\u6bd4\u8f83\u9891\u7e41\u7684\u4ea7\u54c1\u5e95\u5c42\u7ec4\u4ef6\u8f83\u65e9\u88ab\u5b8c\u6210\u7684\u4ea7\u54c1 4.  Sandwich - a combination of the above 2  \u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u5bf9\u76ee\u6807\u5c42\u7684\u4e0a\u4e00\u5c42\u4f7f\u7528\u81ea\u9876\u5411\u4e0b\u7684\u96c6\u6210\u7b56\u7565\u5bf9\u76ee\u6807\u7684\u4e0b\u4e00\u5c42\u4f7f\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u96c6\u6210\u7b56\u7565\uff0c\u6700\u540e\u6d4b\u8bd5\u5728\u76ee\u6807\u5c42\u4f1a\u5408"},{"location":"course_notes/fit5171/#call-graph-based","title":"Call graph-based","text":"<ol> <li>Pairwise integration   Instead of testing all possible combinations of inputs, pairwise integration testing only tests combinations of input pairs. identify defects or issues that arise due to the interactions between two components, while minimizing the number of test cases needed. \u6210\u5bf9\u96c6\u6210\u6d4b\u8bd5\u7684\u76ee\u6807\u662f\u8bc6\u522b\u7531\u4e8e\u4e24\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4ea4\u4e92\u800c\u4ea7\u751f\u7684\u7f3a\u9677\u6216\u95ee\u9898\uff0c\u540c\u65f6\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u6240\u9700\u7684\u6d4b\u8bd5\u7528\u4f8b\u6570\u91cf\u3002</li> <li>Neighbour integration   testing only the interactions between adjacent modules that are directly connected to one another in the call graph. \u4ec5\u6d4b\u8bd5\u5728\u8c03\u7528\u56fe\u4e2d\u76f4\u63a5\u76f8\u4e92\u8fde\u63a5\u7684\u76f8\u90bb\u6a21\u5757\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002</li> </ol>"},{"location":"course_notes/fit5171/#path-based","title":"Path-based","text":"<p>In path-based integration testing, the system is tested for different combinations of inputs, and the resulting output paths are compared against the expected output paths. This technique aims to ensure that the system functions correctly when inputs are combined to achieve different outcomes. \u5728\u57fa\u4e8e\u8def\u5f84\u7684\u96c6\u6210\u6d4b\u8bd5\u4e2d\uff0c\u6d4b\u8bd5\u7cfb\u7edf\u7684\u4e0d\u540c\u8f93\u5165\u7ec4\u5408\uff0c\u5e76\u5c06\u751f\u6210\u7684\u8f93\u51fa\u8def\u5f84\u4e0e\u9884\u671f\u7684\u8f93\u51fa\u8def\u5f84\u8fdb\u884c\u6bd4\u8f83\u3002\u8be5\u6280\u672f\u65e8\u5728\u786e\u4fdd\u5f53\u8f93\u5165\u7ec4\u5408\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u7ed3\u679c\u65f6\uff0c\u7cfb\u7edf\u6b63\u5e38\u8fd0\u884c\u3002</p>"},{"location":"course_notes/fit5171/#module-execution-path-mep","title":"Module Execution Path (MEP)","text":"<p>message method sequence of module execution paths </p>"},{"location":"course_notes/fit5171/#week8","title":"week8","text":""},{"location":"course_notes/fit5171/#software-complexity-metrics-structure","title":"Software complexity metrics \u8f6f\u4ef6\uff08\u590d\u6742\u5ea6\uff09\u5ea6\u91cf - Structure \u7ed3\u6784\u5ea6\u91cf","text":"<ul> <li>Control-flow structure: the sequence in which instructions are executed in a program.\u63a7\u5236\u6d41\u7ed3\u6784\uff1a\u6307\u4ee4\u5728\u7a0b\u5e8f\u4e2d\u6267\u884c\u7684\u987a\u5e8f\u3002  </li> <li>Data-flow structure: the trail of a data item created or handled by a program. \u6570\u636e\u6d41\u7ed3\u6784\uff1a\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u9879\u4ece\u521b\u5efa\u5230\u5904\u7406\u7684\u8f68\u8ff9\u3002  </li> <li>Data structure: the organization of the data itself, independent of the program. \u6570\u636e\u7ed3\u6784\uff1a\u6570\u636e\u672c\u8eab\u7684\u7ec4\u7ec7\uff0c\u72ec\u7acb\u4e8e\u7a0b\u5e8f\u3002</li> </ul>"},{"location":"course_notes/fit5171/#a-decomposition-tree","title":"A decomposition tree","text":"<p> Sequence: P1;P2 - Sequence of P1 &amp; P2 Merge the terminal node of P1 with the initial node of P2. P1;P2 - P1 &amp; P2 \u7684\u5e8f\u5217 \u5c06 P1 \u7684\u7ec8\u7aef\u8282\u70b9\u4e0e P2 \u7684\u521d\u59cb\u8282\u70b9\u5408\u5e76 Nesting: P1(P2 , x) - nesting of P2 onto P1 at node x Replace x with P2 ,P1(P2 , x) - \u5728\u8282\u70b9 x \u5904\u5c06 P2 \u5d4c\u5957\u5230 P1 \u4e0a \u7528 P2 \u66ff\u6362 x  </p>"},{"location":"course_notes/fit5171/#morphology-metrics","title":"Morphology metrics","text":""},{"location":"course_notes/fit5171/#week9","title":"week9","text":""},{"location":"course_notes/fit5171/#mutation-testing","title":"mutation testing \u7a81\u53d8/\u53d8\u5f02\u6d4b\u8bd5","text":"<p>Mutation operators 1. \u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u89c4\u5219\u751f\u6210\u65b0\u7684Java \u4ee3\u7801  \u7c7b\u4f3c&lt;\u53d8&lt;=; +\u53d8- \uff1bi++\u53d8i--\u53bb\u6389call void method   Remove condition \u53d8if\uff08true\uff09 2. \u4f7f\u7528\u65b0\u751f\u6210\u7684\u4ee3\u7801\u8dd1\u73b0\u6709\u7684Unit Test\uff0c\u5982\u679c\u73b0\u6709\u7684test method\u6709\u6548  \u6027\u975e\u5e38\u9ad8\uff0c\u6240\u6709\u7684test\u5fc5\u7136\u5931\u8d25  MT\u4e4b\u540e\uff0ctest\u5931\u8d25\u7684\u8d8a\u591a\uff0ctest method\u8d8a\u597d   MT\u662f\u9488\u5bf9test\u7684test\uff0c\u6d4b\u8bd5UT\u662f\u5426\u5b8c\u5907 3. MT\u751f\u6210\u7684\u4ee3\u7801\u662f\u6839\u636eCompile\u751f\u6210\u7684\u4ee3\u7801\u800c\u4e0d\u662f\u539f\u4ee3\u7801 \uff08\u4e0d\u6539\u53d8 source code\uff09 4. Killing the mutation  Each mutated version is called a mutant and tests detect and  reject mutants by causing the behavior of the original version to  differ from the mutant. This is called killing the mutant. \u7b80\u8a00\u4e4b\uff0cmutation test\u4f1a\u5728\u7a0b\u5e8f\u7f16\u8bd1\u6216\u8fd0\u884c\u65f6\u63d2\u5165\u5fae\u5c0f\u7684\u5dee\u5f02(mutant)\uff0c \u7406\u60f3\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u5f53\u80fd\u591f\u68c0\u6d4b\u51fa\u8fd9\u4e9b\u5dee\u5f02\u5e26\u6765\u7684\u7a0b\u5e8f\u884c\u4e3a\u5f02\u5e38\u3002\u5982\u679c\u4e00 \u4e2amutant\u5f15\u53d1\u7684\u7a0b\u5e8f\u884c\u4e3a\u5f02\u5e38\u80fd\u591f\u88abtestcases\u6355\u6349\u5e76\u5bfc\u81f4testcases\u5931 \u8d25\uff0c\u5219\u79f0mutant\u88ab\u6d88\u706d\uff08killed\uff09\uff1b\u53cd\u4e4b\u5982\u679cmutant\u5e26\u6765\u7684\u7a0b\u5e8f\u884c\u4e3a\u53d8 \u5316\u65e0\u6cd5\u88ab\u6d4b\u8bd5\u7528\u4f8b\u6355\u6349\uff0c\u5219\u79f0mutant\u5b58\u6d3b\uff08survived/ alive\uff09 5. quivalent mutation a mutant cannot be killed by any set of test data. This type of mutants is said to be functionally equivalent to the originalprogram\u5f53\u6539\u53d8\u4efb\u4f55\u6d4b\u8bd5\u6570\u636e\uff0c\u8fd9\u4e2atest\u90fdfail\u4e0d\u4e86mutation\u53eb\u505aequivalent </p>"},{"location":"course_notes/fit5171/#week11","title":"week11","text":""},{"location":"course_notes/fit5171/#finding-threads-finite-state-machines","title":"Finding threads- Finite State Machines","text":""},{"location":"course_notes/fit5171/#mock-exam","title":"Mock exam","text":""},{"location":"course_notes/fit5171/#unit-testing","title":"Unit Testing","text":""},{"location":"course_notes/fit5171/#q1","title":"Q1","text":"<p>Consider a program FizzPrime that takes as input two non-negative integers, x and i, both between 0 and 100, both inclusive. The number x is a prime numbers. As output, the program prints the number i itself within the range ([0, 100]) when it is not divisible by x. For multiples of x, but not multiples of x^2, the program should print \u201cFizz\u201d instead of the number. For multiples of x^2 but not multiples of x^3, the program should print \u201cPrime\u201d. Finally, for numbers which are multiples of x^3 the program should print \u201cFizzPrime\u201d instead. \u8003\u8651\u4e00\u4e2a\u7a0b\u5e8f FizzPrime\uff0c\u5b83\u5c06\u4e24\u4e2a\u975e\u8d1f\u6574\u6570 x \u548c i \u4f5c\u4e3a\u8f93\u5165\uff0c\u5b83\u4eec\u90fd\u5728 0 \u5230 100 \u4e4b\u95f4\uff0c\u5305\u62ec\u4e24\u8005\u3002\u6570\u5b57 x \u662f\u8d28\u6570\u3002\u4f5c\u4e3a\u8f93\u51fa\uff0c\u7a0b\u5e8f\u5728 ([0, 100]) \u8303\u56f4\u5185\u6253\u5370\u4e0d\u80fd\u88ab x \u6574\u9664\u7684\u6570\u5b57 i \u672c\u8eab\u3002\u5bf9\u4e8e x \u7684\u500d\u6570\uff0c\u4f46\u4e0d\u662f x2 \u7684\u500d\u6570\uff0c\u7a0b\u5e8f\u5e94\u8be5\u6253\u5370\u201cFizz\u201d\u800c\u4e0d\u662f\u6570\u5b57\u3002\u5bf9\u4e8e x2 \u7684\u500d\u6570\u800c\u4e0d\u662f x3 \u7684\u500d\u6570\uff0c\u7a0b\u5e8f\u5e94\u8be5\u6253\u5370\u201cPrime\u201d\u3002\u6700\u540e\uff0c\u5bf9\u4e8e x3 \u7684\u500d\u6570\uff0c\u7a0b\u5e8f\u5e94\u8be5\u6253\u5370\u201cFizzPrime\u201d\u3002</p>"},{"location":"course_notes/fit5171/#robust-equivalence-classes","title":"robust equivalence classes","text":"<p>a) (5 marks) Develop robust equivalence classes for the input variables x and i given the  above specification. a)\uff085 \u5206\uff09\u6839\u636e\u4e0a\u8ff0\u89c4\u8303\u4e3a\u8f93\u5165\u53d8\u91cf x \u548c i \u5f00\u53d1\u7a33\u5065\u7684\u7b49\u4ef7\u7c7b  </p> <p>x  + invalid:1. X &lt; 0 ; X &gt;100;  x is not a prime number + valid: x &gt;= 0 ,x&lt;=100,x is a prime number</p> <p>i + invalid:1. i &lt; 0 ;  i &gt;100; + valid: i &gt;= 0 ,i&lt;=100</p> <p>Equivalence (i, Fizz, Prime, FizzPrime)     R1 = {x,i is valid, i cannot be divided by x}     R2 = {x,i is valid, i canbe divided by x but cannot be divided by x^2}     R3 = {x,i is valid, i canbe divided by x^2 but cannot be divided by x^3}     R4 = {x,i is valid, i canbe divided by x^3}     R5 = {x &lt;0 ,i is valid} R6 = {x &gt;100, i is valid} R7 = {X is not a prime, i is valid}     R8 = {i &lt;0 ,x is valid} R9 = {i &gt;100, x is valid}  </p> test Case x i Expected Output R1 3 4 4 R2 3 6 Fizz R3 3 9 Prime R4 3 27 FizzPrime R5 -1 - Error input R6 101 - Error input R7 4 - Error input"},{"location":"course_notes/fit5171/#robust-boundary-value-testing","title":"robust boundary value testing","text":"<p>develop test cases using the robust (not worst-case) version of the boundary value testing technique   </p> Test Case\u00a0 x i Expected Output\u00a0 Explanation\u00a0 1 -1 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is less than the lower boundary (0-100), invalid.  \u8f93\u5165 x \u5c0f\u4e8e\u4e0b\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 2 0 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is less than the lower boundary (0-100), invalid.  \u8f93\u5165 x \u5c0f\u4e8e\u4e0b\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 3 1 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is less than the lower boundary (0-100), invalid.  \u8f93\u5165 x \u5c0f\u4e8e\u4e0b\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 4 7 7 Fizz\u00a0\u5636\u5636\u58f0 i is equal to x, so \"Fizz\" is printed.  i \u7b49\u4e8e x\uff0c\u56e0\u6b64\u6253\u5370\u201c\u5636\u5636\u58f0\u201d\u3002 5 99 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is greater than the upper boundary (0-100), invalid.  \u8f93\u5165 x \u5927\u4e8e\u4e0a\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 6 100 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is greater than the upper boundary (0-100), invalid.  \u8f93\u5165 x \u5927\u4e8e\u4e0a\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 7 101 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is greater than the upper boundary (0-100), invalid.  \u8f93\u5165 x \u5927\u4e8e\u4e0a\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 8 7 -1 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input i is less than the lower boundary (0-100), invalid.  \u8f93\u5165 i \u5c0f\u4e8e\u4e0b\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 9 7 0 0 Number i is not divisible by x, so it remains unchanged.  \u6570\u5b57 i \u4e0d\u80fd\u88ab x \u6574\u9664\uff0c\u56e0\u6b64\u4fdd\u6301\u4e0d\u53d8\u3002 10 7 1 1 Number i is not divisible by x, so it remains unchanged.  \u6570\u5b57 i \u4e0d\u80fd\u88ab x \u6574\u9664\uff0c\u56e0\u6b64\u4fdd\u6301\u4e0d\u53d8\u3002 11 7 99 99 Number i is not divisible by x, so it remains unchanged.  \u6570\u5b57 i \u4e0d\u80fd\u88ab x \u6574\u9664\uff0c\u56e0\u6b64\u4fdd\u6301\u4e0d\u53d8\u3002 12 7 100 100 Number i is not divisible by x, so it remains unchanged.  \u6570\u5b57 i \u4e0d\u80fd\u88ab x \u6574\u9664\uff0c\u56e0\u6b64\u4fdd\u6301\u4e0d\u53d8\u3002 13 7 101 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input i is greater than the upper boundary (0-100), invalid.  \u8f93\u5165 i \u5927\u4e8e\u4e0a\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002"},{"location":"course_notes/fit5171/#blackbox-testing-analysisselection","title":"Blackbox testing analysis/selection","text":"<p>You have been given the task of performing blackbox testing on an implementation of the above algorithm. Of the main blackbox testing techniques we have discussed: boundary value testing (BVT), special value testing (SVT), equivalence class testing (ECT), and decision table-based testing (DTT), explain why each technique is(or is not) appropriate. \u60a8\u7684\u4efb\u52a1\u662f\u5bf9\u4e0a\u8ff0\u7b97\u6cd5\u7684\u5b9e\u73b0\u6267\u884c\u9ed1\u76d2\u6d4b\u8bd5\u3002\u5728\u6211\u4eec\u8ba8\u8bba\u7684\u4e3b\u8981\u9ed1\u76d2\u6d4b\u8bd5\u6280\u672f\u4e2d\uff1a\u8fb9\u754c\u503c\u6d4b\u8bd5 (BVT)\u3001\u7279\u6b8a\u503c\u6d4b\u8bd5 (SVT)\u3001\u7b49\u4ef7\u7c7b\u6d4b\u8bd5 (ECT) \u548c\u57fa\u4e8e\u51b3\u7b56\u8868\u7684\u6d4b\u8bd5 (DTT)\uff0c\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6bcf\u79cd\u6280\u672f\u662f\uff08\u6216\u4e0d\u662f\uff09 \uff09 \u5408\u9002\u7684 + BVT: Not a appropriate, because not consider the x is a prime and output logic. + SVT: is appropriate, because consider the x is a prime and output logic. + ECT: is appropriate + DTT: is appropriate, it consider the out put logic</p>"},{"location":"course_notes/fit5171/#q2","title":"Q2","text":"<p>The minimax algorithm is a way of finding an optimal move in a two-player game for one player, by minimising the possible loss for the worst case scenario (maximum loss). It has been widely used in 2-player zero-sum game plays. The algorithm for the depth limited minimax algorithm is given below. minimax \u7b97\u6cd5\u662f\u4e00\u79cd\u901a\u8fc7\u6700\u5c0f\u5316\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u53ef\u80fd\u635f\u5931\uff08\u6700\u5927\u635f\u5931\uff09\u6765\u4e3a\u4e00\u4e2a\u73a9\u5bb6\u5728\u4e24\u4eba\u6e38\u620f\u4e2d\u627e\u5230\u6700\u4f73\u79fb\u52a8\u7684\u65b9\u6cd5\u3002\u5b83\u5df2\u5e7f\u6cdb\u7528\u4e8e 2 \u4eba\u96f6\u548c\u6e38\u620f\u3002\u4e0b\u9762\u7ed9\u51fa\u6df1\u5ea6\u53d7\u9650\u6781\u5c0f\u6781\u5927\u7b97\u6cd5\u7684\u7b97\u6cd5\u3002</p> <pre><code>/*\nminimax(node, depth, maximisingP layer)  \nInput: node B    //Node where search begins.  \nInput: depth B    //the maximum depth to search.  \nInput: maximisingPlayer //Boolean value representing the player for which the search is performed.  \nOutput: the best value\n*/\n</code></pre>"},{"location":"course_notes/fit5171/#program-graph","title":"program graph","text":""},{"location":"course_notes/fit5171/#cyclomatic-complexity-of-the-program-graph","title":"cyclomatic complexity of the program graph","text":"<p>C= E-V+2p E: \u8fb9\u7684\u6570\u91cf N: \u8282\u70b9\u7684\u6570\u91cf P: \u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf Total branches (E) = 2 (for the first \"if\" statement) + 2 (for the second \"if\" statement) + N (for the \"foreach\" loop condition) \u603b\u5206\u652f \uff08E\uff09 = 2\uff08\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u201cif\u201d\u8bed\u53e5\uff09+ 2\uff08\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u201cif\u201d\u8bed\u53e5\uff09+ N\uff08\u5bf9\u4e8e\u201cforeach\u201d\u5faa\u73af\u6761\u4ef6\uff09 Cyclomatic Complexity = E - N + 2  = (2 + 2 + N) - N + 2 = 6</p>"},{"location":"course_notes/fit5171/#q3","title":"Q3","text":""},{"location":"course_notes/fit5171/#program-graph_1","title":"program graph","text":""},{"location":"course_notes/fit5171/#cyclomatic-complexity","title":"Cyclomatic complexity","text":"<p>draw the final condensed graph for the program graph you came up with in part (a)  above, and ii. calculate the Cyclomatic complexity of the condensed graph you draw  </p>"},{"location":"course_notes/fit5171/#q3_1","title":"Q3","text":"<p>Given an undirected graph G with vertices V = {1, 2, 3, 4, 5, 6, 7, 8} and edges E = {12, 14, 16, 22, 23, 28, 34, 35, 67, 78}</p>"},{"location":"course_notes/fit5171/#undirected-graphdirected-graph","title":"undirected graph/directed graph","text":""},{"location":"course_notes/fit5171/#node-degree","title":"node degree","text":"<p>Calculate the degree of each node in the graph.  </p>"},{"location":"course_notes/fit5171/#cyclomatic-number","title":"Cyclomatic number","text":"<p>The Cyclomatic number of of G, <code>V (G) = #E \u2212 #V + p = 10 \u2212 8 + 1 = 3</code> </p>"},{"location":"course_notes/fit5171/#source-nodes-or-sink-nodes","title":"source nodes or sink nodes","text":"<p>Source nodes: 1 Sink nodes: 4, 5, 8</p>"},{"location":"course_notes/fit5171/#semi-paths_1","title":"semi-paths","text":"<p>Yes, (12, 23, 16, 67), (12, 28, 16, 67), and (12, 23, 34, 16, 67, 78) are semi-paths  </p>"},{"location":"course_notes/fit5171/#x-connected-node","title":"x-connected node","text":"<p>0-connected: none. 1-connected: 2 &amp; 6, 3 &amp; 7, etc. 2-connected: 1 &amp; 2, 6 &amp; 7, etc. 3-connected: none.  </p>"},{"location":"course_notes/fit5171/#reachability-matrix","title":"reachability matrix","text":""},{"location":"course_notes/fit5171/#integration-testing","title":"Integration Testing","text":""},{"location":"course_notes/fit5171/#q3-select-reasonable-integration-method","title":"Q3 select reasonable integration method","text":"<p>One of the goals of integration testing is to be able to isolate faults when a test case causes a failure. Consider integration testing for a program written in a procedural/object-oriented programming language. Rate the following integration strategies on their abilities of (1) relative fault isolation and (2) testing of co-functionality. You also need to provide a rationale for your answer \u96c6\u6210\u6d4b\u8bd5\u7684\u76ee\u6807\u4e4b\u4e00\u662f\u80fd\u591f\u5728\u6d4b\u8bd5\u7528\u4f8b\u5bfc\u81f4\u6545\u969c\u65f6\u9694\u79bb\u6545\u969c\u3002\u8003\u8651\u5bf9\u4f7f\u7528\u9762\u5411\u8fc7\u7a0b/\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u3002\u8bc4\u4ef7\u4ee5\u4e0b\u96c6\u6210\u7b56\u7565\u5728 (1) \u76f8\u5bf9\u6545\u969c\u9694\u79bb\u548c (2) \u534f\u540c\u529f\u80fd\u6d4b\u8bd5\u65b9\u9762\u7684\u80fd\u529b\u3002\u60a8\u8fd8\u9700\u8981\u4e3a\u60a8\u7684\u56de\u7b54\u63d0\u4f9b\u7406\u7531 Show your ratings graphically by placing the letters corresponding to a strategy on a line, as in the example below. Suppose that for the ability of fault isolation, strategies X and Y are about equal and not very effective, and strategy Z is very effective. Note that this rating is relative and qualitative, so don\u2019t agonise over where exactly to put a  strategy, but focus on their relative position. A Big bang B Decomposition-based top-down integration C Decomposition-based bottom-up integration D Decomposition-based sandwich integration E Call graph-based pairwise integration F Call graph-based neighbourhood integration (radius 1)  G Call graph-based neighbourhood integration (radius 2)  </p> <p>the ranking of fault isolation from highest to lowest:  A is the worst. E&gt;F&gt;G. B\u2248C &gt; D  pairwise is from two random points but Decomposition only select one unknown pts.</p>"},{"location":"course_notes/fit5171/#q2_1","title":"Q2","text":""},{"location":"course_notes/fit5171/#mm-paths","title":"MM-paths","text":"<p>For example, the MM-path for component D (UserDAO) is MEP (D, 1) = (1, 2, 3). The MM-path for component E (MissionDAO) is MEP (E , 1) = (1, 2, 3) + MEP(A,1) = (1,2,3,5)  MEP(A,2) = (1,2,4)  MEP(A,3) = (5) + MEP(B,1) = (1,2,3,8)  MEP(B,2) = (1,2,4)  MEP(B,3) = (5,6,8)  MEP(B,4) = (5,7)  MEP(B,5) = (8) + MEP(C,1) = (1,2)  MEP(C,2) = (3,4,8)  MEP(C,3) = (3,5,6,8)  MEP(C,4) = (3,5,7,8</p>"},{"location":"course_notes/fit5171/#mm-path-complexity","title":"MM-path complexity","text":"<p>5 edges between A and B  2 edges between B and E  4 edges between C and D  7 edges between B and C The Cyclomatic complexity is <code>V (G) = #E \u2212 #V + p = 18 \u2212 5 + 1 = 14</code> </p>"},{"location":"course_notes/fit5171/#software-metrics","title":"Software Metrics","text":""},{"location":"course_notes/fit5171/#q4","title":"Q4","text":"<p>\u2203A, B : Program \u2022 M (A) + M (B) &lt; M (A + B) where M represents a given metric and A + B represents the composition of A and B Given a program, the repeated application of the following two operations can be used to  decompose it into a unique tree of structured programming constructs. Sequence: composing two program graphs sequentially by merging one program graph\u2019s  terminal node with the other program graph\u2019s initial node. For example, sequential  composition of programs A and B is denoted by A; B. Nesting: replacing one node in one program with the entirety of another program. For  example, nesting program B in program A at node x of A is denoted by A(B, x). The depth of nesting values of programs constructed by the above two operations are defined as below Sequence: n(P1; P2; . . . ; Pn) = max(n(P1), n(P2), . . . , n(Pn)), and Nesting: n(P1(P2; . . . ; Pn)) = 1 + max(n(P2), . . . , n(Pn)), where P2, . . . , Pn are sequentially  nested inside P1 Pn sequence (n = 1, 2, . . .) D2 while loop  D0 if-then D3 do-while loop  D1 if-then-else Cn case-switch The depth of nesting value for all the above constructs is 1 except for P1, which is 0. The  depth of nesting value of a program is calculated in a bottom-up fashion. For Weyuker\u2019s property 9 and the metric depth of nesting n(P ) of a valid program P , do the  following: (a) State whether the property holds or not.  (b) Prove your claim (informally). Sequence: n(A) = n(px) ; n(B) = n(py) n(A+B) = n(px;py) =max(n(px),n(py)) == n(A) or n(b);  n(A+B) &lt;= n(A) + n(b} Nesting: n(A) = n(p1) = 0  ; n(B) = n(p2) = 1 n(A+B) = n(p1(p2)) = 1 + max(n(p2)) = 2  ; n(A) + n(B) &lt; n(A+B)</p>"},{"location":"course_notes/fit5171/#mutation-testing_1","title":"Mutation Testing","text":""},{"location":"course_notes/fit5171/#q1_1","title":"Q1","text":"<p>The following Java method, min, returns the smallest of three integer parameters  </p> <pre><code>1 public int min ( int a , int b , int c ) {  \n2 int temp = a ;  \n3 if ( b &lt; a ) {  \n4 temp = b ;  \n5 }  \n6 if ( c &lt; b ) {  \n7 temp = c ;  \n8 }  \n9 return temp ;  \n10 }\n</code></pre>"},{"location":"course_notes/fit5171/#equivalent-mutant","title":"equivalent mutant","text":"<p>come up with an equivalent mutant by applying a first-order mutation. In your answer, identify: 1. The mutation operator applied, 2. The associated statement to be changed, and 3. What the statement is changed to.     Mutation Operator Applied: Relational Operator Replacement     \u5e94\u7528\u7684\u7a81\u53d8\u8fd0\u7b97\u7b26\uff1a\u5173\u7cfb\u8fd0\u7b97\u7b26\u66ff\u6362     This mutation operator involves changing the relational operator (e.g., &gt;, &lt;, = =, etc.) in a conditional statement.\u6b64\u7a81\u53d8\u8fd0\u7b97\u7b26\u6d89\u53ca\u66f4\u6539\u6761\u4ef6\u8bed\u53e5\u4e2d\u7684\u5173\u7cfb\u8fd0\u7b97\u7b26\uff08\u4f8b\u5982\uff0c &gt; \u3001 &lt; \u3001 == \u7b49\uff09\u3002     Associated Statement to be changed: Line 6 - if (c &lt; b)\u8981\u66f4\u6539\u7684\u76f8\u5173\u8bed\u53e5\uff1a\u7b2c 6 \u884c - if (c &lt; b)     What the statement is changed to: We will change the &lt; operator to &lt;=, resulting in the modified statement: if (c &lt;= b)\u8bed\u53e5\u66f4\u6539\u4e3a\uff1a\u6211\u4eec\u5c06 &lt; \u8fd0\u7b97\u7b26\u66f4\u6539\u4e3a &lt;= \uff0c\u5bfc\u81f4\u4fee\u6539\u540e\u7684\u8bed\u53e5\uff1a if (c &lt;= b)</p>"},{"location":"course_notes/fit5171/#non-equivalent-first-order-mutants","title":"non-equivalent first-order mutants","text":"<p>devise a set of three test cases that achieves 100% statement coverage. Come  up with three non-equivalent first-order mutants of the original program, making use one of the following mutation operators in each mutant. Determine the kill rate of your  test suite on the three mutants.  The mutation operators you can use are:  ror Relational operator replacement.  sdl Statement deletion. uoi Unary operator insertion.   </p> Test Case Input Expected Output Case 1 a = 5, b = 3, c = 7 3 Case 2 a = 4, b = 6, c = 2 2 Case 3 a = 1, b = 2, c = 1 1 Mutant\u00a0\u7a81\u53d8\u4f53 Operator\u00a0\u7b97\u5b50 Description\u00a0\u63cf\u8ff0 Original Statement\u00a0\u539f\u59cb\u58f0\u660e Mutated Statement\u00a0\u7a81\u53d8\u58f0\u660e Test Case Killed\u00a0\u6d4b\u8bd5\u7528\u4f8b\u88ab\u6740 Mutant 1\u00a0\u7a81\u53d8\u4f53 1 ror Relational Operator Replacement  \u5173\u7cfb\u8fd0\u7b97\u7b26\u66ff\u6362 if (b &lt; a)\u00a0\u5982\u679c\uff08b &lt; a\uff09 if (b &gt;= a)\u00a0\u5982\u679c \uff08b &gt;= a\uff09 Case 1, Case 3\u00a0\u6848\u4f8b 1\u3001\u6848\u4f8b 3 Mutant 2\u00a0\u53d8\u79cd\u4eba2 sdl Statement Deletion\u00a0\u8bed\u53e5\u5220\u9664 if (c &lt;= b)\u00a0\u5982\u679c \uff08c &lt;= b\uff09 delete line\u00a0\u5220\u9664\u884c Case 1, Case 2\u00a0\u6848\u4f8b 1\u3001\u6848\u4f8b 2 Mutant 3\u00a0\u53d8\u79cd\u4eba3 uoi Unary Operator Insertion\u00a0\u4e00\u5143\u8fd0\u7b97\u7b26\u63d2\u5165 temp = c;\u00a0\u6e29\u5ea6 = c; temp = -c;\u00a0\u6e29\u5ea6 = -c; Case 2, Case 3\u00a0\u6848\u4f8b 2\u3001\u6848\u4f8b 3 <p>All MT be killed by test cases, so the rate is 100%</p>"},{"location":"course_notes/fit5171/#statement-coverage","title":"statement coverage","text":"<p>is there a defect in the program? If so, develop the smallest set of test cases that achieves 100% statement coverage but does not reveal the defect. If not, develop  the smallest set of test cases that achieves 100% statement coverage.   </p> <p>defect in the program is that it doesn't compare the value of a and c. if a=1,b=3,c=2.the result will be 2 instead of 1.   </p> Test Case\u00a0\u6d4b\u8bd5\u7528\u4f8b a b c Expected Output\u00a0\u9884\u671f\u8f93\u51fa 1 1 3 2 1 2 3 2 1 1"},{"location":"course_notes/fit5171/#week-1-why-testing-objectives-of-this-unit","title":"week 1 Why testing &amp; Objectives of this unit","text":""},{"location":"course_notes/fit5171/#learning-objectives","title":"Learning Objectives:","text":"<ul> <li>explain the importance of quality assurance in software engineering;</li> <li>articulate the role of validation and verification methods in the system development life cycle; key issues in software testing, testing levels and testing techniques</li> </ul>"},{"location":"course_notes/fit5171/#lecture","title":"lecture","text":""},{"location":"course_notes/fit5171/#goals-of-software-testing","title":"Goals of Software testing","text":"<p>Functionality: software functions correctly Usability: ease of use Security: free from vulnerabilities and prevent exploits Reliability: frequency &amp; criticality of failures (MTBF) Efficiency: speed, scalability Maintainability: update, modify the application if required Portability: compatibility with other environments/systems  </p>"},{"location":"course_notes/fit5171/#test-driven-development-tdd","title":"Test-driven Development (TDD)","text":"<p> + Test-driven development is a software development process relying on software requirements being converted to test cases before software is fully developed, and tracking all software development by repeatedly testing the software against all test cases. + A Test case is a singular set of actions or instructions to perform that validates a specific aspect of a product or application functionality.</p>"},{"location":"course_notes/fit5171/#tdd-visualised","title":"TDD visualised","text":"<p> 1. Add a test (!) 2. Run all tests, and confirm that the new test fails (!) 3. Write/refine production code to cause the test to pass 4. Run all tests again 5. Refactor code if necessary 6. Repeat</p>"},{"location":"course_notes/fit5171/#tdd-pros-cons_1","title":"TDD: pros &amp; cons","text":"<p>Advantage: + More tests, less debugging + More productive + Validates not only code, but also  design + Better test coverage, greater  confidence + Better code structure</p> <p>Disadvantage: + difficult in certain scenarios  UI, database, network + Needs management support + Developer blind spots + false sense of security + Maintenance overhead for (bad) tests</p>"},{"location":"course_notes/fit5171/#black-box-testing","title":"black box testing","text":""},{"location":"course_notes/fit5171/#white-box-testing","title":"white box testing","text":""},{"location":"course_notes/fit5171/#comparison-of-different-level-of-testing_1","title":"comparison of different level of testing","text":""},{"location":"course_notes/fit5171/#tutorial","title":"tutorial","text":"<pre><code>//pom.xml \n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;io.javabrains&lt;/groupId&gt;\n    &lt;artifactId&gt;junit-5-basics&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n// maven properties\n    &lt;properties&gt;\n        // level of java\n        &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;\n        // comile level of java\n        &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;\n        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n        // junit.jupiter.version and the reference of junit.jupiter dependencies\n        &lt;junit.jupiter.version&gt;5.4.0&lt;/junit.jupiter.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        // junit-jupiter-engine core platform runing the test\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;\n            &lt;artifactId&gt;junit-jupiter-engine&lt;/artifactId&gt;\n            &lt;version&gt;${junit.jupiter.version}&lt;/version&gt;\n            // where to active your library\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        //junit-jupiter-api where you using\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;\n            &lt;artifactId&gt;junit-jupiter-api&lt;/artifactId&gt;\n            &lt;version&gt;${junit.jupiter.version}&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n&lt;/project&gt;\n</code></pre>"},{"location":"course_notes/fit5171/#21-application-anagram-detector","title":"2.1 Application: anagram detector","text":"<p>An anagram of a word is another word produced by rearranging the letters of the original word, using all the original letters exactly once.6 For example, \u201clisten\u201d is an anagram of \u201csilent\u201d.  This application will need to include the following functionality.  1. Given two words as input, return whether they are anagrams of each other. For example, for \u201clisten\u201d and \u201csilent\u201d, the detector should return true. For \u201cpizza\u201d and \u201cdonut\u201d, the detector should return false. 2. Given a list of words separated by whitespace characters, return all the groups of words that are anagrams of each other. For example, assume that the detector is given the following text as input. <code>tews tis lives tamed elvis ream evils comics stew wets markers dashed west veils rat mace sit mated cosmic mare remarks shaded</code>  Given the above input, the detector will find the following groups of anagrams as output: <code>\u2022 tis sit \u2022 tamed mated \u2022 comics cosmic \u2022 mare ream \u2022 markers remarks \u2022 dashed shaded \u2022 west wets tews stew \u2022 lives veils elvis evils \u2022 rat \u2022 mace</code> Note that the last two groups in the output represent the two words that do not have anagrams in the input</p> <pre><code>import java.util.*;  \n\npublic class AnagramDetector {  \n    // This is the main method of the program  \n    public static void main(String[] args) {  \n        // Create a scanner object to read user input from the console  \n        Scanner input = new Scanner(System.in);  \n        // Prompt the user to enter words separated by spaces  \n        System.out.println(\"Enter words separated by spaces:\");  \n        // Read the user input as a single string  \n        String words = input.nextLine();  \n        // Split the string into an array of words  \n        String[] wordsArray = words.split(\" \");  \n\n        // Call the getAnagramGroups method to group the words by anagrams  \n        List&lt;List&lt;String&gt;&gt; anagramGroups = getAnagramGroups(wordsArray);  \n\n        // Loop through each group of anagrams  \n        for (List&lt;String&gt; group : anagramGroups) {  \n            // Create a StringBuilder object to construct a string of words in the current group  \n            StringBuilder sb = new StringBuilder();  \n            // Loop through each word in the current group  \n            for (String word : group) {  \n                // Append the current word and a space to the StringBuilder object  \n                sb.append(word).append(\" \");  \n            }  \n            // Convert the StringBuilder object to a string and remove any extra spaces at the end  \n            String result = sb.toString().trim();  \n            // Print the string of words in the current group  \n            System.out.println(result);  \n        }  \n    }  \n\n    // This method takes an array of words and groups them by anagrams  \n    public static List&lt;List&lt;String&gt;&gt; getAnagramGroups(String[] words) {  \n        // Create a list to hold the groups of anagrams  \n        List&lt;List&lt;String&gt;&gt; anagramGroups = new ArrayList&lt;&gt;();  \n        // Create a map to hold each anagram and its corresponding group  \n        Map&lt;String, List&lt;String&gt;&gt; anagramMap = new HashMap&lt;&gt;();  \n\n        // Loop through each word in the input array  \n        for (String word : words) {  \n            // Convert the current word to a char array and sort it  \n            char[] chars = word.toCharArray();  \n            Arrays.sort(chars);  \n            // Convert the sorted char array back to a string  \n            String sortedWord = new String(chars);  \n\n            // Check if the anagramMap already contains the current sorted word  \n            if (anagramMap.containsKey(sortedWord)) {  \n                // If it does, add the current word to the corresponding group  \n                anagramMap.get(sortedWord).add(word);  \n            } else {  \n                // If it doesn't, create a new group for the current word  \n                List&lt;String&gt; group = new ArrayList&lt;&gt;();  \n                group.add(word);  \n                // Add the new group to the anagramGroups list  \n                anagramGroups.add(group);  \n                // Add the current sorted word and its corresponding group to the anagramMap  \n                anagramMap.put(sortedWord, group);  \n            }  \n        }  \n\n        // Return the list of groups of anagrams  \n        return anagramGroups;  \n    }  \n}\n</code></pre>"},{"location":"course_notes/fit5171/#tddtest-driven-development-for-21","title":"TDD(Test-Driven Development) for 2.1","text":"<p>Making use of the TDD process, write some tests for the above functionality and use them to guide you in writing the actual code that actually implements the functionality. You should do this iteratively</p>"},{"location":"course_notes/fit5171/#iteration-1","title":"Iteration 1","text":"<pre><code>@Test  \n /*  \ncheck that the getAnagramGroups method returns an  \nempty list when passed an empty array of words.  \n*/  \nvoid getAnagramGroupsEmptyList() {  \n    String[] words = {};  \n    List&lt;List&lt;String&gt;&gt; result = AnagramDetector.getAnagramGroups(words);  \n    assertTrue(result.isEmpty());  \n}\n</code></pre> <p>it return true so no need to modify</p>"},{"location":"course_notes/fit5171/#iteration-2","title":"Iteration 2","text":"<pre><code>@Test  \n    /*  \n    * check that the getAnagramGroups method correctly groups    * a set of words that are all anagrams of each other    * */void getAnagramGroupsSameGroup() {  \n    String[] words = {\"listen\", \"silent\", \"enlist\"};  \n    List&lt;List&lt;String&gt;&gt; result = AnagramDetector.getAnagramGroups(words);  \n    assertEquals(1, result.size());  \n    assertTrue(result.get(0).contains(\"listen\"));  \n    assertTrue(result.get(0).contains(\"silent\"));  \n    assertTrue(result.get(0).contains(\"enlist\"));  \n}\n</code></pre> <p>it return true so no need to modify</p>"},{"location":"course_notes/fit5171/#iteration-3","title":"Iteration 3","text":"<pre><code>@Test  \npublic void testGetAnagramGroups() {  \n    // Test case with no input  \n    String[] emptyWordsArray = {};  \n    assertTrue(AnagramDetector.getAnagramGroups(emptyWordsArray).isEmpty());  \n\n    // Test case with single word input  \n    String[] singleWordArray = {\"hello\"};  \n    assertEquals(1, AnagramDetector.getAnagramGroups(singleWordArray).size());  \n\n    // Test case with input containing only anagrams  \n    String[] anagramWordsArray = {\"race\", \"care\", \"acre\"};  \n    assertEquals(1, AnagramDetector.getAnagramGroups(anagramWordsArray).size());  \n\n    // Test case with input containing no anagrams  \n    String[] nonAnagramWordsArray = {\"hello\", \"world\", \"java\"};  \n    assertEquals(3, AnagramDetector.getAnagramGroups(nonAnagramWordsArray).size());  \n\n    // Test case with input containing multiple anagram groups  \n    String[] multipleGroupsWordsArray = {\"race\", \"care\", \"acre\", \"listen\", \"silent\", \"enlist\"};  \n    assertEquals(2, AnagramDetector.getAnagramGroups(multipleGroupsWordsArray).size());  \n\n\n}\n</code></pre> <p>it all return true so no need to modify</p>"},{"location":"course_notes/fit5171/#iteration-4","title":"Iteration 4","text":"<pre><code>@Test  \n/*  \n* This test case ensures that the getAnagramGroups method correctly  \n* groups anagrams even when the input array contains duplicates  \n* */  \npublic void testGetAnagramGroups_InputWithDuplicates_ReturnsAnagramGroups() {  \n    AnagramDetector detector = new AnagramDetector();  \n    List&lt;List&lt;String&gt;&gt; result = detector.getAnagramGroups(new String[]{\"eat\", \"tea\", \"ate\", \"ape\", \"pea\", \"pea\", \"are\"});  \n    assertEquals(3, result.size());  \n    assertTrue(result.contains(Arrays.asList(\"eat\", \"tea\", \"ate\")));  \n    assertTrue(result.contains(Arrays.asList(\"ape\", \"pea\", \"pea\")));  \n    assertTrue(result.contains(Collections.singletonList(\"are\")));  \n    assertFalse(result.contains(Arrays.asList(\"tea\", \"ate\", \"eat\", \"pea\", \"ape\", \"pea\", \"are\")));  \n}\n</code></pre>"},{"location":"course_notes/fit5171/#22-k-th-largest-element-of-an-array","title":"2.2 k-th largest element of an array","text":"<p>write  a java program k-th largest element of an array user input an array sperate by , first and then input an int k, find the k-th largest element in this array.   IF given an array -1, 0, 2, 6, 4 and  3, you are required to find the 3rd largest element of the array, which is 2</p> <pre><code>import java.util.Arrays;  \nimport java.util.Scanner;  \n\npublic class KthLargestElement {  \n\n    public static void main(String[] args) {  \n        // Read input array from user  \n        Scanner scanner = new Scanner(System.in);  \n        System.out.print(\"Enter the array elements separated by comma: \");  \n        String input = scanner.nextLine();  \n        String[] values = input.split(\",\");  \n        int[] arr = new int[values.length];  \n        for (int i = 0; i &lt; values.length; i++) {  \n            arr[i] = Integer.parseInt(values[i].trim());  \n        }  \n\n        // Read the value of k from user  \n        System.out.print(\"Enter the value of k: \");  \n        int k = scanner.nextInt();  \n\n        // Find the k-th largest element using findKthLargestElement()  \n        int kthLargest = findKthLargestElement(arr, k);  \n\n        // Print the k-th largest element  \n        System.out.println(\"The \" + k + \"-th largest element is \" + kthLargest);  \n    }  \n\n    public static int findKthLargestElement(int[] arr, int k) {  \n\n    // If k is greater than the length of the array, return -1  \n    if (k &gt; arr.length) {  \n        return -1;  \n    }  \n\n    // Sort the array in descending order  \n    Arrays.sort(arr);  \n    int x = arr.length - k;  \n    int kthLargest = arr[x];  \n    return kthLargest;\n    }\n}\n\n</code></pre> <p>terminal window  </p> <pre><code>Enter the array elements separated by comma: -1, 0, 2, 6, 4\nEnter the value of k: 3\nThe 3-th largest element is 2\n\n</code></pre> <p>so we will test findKthLargestElement() method and make iteration</p> <pre><code>public static int findKthLargestElement(int[] arr, int k) {  \n\n    // If k is greater than the length of the array, return -1  \n    if (k &gt; arr.length) {  \n        return -1;  \n    }  \n\n    // Sort the array in descending order  \n    Arrays.sort(arr);  \n    int x = arr.length - k;  \n    int kthLargest = arr[x];  \n    return kthLargest;\n}\n</code></pre>"},{"location":"course_notes/fit5171/#iteration-1-simple-test-case","title":"Iteration 1: Simple Test Case","text":"<pre><code>@Test  \n/*  \n* an array with only one element, and we want to  \n* find the 1st largest element. We expect the output to be the same element.  \n* */  \npublic void testKthLargestElement() {  \n    int[] arr = {3};  \n    int k = 1;  \n    int expected = 3;  \n    int actual = KthLargestElement.findKthLargestElement(arr, k);  \n    assertEquals(expected, actual);  \n}  \n\n@Test  \n/*  \n*  array of multiple elements. We want to find the 3rd largest element of the array.  \n* */  \npublic void testKthLargestElementMulti() {  \n    // Test Case 1  \n    int[] arr1 = {3};  \n    int k1 = 1;  \n    int expected1 = 3;  \n    int actual1 = KthLargestElement.findKthLargestElement(arr1, k1);  \n    assertEquals(expected1, actual1);  \n\n    // Test Case 2  \n    int[] arr2 = {5, 3, 9, 8, 1};  \n    int k2 = 3;  \n    int expected2 = 5;  \n    int actual2 = KthLargestElement.findKthLargestElement(arr2, k2);  \n    assertEquals(expected2, actual2);  \n}\n</code></pre>"},{"location":"course_notes/fit5171/#iteration-edge-cases","title":"Iteration : Edge Cases","text":"<pre><code>import org.junit.Test;\nimport static org.junit.Assert.assertEquals;\n\npublic class KthLargestElementTest {\n\n    @Test\n    public void testKthLargestElement() {\n        // Test Case 1\n        int[] arr1 = {3};\n        int k1 = 1;\n        int expected1 = 3;\n        int actual1 = KthLargestElement.findKthLargestElement(arr1, k1);\n        assertEquals(expected1, actual1);\n\n        // Test Case 2\n        int[] arr2 = {5, 3, 9, 8, 1};\n        int k2 = 3;\n        int expected2 = 5;\n        int actual2 = KthLargestElement.findKthLargestElement(arr2, k2);\n        assertEquals(expected2, actual2);\n\n        // Test Case 3\n        int[] arr3 = {3, 3, 5, 2, 5, 2};\n        int k3 = 2;\n        int expected3 = 5;\n        int actual3 = KthLargestElement.findKthLargestElement(arr3, k3);\n        assertEquals(expected3, actual3);\n\n        // Test Case 4\n        int[] arr4 = {5, 3, 9, 8, 1};\n        int k4 = 10;\n        int expected4 = -1;\n        int actual4 = KthLargestElement.findKthLargestElement(arr4, k4);\n        assertEquals(expected4, actual4);\n\n        // Test Case 5\n        int[] arr5 = {};\n        int k5 = 1;\n        int expected5 = -1;\n        int actual5 = KthLargestElement.findKthLargestElement(arr5, k5);\n        assertEquals(expected5, actual5);\n    }\n}\n\n</code></pre> <p>all pass</p>"},{"location":"course_notes/fit5171/#week-2-test-driven-development-unit-testing-test-planning","title":"Week 2 Test-driven Development/ Unit testing / Test Planning","text":""},{"location":"course_notes/fit5171/#learning-objectives_1","title":"Learning Objectives","text":"<ul> <li>articulate the advantages and disadvantages of Test-Driven Development (TDD) </li> <li>know the benefits of unit testing; develop unit test cases using industry-strength IDES, and unit testing frameworks such as JUnit.\u00a0  </li> <li>demonstrate the basic elements of test strategy and test planning;</li> </ul>"},{"location":"course_notes/fit5171/#lecture_1","title":"Lecture","text":""},{"location":"course_notes/fit5171/#unit-testing_1","title":"Unit testing","text":"<p>Unit: a very small abstraction of a class/object that performs some operations Unit testing: testing units  Individually, in isolation, separately, not together, one at a time  </p>"},{"location":"course_notes/fit5171/#junit-basics_1","title":"Junit basics","text":"<ul> <li>JUnit tests are also called test methods in a test class</li> <li>Naming convention of test classes: name of class under  test + Test <code>ShoppingCartTest.java for  ShoppingCart.java</code> </li> <li>Test names should be meaningful and reflect purpose <code>shouldReturnTrueWhenUsersHaveSameEmail()</code></li> </ul>"},{"location":"course_notes/fit5171/#test-annotations_1","title":"Test Annotations","text":"<p>JUnit 5 User Guide <code>@Before Each, @After Each</code> : initialise the user every time before  running the test case for a particular user  </p> <pre><code>private User target;  \n@BeforeEach  \npublic void setUp() {  \n    target = new User();  \n}\n</code></pre> <p><code>@Timeout(value=1000, unit =  TimeUnit.MILLISECONDS)</code> : timeout in 1,000 milliseconds <code>@ParameterisedTest</code> : Claim this methods has input parameter  </p> <pre><code>@ParameterizedTest \n@ValueSource(ints = {1, 3, 5, -3, 15, Integer.MAX_VALUE}) // six numbers \nvoid isOdd_ShouldReturnTrueForOddNumbers(int number) { \n    assertTrue(Numbers.isOdd(number)); \n}\n</code></pre>"},{"location":"course_notes/fit5171/#test-assertions_1","title":"Test Assertions","text":"<p>Assertions allow us to compare  expected vs actual behaviours (output  values, exceptions, etc.)  </p> <pre><code>assertTrue() assertFalse()  \nassertEquals() assertNotEquals()  \nassertNull() assertNotNull()  \nassertSame() assertNotSame()  \nassertArrayEquals() assertThrows()  \n</code></pre>"},{"location":"course_notes/fit5171/#test-plan","title":"Test plan","text":"<p>Sample System Integration Test Plan - XYZ Remote Office Payroll System </p>"},{"location":"course_notes/fit5171/#tutorial_1","title":"Tutorial","text":"<p>You will create  add method for each requirement incrementally. You will be develop the requirements using TDD.</p>"},{"location":"course_notes/fit5171/#quiz","title":"Quiz","text":""},{"location":"course_notes/fit5171/#iteration-1_1","title":"Iteration 1","text":"<p>The method can take up to 2 numbers, and will return their sum (for an empty string it will return 0)  for example \u201c\u201d or \u201c1\u201d or \u201c1,2\u201d </p> <pre><code>@Test\npublic void testAddMethodWithEmptyString() {\n    StringCalculator calculator = new StringCalculator();\n    int result = calculator.add(\"\");\n    assertEquals(0, result);\n}\n\n</code></pre> <pre><code>public class StringCalculator {\n    public int add(String numbers) {\n        if (numbers.isEmpty()) {\n            return 0;\n        }\n        return -1; // Placeholder return value for now\n    }\n}\n</code></pre>"},{"location":"course_notes/fit5171/#iteration-2_1","title":"iteration 2","text":"<p>the method now can take any amount of numbers</p> <pre><code>@Test\npublic void testAddMethodWithMultipleNumbers() {\n    StringCalculator calculator = new StringCalculator();\n    int result = calculator.add(\"1,2,3,4,5\");\n    assertEquals(15, result);\n}\n</code></pre> <pre><code>// Calculate the sum of the numbers  \nint sum = 0;  \nfor (String token : tokens) {  \n    // Convert each token to an integer and add it to the sum  \n    sum += Integer.parseInt(token);  \n}\n\n</code></pre>"},{"location":"course_notes/fit5171/#iteration-3_1","title":"iteration 3","text":"<p>allow the Add method to handle new lines between numbers (instead of commas). The following input is ok: \u201c1\\n2,3\u201d (will equal 6)  </p> <pre><code>@Test\npublic void testAddMethodWithNewLinesBetweenNumbers() {\n    StringCalculator calculator = new StringCalculator();\n    int result = calculator.add(\"1\\n2,3\");\n    assertEquals(6, result);\n}\n\n</code></pre> <pre><code>String[] tokens = numbers.split(\"[,\\n]\");\n</code></pre>"},{"location":"course_notes/fit5171/#iteration-4_1","title":"iteration 4","text":"<pre><code>/*  \n* Support different delimiters, the beginning of the string  \n* will contain a separate line that looks like this:\u201c//delimiter\\n[numbers. . . ]\u201d  \n* for example \u201c//;\\n1;2\u201d should return three where the delimiter is \u2018;\u2019  \n* item The first line is optional. All existing scenarios should still be supported  \n* */  \n@Test  \npublic void testAddMethodWithCustomDelimiter() {  \n    StringCalculator calculator = new StringCalculator();  \n    int result = calculator.add(\"//;\\n1;2\");  \n    assertEquals(3, result);  \n}\n</code></pre> <p>split the input string <code>numbers</code> using a regular expression that matches either commas or new lines as a delimiter, using the pattern <code>[,\\n]</code>. This allows  handle both commas and new lines as separators between the numbers</p> <pre><code>// Default delimiter is comma or new line \nString delimiter = \"[,\\n]\"; \n// Check if the input string specifies a custom delimiter \nif (numbers.startsWith(\"//\")) { \n// Extract the delimiter and the numbers \n    int delimiterEndIndex = numbers.indexOf(\"\\n\"); \n    delimiter = numbers.substring(2, delimiterEndIndex); \n    numbers = numbers.substring(delimiterEndIndex + 1); \n} \n// Split the input string using the specified delimiter \nString[] tokens = numbers.split(delimiter); \n// Calculate the sum of the numbers \nint sum = 0;\n</code></pre>"},{"location":"course_notes/fit5171/#iteration-5","title":"Iteration 5","text":"<pre><code>/*  \n* Calling add with a negative number will throw an exception  \n* \u201cnegatives not allowed\u201d \u2013 and prints the negative number that was passed.  \n* If there are multiple negatives, show all of them in the exception message  \n* */  \n@Test  \npublic void testAddMethodWithNegativeNumbers() {  \n    StringCalculator calculator = new StringCalculator();  \n    try {  \n        int result = calculator.add(\"1,-2,3,-4\");  \n        fail(\"Exception should have been thrown\");  \n    } catch (IllegalArgumentException e) {  \n        assertEquals(\"Negatives not allowed: -2, -4\", e.getMessage());  \n    }  \n}\n</code></pre> <pre><code>// Calculate the sum of the numbers  \nint sum = 0;  \nList&lt;Integer&gt; negatives = new ArrayList&lt;&gt;();  \nfor (String token : tokens) {  \n    // Convert each token to an integer and add it to the sum  \n    int number = Integer.parseInt(token);  \n    if (number &lt; 0) {  \n        negatives.add(number);  \n    }  \n    sum += number;  \n}  \n\n// If there are negative numbers, throw an exception  \nif (!negatives.isEmpty()) {  \n    StringBuilder sb = new StringBuilder(\"Negatives not allowed: \");  \n    for (int i = 0; i &lt; negatives.size(); i++) {  \n        sb.append(negatives.get(i));  \n        if (i &lt; negatives.size() - 1) {  \n            sb.append(\", \");  \n        }  \n    }  \n    throw new IllegalArgumentException(sb.toString());  \n}\n</code></pre>"},{"location":"course_notes/fit5171/#iteration-6","title":"iteration 6","text":"<pre><code>/*  \n* Numbers bigger than 1000 should be ignored, so adding 2 + 1001 = 2  \n* */  \n@Test  \npublic void testAddMethodWithNumbersGreaterThan1000() {  \n    StringCalculator calculator = new StringCalculator();  \n    int result = calculator.add(\"2,1000,1001\");  \n    assertEquals(1002, result);  \n}\n</code></pre> <pre><code>// Calculate the sum of the numbers, ignoring numbers greater than or equal to 1000 \nint sum = 0; \nList&lt;Integer&gt; negatives = new ArrayList&lt;&gt;(); \nfor (String token : tokens) { \n    // Convert each token to an integer and add it to the sum \n    int number = Integer.parseInt(token); \n    if (number &lt; 0) { \n        negatives.add(number); \n    } \n    else if (number &lt;= 1000) { \n        sum += number; \n    } \n}\n</code></pre>"},{"location":"course_notes/fit5171/#iteration-7","title":"Iteration 7","text":"<pre><code>/*  \n* Delimiters can be of any length with the following format:  \n* \u201c//[delimiter]\\n\u201d for example: \u201c//[\u2014]\\n1\u20142\u20143\u201d should return 6  \n* */  \n@Test  \npublic void testAddMethodWithLongDelimiter() {  \n    StringCalculator calculator = new StringCalculator();  \n    int result = calculator.add(\"//[***]\\n1***2***3\");  \n    assertEquals(6, result);  \n}\n</code></pre> <p>handle long delimiters by checking if the delimiter starts and ends with square brackets, and removing them if so. Also use the <code>Pattern.quote</code> method to escape any special characters in the delimiter before using it to split the input string.</p> <pre><code>// Check if the input string specifies a custom delimiter  \nif (numbers.startsWith(\"//\")) {  \n    // Extract the delimiter and the numbers  \n    int delimiterEndIndex = numbers.indexOf(\"\\n\");  \n    delimiter = numbers.substring(2, delimiterEndIndex);  \n    // Handle long delimiters  \n    if (delimiter.startsWith(\"[\") &amp;&amp; delimiter.endsWith(\"]\")) {  \n        delimiter = delimiter.substring(1, delimiter.length() - 1);  \n    }  \n    numbers = numbers.substring(delimiterEndIndex + 1);  \n}  \n\n// Split the input string using the specified delimiter  \nString[] tokens = numbers.split(Pattern.quote(delimiter));\n</code></pre>"},{"location":"course_notes/fit5171/#iteration-8","title":"iteration 8","text":"<pre><code>/*  \n* Allow multiple delimiters like this: \u201c//[delimitor1][delimitor2]\\n\u201d  \n* for example \u201c//[-][;]\\n1-2;3\u201d should return 6  \n* */  \n@Test  \npublic void testAddMethodWithMultipleDelimiters() {  \n    StringCalculator calculator = new StringCalculator();  \n    int result = calculator.add(\"//[-][;]\\n1-2;3\");  \n    assertEquals(6, result);  \n}\n</code></pre> <p>update the <code>add</code> method to handle this case by modifying the regular expression used to split the input string. extract the delimiter(s) from the input string and use the <code>|</code> character to indicate alternate delimiters in the regular expression used to split the input string. The delimiter(s) can be specified in the input string using the format <code>//[delimiter]\\n</code> (for a single delimiter) or <code>//[delimiter1][delimiter2]...\\n</code> (for multiple delimiters).</p> <pre><code>// Check if the input string has a custom delimiter  \nString delimiterRegex = \"[,\\n]\";  \nif (numbers.startsWith(\"//\")) {  \n    int delimiterStartIndex = 2;  \n    int delimiterEndIndex = numbers.indexOf(\"\\n\");  \n    String delimiterLine = numbers.substring(delimiterStartIndex, delimiterEndIndex);  \n    // Split the delimiter line by \"][\" to handle multiple delimiters  \n    String[] delimiters = delimiterLine.split(\"\\\\]\\\\[\");  \n    for (String delimiter : delimiters) {  \n        // Remove the square brackets from each delimiter  \n        delimiter = delimiter.replace(\"[\", \"\").replace(\"]\", \"\");  \n        // Add each delimiter to the regular expression  \n        delimiterRegex += \"|\" + Pattern.quote(delimiter);  \n    }  \n    // Remove the delimiter line from the input string  \n    numbers = numbers.substring(delimiterEndIndex + 1);  \n}  \n\n// Split the input string using the delimiter(s)  \nString[] tokens = numbers.split(delimiterRegex);\n</code></pre>"},{"location":"course_notes/fit5171/#iteration-9-idk","title":"Iteration 9 IDK","text":"<pre><code>/*  \n* Make sure you can also handle multiple delimiters with  \n* length longer than one char  \n* */  \n@Test  \npublic void Q9AddMultipleDelimiters() {  \n    StringCalculator calculator = new StringCalculator();  \n    int result = calculator.add(\"//[---][%$]\\n1--;2$3\");  \n    assertEquals(6, result);  \n}\n</code></pre>"},{"location":"course_notes/fit5171/#week-3-discrete-maths_1","title":"Week 3 Discrete maths","text":""},{"location":"course_notes/fit5171/#lecture_2","title":"Lecture","text":"<p>Glossary of mathematical symbols - Wikipedia Directed and Undirected graph in Discrete Mathematics CS Academy graph generater Logic Basic set theory Relations &amp; functions Basic graph theory  </p>"},{"location":"course_notes/fit5171/#quiz_1","title":"Quiz","text":""},{"location":"course_notes/fit5171/#propositional-logic","title":"Propositional logic \u547d\u9898\u903b\u8f91","text":"<p>Propositional logic is the logic that deals with a collection of declarative statements which have a truth value,  true or false. Proposition symbols:  <code>penguines_black_white</code> logical operators : Logic not (\u00ac), and (\u22c0), or (\u22c1), implies\u610f\u5473\u7740  (\u21d2) &amp; equivalent (\u21d4) \u516c\u7406\u548c\u63a8\u7406\u89c4\u5219 <code>\u00ac \u00acp\u22a2p, {p, p \u21d2q}\u22a2q</code> </p> <p>Predicate logic is an expression consisting of variables with a specified domain. It consists of objects, relations,  formulas and/or functions between the objects \u8c13\u8bcd\u903b\u8f91\u662f\u7531\u5177\u6709\u6307\u5b9a\u57df\u7684\u53d8\u91cf\u7ec4\u6210\u7684\u8868\u8fbe\u5f0f\u3002\u5b83\u7531\u5bf9\u8c61\u3001\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\u3001\u516c\u5f0f\u548c/\u6216\u51fd\u6570\u7ec4\u6210 + Universal (\u2200) &amp; existential (\u2203) + \u2200x . P(x) =&gt; \u2200 logician . wants_beer(logician)  </p>"},{"location":"course_notes/fit5171/#first-order-logic","title":"First-order logic","text":"<ul> <li>Quantifies over arguments only  </li> <li>Exist a person who is both a student and a tutor in  FIT.  </li> <li>\u2203x (P(x) \u22c0 Q(x)</li> </ul>"},{"location":"course_notes/fit5171/#basic-set-definitions","title":"Basic set definitions","text":"<p>Definition: a collection of elements  No ordering, no multiplicity \u5b9a\u4e49\uff1a\u5143\u7d20\u7684\u96c6\u5408\u6ca1\u6709\u987a\u5e8f\uff0c\u6ca1\u6709\u591a\u91cd\u6027 + Enumeration: {1,2,3,4} + Set comprehension: ${x : N | x \u2264 64}$ + A special set - the empty set \u2205  </p>"},{"location":"course_notes/fit5171/#set-membership-inclusion","title":"Set membership &amp; inclusion","text":"<ul> <li>Membership: $x\u2208{x}, x \u2209 \u2205$</li> <li>Subset\u5b50\u96c6\uff1a: $A \u2286 B \u21d4 \u2200 x : A \u2022 x \u2208 B$</li> <li>Proper subset </li> <li>Set cardinality \u8bbe\u7f6e\u57fa\u6570 <code>#A | A |</code> <code>#A = 3</code></li> </ul>"},{"location":"course_notes/fit5171/#power-set-p_1","title":"Power set P","text":"<p>A power set is set of all subsets, empty set and the original set itself \u5e42\u96c6\u662f\u6240\u6709\u5b50\u96c6\u3001\u7a7a\u96c6\u548c\u539f\u59cb\u96c6\u672c\u8eab\u7684\u96c6\u5408  + $\u2200X \u2022 X$   is a set, $Px = {A|A \u2286 X}$ + power set of A = {1, 2} is P(A) = {{}, {1}, {2}, {1, 2}}</p>"},{"location":"course_notes/fit5171/#set-operations_1","title":"Set operations","text":"<p> + Union : $A \ud835\udd4c B$  The set containing all the elements of  which all other sets are subs + Intersection : $A\u2229B$  Items common in A,B + Difference : $A\\B$  + Cartesian product\u7b1b\u5361\u5c14\u79ef : <code>{a, b} X {0, 1} = {(a, 0), (a, 1), (b, 0), (b, 1)}</code></p>"},{"location":"course_notes/fit5171/#relations-functions","title":"Relations ( \u21d4) &amp; functions (\u2192 )","text":""},{"location":"course_notes/fit5171/#relations_1","title":"Relations ( \u21d4)","text":"<p>Relations (R) are defined over sets  A relation is a collection of ordered pairs, which  contains an object from one set to the other set \u5173\u7cfb (R) \u662f\u5728\u96c6\u5408\u4e0a\u5b9a\u4e49\u7684 \u5173\u7cfb\u662f\u6709\u5e8f\u5bf9\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u5305\u542b\u4ece\u4e00\u4e2a\u96c6\u5408\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u5bf9\u8c61 Can be one-to-one, one-to-many  or many-to-one, many-to-many The Cartesian product deals with ordered pairs, so  the order in which the sets are considered is \u7b1b\u5361\u5c14\u79ef\u5904\u7406\u6709\u5e8f\u5bf9\uff0c\u56e0\u6b64\u8003\u8651\u96c6\u5408\u7684\u987a\u5e8f\u662f  <code>friends : Person \u21d4 Person</code> $X \u0445 Y = {(x, y)} | x \u2208 X and y \u2208 Y} Where X \u0445 Y \u2260 Y \u0445 X$ Using n(A) for the number of elements in a set A, we have $n(X \u0445 Y) = n(X) \u0445 n(Y)$ </p>"},{"location":"course_notes/fit5171/#functions_1","title":"functions (\u2192 )","text":"<p>It is a relation that defines the set of  inputs to the set of outputs.  Note that all functions are relations, but  not all relations are functions \u5b83\u662f\u5b9a\u4e49\u8f93\u5165\u96c6\u5230\u8f93\u51fa\u96c6\u7684\u5173\u7cfb\u3002\u8bf7\u6ce8\u610f\uff0c\u6240\u6709\u51fd\u6570\u90fd\u662f\u5173\u7cfb\uff0c\u4f46\u5e76\u975e\u6240\u6709\u5173\u7cfb\u90fd\u662f\u51fd\u6570 <code>\u2192</code>  implies/ when used in functions, it  symbolises mapping A\u2192B, if A is true then B is also true.  If A is false then nothing said about  B <code>age : Person N</code> <code>birthday : Person \u2192 Date</code> </p>"},{"location":"course_notes/fit5171/#graph-theory","title":"Graph theory","text":""},{"location":"course_notes/fit5171/#undirected-graphs_1","title":"Undirected graphs \u65e0\u5411\u56fe","text":"<p>CS Academy graph generater  $G = (V, E)$  + V: a non-empty set of nodes {n1, n2 , n3, ..., nm }  + E: a set of edges {e1, e2, ..., ep}, where each ek = (ni, nj) </p>"},{"location":"course_notes/fit5171/#representation-degree_1","title":"Representation &amp; Degree","text":"<p> <code>V = {n 1 , n 2 , n 3 , n 4 , n 5 , n 6 , n 7}</code> <code>E = {e1 , e2 , e3 , e4 , e 5 , } = {(n 1 , n 2 ), (n 1 , n 4 ), (n 2 , n 5 ), (n 3 , n 4 ), (n 4 , n 6 )}</code> Degree of node : No. of edges that have that node as  an endpoint <code>degree(n 1 ) = 2, degree(n 4 ) = 3,  degree(n 7 ) = 0</code> </p>"},{"location":"course_notes/fit5171/#incidence-matrix","title":"Incidence Matrix","text":""},{"location":"course_notes/fit5171/#path-connectedness","title":"Path &amp; Connectedness","text":"<p>Nodes ni and nj are connected if they  are in a path.  A component is a maximal set of  connected node \u5982\u679c\u8282\u70b9 ni \u548c nj \u5728\u4e00\u6761\u8def\u5f84\u4e2d\uff0c\u5219\u5b83\u4eec\u662f\u8fde\u901a\u7684 \u5206\u91cf\u662f\u8fde\u901a\u8282\u70b9\u7684\u6700\u5927\u96c6\u5408 <code>Path(n1,n5) = (n1, n2, n5) = &lt;e1,  e4&gt;</code> </p>"},{"location":"course_notes/fit5171/#directed-graphs_1","title":"Directed graphs","text":"<p> directed graph D = (V, E) + V: a non-empty set of nodes {n1,  n2, n3 , ..., n m }  + E: a set of edges {e1, e2, ..., ep} where each ek =  an ordered pair"},{"location":"course_notes/fit5171/#indegrees-outdegrees","title":"Indegrees &amp; outdegrees","text":"<p> + Indegree (or fan-in) of a node n is  the no. of distinct edges that have n as  target. A node with indegree = 0 is called a source node + Outdegree (or fan-out) of a node n  is the no. of distinct edges that have n  as the start node.  A node with outdegree = 0 is called a  sink node</p>"},{"location":"course_notes/fit5171/#paths-semi-paths","title":"Paths &amp; semi-paths","text":""},{"location":"course_notes/fit5171/#tutorial_2","title":"Tutorial","text":""},{"location":"course_notes/fit5171/#q1_2","title":"Q1","text":"<p>Decide if the following predicates are true. If not, give a counter example   </p>"},{"location":"course_notes/fit5171/#a-ab-c-ba-c-where-a-and-b-are-variable-declarations-and-c-is-a-boolean-expression","title":"(a) \u2200A\u2203B \u2022 C \u2261 \u2203B\u2200A \u2022 C , where A and B are variable declarations and C is a Boolean expression","text":"<ol> <li>check if both sides of the equivalence are logically equivalent  </li> <li>\u2200A\u2203B \u2022 C = \"For all A, there exists a B such that C is true\"  \u2200A\u2203B \u2022 C =\u201c\u5bf9\u4e8e\u6240\u6709A\uff0c\u5b58\u5728\u4e00\u4e2aB\u4f7f\u5f97C\u4e3a\u771f\u201d</li> <li>\u2203B\u2200A \u2022 C = \"There exists a B such that for all A, C is true\"  \u2203B\u2200A \u2022 C =\u201c\u5b58\u5728\u4e00\u4e2aB\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709A\uff0cC\u4e3a\u771f\u201d</li> <li>find a counterexample  A be the set of integers and B be the set of real numbers. Let C be the Boolean expression \"A is a subset of B\".</li> <li>\u2200A\u2203B \u2022 C = \"For all sets of integers A, there exists a set of real numbers B such that A is a subset of B\" \u2200A\u2203B \u2022 C = \u201c\u5bf9\u4e8e\u6240\u6709\u6574\u6570\u96c6 A\uff0c\u5b58\u5728\u4e00\u7ec4\u5b9e\u6570 B\uff0c\u4f7f\u5f97 A \u662f B \u7684\u5b50\u96c6\u201dThis statement is true because we can always choose B to be the set of real numbers, which contains the set of integers. Therefore, C is true for all A.</li> <li>\u2203B\u2200A \u2022 C = \"There exists a set of real numbers B such that for all sets of integers A, A is a subset of B\" \u2203B\u2200A \u2022 C = \u201c\u5b58\u5728\u4e00\u7ec4\u5b9e\u6570 B\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709\u6574\u6570\u96c6 A\uff0cA \u662f B \u7684\u5b50\u96c6\u201d </li> <li>This statement is false because we can choose B to be any non-empty set of real numbers, and there will always exist an integer that is not in B. Therefore, C is false for some A. \u8fd9\u4e2a\u9648\u8ff0\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u9009\u62e9 B \u662f\u4efb\u4f55\u975e\u7a7a\u7684\u5b9e\u6570\u96c6\uff0c\u5e76\u4e14\u603b\u4f1a\u5b58\u5728\u4e00\u4e2a\u4e0d\u5728 B \u4e2d\u7684\u6574\u6570\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u67d0\u4e9b A\uff0cC \u662f\u9519\u8bef\u7684\u3002</li> <li>conclusion:  \u2200A\u2203B \u2022 C is not logically equivalent to \u2203B\u2200A \u2022 C</li> </ol>"},{"location":"course_notes/fit5171/#b-a-b-p-n-a-b-b-a","title":"(b) \u2200A, B : P N \u2022 A \u2286 B \u2228 B \u2286 A","text":"<p>\u2200A, B : P N \u2022 A \u2286 B \u2228 B \u2286 A can be read as \"For all sets A and B of natural numbers, A is a subset of B or B is a subset of A.\" \u2200A, B : P N \u2022 A \u2286 B \u2228 B \u2286 A \u53ef\u4ee5\u7406\u89e3\u4e3a\u201c\u5bf9\u4e8e\u81ea\u7136\u6570\u7684\u6240\u6709\u96c6\u5408 A \u548c B\uff0cA \u662f B \u7684\u5b50\u96c6\u6216 B \u662f A \u7684\u5b50\u96c6\u3002\u201dTo prove this predicate, we need to show that for any arbitrary sets A and B of natural numbers, either A is a subset of B or B is a subset of A. \u4e3a\u4e86\u8bc1\u660e\u8fd9\u4e2a\u8c13\u8bcd\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e\u5bf9\u4e8e\u4efb\u610f\u81ea\u7136\u6570\u96c6\u5408 A \u548c B\uff0c\u8981\u4e48 A \u662f B \u7684\u5b50\u96c6\uff0c\u8981\u4e48 B \u662f A \u7684\u5b50\u96c6\u3002 1. Case 1: A \u2286 B If A is a subset of B, then the predicate is true. 2. Case 2: B \u2286 A If B is a subset of A, then the predicate is true. 3. Case 3: A \u2229 B = \u2205 If A and B have no common elements, then either A is a subset of B or B is a subset of A. This is because if there is no element in common between A and B, then either A is entirely contained within B, or B is entirely contained within A. \u5982\u679c A \u548c B \u6ca1\u6709\u516c\u5171\u5143\u7d20\uff0c\u5219 A \u662f B \u7684\u5b50\u96c6\u6216 B \u662f A \u7684\u5b50\u96c6\u3002\u8fd9\u662f\u56e0\u4e3a\u5982\u679c A \u548c B \u4e4b\u95f4\u6ca1\u6709\u516c\u5171\u5143\u7d20\uff0c\u5219 A \u5b8c\u5168\u5305\u542b\u5728 B \u4e2d\uff0c\u6216\u8005B \u5b8c\u5168\u5305\u542b\u5728 A \u4e2d\u3002 4. Case 4: A \u2229 B \u2260 \u2205 If A and B have some common elements, then we can define the set C = A \u222a B. Since C is a set of natural numbers, we know that C is a subset of the natural numbers \u5982\u679cA\u548cB\u6709\u4e00\u4e9b\u5171\u540c\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u96c6\u5408C = A \u222a B\u3002\u7531\u4e8eC\u662f\u81ea\u7136\u6570\u7684\u96c6\u5408\uff0c\u6211\u4eec\u77e5\u9053C\u662f\u81ea\u7136\u6570\u7684\u5b50\u96c6 Moreover, we know that A and B are not disjoint, so A \u2229 B \u2260 \u2205 implies that A and B are not both equal to \u2205. \u6b64\u5916\uff0c\u6211\u4eec\u77e5\u9053 A \u548c B \u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5 A \u2229 B \u2260 \u2205 \u610f\u5473\u7740 A \u548c B \u4e0d\u90fd\u7b49\u4e8e \u2205\u3002A and B are not both equal to \u2205. Therefore, at least one of A and B is not equal to \u2205, which implies that at least one of A and B is not equal to \u2205 \u222a \u2205 = \u2205. A \u548c B \u4e0d\u90fd\u7b49\u4e8e \u2205\u3002\u56e0\u6b64\uff0cA \u548c B \u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u7b49\u4e8e \u2205\uff0c\u8fd9\u610f\u5473\u7740 A \u548c B \u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u7b49\u4e8e \u2205 \u222a \u2205 = \u2205\u3002 5. for any arbitrary sets A and B of natural numbers, either A is a subset of B or B is a subset of A. Therefore, the predicate \u2200A, B : P N \u2022 A \u2286 B \u2228 B \u2286 A is true. \u5bf9\u4e8e\u4efb\u610f\u81ea\u7136\u6570\u96c6\u5408 A \u548c B\uff0c\u8981\u4e48 A \u662f B \u7684\u5b50\u96c6\uff0c\u8981\u4e48 B \u662f A \u7684\u5b50\u96c6\u3002\u56e0\u6b64\uff0c\u8c13\u8bcd\u2200A, B : P N \u2022 A \u2286 B \u2228 B \u2286 A \u4e3a\u771f\u3002</p>"},{"location":"course_notes/fit5171/#q2_2","title":"Q2","text":"<p>Give a formal definition of the binary relation R, over natural numbers, such that each x is related to y  by R if and only if y is greater than the square of x but less than the square of x + 1. \u7ed9\u51fa\u81ea\u7136\u6570\u4e0a\u4e8c\u5143\u5173\u7cfb R \u7684\u6b63\u5f0f\u5b9a\u4e49\uff0c\u4f7f\u5f97\u6bcf\u4e2a x \u90fd\u901a\u8fc7 R \u4e0e y \u76f8\u5173\u5f53\u4e14\u4ec5\u5f53 y \u5927\u4e8e x \u7684\u5e73\u65b9\u4f46\u5c0f\u4e8e x + 1 \u7684\u5e73\u65b9\u3002For any x, y \u2208 N, xRy if and only if y &gt; x^2 and y &lt; (x+1)^2. 1. simply plug in the values of x and y into the definition of the relation and see if it holds true x=2 and y=9, 9 &gt; 2^2 and 9 &lt; (2+1)^2 True 2. x=3 and y=8, 8 &gt; 3^2 and 8 &lt; (3+1)^2 False</p>"},{"location":"course_notes/fit5171/#q3_2","title":"Q3","text":"<p>Let S be the set of natural numbers between 1 and 15 inclusively. Express R in Q2 as a set of ordered pairs in S.   \u8bbe S \u4e3a 1 \u5230 15 \u4e4b\u95f4\u7684\u81ea\u7136\u6570\u96c6\u3002\u5c06 Q2 \u4e2d\u7684 R \u8868\u793a\u4e3a S \u4e2d\u7684\u4e00\u7ec4\u6709\u5e8f\u5bf9\u3002For any x, y \u2208 N, xRy if and only if y &gt; x^2 and y &lt; (x+1)^2.  R as a set of ordered pairs in S, where S is the set of natural numbers between 1 and 15 inclusively. To do this, we need to list all the pairs (x, y) where x and y are elements of S and xRy holds. R \u4f5c\u4e3a S \u4e2d\u7684\u4e00\u7ec4\u6709\u5e8f\u5bf9\uff0c\u5176\u4e2d S \u662f 1 \u5230 15 \u4e4b\u95f4\u7684\u81ea\u7136\u6570\u96c6\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5217\u51fa\u6240\u6709\u5bf9 (x, y)\uff0c\u5176\u4e2d x \u548c y \u662f S \u7684\u5143\u7d20\u5e76\u4e14 xRy \u6210\u7acb\u3002 1. the values of x in S: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 2. x^2 &lt; y &lt; (x+1)^2 list the ordered pairs (x, y) where xRy holds for each x in S 3. For x=1, the values of y that satisfy xRy are 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15. So the ordered pairs are: <code>{(1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11), (1, 12), (1, 13), (1, 14), (1, 15)}</code> 4. For x=2, the values of y that satisfy xRy are 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15. So the ordered pairs are: <code>{(2, 5), (2, 6), (2, 7), (2, 8), (2, 9), (2, 10), (2, 11), (2, 12), (2, 13), (2, 14), (2, 15)}</code> 5. For x=3, the values of y that satisfy xRy are 10, 11, 12, 13, 14, 15. So the ordered pairs are: <code>{(3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15)}</code> 6. For x=4, the values of y that satisfy xRy are 17, 18, 19, 20, 21, 22, 23, 24, 25. However, since 25 is greater than 15, we can exclude it from our list of ordered pairs. So the ordered pairs are: <code>{(4, 17), (4, 18), (4, 19), (4, 20), (4, 21), (4, 22), (4, 23), (4, 24)}</code> 7. For x=5, the values of y that satisfy xRy are 26, 27, 28, 29, 30, 31, 32, 33, 34 However, since all of these values are greater than 15, we can exclude them from our list of ordered pairs. So there are no ordered pairs for x=5. 8. For x= 6 ~ 15 is the same reason 9. Therefore, the set of ordered pairs in S that represent the relation R is: <code>{(1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11), (1, 12), (1, 13), (1, 14), (1, 15), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9), (2, 10), (2, 11), (2, 12), (2, 13), (2, 14), (2, 15), (3, 8), (3, 9), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (4, 13), (4, 14), (4, 15)}</code> </p>"},{"location":"course_notes/fit5171/#q4-graph-theory","title":"Q4 Graph Theory","text":"<p>Given an undirected graph G with vertices V = {1, 2, 3, 4, 5, 6, 7, 8} and edges E = {12, 14, 16, 22, 23,  28, 34, 35, 67, 78}  </p>"},{"location":"course_notes/fit5171/#a-draw-g-graphically","title":"(a) Draw G graphically","text":""},{"location":"course_notes/fit5171/#b-calculate-the-degree-of-each-node-in-the-graph","title":"(b) Calculate the degree of each node in the graph","text":"<ul> <li>count the number of edges incident to each vertex. in an undirected graph, the degree of a node is equal to the number of edges incident to it, because each edge contributes to the degree of both of its endpoints. \u8ba1\u7b97\u5165\u5c04\u5230\u6bcf\u4e2a\u9876\u70b9\u7684\u8fb9\u6570\u3002\u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u8282\u70b9\u7684\u5ea6\u6570\u7b49\u4e8e\u5165\u5c04\u5230\u5b83\u7684\u8fb9\u7684\u6570\u91cf\uff0c\u56e0\u4e3a\u6bcf\u6761\u8fb9\u90fd\u4f1a\u5f71\u54cd\u5176\u4e24\u4e2a\u7aef\u70b9\u7684\u5ea6\u6570\u3002</li> <li>degree(1) = 3</li> </ul>"},{"location":"course_notes/fit5171/#c-calculate-the-cyclomatic-number-of-g","title":"(c) Calculate the Cyclomatic number of G","text":"<p>The cyclomatic number, also known as the connectivity or the circuit rank, is a graph-theoretic measure that gives the minimum number of edges that need to be removed from a graph in order to disconnect it or make it acyclic. \u5708\u6570\uff0c\u4e5f\u79f0\u4e3a\u8fde\u901a\u6027\u6216\u7535\u8def\u7b49\u7ea7\uff0c\u662f\u4e00\u79cd\u56fe\u8bba\u5ea6\u91cf\uff0c\u5b83\u7ed9\u51fa\u4e86\u9700\u8981\u4ece\u56fe\u4e2d\u5220\u9664\u7684\u6700\u5c0f\u8fb9\u6570\uff0c\u4ee5\u4fbf\u65ad\u5f00\u5b83\u6216\u4f7f\u5176\u6210\u4e3a\u975e\u5faa\u73af\u7684\u3002  The formula for the cyclomatic number is: <code>c = |E| - |V| + k</code>  where |E| is the number of edges, |V| is the number of vertices, and k is the number of connected components in the graph.\u5176\u4e2d|E|\u662f\u8fb9\u6570\uff0c|V|\u662f\u9876\u70b9\u7684\u6570\u91cf\uff0ck \u662f\u56fe\u4e2d\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\u3002 1. <code>|V| = 8</code> <code>|E| = 10 (counting each undirected edge once)</code> <code>k = 1 (because the graph is connected)</code>  2. <code>c = |E| - |V| + k = 10 - 8 + 1 = 3</code> </p>"},{"location":"course_notes/fit5171/#q5","title":"Q5","text":"<p>Let\u2019s treat G in Q5 as a directed graph (edge 12 in E represents an edge from node 1 to node 2)  V = {1, 2, 3, 4, 5, 6, 7, 8} and edges E = {12, 14, 16, 22, 23,  28, 34, 35, 67, 78}  </p>"},{"location":"course_notes/fit5171/#a-draw-g-graphically_1","title":"(a) Draw G graphically","text":""},{"location":"course_notes/fit5171/#b-calculate-the-in-degree-and-out-degree-of-each-node-ignoring-edge-22-for-this-question","title":"(b) Calculate the in-degree and out-degree of each node (ignoring edge 22 for this question)","text":"<p>in a directed graph, the in-degree of a node is the number of edges coming into it, while the out-degree of a node is the number of edges going out from it. \u5728\u6709\u5411\u56fe\u4e2d\uff0c\u8282\u70b9\u7684\u5165\u5ea6\u662f\u8fdb\u5165\u5b83\u7684\u8fb9\u7684\u6570\u91cf\uff0c\u800c\u8282\u70b9\u7684\u51fa\u5ea6\u662f\u4ece\u5b83\u51fa\u53bb\u7684\u8fb9\u7684\u6570\u91cf\u3002</p>"},{"location":"course_notes/fit5171/#c-are-there-any-source-nodes-or-sink-nodes-in-g","title":"(c) Are there any source nodes or sink nodes in G?","text":"<p>A source node is a node with in-degree 0, meaning there are no incoming edges to that node. A sink node is a node with out-degree 0, meaning there are no outgoing edges from that node.\u6e90\u8282\u70b9\u662f\u5165\u5ea6\u4e3a 0 \u7684\u8282\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u8282\u70b9\u6ca1\u6709\u4f20\u5165\u8fb9\u3002\u6c47\u8282\u70b9\u662f\u51fa\u5ea6\u4e3a 0 \u7684\u8282\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u8282\u70b9\u6ca1\u6709\u51fa\u8fb9\u3002</p>"},{"location":"course_notes/fit5171/#d-does-this-graph-contain-semi-paths-if-so-identify-them","title":"d) Does this graph contain semi-paths? If so, identify them.","text":"<p>A semi-path is a sequence of vertices in a directed graph where all edges go in the same direction. That is, it is a directed path that either starts from a source node or ends at a sink node.\u534a\u8def\u5f84\u662f\u6709\u5411\u56fe\u4e2d\u7684\u4e00\u7cfb\u5217\u9876\u70b9\uff0c\u5176\u4e2d\u6240\u6709\u8fb9\u90fd\u5728\u540c\u4e00\u65b9\u5411\u4e0a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u662f\u4e00\u6761\u6709\u5411\u8def\u5f84\uff0c\u8981\u4e48\u4ece\u6e90\u8282\u70b9\u5f00\u59cb\uff0c\u8981\u4e48\u5230\u6c47\u8282\u70b9\u7ed3\u675f\u3002 -   Semi-path from source node 4: 4 -&gt; 6 -&gt; 7 -   Semi-path from source node 6: 6 -&gt; 7 -   Semi-path to sink node 3: 2 -&gt; 8 -&gt; 5 -&gt; 3 -   Semi-path to sink node 7: 1 -&gt; 2 -&gt; 8 -&gt; 7</p>"},{"location":"course_notes/fit5171/#e-identify-a-pair-of-nodes-that-are-0-connected-1-connected-2-connected-and-3-connected-if-any-ignoring-edge-22-again","title":"e) Identify a pair of nodes that are 0-connected, 1-connected, 2-connected, and 3-connected, if any  (ignoring edge 22 again)","text":"<p>two nodes are said to be k-connected if there exist at least k edge-disjoint directed paths between them. That is, there are k paths from the first node to the second node, and no two of these paths share any common edges.\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u81f3\u5c11\u5b58\u5728 k \u6761\u8fb9\u4e0d\u76f8\u4ea4\u7684\u6709\u5411\u8def\u5f84\uff0c\u5219\u79f0\u8fd9\u4e24\u4e2a\u8282\u70b9\u662f k-\u8fde\u901a\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece\u7b2c\u4e00\u4e2a\u8282\u70b9\u5230\u7b2c\u4e8c\u4e2a\u8282\u70b9\u6709 k \u6761\u8def\u5f84\uff0c\u5e76\u4e14\u8fd9\u4e9b\u8def\u5f84\u4e2d\u6ca1\u6709\u4e24\u6761\u5171\u4eab\u4efb\u4f55\u516c\u5171\u8fb9\u3002 -   0-connected pairs: There are no pairs of nodes that are 0-connected in G, because in a directed graph, two nodes must share at least one edge to be 0-connected. -   1-connected pairs: (1,2), (2,3), (2,8), (3,5), (5,7), (6,7), (7,8) -   2-connected pairs: (1,3), (1,5), (1,7), (4,2), (4,3), (4,5), (4,8), (6,2), (6,3), (6,5), (6,8) -   3-connected pairs: (1,8), (4,7)</p>"},{"location":"course_notes/fit5171/#f-work-out-the-reachability-matrix-for-g","title":"(f) Work out the reachability matrix for G","text":"<p>The reachability matrix for a directed graph is an adjacency matrix where the entry in row i and column j is 1 if there exists a directed path from node i to node j, and 0 otherwise.\u6709\u5411\u56fe\u7684\u53ef\u8fbe\u6027\u77e9\u9635\u662f\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\uff0c\u5176\u4e2d\u5982\u679c\u5b58\u5728\u4ece\u8282\u70b9 i \u5230\u8282\u70b9 j \u7684\u6709\u5411\u8def\u5f84\uff0c\u5219\u884c i \u548c\u5217 j \u4e2d\u7684\u6761\u76ee\u4e3a 1\uff0c\u5426\u5219\u4e3a 0\u3002</p> <pre><code>//adjacency matrix\n    1  2  3  4  5  6  7  8\n--------------------------\n1 | 0  1  0  1  1  0  0  0\n2 | 0  0  1  0  1  0  0  1\n3 | 0  0  0  0  1  0  1  0\n4 | 0  0  0  0  1  0  0  1\n5 | 0  0  0  0  0  0  1  1\n6 | 0  0  0  0  0  0  1  1\n7 | 0  0  0  0  0  0  0  1\n8 | 0  0  0  0  0  0  0  0\n</code></pre> <p>the entry in row i and column j is 1 if and only if there exists a directed path from node i to node j. For example, the entry in row 1 and column 2 is 1 because there exists a directed path from node 1 to node 2, namely the path (1,2). The entry in row 2 and column 1, however, is 0 because there is no directed path from node 2 to node 1.\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4ece\u8282\u70b9 i \u5230\u8282\u70b9 j \u7684\u6709\u5411\u8def\u5f84\u65f6\uff0c\u7b2c i \u884c\u548c\u7b2c j \u5217\u4e2d\u7684\u6761\u76ee\u4e3a 1\u3002\u4f8b\u5982\uff0c\u7b2c1\u884c\u7b2c2\u5217\u7684\u6761\u76ee\u4e3a1\uff0c\u56e0\u4e3a\u5b58\u5728\u4ece\u8282\u70b91\u5230\u8282\u70b92\u7684\u6709\u5411\u8def\u5f84\uff0c\u5373\u8def\u5f84(1,2)\u3002\u4f46\u662f\uff0c\u7b2c 2 \u884c\u548c\u7b2c 1 \u5217\u4e2d\u7684\u6761\u76ee\u4e3a 0\uff0c\u56e0\u4e3a\u6ca1\u6709\u4ece\u8282\u70b9 2 \u5230\u8282\u70b9 1 \u7684\u5b9a\u5411\u8def\u5f84\u3002</p>"},{"location":"course_notes/fit5171/#q6-draw-a-directed-graph-for-each-of-the-following-common-control-constructs","title":"Q6 Draw a directed graph for each of the following common control constructs","text":"<p>  (a) an if-then-else (b) a while loop (c) a natural loop with two exits, e.g. while with an if...break in the middle; non-structured but reducible (d) an irreducible CFG: a loop with two entry points, e.g. goto into a while or for loop</p>"},{"location":"course_notes/fit5171/#if-then","title":"if-then","text":"<pre><code>      +--------+\n      |        |\n      v        |\n+-----------+  |\n|  condition|  |\n+-----------+  |\n      |        |\n      | true   | false\n      v        |\n+-----------+  |\n|  action   |  |\n+-----------+  |\n      |        |\n      +--------+\n\n</code></pre> <p>the condition node represents the boolean condition to be evaluated. If the condition is true, control flows to the action node, where some action is taken. If the condition is false, control simply continues on to the next node in the graph.\u6761\u4ef6\u8282\u70b9\u8868\u793a\u8981\u8bc4\u4f30\u7684\u5e03\u5c14\u6761\u4ef6\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u63a7\u5236\u6d41\u5411\u52a8\u4f5c\u8282\u70b9\uff0c\u5728\u8be5\u8282\u70b9\u91c7\u53d6\u4e00\u4e9b\u52a8\u4f5c\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u5047\uff0c\u63a7\u5236\u5c06\u7b80\u5355\u5730\u7ee7\u7eed\u5230\u56fe\u4e2d\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002</p>"},{"location":"course_notes/fit5171/#if-then-else","title":"if-then-else","text":"<pre><code>       +--------+\n       |        |\n       v        |\n +-----------+  |\n | condition |  |\n +-----------+  |\n       |        |\n       | true   | false\n       v        |\n +-----------+  |\n |   then    |  |\n +-----------+  |\n       |        |\n       v        |\n +-----------+  |\n |   else    |  |\n +-----------+  |\n       |        |\n       v        |\n +-----------+  |\n |  after if |  |\n +-----------+  |\n\n</code></pre> <p>the condition node represents the boolean condition to be evaluated. If the condition is true, control flows to the then node, where some action is taken. If the condition is false, control flows to the else node, where a different action is taken. After either the then or else actions are taken, control flows to the after if node.\u6761\u4ef6\u8282\u70b9\u8868\u793a\u8981\u8bc4\u4f30\u7684\u5e03\u5c14\u6761\u4ef6\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u63a7\u5236\u6d41\u5411 then \u8282\u70b9\uff0c\u5728\u8be5\u8282\u70b9\u91c7\u53d6\u67d0\u4e9b\u64cd\u4f5c\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u5047\uff0c\u5219\u63a7\u5236\u6d41\u5411 else \u8282\u70b9\uff0c\u5728\u8be5\u8282\u70b9\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u5728\u6267\u884c then \u6216 else \u64cd\u4f5c\u4e4b\u540e\uff0c\u63a7\u5236\u6d41\u5411 after if \u8282\u70b9\u3002</p>"},{"location":"course_notes/fit5171/#case-switch","title":"case switch","text":"<pre><code>       +-----------+\n       |           |\n       v           |\n +------------+   |\n | expression |   |\n +------------+   |\n       |           |\n       | case 1    | case 2\n       v           |\n +------------+   |\n |   action   |   |\n +------------+   |\n       |           |\n       v           |\n +------------+   |\n |   action   |   |\n +------------+   |\n       |           |\n       v           |\n +------------+   |\n | default    |   |\n +------------+   |\n       |           |\n       v           |\n +------------+   |\n |   action   |   |\n +------------+   |\n       |           |\n       v           |\n +------------+   |\n |  after    |   |\n +------------+   |\n\n</code></pre> <p>the expression node represents the value whose different cases are evaluated. Depending on the value of the expression, control flows to one of the case nodes, where a specific action is taken. If none of the cases match, control flows to the default node, where a default action is taken. After the case or default actions are taken, control flows to the after node.\u8868\u8fbe\u5f0f\u8282\u70b9\u8868\u793a\u8bc4\u4f30\u5176\u4e0d\u540c\u60c5\u51b5\u7684\u503c\u3002\u6839\u636e\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u63a7\u5236\u6d41\u5411\u5176\u4e2d\u4e00\u4e2a\u6848\u4f8b\u8282\u70b9\uff0c\u5728\u6b64\u6267\u884c\u7279\u5b9a\u64cd\u4f5c\u3002\u5982\u679c\u6240\u6709\u60c5\u51b5\u90fd\u4e0d\u5339\u914d\uff0c\u5219\u63a7\u5236\u6d41\u5411\u9ed8\u8ba4\u8282\u70b9\uff0c\u5728\u6b64\u5904\u6267\u884c\u9ed8\u8ba4\u64cd\u4f5c\u3002\u5728\u91c7\u53d6 case \u6216 default \u64cd\u4f5c\u540e\uff0c\u63a7\u5236\u6d41\u5411 after \u8282\u70b9\u3002</p>"},{"location":"course_notes/fit5171/#while-loop","title":"while loop","text":"<pre><code>       +-----------+\n       |           |\n       v           |\n +------------+   |\n | condition  |   |\n +------------+   |\n       |           |\n       |  true     |\n       v           |\n +------------+   |\n |   body     |   |\n +------------+   |\n       |           |\n       v           |\n +------------+   |\n |  after     |   |\n +------------+   |\n\n</code></pre> <p>the condition node represents the boolean condition to be evaluated before each iteration of the loop. If the condition is true, control flows to the body node, where some action is taken. After the action is taken, control flows back to the condition node to evaluate the condition again. If the condition is false, control flows to the after node.\u6761\u4ef6\u8282\u70b9\u8868\u793a\u5728\u5faa\u73af\u7684\u6bcf\u6b21\u8fed\u4ee3\u4e4b\u524d\u8981\u8bc4\u4f30\u7684\u5e03\u5c14\u6761\u4ef6\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u63a7\u5236\u6d41\u5411 body \u8282\u70b9\uff0c\u5728\u6b64\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002\u91c7\u53d6\u884c\u52a8\u540e\uff0c\u63a7\u5236\u6d41\u56de\u6761\u4ef6\u8282\u70b9\u4ee5\u518d\u6b21\u8bc4\u4f30\u6761\u4ef6\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u5047\uff0c\u63a7\u5236\u6d41\u5411\u540e\u8282\u70b9\u3002</p>"},{"location":"course_notes/fit5171/#do-while-loop","title":"do-while loop","text":"<pre><code>       +-----------+\n       |           |\n       v           |\n +------------+   |\n |   body     |   |\n +------------+   |\n       |           |\n       v           |\n +------------+   |\n | condition  |   |\n +------------+   |\n       |           |\n       |  true     |\n       v           |\n +------------+   |\n |   body     |   |\n +------------+   |\n       |           |\n       v           |\n +------------+   |\n |  after     |   |\n +------------+   |\n\n</code></pre> <p>the body node represents the action to be taken in each iteration of the loop. After the action is taken, control flows to the condition node to evaluate the boolean condition. If the condition is true, control flows back to the body node to take the action again. If the condition is false, control flows to the after node. Note that the body node is executed at least once, regardless of the value of the condition. body \u8282\u70b9\u8868\u793a\u5faa\u73af\u7684\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u8981\u91c7\u53d6\u7684\u64cd\u4f5c\u3002\u91c7\u53d6\u884c\u52a8\u540e\uff0c\u63a7\u5236\u6d41\u5411\u6761\u4ef6\u8282\u70b9\u4ee5\u8bc4\u4f30\u5e03\u5c14\u6761\u4ef6\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u63a7\u5236\u6d41\u56de\u6b63\u6587\u8282\u70b9\u4ee5\u518d\u6b21\u6267\u884c\u64cd\u4f5c\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u5047\uff0c\u63a7\u5236\u6d41\u5411\u540e\u8282\u70b9\u3002\u8bf7\u6ce8\u610f\uff0c\u65e0\u8bba\u6761\u4ef6\u503c\u5982\u4f55\uff0c\u4e3b\u4f53\u8282\u70b9\u81f3\u5c11\u6267\u884c\u4e00\u6b21\u3002</p>"},{"location":"course_notes/fit5171/#assignment-1","title":"Assignment 1","text":"<pre><code>title: Requirment\ncollapse:\n\nThis assignment carries 10 marks. The assessment will be based on the submitted files as well  as a demo/interview conducted in-tutorial in week5 \nYou will need to submit a test plan report and the project setup, contained in a single .zip file, to  Moodle. \n1.2 Test Plan document  \nThe report will include following parts:  The report should not exceed 4 pages in length\n(1) testing objective,  \n(2) scope of testing,  \n(3) approach (including any assumption/constraints, software requirements to be tested, testing tools),  \n(4) test plan (including testing team and test environment) and  \n(5) testing procedure (including test execution and unit test cases). You should document test cases in a  tabular form (check the format in Week 2 lecture).\n1.3 Project set up and testing requirements  \n1. Maven project: We have provided Java files with no project structure. You need to create a  maven project and import these files into correct location.  \n2. BuyTicket and ChooseTicket are required to be combined into one class. You can call this call  TicketSystem.  \n3. Write code on any five test cases you created in the report. Test cases should test different  constraint\n1.4 Demo  \nEach group will also need to give a code walkthrough to a TA, showing your understanding of the code,  \nand your test plan. All the team members will be interviewed. All the team members are required to  attend the same tutorial during week 5 tutorial\n\n1.5 Assessment Breakdown  \n5 marks - Testing documentation\n5 marks - Setup and testing You need to show that you have successfully set up the local working environment and have developed  some test cases.  \nYour report can contain screenshots showing that your setup is successful. If you ran into problems  setting up the environment, your report should briefly document the problem and the status of the setup  as an append\n</code></pre>"},{"location":"course_notes/fit5171/#week-4-blackbox-testing","title":"Week 4  Blackbox Testing","text":""},{"location":"course_notes/fit5171/#lecture_3","title":"Lecture","text":""},{"location":"course_notes/fit5171/#blackbox-testing","title":"Blackbox testing","text":"<p> + No knowledge of the internal structure + Testing behaviour of the software + Functional testing(\u5177\u4f53\u529f\u80fd\uff0c\u767b\u9646\uff0c\u6ce8\u518c\u7b49) &amp; non-functional testing (load testing, usability testing, etc.\u7a33\u5b9a\u6027\uff0c\u5b89\u5168\u6027\uff0c\u6613\u7528\u6027\u7b49)  </p>"},{"location":"course_notes/fit5171/#boundary-value-testing-bvt","title":"Boundary Value Testing (BVT)","text":"<p>errors tend to occur near the boundary values for an input variable. test using variable values from the input (domain) of a program </p>"},{"location":"course_notes/fit5171/#normal-boundary-value-testing-nbvt_1","title":"Normal Boundary Value Testing (NBVT)","text":"<ul> <li>Focus on valid values of the input variables.   </li> <li>Focus on valid values of the input variables (min, min+, nor, max, max-)  </li> <li>NBVT =&gt; Single fault assumption Failures are usually caused by only one fault, not more  </li> <li>Test cases:(nominal, boundary)(boundary, nominal) (nominal, nominal) </li> <li>One variable takes: min, min+, nor, max-, max Total 4n+1 cases </li> </ul>"},{"location":"course_notes/fit5171/#robustness-testing_1","title":"Robustness testing","text":"<p> + Simple extension of boundary value analysis Add values min- &amp; max+ + Purpose: exception handling  May cause runtime errors in strongly-typed languages + total no. of test cases = 6n + 1  </p>"},{"location":"course_notes/fit5171/#worst-case-testing_1","title":"Worst case testing","text":"<p> + Disregard single fault assumption, acquire more test cases + for each variable Take min, min+, nor, max-, max Take the Cartesian product x 1 x x2 + test cases = 5 ^ n Applicable when failure is costly</p>"},{"location":"course_notes/fit5171/#robust-worst-case-testing_1","title":"Robust worst-case testing","text":"<p> + Taking it one step further Add min- &amp; max+ + test cases now = 7^n  Applicable when failure is  really costly</p>"},{"location":"course_notes/fit5171/#equivalence-class-testing_1","title":"Equivalence class testing","text":"<p>Equivalence Class Testing: Complete Guide |Professionalqa.com + Basic idea: partition the entire input set into disjoint subsets + Covering: complete testing + Disjointness: no redundancy + One test case from each equivalence class  + Key: find a good equivalence relation + Weak equivalence and strong equivalence classes</p>"},{"location":"course_notes/fit5171/#example","title":"example","text":"<pre><code>a \u2264 x1 \u2264 d, with intervals [a,b), [b,c),  [c,d]  \ne \u2264 x 2 \u2264 g, with intervals [e,f), [f,g]  Partition based on intervals  \nV1 = { x1 : a \u2264 x1 &lt; b }  \nV2 = { x1 : b \u2264 x1 &lt; c }  \nV3 = { x1 : c \u2264 x1 \u2264 d }  \nV4 = { x2 : e \u2264 x2 &lt; f }, V5 = { x2 : f \u2264 x2 \u2264 g }  \nNV1 = { x1 : x1 &lt; a }, NV2 = { x1 : x1 &gt; d }  \nNV3 = { x2 : x2 &lt; e }, NV4 = { x2 : x2 &gt; g }\n</code></pre> <p>  Equivalent classes of valid values:  C x1 = { V1, V2, V3 }  C x2 = { V4, V5 } Equivalent classes of invalid values:  I x1 = { NV1, NV2 }   I x2 = { NV3, NV4 }</p>"},{"location":"course_notes/fit5171/#weak-equivalence-class-testing","title":"Weak equivalence class testing","text":"<p> + Weak normal  Choosing one valid value from each equivalent class (over valid interval) + Weak robust  Test case include invalid values One invalid value =&gt; other valid values</p>"},{"location":"course_notes/fit5171/#strong-equivalence-class-testing","title":"Strong equivalence class testing","text":"<p> + Strong normal  Choosing each element of cartesian  product of the equivalent classes  (valid interval + Strong robust  Choosing each element of cartesian  product of all the equivalent classes  (both valid and invalid)</p>"},{"location":"course_notes/fit5171/#decision-table-based-testing","title":"Decision Table - based Testing","text":"<p> + Guarantees completeness of testing =&gt; every possible combination of conditional  values (Conditions \u2192 Actions) + Cause-Effect table where Cause and effects  are captured for better test coverage  </p>"},{"location":"course_notes/fit5171/#testing-effort_1","title":"Testing effort","text":"<ul> <li>BVT - no recognition of data or logical dependencies  Mechanical, easy to automate    </li> <li>ECT - need to consider data dependencies &amp; program logic  Defining the equivalence relation  </li> <li>DTT - need to consider both data &amp; logical dependencies  </li> </ul>"},{"location":"course_notes/fit5171/#tutorial_3","title":"Tutorial","text":""},{"location":"course_notes/fit5171/#1-work-out-a-formula-for-the-number-of-test-cases-for-each-of-the-following-cases-and-briefly-explain","title":"1. work out a formula for the number of test cases for each of the following  cases and briefly explain","text":""},{"location":"course_notes/fit5171/#a-the-robust-bvt-with-additional-values-min-and-max-for-each-variable","title":"(a) The robust BVT (with additional values min\u2212 and max + for each variable)","text":"<p>(n \u00d7 2) + 1  where n is the number of input variables in the program.  \u00a0The (n \u00d7 2) term in the formula represents the number of boundary values for each input variable that need to be tested. adds 1 to the number of test cases for the basic BVT to account for the additional values,</p>"},{"location":"course_notes/fit5171/#b-weak-normal-equivalence-class-testing","title":"(b) Weak normal equivalence class testing","text":""},{"location":"course_notes/fit5171/#4-under-the-tutorial-resources-you-will-find-a-pdf-document-which-includes-the-nextdate-method-which-given-a-day-a-month-and-a-year-returns-the-date-of-the-following-day","title":"4. Under the tutorial resources, you will find a pdf document which includes the NextDate  method, which, given a day, a month, and a year, returns the date of the following day.","text":"<pre><code>Rules must be complete  Conditions must cover all possibilities  \nRules must be exclusive  Given certain conditions, only one rule can be true  \nD1 = {d: day | 1 \u2264 d \u2264 27}  \nD2 = {d: day | d = 28} = {28}  \nD3 = {d: day | d = 29} = {29}  \nD4 = {d: day | d = 30} = {30}  \nD5 = {d: day | d = 31} = {31}\nM1 = {m: month | m has 30 days}  \nM2 = {m: month | m has 31 days except December}  \nM3 = {m: month | m is December}  \nM4 = {m: month | m is February}  \nY1 = {y: year | y is a leap year}  \nY2 = {y: year | y is a common year}\n</code></pre>"},{"location":"course_notes/fit5171/#complete-the-decision-table-on-slide-37-for-nextdate-by-filling-in-the-missing-conditions-and-associated-actions","title":"Complete the decision table on slide 37 for NextDate by filling in the missing conditions and associated actions","text":"Rules 7 8 9 10 11 12 13 Conditions c1 D1-D4, D1,D2 \u00a0D3 D4,D5 D1 D2 D3 C2 M3 M4 M4 M4 M4 M4 M4 C3 Y1 Y1 Y1,Y2 Y2 Y2 Y2 Actions a1 x x a2 x x x a3 x x a4 x x a5 a6 <p>Rule 7: If the day is in the range D1-D4, month is February, and the year is a common year, then the following day of the given date will be 01-Mar. Rule 8: If the day is 28, month is February, and the year is a leap year, then the following day of the given date will be 29-Feb. Rule 9: If the day is 29, month is February, and the year is a leap year, then the following day of the given date will be 01-Mar. Rule 10: If the day is in the range D4-D5, month is February, and the year is a leap or common year, then the following day of the given date does not exist and the output will be invalid. Rule 11: If the day is in the range D1-D4, month is not February, and the year is a leap or common year, then the following day of the given date can be computed normally by moving to the next day. Rule 12: If the day is 28, month is not February, and the year is a common year, then the following day of the given date will be 01-Mar. Rule 13: If the day is 29 or 30, month is not February, and the year is a common year, then the following day of the given date will be the next day of the same month.</p>"},{"location":"course_notes/fit5171/#week-5-white-box-testing","title":"week 5 White-box testing","text":""},{"location":"course_notes/fit5171/#lecture_4","title":"Lecture","text":""},{"location":"course_notes/fit5171/#white-box-testing_1","title":"White-box testing","text":"<p> + Testing structure of the software  \u4e0d\u4ec5\u5173\u6ce8\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u540c\u65f6\u5173\u6ce8\u76d2\u5b50\u5185\u7684\u4ee3\u7801\u7ed3\u6784 + Abstraction is the key Programs \u2192 mathematical objects (models \u5c06\u4ee3\u7801\u8f6c\u6362\u6210\u6570\u5b66\u6a21\u578b + Analyse the abstract program Data flow, control flow, coverage, etc.</p>"},{"location":"course_notes/fit5171/#program-graph_2","title":"Program graph","text":"<p> + directed graph; Nodes: statement fragments;  Edges: flow of control;  Paths: program execution + Simplification: grouping of statements Basic blocks - sequential execution + identify test cases {(1,2), (2,9)}  {(1,2), (2,3),(3,4),(4,3),(3,5), (5,7),(7,8),(8,2),(2,9)}</p>"},{"location":"course_notes/fit5171/#decision-to-decision-paths-dd-paths","title":"Decision-to-decision paths DD-paths","text":"<p> \u4e3b\u8981\u7740\u773c\u6d4b\u8bd5\u8986\u76d6\u7387\u95ee\u9898\u3002 \u7a0b\u5e8f\u6709\u5411\u56fe\u4e2d\u5b58\u5728\u5206\u652f\uff0c\u8986\u76d6\u7387\u8003\u8651\u7684\u662f\u5bf9\u5404\u4e2a\u5206\u652f\u60c5\u51b5\u7684\u6d4b\u8bd5\u8986\u76d6\u7a0b\u5ea6\uff0c\u56e0\u6b64\u5bf9\u6709\u5411\u56fe\u4e2d\u7ebf\u6027\u4e32\u884c\u7684 \u90e8\u5206\u8fdb\u884c\u538b\u7f29\uff0c\u5728\u538b\u7f29\u56fe(\u5373DD-\u8def\u5f84)\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\uff0c\u7528\u6d4b\u8bd5\u8986\u76d6\u6307\u6807\u8003\u5bdf\u6d4b\u8bd5\u6548\u679c</p> <pre><code>Indegree: no. of incoming edges for a node  \nOutdegree: no. of outgoing edges for a node  \nPath: a sequence of adjacent edges  \n2-connected: if there is a path between the two nodes\n</code></pre>"},{"location":"course_notes/fit5171/#test-coverage-metrics","title":"Test coverage metrics","text":"<p>Test coverage is a percentage measure of the degree to which the source code of  a program is executed when a particular test suite is run. </p>"},{"location":"course_notes/fit5171/#basis-path-testing","title":"Basis path testing","text":"<p>Path testing is a structural testing method that involves using the source code of a  program in order to find every possible executable path.  It helps to determine all faults lying within a piece of code. This method is  designed to execute all or selected path through a computer program.  Any software program includes, multiple entry and exit points. Testing each of  these points is a challenging as well as time-consuming. In order to reduce the  redundant tests and to achieve maximum test coverage, basis path testing is used </p>"},{"location":"course_notes/fit5171/#week-6-integration-testing","title":"Week 6 Integration Testing","text":""},{"location":"course_notes/fit5171/#lecture_5","title":"Lecture","text":"<ul> <li>Objectives of integration testing</li> <li>Integration testing approaches<ul> <li>Decomposition-based</li> <li>Call graph-based</li> <li>Path-based</li> </ul> </li> <li>A comparison of different approaches</li> </ul>"},{"location":"course_notes/fit5171/#phases-goals-of-testing","title":"Phases &amp; goals of testing","text":""},{"location":"course_notes/fit5171/#integration-testing_1","title":"Integration testing","text":"<p>\u96c6\u6210\u6d4b\u8bd5\u662f\u5728\u5355\u5143\u6d4b\u8bd5\u7684\u57fa\u7840\u4e0a\uff0c\u6d4b\u8bd5\u5728\u5c06\u6240\u6709\u7684\u8f6f\u4ef6\u5355\u5143\u6309\u7167\u6982\u8981\u8bbe\u8ba1\u89c4\u683c \u8bf4\u660e\u7684\u8981\u6c42\u7ec4\u88c5\u6210\u6a21\u5757\u3001\u5b50\u7cfb\u7edf\u6216\u7cfb\u7edf\u7684\u8fc7\u7a0b\u4e2d\u5404\u90e8\u5206\u5de5\u4f5c\u662f\u5426\u8fbe\u5230\u6216\u5b9e\u73b0\u76f8 \u5e94\u6280\u672f\u6307\u6807\u53ca\u8981\u6c42\u7684\u6d3b\u52a8\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u96c6\u6210\u6d4b\u8bd5\u4e4b\u524d\uff0c\u5355\u5143\u6d4b\u8bd5\u5e94\u8be5\u5df2\u7ecf\u5b8c \u6210\uff0c\u96c6\u6210\u6d4b\u8bd5\u4e2d\u6240\u4f7f\u7528\u7684\u5bf9\u8c61\u5e94\u8be5\u662f\u5df2\u7ecf\u7ecf\u8fc7\u5355\u5143\u6d4b\u8bd5\u7684\u8f6f\u4ef6\u5355\u5143 + System - hierarchically composed of units + Objectives - testing of interfacing and interaction of units; To expose problems arising from the combination; To find a working solution from component  + Internal - between components \u5355\u5143\u95f4\u7684\u63a5\u53e3\uff0c\u6307\u7684\u662f\u4ee3\u7801\u95f4\u7684\u76f8\u4e92\u8c03\u7528\uff0c\u6211\u4eec\u4f20\u9012 \u4e00\u4e9b\u53c2\u6570\u6765\u5224\u65ad\u6d4b\u8bd5\u8c03\u7528\u6709\u6ca1\u6709\u95ee\u9898     - Method invocation - calls/message passing     - Parameter - types, values, order, etc.     - Method return - identity, types, sequence, - External - outside of system Interrupts, I/O timing, etc\u96c6\u6210\u540e\u7684\u529f\u80fd\uff0c\u4e0d\u540c\u7684\u529f\u80fd\u4e4b\u95f4\u662f\u5426\u4f1a\u4ea7\u751f\u76f8\u4e92\u5f71\u54cd  </p>"},{"location":"course_notes/fit5171/#decomposition-based-integration-testing","title":"Decomposition-based Integration testing","text":"<p>Decompose the system in different ways \u57fa\u4e8e\u5206\u89e3\uff0c\u529f\u80fd\u5206\u89e3\uff0c\u6a21\u5757\u5206\u89e3:  + System Architecture: hierarchically composed of components Organised in layers + Layers of components</p>"},{"location":"course_notes/fit5171/#structural-integration-approaches","title":"Structural integration approaches:","text":""},{"location":"course_notes/fit5171/#big-bang","title":"Big bang","text":"<ul> <li>all units together, no error localisation </li> <li>\u8fc5\u901f\uff08\u5982\u679c\u6267\u884c\u6ca1\u6709\u95ee\u9898\u7684\u8bdd\uff09\u5b8c\u6210\u96c6\u6210\u6d4b\u8bd5\uff0c\u5e76\u4e14\u53ea\u8981\u6781\u5c11\u6570\u7684\u9a71\u52a8\u548c\u6869\u6a21\u5757\u8bbe\u8ba1\uff0c\u5b83\u9700\u8981\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u662f\u6700\u5c11\u7684  </li> <li>\u5c06\u6240\u6d4b\u6a21\u5757\u8fde\u63a5\u8d77\u6765\u8fdb\u884c\u6d4b\u8bd5\u4e00\u6b21\u8bd5\u8fd0\u884c\u6210\u529f\u7387\u4e0d\u5927\uff0c\u5bfc\u81f4\u6d4b\u8bd5\u6548\u7387\u6bd4\u8f83\u4f4e  </li> <li>\u5176\u95ee\u9898\u5b9a\u4f4d\u548c\u4fee\u6539\u90fd\u6bd4\u8f83\u56f0\u96be  </li> <li>\u9002\u7528\u4e00\u4e2a\u7ef4\u62a4\u578b\u9879\u76ee\uff08\u6216\u529f\u80fd\u589e\u5f3a\u578b\u9879\u76ee\uff09\uff0c\u5176\u4ee5\u524d\u7684\u4ea7\u54c1\u5df2\u7ecf\u5f88\u7a33\u5b9a\u4e86  </li> <li>\u88ab\u6d4b\u7cfb\u7edf\u6bd4\u8f83\u5c0f\uff0c\u5e76\u4e14\u5b83\u7684\u6bcf\u4e2a\u51fd\u6570\u90fd\u7ecf\u8fc7\u5145\u5206\u7684\u5355\u5143\u6d4b\u8bd5  </li> </ul>"},{"location":"course_notes/fit5171/#top-down","title":"Top down","text":"<p> + stubs(\u6869\uff1a\u6a21\u62df\u7684\u5b50\u6a21\u5757dummy component simulate the input-output behaviours of the called unit (methods | sub-systems )), early demo + \u8f83\u65e9\u7684\u9a8c\u8bc1\u4e86\u4e3b\u8981\u7684\u63a7\u5236\u548c\u5224\u65ad\u70b9\u53ef\u4ee5\u9996\u5148\u5b9e\u73b0\u548c\u9a8c\u8bc1\u4e00\u4e2a\u5b8c\u6574\u7684\u8f6f\u4ef6\u529f\u80fd + \u652f\u6301\u6545\u969c\u9694\u79bb + Difficult to write when called unit has complex parameter + \u5e95\u5c42\u7ec4\u4ef6\u884c\u4e3a\u7684\u9a8c\u8bc1\u88ab\u63a8\u8fdf \u5e95\u5c42\u7ec4\u4ef6\u7684\u6d4b\u8bd5\u4e0d\u591f\u5145\u5206 + \u9002\u5408\u4ea7\u54c1\u63a7\u5236\u7ed3\u6784\u76f8\u5bf9\u6e05\u6670\u548c\u7a33\u5b9a\uff0c\u4ea7\u54c1\u7684\u9ad8\u5c42\u63a5\u53e3\u53d8\u5316\u6bd4\u8f83\u5c0f  </p>"},{"location":"course_notes/fit5171/#bottom-up","title":"Bottom up","text":"<p> + terminal, drivers(\u9a71\u52a8\u5668\uff1a\u6a21\u62df\u7684\u7236\u8282\u70b9dummy component emulating not-yet-implemented behaviour of a calling unit (upper lever components)) + \u8be5\u7b56\u7565\u5141\u8bb8\u5bf9\u5e95\u5c42\u7ec4\u4ef6\u884c\u4e3a\u7684\u65e9\u671f\u9a8c\u8bc1\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5df2\u7ecf\u5c31\u7eea\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5 + \u652f\u6301\u6545\u969c\u9694\u79bb + \u5bf9\u4e8e\u9ad8\u5c42\u7684\u9a8c\u8bc1\u88ab\u63a8\u8fdf\u5230\u4e86\u6700\u540e\uff0c\u8bbe\u8ba1\u4e0a\u7684\u9519\u8bef\u4e0d\u80fd\u88ab\u53ca\u65f6\u53d1\u73b0 + \u5e95\u5c42\u63a5\u53e3\u6bd4\u8f83\u7a33\u5b9a\u3001\u53d8\u52a8\u8f83\u5c11\u7684\u4ea7\u54c1.\u9ad8\u5c42\u63a5\u53e3\u53d8\u5316\u6bd4\u8f83\u9891\u7e41\u7684\u4ea7\u54c1\u5e95\u5c42\u7ec4\u4ef6\u8f83\u65e9\u88ab\u5b8c\u6210\u7684\u4ea7\u54c1</p>"},{"location":"course_notes/fit5171/#sandwich","title":"Sandwich","text":"<p> + a combination of the above methods + \u4e2d\u95f4\u4e00\u5c42\u4e3a\u76ee\u6807\u5c42 \u5bf9\u76ee\u6807\u5c42\u7684\u4e0a\u4e00\u5c42\u4f7f\u7528\u81ea\u9876\u5411\u4e0b\u7684\u96c6\u6210\u7b56\u7565 \u5bf9\u76ee\u6807\u7684\u4e0b\u4e00\u5c42\u4f7f\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u96c6\u6210\u7b56\u7565\uff0c\u6700\u540e\u6d4b\u8bd5\u5728\u76ee\u6807\u5c42\u4f1a\u5408 + \u96c6\u5408\u4e86\u81ea\u5e95\u5411\u4e0a\u548c\u81ea\u9876\u5411\u4e0b\u8fd9\u4e24\u79cd\u7b56\u7565\u7684\u4f18\u70b9 + \u4e2d\u95f4\u5c42\u5728\u88ab\u96c6\u6210\u524d\u6d4b\u8bd5\u4e0d\u591f\u5145\u5206 + \u5927\u90e8\u5206\u8f6f\u4ef6\u5f00\u53d1\u9879\u76ee\u90fd\u53ef\u4f7f\u7528\u8be5\u7b56\u7565 + \u4e0a\u5c42\u66f4\u591a\u7684\u662f\u504f\u91cd\u4e8e\u9ad8\u5c42\u7684\u7ec4\u4ef6\u5f00\u53d1\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u81ea\u9876\u5411\u4e0b\u7684\u7b56\u7565\u96c6\u6210\uff1b + \u800c\u4e0b\u5c42\u504f\u91cd\u4e8e\u5177\u4f53\u7684\u7ec4\u4ef6\u5b9e\u73b0,\u6211\u4eec\u91c7\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u7b56\u7565\u6765\u96c6\u6210\uff1b + \u4e2d\u95f4\u90e8\u5206\u53ef\u80fd\u5c31\u662f\u4e00\u4e9b\u63a5\u53e3\u5b9e\u73b0\u4e86\uff0c\u5b8c\u4e8b\u4e0a\u4e0b\u5c42\u5728\u4e2d\u95f4\u5c42\u4f1a\u5408\uff1b + \u5b8c\u4e8b\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b83\u4eec\u7684\u6700\u5916\u6210\u91c7\u7528\u5927\u7206\u70b8\u65b9\u5f0f\u96c6\u6210\u4e5f\u662f\u53ef\u4ee5\u7684</p>"},{"location":"course_notes/fit5171/#call-graph-based-integration","title":"Call graph-based integration","text":"<ul> <li>Directed graphs for calling relationships between components (methods, classes,  subroutines, units  </li> <li>More behavioural, less structured  </li> <li>Avoid impossible edges, stubs, drivers  </li> <li>Aligns better with development/builds  </li> <li>More difficult fault isolation All neighbours of a faulty unit need to be retested</li> </ul>"},{"location":"course_notes/fit5171/#pairwise-integration","title":"Pairwise integration","text":"<p>Integration testing of pairs of units Use actual code No stubs or drivers </p>"},{"location":"course_notes/fit5171/#neighbour-integration","title":"Neighbour integration","text":"<p>Neighbour: edge distance; Neighbour integration: include neighbouring nodes </p>"},{"location":"course_notes/fit5171/#path-based_1","title":"Path-based","text":"<ul> <li>Hybrid method - functional testing + structural testing  </li> <li>Testing cases: behavioural threads  </li> <li>interactions(behavioural) rather than interfaces(structural)  </li> <li>Closely coupled with actual system behaviour Works well for Object Oriented  Programs </li> </ul>"},{"location":"course_notes/fit5171/#mocking","title":"Mocking","text":"<p>Mocking is a technique used in unit and integration testing to simulate the behavior of an object or component that is not yet available or that would be too complex or costly to include in the testing environment. + \u00a0isolate the code that they want to test, by replacing any dependencies with mock objects or stubs that mimic the behavior of the real objects + Increases test coverage: Mocking components or objects can help developers test edge cases and scenarios that would otherwise be difficult to replicate + Speeds up testing: Use of mocks can eliminate the need to wait for slow or unavailable components + Facilitates parallel testing: Mocking can easily allow multiple tests to be run in parallel wit out any interference from the other components which are not yet developed. </p> <pre><code>public class Calculator {\n    private Database db;\n    public Calculator(Database db) {\n        this.db = db;\n    }\n    public int add(int a, int b) {\n        int result = a + b;\n        db.persist(result);\n        return result;\n    }\n}\npublic class Database {\n    public void persist(int result) {\n        // logic to persist the result in the database\n    }\n}\n\n</code></pre> <pre><code>public class CalculatorTest {\n    @Test\n    public void testAdd() {\n        // create mock Database object\n        Database db = Mockito.mock(Database.class);\n        // create Calculator object with mock Database dependency\n        Calculator calc = new Calculator(db);\n        // call add method on Calculator\n        int result = calc.add(2, 3);\n        // verify that add method returned correct result\n        assertEquals(5, result);\n        // verify that persist method was called on the mock Database object\n        Mockito.verify(db).persist(5);\n    }\n}\n\n</code></pre>"},{"location":"course_notes/fit5171/#tutorial_4","title":"Tutorial","text":""},{"location":"course_notes/fit5171/#q1_3","title":"Q1","text":"<p> simple Web application for management of personnel, which deals with classes <code>Persons, Expertise, Missions, Invitations</code> the interactions between components for the loading of a Mission page is shown below in Figure 1, showing the authentication &amp; authorisation control flow + <code>Router</code> is responsible for routing HTTP requests to the appropriate resources  that handles them  + <code>MissionRoute</code>  is responsible for creating pages to present mission details. once it is determined that authentication and authorisation the resource consults the <code>LoginManager</code>  + <code>LoginManager</code> to grant/refuse access based on user input. The LoginManager in turn invokes UserDAO + <code>UserDAO</code> to load user details given the user name. If access is granted or that access control is not required, the resource then invokes MissionDAO + <code>MissionDAO</code> to obtain mission details. If the user is denied access, it constructs a page to show the error accordingly. Finally, MissionRoute returns the page back to the Router.</p>"},{"location":"course_notes/fit5171/#q1-a-list-all-mm-paths-for-all-the-5-components-above","title":"Q1-a List all MM-paths for all the 5 components above","text":"<p>List all MM-paths for all the 5 components above. You can use letters A, B, C, D and E  to represent the 5 components in Figure 1. Recall that an MM-path starts from a source  node and ends at a sink node, with no intervening sink nodes.   For example, the MM-path for component D (UserDAO) is MEP (D, 1) = (1, 2, 3). The MM-path for component E (MissionDAO) is MEP (E , 1) = (1, 2, 3)  </p> <pre><code>MEP(A,1) = (1,2,3,5) MEP(A,2) = (1,2,4) MEP(A,3) = (5)  \nMEP(B,1) = (1,2,3,8) MEP(B,2) = (1,2,4) MEP(B,3) = (5,6,8) MEP(B,4) = (5,7) MEP(B,5) = (8)  \nMEP(C,1) = (1,2) MEP(C,2) = (3,4,8) MEP(C,3) = (3,5,6,8) MEP(C,4) = (3,5,7,8)\n</code></pre> <p>wc_logical | Lucidchart </p>"},{"location":"course_notes/fit5171/#q1-b-based-on-the-above-mm-paths-you-developed-in-part","title":"Q1-b Based on the  above MM-paths you developed in part","text":"<ol> <li>Draw the MM-path graph for the components.   </li> <li>Calculate the MM-path complexity for the graph you just drew.</li> </ol>"},{"location":"course_notes/fit5171/#q2-rate-the-relative-fault-isolation-capabilities-of-the-following-integration-strategies","title":"Q2 Rate the relative fault isolation capabilities of the following integration strategies","text":"<pre><code>Rate the relative fault isolation capabilities of the following integration strategies   \n1. Big bang  \n2. Decomposition-based top-down integration   \n3. Decomposition-based bottom-up integration   \n4. Call graph-based neighbourhood integration (radius 1) \nPlease also provide rationales for your choices.\n</code></pre> <ol> <li>Decomposition-based bottom-up integrationBottom up: This strategy involves integrating modules from the bottom layer up, in order of their dependence on other modules. This allows for early detection and isolation of faults, as any issues with lower-level modules will be revealed before higher-level modules are integrated. This approach is often referred to as \"test early and often\" and is the most effective way to identify and isolate defects.  </li> <li>Decomposition-based top-down integrationTop down: This strategy involves integrating modules from the top layer down, in order of their calling relationships. This means that higher-level modules will be integrated before lower-level ones, which can make it more difficult to identify and isolate faults.  </li> <li>Call graph-based neighbourhood integration (radius 1)Neighbour integration: This strategy involves integrating modules that are closely related to each other, based on their calling relationships. By integrating neighboring modules, issues are more likely to be isolated within a small area of the program, which makes debugging easier.  </li> <li>Big bangBig bang: This strategy involves integrating all modules at once, without any intermediate testing. This is the least effective strategy, as any faults that arise may be difficult to isolate and may require significant backtracking to fix. This approach can be very time-consuming, as it is difficult to identify where the issue lies. It is also difficult to verify that all modules are working correctly, as failures can cascade throughout the system.</li> </ol>"},{"location":"course_notes/fit5171/#q3-some-of-the-benefits-brought-by-mocking","title":"Q3 some of the benefits brought by mocking","text":"<ul> <li>isolate the code that they want to test, by replacing any dependencies with mock objects or stubs that mimic the behavior of the real objects  </li> <li>Increases test coverage: Mocking components or objects can help developers test edge cases and scenarios that would otherwise be difficult to replicate  </li> <li>Speeds up testing: Use of mocks can eliminate the need to wait for slow or unavailable components  </li> <li>Facilitates parallel testing: Mocking can easily allow multiple tests to be run in parallel wit out any interference from the other components which are not yet developed. </li> </ul>"},{"location":"course_notes/fit5171/#q4-explain-some-of-the-difficulties-in-tdd-for-userhandler-without-mocking","title":"Q4 Explain some of the difficulties in TDD for UserHandler without mocking.","text":"<p>it is decided that an additional  layer of abstraction will be added to handle the storage of Users that adds additional functionality  (e.g., validation) on top of the underlying DAO layer. This new class is called UserHandler and  it will interact with UserDAO to achieve its functionalities. UserHandler class interacts with UserDAO which interacts with the database.  without mocking would require an actual connection to the database, which can be time-consuming and make the tests slow. there could be many test cases that require specific data to be present in the database, which can be challenging to set up there could be issues with data consistency since the tests will be updating, inserting, and deleting data in the actual database. This can lead to unexpected behavior and make it difficult to isolate issues that arise during testing.</p>"},{"location":"course_notes/fit5171/#q5-how-to-apply-mocking","title":"Q5 how to apply Mocking","text":"<p>Unit tests with Mockito - Tutorial A Unit Tester\u2019s Guide to Mockito | Toptal\u00ae Study the Mockito documentation to learn how the following is done. 1. Creating a mock object : simply call the\u00a0<code>mock()</code>\u00a0method, passing in a class or interface that you want to mock <code>MyClass myMock = Mockito.mock(MyClass.class);</code> 2. Specifying expected return results when a certain method is called use Mockito's\u00a0<code>when()/thenReturn()</code>\u00a0method chaining.<code>MyClass myMock = Mockito.mock(MyClass.class); when(myMock.someMethod()).thenReturn(\"expected result\");</code>  This tells Mockito to return the string \"expected result\" when the\u00a0<code>someMethod()</code>\u00a0method is called on\u00a0<code>myMock</code>. 3. Add partial mocking support to real objects use Mockito's\u00a0<code>spy()</code>\u00a0method, which wraps the real object and allows you to override specific methods.</p> <pre><code>// Create a real object of MyClass:\nMyClass myRealObject = new MyClass();\n\n// Create a spy object of MyClass:\nMyClass mySpy = Mockito.spy(myRealObject);\n\n// Override the return result of someMethod() when it's called on the spy object:\nwhen(mySpy.someMethod()).thenReturn(\"mocked result\");\n\n// Use mySpy object in your tests, as you would with any other mock object:\nString result = mySpy.someMethod();\n\n</code></pre>"},{"location":"course_notes/fit5171/#q6-implement-new-method-with-mocking","title":"Q6 implement new method with mocking","text":"<p>Suppose that we want to implement UserHandler.updatePassword(Long, String), which  takes 2 parameters: a Long value representing a User\u2019s ID, and a String value representing  the new password value. updatePassword() returns true if the update is successful and false  otherwise. Two conditions can make an update fail: 1. A null password is provided as the parameter value, or 2. The new password is the same as the current one. Moreover, if no User object can be retrieved with the given ID, updatePassword should throw  an SQLException. Implement the above method in UserHandler class. Note that this class should make use of UserDAO class to access the database.</p> <pre><code>public class UserHandler {\n    private final UserDAO userDAO;\n\n    public UserHandler(UserDAO userDAO) {\n        this.userDAO = userDAO;\n    }\n\n    public boolean updatePassword(Long userId, String newPassword) throws SQLException {\n        // Check if the password is null or empty\n        if (newPassword == null || newPassword.isEmpty()) {\n            return false;\n        }\n\n        User user = userDAO.getUserById(userId);\n\n        // Check if a user with the given ID was found\n        if (user == null) {\n            throw new SQLException(\"User not found with ID: \" + userId);\n        }\n\n        // Check if the new password is the same as the current password\n        if (newPassword.equals(user.getPassword())) {\n            return false;\n        }\n\n        user.setPassword(newPassword);\n\n        return userDAO.updateUser(user);\n    }\n}\n\n</code></pre>"},{"location":"course_notes/fit5171/#q7-mockito-with-database","title":"Q7 Mockito with database","text":"<p>Develop test cases for the UserHandler class. Decide whether/when to use Mockito. Suppose  you want to test for the following scenarios. 1. Null person to be retrieved from a given ID. 2. Null password provided as the parameter value. 3. New password same as the current one</p> <pre><code>import java.sql.SQLException;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.mockito.Mockito;\n\npublic class UserHandlerTest {\n\n    private UserHandler userHandler;\n    private UserDAO mockUserDAO;\n\n    @Before\n    public void setUp() {\n        mockUserDAO = Mockito.mock(UserDAO.class);\n        userHandler = new UserHandler(mockUserDAO);\n    }\n//Null person to be retrieved from a given ID\n    @Test(expected = SQLException.class)\n    public void testUpdatePasswordUserNotFound() throws SQLException {\n        Long userId = 1L;\n        String newPassword = \"newPassword\";\n\n        // Stub the UserDAO to return null when getUserById method is called\n        Mockito.when(mockUserDAO.getUserById(userId)).thenReturn(null);\n\n        // Call the updatePassword method\n        boolean result = userHandler.updatePassword(userId, newPassword);\n\n        // Verify that the result is false\n        Assert.assertFalse(result);\n\n        // Should throw SQLException since no user is found with the given ID\n    }\n//Null password provided as the parameter value.  \n    @Test\n    public void testUpdatePasswordNullPassword() throws SQLException {\n        Long userId = 1L;\n        String newPassword = null;\n\n        // Call the updatePassword method\n        boolean result = userHandler.updatePassword(userId, newPassword);\n\n        // Verify that the result is false\n        Assert.assertFalse(result);\n    }\n//New password same as the current one\n    @Test\n    public void testUpdatePasswordSamePassword() throws SQLException {\n        Long userId = 1L;\n        String oldPassword = \"password\";\n        String newPassword = \"password\";\n\n        // Create a User object with the old password\n        User user = new User();\n        user.setId(userId);\n        user.setPassword(oldPassword);\n\n        // Stub the UserDAO to return the User object when getUserById method is called\n        Mockito.when(mockUserDAO.getUserById(userId)).thenReturn(user);\n\n        // Call the updatePassword method\n        boolean result = userHandler.updatePassword(userId, newPassword);\n\n        // Verify that the result is false\n        Assert.assertFalse(result);\n    }\n\n}\n\n</code></pre>"},{"location":"course_notes/fit5171/#quiz-6-work-out-the-program-graph-of-knuth-morris-pratt-algorithm","title":"Quiz 6 Work out the program graph of knuth morris pratt algorithm","text":"<p>Knuth\u2013Morris\u2013Pratt algorithm - Wikipedia searches for occurrences of a \"word\"\u00a0<code>W</code>\u00a0within a main \"text string\"\u00a0<code>S</code>\u00a0by employing the observation that when a mismatch occurs, the word itself embodies sufficient information to determine where the next match could begin, thus bypassing re-examination of previously matched characters.  </p> <pre><code>def kmp_search(pattern, text):\n    \"\"\"\n    Search for the pattern string in the given text string \n    using the Knuth-Morris-Pratt algorithm.\n    Returns a list of indices where the pattern is \n    found in the text, or an empty list if not found.\n    \"\"\"\n    m = len(pattern)\n    n = len(text)\n\n    if m == 0:\n        return [0]\n\n    if n == 0:\n        return []\n\n    # Construct the failure function\n    f = [0] * m\n    j = 0\n\n    for i in range(1, m):\n        while j &gt; 0 and pattern[j] != pattern[i]:\n            j = f[j-1]\n\n        if pattern[j] == pattern[i]:\n            j += 1\n\n        f[i] = j\n\n    # Perform the search\n    j = 0\n    indices = []\n\n    for i in range(n):\n        while j &gt; 0 and pattern[j] != text[i]:\n            j = f[j-1]\n\n        if pattern[j] == text[i]:\n            j += 1\n\n        if j == m:\n            indices.append(i-m+1)\n            j = f[j-1]\n\n    return indices\n\npattern = \"abc\"\ntext = \"abcbabcabcdabc\"\nkmp_search(pattern, text)\n\n</code></pre> <p> </p>"},{"location":"course_notes/fit5171/#week7-mocking-and-software-integration-testing","title":"Week7 Mocking and Software Integration Testing","text":"<p>know how Mockito Framework works. \u77e5\u9053 Mockito \u6846\u67b6\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 How to mock objects for the testing purpose. \u5982\u4f55\u4e3a\u6d4b\u8bd5\u76ee\u7684\u6a21\u62df\u5bf9\u8c61\u3002 Mockito Framework: </p>"},{"location":"course_notes/fit5171/#quiz_2","title":"Quiz","text":"<p>Consider a hospital data system, and one of the key features of this system is to retrieve a list of patients admitted to the hospital at that time. Using mockito, create a dummy implementation for this service and write one test case for it. Consider the following interface for the hospital data system, which defines the behavior for retrieving a list of patients: \u8003\u8651\u4ee5\u4e0b\u533b\u9662\u6570\u636e\u7cfb\u7edf\u7684\u63a5\u53e3\uff0c\u5b83\u5b9a\u4e49\u4e86\u68c0\u7d22\u60a3\u8005\u5217\u8868\u7684\u884c\u4e3a\uff1a</p> <pre><code>public interface PatientService {\n    List&lt;Patient&gt; getAdmittedPatients();\n}\n\n</code></pre> <p>To create a dummy implementation of this service, we can use Mockito to create a mock object of the\u00a0<code>PatientService</code>\u00a0interface, and then specify an expected return value for the\u00a0<code>getAdmittedPatients()</code>\u00a0method: \u8981\u521b\u5efa\u6b64\u670d\u52a1\u7684\u865a\u62df\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Mockito \u521b\u5efa\u00a0<code>PatientService</code>\u00a0\u63a5\u53e3\u7684\u6a21\u62df\u5bf9\u8c61\uff0c\u7136\u540e\u4e3a\u00a0<code>getAdmittedPatients()</code>\u00a0\u65b9\u6cd5\u6307\u5b9a\u9884\u671f\u7684\u8fd4\u56de\u503c\uff1a</p> <pre><code>import org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\nimport java.util.ArrayList;\nimport java.util.List;\nimport static org.junit.Assert.*;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class HospitalDataSystemTest {\n\n    @Test\n    public void testAdmittedPatients() {\n        // create mock object of PatientService\n        PatientService patientService = Mockito.mock(PatientService.class);\n\n        // specify expected return value for getAdmittedPatients()\n        List&lt;Patient&gt; expectedPatients = new ArrayList&lt;&gt;();\n        expectedPatients.add(new Patient(\"John\", \"Doe\"));\n        expectedPatients.add(new Patient(\"Jane\", \"Doe\"));\n        when(patientService.getAdmittedPatients()).thenReturn(expectedPatients);\n\n        // test method that uses getAdmittedPatients()\n        List&lt;Patient&gt; actualPatients = patientService.getAdmittedPatients();\n        assertEquals(expectedPatients.size(), actualPatients.size());\n        for (int i = 0; i &lt; expectedPatients.size(); i++) {\n            assertEquals(expectedPatients.get(i).getFirstName(), actualPatients.get(i).getFirstName());\n            assertEquals(expectedPatients.get(i).getLastName(), actualPatients.get(i).getLastName());\n        }\n    }\n}\n\n</code></pre> <p>In this example, we have created a test method called\u00a0<code>testAdmittedPatients()</code>. This method creates a mock object of\u00a0<code>PatientService</code>\u00a0using Mockito, and then specifies an expected return value for the\u00a0<code>getAdmittedPatients()</code>\u00a0method using the\u00a0<code>when()</code>\u00a0and\u00a0<code>thenReturn()</code>\u00a0methods. \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a\u00a0<code>testAdmittedPatients()</code>\u00a0\u7684\u6d4b\u8bd5\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u4f7f\u7528 Mockito \u521b\u5efa\u4e00\u4e2a\u00a0<code>PatientService</code>\u00a0\u7684 mock \u5bf9\u8c61\uff0c\u7136\u540e\u4f7f\u7528\u00a0<code>when()</code>\u00a0\u548c\u00a0<code>thenReturn()</code>\u00a0\u65b9\u6cd5\u4e3a\u00a0<code>getAdmittedPatients()</code>\u00a0\u65b9\u6cd5\u6307\u5b9a\u4e00\u4e2a\u9884\u671f\u7684\u8fd4\u56de\u503c\u3002</p> <p>We then test the\u00a0<code>PatientService</code>\u00a0method by calling\u00a0<code>getAdmittedPatients()</code>\u00a0and comparing the expected and actual values. In this case, we create a list of two sample patients and specify that this is the expected return value for the\u00a0<code>getAdmittedPatients()</code>\u00a0method. \u7136\u540e\u6211\u4eec\u901a\u8fc7\u8c03\u7528\u00a0<code>getAdmittedPatients()</code>\u00a0\u5e76\u6bd4\u8f83\u9884\u671f\u503c\u548c\u5b9e\u9645\u503c\u6765\u6d4b\u8bd5\u00a0<code>PatientService</code>\u00a0\u65b9\u6cd5\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u6837\u672c\u60a3\u8005\u7684\u5217\u8868\uff0c\u5e76\u6307\u5b9a\u8fd9\u662f\u00a0<code>getAdmittedPatients()</code>\u00a0\u65b9\u6cd5\u7684\u9884\u671f\u8fd4\u56de\u503c\u3002</p> <p>Note that we are using the\u00a0<code>MockitoJUnitRunner</code>\u00a0to run our test, which prepares the test environment for Mockito and makes it easy to use Mockito in our tests. \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u00a0<code>MockitoJUnitRunner</code>\u00a0\u6765\u8fd0\u884c\u6211\u4eec\u7684\u6d4b\u8bd5\uff0c\u5b83\u4e3a Mockito \u51c6\u5907\u4e86\u6d4b\u8bd5\u73af\u5883\uff0c\u5e76\u4f7f\u5f97\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u4e2d\u4f7f\u7528 Mockito \u53d8\u5f97\u5bb9\u6613\u3002</p>"},{"location":"course_notes/fit5171/#assignment2","title":"Assignment2","text":"<p>Mockito (Mockito 5.3.1 API) mockito \u6587\u6863  How to test standard in and out in Java - Dan Vega Junit test Scanner  </p>"},{"location":"course_notes/fit5171/#week-8-software-quality-and-metrics","title":"Week 8 Software Quality and Metrics","text":""},{"location":"course_notes/fit5171/#learning-objectives_2","title":"Learning Objectives:\u00a0\u5b66\u4e60\u76ee\u6807\uff1a","text":"<ul> <li>know different aspects of software quality metrics  \u4e86\u89e3\u8f6f\u4ef6\u8d28\u91cf\u6307\u6807\u7684\u4e0d\u540c\u65b9\u9762</li> <li>measure, evaluate and analyse software under test using different quality and complexity metrics \u4f7f\u7528\u4e0d\u540c\u7684\u8d28\u91cf\u548c\u590d\u6742\u6027\u6307\u6807\u6d4b\u91cf\u3001\u8bc4\u4f30\u548c\u5206\u6790\u88ab\u6d4b\u8f6f\u4ef6</li> </ul>"},{"location":"course_notes/fit5171/#week-9","title":"week 9","text":""},{"location":"course_notes/fit5171/#quiz_3","title":"Quiz","text":"<p>Mutation testing is a technique to assess the efficacy and quality of a test suite. It works by making mutants, syntactic variations of the program under test, and measuring how many of the mutants are killed by the test suite. The presence of non-equivalent live mutants represents inadequacy of the test suite. The following Java method, max, returns the largest of the three integer parameters.</p> <pre><code>public int max(int a,int b,int c)\n{\nint temp a;\nif (b &gt; a) { temp = b;}\n\nif (c &gt; b) { temp = c;}\nreturn temp;\n}\n</code></pre> <p>Come up with three non-equivalent mutants of the original program, each making use one of the following mutation operators.  Determine the kill rate of your test suite on each of the three mutants. Note: The mutation operators you can use are: ror: Relational operator replacement. sdl: Statement deletion. uoi: Unary operator insertion. scr: Scalar variable replacement. vie: Scalar variable initialisation elimination. Here are three non-equivalent mutants of the original\u00a0<code>max</code>\u00a0method, each making use of one of the mutation operators: \u4ee5\u4e0b\u662f\u539f\u59cb\u00a0<code>max</code>\u00a0\u65b9\u6cd5\u7684\u4e09\u4e2a\u975e\u7b49\u6548\u7a81\u53d8\u4f53\uff0c\u6bcf\u4e2a\u7a81\u53d8\u4f53\u90fd\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a\u7a81\u53d8\u8fd0\u7b97\u7b26\uff1a</p> <ol> <li><code>ror</code>\u00a0- Relational operator replacement: <code>ror</code>\u00a0- \u5173\u7cfb\u8fd0\u7b97\u7b26\u66ff\u6362\uff1a</li> </ol> <pre><code>public int max(int a, int b, int c) {\n    int temp = a;\n    if (b &gt;= a) { temp = b; }\n    if (c &gt; b) { temp = c; }\n    return temp;\n}\n</code></pre> <p>Copy Code</p> <p>This mutant replaces the\u00a0<code>&gt;</code>\u00a0operator with\u00a0<code>&gt;=</code>\u00a0in the first\u00a0<code>if</code>\u00a0statement. The test case(s) that check for the case where all three integers are equal will fail to notice the mutation. \u6b64\u7a81\u53d8\u4f53\u5728\u7b2c\u4e00\u4e2a\u00a0<code>if</code>\u00a0\u8bed\u53e5\u4e2d\u5c06\u00a0<code>&gt;</code>\u00a0\u8fd0\u7b97\u7b26\u66ff\u6362\u4e3a\u00a0<code>&gt;=</code>\u00a0\u3002\u68c0\u67e5\u6240\u6709\u4e09\u4e2a\u6574\u6570\u90fd\u76f8\u7b49\u7684\u60c5\u51b5\u7684\u6d4b\u8bd5\u7528\u4f8b\u5c06\u4e0d\u4f1a\u6ce8\u610f\u5230\u7a81\u53d8\u3002</p> <ol> <li><code>vie</code>\u00a0- Variable initialization elimination: <code>vie</code>\u00a0- \u53d8\u91cf\u521d\u59cb\u5316\u6d88\u9664\uff1a</li> </ol> <pre><code>public int max(int a, int b, int c) {\n    int temp;\n    if (b &gt; a) { temp = b; }\n    if (c &gt; b) { temp = c; }\n    return temp;\n}\n</code></pre> <p>Copy Code</p> <p>This mutant removes the initialization of\u00a0<code>temp</code>\u00a0to\u00a0<code>a</code>. The test case(s) that cover the case where\u00a0<code>a</code>\u00a0is the largest number will fail to notice the mutation. \u8fd9\u4e2a\u7a81\u53d8\u4f53\u79fb\u9664\u4e86\u00a0<code>temp</code>\u00a0\u5230\u00a0<code>a</code>\u00a0\u7684\u521d\u59cb\u5316\u3002\u6db5\u76d6\u00a0<code>a</code>\u00a0\u662f\u6700\u5927\u6570\u5b57\u7684\u60c5\u51b5\u7684\u6d4b\u8bd5\u7528\u4f8b\u5c06\u65e0\u6cd5\u6ce8\u610f\u5230\u7a81\u53d8\u3002</p> <ol> <li><code>sdl</code>\u00a0- Statement deletion: <code>sdl</code>\u00a0- \u8bed\u53e5\u5220\u9664\uff1a</li> </ol> <pre><code>public int max(int a, int b, int c) {\n    int temp = a;\n    if (c &gt; b) { temp = c; }\n    return temp;\n}\n</code></pre> <p>Copy Code</p> <p>This mutant removes the\u00a0<code>if</code>\u00a0statement that compares\u00a0<code>b</code>\u00a0and\u00a0<code>a</code>. The test case(s) that cover the case where\u00a0<code>b</code>\u00a0is the largest number will fail to notice the mutation. \u8fd9\u4e2a\u7a81\u53d8\u4f53\u5220\u9664\u4e86\u6bd4\u8f83\u00a0<code>b</code>\u00a0\u548c\u00a0<code>a</code>\u00a0\u7684\u00a0<code>if</code>\u00a0\u8bed\u53e5\u3002\u6db5\u76d6\u00a0<code>b</code>\u00a0\u662f\u6700\u5927\u6570\u5b57\u7684\u60c5\u51b5\u7684\u6d4b\u8bd5\u7528\u4f8b\u5c06\u65e0\u6cd5\u6ce8\u610f\u5230\u7a81\u53d8\u3002</p> <p>To determine the kill rate of the test suite on each mutant, we need to run the test suite on each mutant and observe how many mutants are killed (i.e. detected and rejected by the test suite) and how many survive (i.e. not detected and accepted as equivalent by the test suite). \u4e3a\u4e86\u786e\u5b9a\u6d4b\u8bd5\u5957\u4ef6\u5bf9\u6bcf\u4e2a\u7a81\u53d8\u4f53\u7684\u6740\u4f24\u7387\uff0c\u6211\u4eec\u9700\u8981\u5728\u6bcf\u4e2a\u7a81\u53d8\u4f53\u4e0a\u8fd0\u884c\u6d4b\u8bd5\u5957\u4ef6\u5e76\u89c2\u5bdf\u6709\u591a\u5c11\u7a81\u53d8\u4f53\u88ab\u6740\u6b7b\uff08\u5373\u68c0\u6d4b\u5230\u5e76\u88ab\u6d4b\u8bd5\u5957\u4ef6\u62d2\u7edd\uff09\u548c\u591a\u5c11\u5b58\u6d3b\uff08\u5373\u672a\u68c0\u6d4b\u5230\u5e76\u63a5\u53d7\uff09\u4e0e\u6d4b\u8bd5\u5957\u4ef6\u7b49\u6548\uff09\u3002</p> <p>Assuming that the test suite has enough test cases to cover all possible scenarios, here are the expected kill rates: \u5047\u8bbe\u6d4b\u8bd5\u5957\u4ef6\u6709\u8db3\u591f\u7684\u6d4b\u8bd5\u7528\u4f8b\u6765\u8986\u76d6\u6240\u6709\u53ef\u80fd\u7684\u573a\u666f\uff0c\u8fd9\u91cc\u662f\u9884\u671f\u7684\u6740\u4f24\u7387\uff1a</p> <ol> <li> <p><code>ror</code>\u00a0- Relational operator replacement: The kill rate of this mutant should be lower than 100%, because some test case(s) will fail to detect the mutation when all three integers are equal. The expected kill rate depends on the distribution of integers in the test cases. If the test cases cover cases where all three integers are different, the expected kill rate should be close to 100%. If the test cases cover cases where two or three integers are equal, the expected kill rate will be lower. <code>ror</code>\u00a0- \u5173\u7cfb\u8fd0\u7b97\u7b26\u66ff\u6362\uff1a\u8fd9\u4e2a\u7a81\u53d8\u4f53\u7684\u6740\u6b7b\u7387\u5e94\u8be5\u4f4e\u4e8e 100%\uff0c\u56e0\u4e3a\u5f53\u6240\u6709\u4e09\u4e2a\u6574\u6570\u90fd\u76f8\u7b49\u65f6\uff0c\u4e00\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u5c06\u65e0\u6cd5\u68c0\u6d4b\u5230\u7a81\u53d8\u3002\u9884\u671f\u7684\u6740\u4f24\u7387\u53d6\u51b3\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u6574\u6570\u7684\u5206\u5e03\u3002\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u6db5\u76d6\u4e86\u6240\u6709\u4e09\u4e2a\u6574\u6570\u90fd\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u5219\u9884\u671f\u7684\u6740\u6b7b\u7387\u5e94\u8be5\u63a5\u8fd1 100%\u3002\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u6db5\u76d6\u4e24\u4e2a\u6216\u4e09\u4e2a\u6574\u6570\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u5219\u9884\u671f\u7684\u6740\u6b7b\u7387\u4f1a\u66f4\u4f4e\u3002</p> </li> <li> <p><code>vie</code>\u00a0- Variable initialization elimination: The kill rate of this mutant should be 100% if the test suite has enough test cases to cover all possible scenarios. The mutation is relatively simple and affects only one variable. A well-designed test suite should be able to detect this mutation. <code>vie</code>\u00a0- \u53d8\u91cf\u521d\u59cb\u5316\u6d88\u9664\uff1a\u5982\u679c\u6d4b\u8bd5\u5957\u4ef6\u6709\u8db3\u591f\u7684\u6d4b\u8bd5\u7528\u4f8b\u6765\u8986\u76d6\u6240\u6709\u53ef\u80fd\u7684\u573a\u666f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7a81\u53d8\u4f53\u7684\u6740\u706d\u7387\u5e94\u8be5\u662f100%\u3002\u7a81\u53d8\u76f8\u5bf9\u7b80\u5355\uff0c\u53ea\u5f71\u54cd\u4e00\u4e2a\u53d8\u91cf\u3002\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684\u6d4b\u8bd5\u5957\u4ef6\u5e94\u8be5\u80fd\u591f\u68c0\u6d4b\u5230\u8fd9\u79cd\u7a81\u53d8\u3002</p> </li> <li> <p><code>sdl</code>\u00a0- Statement deletion: The kill rate of this mutant should be lower than 100%, because some test case(s) will fail to detect the mutation when all three integers are equal or when\u00a0<code>b</code>\u00a0is the largest number. The expected kill rate depends on the distribution of integers in the test cases. If the test cases cover cases where\u00a0<code>a</code>\u00a0is the largest number or where\u00a0<code>c</code>\u00a0is larger than\u00a0<code>b</code>\u00a0and\u00a0<code>a</code>, the expected kill rate should be close to 100%. If the test cases cover cases where\u00a0<code>b</code>\u00a0is the largest number, the expected kill rate will be lower. <code>sdl</code>\u00a0- \u8bed\u53e5\u5220\u9664\uff1a\u8fd9\u4e2a\u7a81\u53d8\u4f53\u7684\u6740\u6b7b\u7387\u5e94\u8be5\u4f4e\u4e8e100%\uff0c\u56e0\u4e3a\u5f53\u6240\u6709\u4e09\u4e2a\u6574\u6570\u90fd\u76f8\u7b49\u6216\u8005\u00a0<code>b</code>\u00a0\u662f\u6700\u5927\u6570\u65f6\uff0c\u4e00\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u5c06\u65e0\u6cd5\u68c0\u6d4b\u5230\u7a81\u53d8\u3002\u9884\u671f\u7684\u6740\u4f24\u7387\u53d6\u51b3\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u6574\u6570\u7684\u5206\u5e03\u3002\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u6db5\u76d6\u00a0<code>a</code>\u00a0\u662f\u6700\u5927\u6570\u5b57\u6216\u00a0<code>c</code>\u00a0\u5927\u4e8e\u00a0<code>b</code>\u00a0\u548c\u00a0<code>a</code>\u00a0\u7684\u60c5\u51b5\uff0c\u5219\u9884\u671f\u7684\u6740\u706d\u7387\u5e94\u63a5\u8fd1 100%\u3002\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u6db5\u76d6\u00a0<code>b</code>\u00a0\u6570\u91cf\u6700\u591a\u7684\u7528\u4f8b\uff0c\u5219\u9884\u671f\u7684\u6740\u706d\u7387\u4f1a\u66f4\u4f4e\u3002</p> </li> </ol>"},{"location":"course_notes/fit5171/#quiz11","title":"Quiz11","text":""},{"location":"course_notes/fit5171_note/","title":"Fit5171 note","text":""},{"location":"course_notes/fit5171_note/#exam-review","title":"Exam review","text":"<p>Prepare for following weeks thoroughly: 4, 5, 6, 8, 9, 10, 11 + Test strategy, test plan, TDD + Blackbox Testing (aka functional testing) + Boundary Value Testing (BVT) + normal/robust, weak/normal + Equivalent Class Testing (ECT) + Decision Table Testing (DTT) + White-box Testing (aka structural testing) + Program graph + DD-path graph + MM-Path graph + Basis Path testing + Cyclomatic complexity  </p>"},{"location":"course_notes/fit5171_note/#week-1","title":"week 1","text":""},{"location":"course_notes/fit5171_note/#tdd","title":"TDD","text":"<p>TDD stands for Test Driven Development, which is a software development process that follows a specific cycle. Here are the steps in the TDD cycle: \u5f53\u7136\uff01TDD \u4ee3\u8868 \u6d4b\u8bd5 \u9a71\u52a8 \u5f00\u53d1\uff0c \u662f \u4e00\u4e2a \u9075\u5faa \u7279\u5b9a \u5468\u671f \u7684 \u8f6f\u4ef6 \u5f00\u53d1 \u8fc7\u7a0b\u3002\u4ee5\u4e0b\u662fTDD\u5468\u671f\u4e2d\u7684\u6b65\u9aa4\uff1a 1. Add a test: The first step in TDD is to write a test. The test should be a small, focused piece of code that verifies a specific behavior or feature of the application.\u6dfb\u52a0\u6d4b\u8bd5\uff1aTDD \u7684\u7b2c\u4e00\u6b65\u662f\u7f16\u5199\u6d4b\u8bd5\u3002\u6d4b\u8bd5\u5e94\u8be5\u662f\u4e00\u5c0f\u6bb5\u91cd\u70b9\u4ee3\u7801\uff0c\u7528\u4e8e\u9a8c\u8bc1\u5e94\u7528\u7a0b\u5e8f\u7684\u7279\u5b9a\u884c\u4e3a\u6216\u529f\u80fd\u3002 2. Run the test: Once you have written the test, you should run it to verify that it fails. If it passes, then either the test or the code under test is incorrect.\u8fd0\u884c\u6d4b\u8bd5\uff1a\u7f16\u5199\u6d4b\u8bd5\u540e\uff0c\u5e94\u8fd0\u884c\u5b83\u4ee5\u9a8c\u8bc1\u5b83\u662f\u5426\u5931\u8d25\u3002\u5982\u679c\u901a\u8fc7\uff0c\u5219\u6d4b\u8bd5\u6216\u88ab\u6d4b\u4ee3\u7801\u4e0d\u6b63\u786e\u3002 3. Write the code: After the test fails, you need to write the minimum amount of code required to make the test pass. \u7f16\u5199\u4ee3\u7801\uff1a\u6d4b\u8bd5\u5931\u8d25\u540e\uff0c\u60a8\u9700\u8981\u7f16\u5199\u4f7f\u6d4b\u8bd5\u901a\u8fc7\u6240\u9700\u7684\u6700\u5c11\u4ee3\u7801\u91cf\u3002 4. Run all tests: Once you have written the code, you need to run the test suite again to make sure that everything continues to work correctly.\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\uff1a\u7f16\u5199\u4ee3\u7801\u540e\uff0c\u9700\u8981\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u5957\u4ef6\u4ee5\u786e\u4fdd\u4e00\u5207\u7ee7\u7eed\u6b63\u5e38\u5de5\u4f5c\u3002 5. Refactor the code: Once the test suite is passing, you can then begin to refactor the code to make it more efficient, maintainable, and extensible.\u91cd\u6784\u4ee3\u7801\uff1a\u6d4b\u8bd5\u5957\u4ef6\u901a\u8fc7\u540e\uff0c\u53ef\u4ee5\u5f00\u59cb\u91cd\u6784\u4ee3\u7801\uff0c\u4f7f\u5176\u66f4\u9ad8\u6548\u3001\u66f4\u6613\u4e8e\u7ef4\u62a4\u548c\u53ef\u6269\u5c55\u3002  6. Repeat: You should then repeat this cycle, adding new tests and features, and refactoring the code as needed until the software is complete.\u91cd\u590d\uff1a\u7136\u540e\uff0c\u5e94\u91cd\u590d\u6b64\u5faa\u73af\uff0c\u6dfb\u52a0\u65b0\u7684\u6d4b\u8bd5\u548c\u529f\u80fd\uff0c\u5e76\u6839\u636e\u9700\u8981\u91cd\u6784\u4ee3\u7801\uff0c\u76f4\u5230\u8f6f\u4ef6\u5b8c\u6210</p>"},{"location":"course_notes/fit5171_note/#comparison-of-different-level-of-testing","title":"Comparison of different level of testing","text":""},{"location":"course_notes/fit5171_note/#tdd-pros-cons","title":"TDD: pros &amp; cons","text":"Advantage\u00a0\u4f18\u52bf Disadvantage More tests, less debugging  \u66f4\u591a\u6d4b\u8bd5\uff0c\u66f4\u5c11\u8c03\u8bd5 Difficult in certain scenarios (UI, database, network)  \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff08UI\u3001\u6570\u636e\u5e93\u3001\u7f51\u7edc\uff09\u5f88\u96be More productive\u00a0\u66f4\u9ad8\u6548 Needs management support\u00a0\u9700\u6c42\u7ba1\u7406\u652f\u6301 Validates not only code, but also design  \u4e0d\u4ec5\u9a8c\u8bc1\u4ee3\u7801\uff0c\u8fd8\u9a8c\u8bc1\u8bbe\u8ba1 Developer blind spots\u00a0\u5f00\u53d1\u4eba\u5458\u76f2\u70b9 Better test coverage, greater confidence  \u66f4\u597d\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u66f4\u5927\u7684\u4fe1\u5fc3 False sense of security\u00a0\u865a\u5047\u7684\u5b89\u5168\u611f Better code structure\u00a0\u66f4\u597d\u7684\u4ee3\u7801\u7ed3\u6784 Maintenance overhead for (bad) tests  \uff08\u4e0d\u826f\uff09\u6d4b\u8bd5\u7684\u7ef4\u62a4\u5f00\u9500"},{"location":"course_notes/fit5171_note/#unit-test","title":"unit test","text":"<p>A unit test is a type of automated test that is designed to validate the behavior of a single unit of code, typically a method or function. The goal of unit testing is to verify that the code under test works as expected and adheres to its specified requirements. \u5355\u5143\u6d4b\u8bd5\u662f\u4e00\u79cd\u81ea\u52a8\u6d4b\u8bd5\uff0c\u65e8\u5728\u9a8c\u8bc1\u5355\u4e2a\u4ee3\u7801\u5355\u5143\uff08\u901a\u5e38\u662f\u65b9\u6cd5\u6216\u51fd\u6570\uff09\u7684\u884c\u4e3a\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u76ee\u6807\u662f\u9a8c\u8bc1\u5f85\u6d4b\u8bd5\u7684\u4ee3\u7801\u662f\u5426\u6309\u9884\u671f\u5de5\u4f5c\u5e76\u9075\u5b88\u5176\u6307\u5b9a\u7684\u8981\u6c42\u3002 Unit tests are typically written using a testing framework, which provides a set of tools and methods for defining test cases and verifying their results. In Java, popular testing frameworks include JUnit and TestNG. \u5355\u5143\u6d4b\u8bd5\u901a\u5e38\u4f7f\u7528\u6d4b\u8bd5\u6846\u67b6\u7f16\u5199\uff0c\u8be5\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u7ec4\u7528\u4e8e\u5b9a\u4e49\u6d4b\u8bd5\u7528\u4f8b\u548c\u9a8c\u8bc1\u5176\u7ed3\u679c\u7684\u5de5\u5177\u548c\u65b9\u6cd5\u3002\u5728Java\u4e2d\uff0c\u6d41\u884c\u7684\u6d4b\u8bd5\u6846\u67b6\u5305\u62ecJUnit\u548cTestNG\u3002 Unit tests should ideally be written using a suite of repeatable and isolated tests that verify different inputs, edge cases, and outputs. Because unit tests are automated, they are also faster and more reliable than manual testing. They can be executed either as part of a continuous integration pipeline or on-demand during development. \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5355\u5143\u6d4b\u8bd5\u5e94\u4f7f\u7528\u4e00\u5957\u53ef\u91cd\u590d\u548c\u9694\u79bb\u7684\u6d4b\u8bd5\u6765\u7f16\u5199\uff0c\u8fd9\u4e9b\u6d4b\u8bd5\u9a8c\u8bc1\u4e0d\u540c\u7684\u8f93\u5165\u3001\u8fb9\u7f18\u60c5\u51b5\u548c\u8f93\u51fa\u3002\u7531\u4e8e\u5355\u5143\u6d4b\u8bd5\u662f\u81ea\u52a8\u5316\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u4e5f\u6bd4\u624b\u52a8\u6d4b\u8bd5\u66f4\u5feb\u3001\u66f4\u53ef\u9760\u3002\u5b83\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u6301\u7eed\u96c6\u6210\u7ba1\u9053\u7684\u4e00\u90e8\u5206\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u5728\u5f00\u53d1\u671f\u95f4\u6309\u9700\u6267\u884c\u3002</p>"},{"location":"course_notes/fit5171_note/#benefits-of-unit-testing","title":"Benefits of unit testing","text":"<ul> <li>Identify defects early (at development time) Otherwise small defects will lead to larger problems  </li> <li>Allows easy defect isolation  </li> <li>Improves confidence of code  </li> <li>Encourage code review</li> </ul>"},{"location":"course_notes/fit5171_note/#week-2","title":"week 2","text":""},{"location":"course_notes/fit5171_note/#junit-basics","title":"JUnit Basics","text":"<p>JUnit tests are also called test methods in a test class Naming convention of test classes: name of class under test + Test E.g., ShoppingCartTest.java for ShoppingCart.java Test names should be meaningful and reflect purpose E.g., shouldReturnTrueWhenUsersHaveSameEmail()</p>"},{"location":"course_notes/fit5171_note/#test-annotations","title":"Test Annotations","text":"<ul> <li> <p><code>@BeforeEach</code>: This annotation is used to mark a method that should be run before each individual test case. This is typically used to set up any necessary test fixtures or dependencies before running the test. <code>@BeforeEach</code>\u00a0\uff1a\u6b64\u6ce8\u91ca\u7528\u4e8e\u6807\u8bb0\u5e94\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\u8fd0\u884c\u7684\u65b9\u6cd5\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u5728\u8fd0\u884c\u6d4b\u8bd5\u4e4b\u524d\u8bbe\u7f6e\u4efb\u4f55\u5fc5\u8981\u7684\u6d4b\u8bd5\u5939\u5177\u6216\u4f9d\u8d56\u9879\u3002</p> </li> <li> <p><code>@AfterEach</code>: This annotation is used to mark a method that should be run after each individual test case. This is typically used to clean up any resources that were created during setup, or to reset the state of the system under test. <code>@AfterEach</code>\u00a0\uff1a\u6b64\u6ce8\u91ca\u7528\u4e8e\u6807\u8bb0\u5e94\u5728\u6bcf\u4e2a\u5355\u72ec\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u540e\u8fd0\u884c\u7684\u65b9\u6cd5\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u6e05\u7406\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u521b\u5efa\u7684\u4efb\u4f55\u8d44\u6e90\uff0c\u6216\u91cd\u7f6e\u53d7\u6d4b\u7cfb\u7edf\u7684\u72b6\u6001\u3002</p> </li> <li> <p><code>@BeforeAll</code>: This annotation is used to mark a method that should be run once, before any test cases are executed. This is typically used to set up any resources or dependencies that will be used across all tests. <code>@BeforeAll</code>\u00a0\uff1a\u6b64\u6ce8\u91ca\u7528\u4e8e\u6807\u8bb0\u5728\u6267\u884c\u4efb\u4f55\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\u5e94\u8fd0\u884c\u4e00\u6b21\u7684\u65b9\u6cd5\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u8bbe\u7f6e\u5c06\u5728\u6240\u6709\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684\u4efb\u4f55\u8d44\u6e90\u6216\u4f9d\u8d56\u9879\u3002</p> </li> <li> <p><code>@AfterAll</code>: This annotation is used to mark a method that should be run once, after all test cases have been executed. This is typically used to clean up any resources or dependencies that were created in the\u00a0<code>@BeforeAll</code>\u00a0method. <code>@AfterAll</code>\u00a0\uff1a\u6b64\u6ce8\u91ca\u7528\u4e8e\u6807\u8bb0\u5728\u6267\u884c\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u540e\u5e94\u8fd0\u884c\u4e00\u6b21\u7684\u65b9\u6cd5\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u6e05\u7406\u5728\u00a0<code>@BeforeAll</code>\u00a0\u65b9\u6cd5\u4e2d\u521b\u5efa\u7684\u4efb\u4f55\u8d44\u6e90\u6216\u4f9d\u8d56\u9879\u3002</p> </li> </ul>"},{"location":"course_notes/fit5171_note/#test-assertions","title":"Test Assertions","text":"<p>Assertions allow us to compare expected vs actual behaviours (output values, exceptions, etc.) \u65ad\u8a00\u5141\u8bb8\u6211\u4eec\u6bd4\u8f83\u9884\u671f\u884c\u4e3a\u4e0e\u5b9e\u9645\u884c\u4e3a\uff08\u8f93\u51fa\u503c\u3001\u5f02\u5e38\u7b49\uff09 assertTrue() assertFalse()  assertEquals() assertNotEquals()  assertNull() assertNotNull()  assertSame() assertNotSame()  assertArrayEquals() assertThrows()  </p>"},{"location":"course_notes/fit5171_note/#the-difference-between-a-test-plan-and-a-test-strategy","title":"The difference between a test plan and a test strategy","text":"<p>The difference between a test plan and a test strategy - Inspired Testing </p> Test Plan\u00a0\u6d4b\u8bd5\u8ba1\u5212 Test Strategy\u00a0\u6d4b\u8bd5\u7b56\u7565 A test plan for software project can be defined as a document that defines the scope, objective, approach and emphasis on a software testing effort  \u8f6f\u4ef6\u9879\u76ee\u7684\u6d4b\u8bd5\u8ba1\u5212\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u5b9a\u4e49\u8f6f\u4ef6\u6d4b\u8bd5\u5de5\u4f5c\u7684\u8303\u56f4\u3001\u76ee\u6807\u3001\u65b9\u6cd5\u548c\u91cd\u70b9\u7684\u6587\u6863 Test strategy is a set of guidelines that explains test design and determines how testing needs to be done  \u6d4b\u8bd5\u7b56\u7565\u662f\u4e00\u7ec4\u6307\u5357\uff0c\u7528\u4e8e\u89e3\u91ca\u6d4b\u8bd5\u8bbe\u8ba1\u5e76\u786e\u5b9a\u9700\u8981\u5982\u4f55\u8fdb\u884c\u6d4b\u8bd5 Components of Test plan include- Test plan id, features to be tested, test techniques, testing tasks, features pass or fail criteria, test deliverables, responsibilities, and schedule, etc.  \u6d4b\u8bd5\u8ba1\u5212\u7684\u7ec4\u4ef6\u5305\u62ec - \u6d4b\u8bd5\u8ba1\u5212 ID\u3001\u8981\u6d4b\u8bd5\u7684\u529f\u80fd\u3001\u6d4b\u8bd5\u6280\u672f\u3001\u6d4b\u8bd5\u4efb\u52a1\u3001\u529f\u80fd\u901a\u8fc7\u6216\u5931\u8d25\u6807\u51c6\u3001\u6d4b\u8bd5\u53ef\u4ea4\u4ed8\u6210\u679c\u3001\u804c\u8d23\u548c\u65f6\u95f4\u8868\u7b49\u3002 Components of Test strategy includes- objectives and scope, documentation formats, test processes, team reporting structure, client communication strategy, etc.  \u6d4b\u8bd5\u7b56\u7565\u7684\u7ec4\u6210\u90e8\u5206\u5305\u62ec\u76ee\u6807\u548c\u8303\u56f4\u3001\u6587\u6863\u683c\u5f0f\u3001\u6d4b\u8bd5\u6d41\u7a0b\u3001\u56e2\u961f\u62a5\u544a\u7ed3\u6784\u3001\u5ba2\u6237\u6c9f\u901a\u7b56\u7565\u7b49\u3002 Test plan is carried out by a testing manager or lead that describes how to test, when to test, who will test and what to test  \u6d4b\u8bd5\u8ba1\u5212\u7531\u6d4b\u8bd5\u7ecf\u7406\u6216\u4e3b\u7ba1\u6267\u884c\uff0c\u63cf\u8ff0\u5982\u4f55\u6d4b\u8bd5\u3001\u4f55\u65f6\u6d4b\u8bd5\u3001\u8c01\u5c06\u6d4b\u8bd5\u4ee5\u53ca\u6d4b\u8bd5\u4ec0\u4e48 A test strategy is carried out by the project manager. It says what type of technique to follow and which module to test  \u6d4b\u8bd5\u7b56\u7565\u7531\u9879\u76ee\u7ecf\u7406\u6267\u884c\u3002\u5b83\u8bf4\u660e\u4e86\u8981\u9075\u5faa\u54ea\u79cd\u7c7b\u578b\u7684\u6280\u672f\u4ee5\u53ca\u8981\u6d4b\u8bd5\u7684\u6a21\u5757 Test plan narrates about the specification  \u6d4b\u8bd5\u8ba1\u5212\u53d9\u8ff0\u6709\u5173\u89c4\u8303 Test strategy narrates about the general approaches  \u6d4b\u8bd5\u7b56\u7565\u53d9\u8ff0\u4e86\u4e00\u822c\u65b9\u6cd5 Test plan can change\u00a0\u6d4b\u8bd5\u8ba1\u5212\u53ef\u4ee5\u66f4\u6539 Test strategy cannot be changed  \u65e0\u6cd5\u66f4\u6539\u6d4b\u8bd5\u7b56\u7565 Test planning is done to determine possible issues and dependencies in order to identify the risks.  \u6267\u884c\u6d4b\u8bd5\u8ba1\u5212\u4ee5\u786e\u5b9a\u53ef\u80fd\u7684\u95ee\u9898\u548c\u4f9d\u8d56\u9879\uff0c\u4ee5\u4fbf\u8bc6\u522b\u98ce\u9669\u3002 It is a long-term plan of action.You can abstract information that is not project specific and put it into test approach  \u8fd9\u662f\u4e00\u9879\u957f\u671f\u884c\u52a8\u8ba1\u5212\u3002\u60a8\u53ef\u4ee5\u62bd\u8c61\u51fa\u975e\u9879\u76ee\u7279\u5b9a\u7684\u4fe1\u606f\u5e76\u5c06\u5176\u653e\u5165\u6d4b\u8bd5\u65b9\u6cd5 A test plan exists individually  \u5355\u72ec\u5b58\u5728\u6d4b\u8bd5\u8ba1\u5212 In smaller projects, the test strategy is often found as a section of a test plan  \u5728\u8f83\u5c0f\u7684\u9879\u76ee\u4e2d\uff0c\u6d4b\u8bd5\u7b56\u7565\u901a\u5e38\u4f5c\u4e3a\u6d4b\u8bd5\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u3002 It is defined at project level  \u5b83\u662f\u5728\u9879\u76ee\u7ea7\u522b\u5b9a\u4e49\u7684 It is set at organization level and can be used by multiple projects  \u5b83\u662f\u5728\u7ec4\u7ec7\u7ea7\u522b\u8bbe\u7f6e\u7684\uff0c\u53ef\u4ee5\u7531\u591a\u4e2a\u9879\u76ee\u4f7f\u7528"},{"location":"course_notes/fit5171_note/#week-3-discrete-maths","title":"week 3 Discrete maths","text":""},{"location":"course_notes/fit5171_note/#label","title":"label","text":"<ul> <li>And(\u2227) \u4e0e\uff1b\u4e14  </li> <li>Or(\u2228) \u6216  </li> <li>Implies(\u21d2) \u5b9e\u8d28\u8574\u542b  </li> <li>Equiv(\u21d4)\u5b9e\u8d28\u7b49\u4ef7  </li> <li>\u22a2 \u63a8\u5bfc\u51fa  </li> </ul>"},{"location":"course_notes/fit5171_note/#predicate-logics","title":"Predicate Logics \u8c13\u8bcd\u903b\u8f91","text":"<ul> <li>Universal (\u2200) \u4efb\u610f  </li> <li>existential (\u2203) \u5b58\u5728  </li> <li>Set\uff08P\uff09\u96c6\u5408  </li> <li>\u2203x (P(x) \u22c0 Q(x)) \u5728P\uff0cQ\u4e24\u4e2a\u96c6\u5408\u4e2d\u90fd\u5b58\u5728x</li> </ul>"},{"location":"course_notes/fit5171_note/#set","title":"set","text":"<ul> <li>\u65e0\u987a\u5e8f\uff0c\u4e0d\u91cd\u590d == Java\u91cd\u7684set\u6982\u5ff5  </li> <li>{1,2,3,4}  {x : N | x \u2264 64}  </li> <li>N\uff1a\u975e\u8d1f\u6574\u6570\u96c6\u5408\u6216\u81ea\u7136\u6570\u96c6\u5408{0,1,2,3,...}  </li> <li>Z\uff1a\u6574\u6570\u96c6\u5408{...,-1,0,1,...}  </li> <li>Q\uff1a\u6709\u7406\u6570\u96c6\u5408  </li> <li>R\uff1a\u5b9e\u6570\u96c6\u5408(\u5305\u62ec\u6709\u7406\u6570\u548c\u65e0\u7406\u6570\uff09  </li> <li>\u2205 \uff1a\u7a7a\u96c6\uff08\u4e0d\u542b\u6709\u4efb\u4f55\u5143\u7d20\u7684\u96c6\u5408\uff09  </li> <li>N*\u6216N+\uff1a\u6b63\u6574\u6570\u96c6\u5408{1,2,3,...}</li> <li>Membership: \u5c5e\u4e8e  </li> <li>Set inclusion:  Subset: \u5b50\u96c6  Proper subset:\u771f\u5b50\u96c6  </li> <li>Set cardinality:  <code>#A</code> = 3 \u96c6\u5408\u5143\u7d20\u4e2a\u6570 \uff5cA\uff5c</li> <li> </li> </ul>"},{"location":"course_notes/fit5171_note/#power-set-p","title":"Power set P","text":"<p>A power set is set of all subsets, empty set and the original set itself \u5e42\u96c6\u662f\u6240\u6709\u5b50\u96c6\u3001\u7a7a\u96c6\u548c\u539f\u59cb\u96c6\u672c\u8eab\u7684\u96c6\u5408  + $\u2200X \u2022 X$   is a set, $Px = {A|A \u2286 X}$ + for every X, Px (which is defined as the set of all subsets of X) is a set.\u5bf9\u4e8e\u6bcf\u4e2a X\uff0cPx\uff08\u5b9a\u4e49\u4e3a X \u7684\u6240\u6709\u5b50\u96c6\u7684\u96c6\u5408\uff09\u662f\u4e00\u4e2a\u96c6\u5408\u3002 + power set of A = {1, 2} is P(A) = {{}, {1}, {2}, {1, 2}}</p>"},{"location":"course_notes/fit5171_note/#set-operations","title":"Set operations \u96c6\u5408\u8fd0\u7b97","text":"<ul> <li>Union\u5e76\u96c6 : $A \ud835\udd4c B$  The set containing all the elements of  which all other sets are subs</li> <li>Intersection\u4ea4\u96c6 : $A\u2229B$  Items common in A,B</li> <li>Difference : \u5dee\u96c6 A - B; A = {1, 2, 3, 4, 5, 6} and B = {3, 4, 5, 6, 7, 8},A \u2013 B = {1, 2},B \u2013 A = {7, 8},</li> <li>Cartesian product\u7b1b\u5361\u5c14\u79ef : <code>{a, b} \u21e5 {0, 1} = {(a, 0), (a, 1), (b, 0), (b, 1)}</code></li> </ul>"},{"location":"course_notes/fit5171_note/#relations","title":"Relations ( \u21d4) \u4e24\u4e2a\u96c6\u5408\u95f4\u7684\u903b\u8f91\u8054\u7cfb","text":"<p>Relations (R) are defined over sets  A relation is a collection of ordered pairs, which  contains an object from one set to the other set \u5173\u7cfb (R) \u662f\u5728\u96c6\u5408\u4e0a\u5b9a\u4e49\u7684 \u5173\u7cfb\u662f\u6709\u5e8f\u5bf9\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u5305\u542b\u4ece\u4e00\u4e2a\u96c6\u5408\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u5bf9\u8c61 Can be one-to-one, one-to-many  or many-to-one, many-to-many The Cartesian product deals with ordered pairs, so  the order in which the sets are considered is \u7b1b\u5361\u5c14\u79ef\u5904\u7406\u6709\u5e8f\u5bf9\uff0c\u56e0\u6b64\u8003\u8651\u96c6\u5408\u7684\u987a\u5e8f\u662f  <code>friends : Person \u21d4 Person</code> $X \u0445 Y = {(x, y)} | x \u2208 X and y \u2208 Y} Where X \u0445 Y \u2260 Y \u0445 X$ Using n(A) for the number of elements in a set A, we have $n(X \u0445 Y) = n(X) \u0445 n(Y)$ </p>"},{"location":"course_notes/fit5171_note/#functions","title":"functions (\u2192 )","text":"<p>\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5173\u7cfb\u7c7b\u578b\u3002\u8fd9\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u5173\u7cfb\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5143\u7d20\u5982\u4f55\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u6216\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u53e6\u4e00\u4e2a\u5143\u7d20 It is a relation that defines the set of  inputs to the set of outputs.  Note that all functions are relations, but  not all relations are functions \u5b83\u662f\u5b9a\u4e49\u8f93\u5165\u96c6\u5230\u8f93\u51fa\u96c6\u7684\u5173\u7cfb\u3002\u8bf7\u6ce8\u610f\uff0c\u6240\u6709\u51fd\u6570\u90fd\u662f\u5173\u7cfb\uff0c\u4f46\u5e76\u975e\u6240\u6709\u5173\u7cfb\u90fd\u662f\u51fd\u6570 <code>\u2192</code>  implies/ when used in functions, it  symbolises mapping A\u2192B, if A is true then B is also true.  If A is false then nothing said about  B <code>age : Person N</code> <code>birthday : Person \u2192 Date</code> </p>"},{"location":"course_notes/fit5171_note/#undirected-graphs","title":"Undirected graphs \u65e0\u5411\u56fe","text":"<p> $G = (V, E)$  \u5b9a\u4e49\u79f0\u4e8c\u5143\u7ec4G=(V,E)\u662f\u4e00\u4e2a\u65e0\u5411\u56fe(undirected graph) + V: a non-empty set of nodes {n1, n2 , n3, ..., nm }   V\u662f\u4e00\u4e2a\u975e\u7a7a\u6709\u9650\u96c6\u5408  + E: a set of edges {e1, e2, ..., ep}, where each ek = (ni, nj)  E\u662fV\u4e2d\u5143\u7d20\u7684\u65e0\u5e8f\u5bf9\u6240\u7ec4\u6210\u7684\u96c6\u5408 + \u628aV\u7684\u5143\u7d20\u53eb\u505a\u56fe\u7684\u9876\u70b9 (vertex)\uff0cE\u7684\u5143\u7d20\u53eb\u505a\u56fe\u7684\u8fb9 (edge)\u3002V(G)\u8868\u793a\u56feG\u7684\u9876\u70b9\u96c6\uff0cE(G)\u8868\u793a\u56feG\u7684\u8fb9\u96c6\u3002\u82e5 |V(G)|=n\uff0c\u5219\u79f0G\u4e3an\u9636\u56fe  </p>"},{"location":"course_notes/fit5171_note/#representation-degree","title":"Representation &amp; Degree","text":"<p><code>V = {n 1 , n 2 , n 3 , n 4 , n 5 , n 6 , n 7}</code> <code>E = {e1 , e2 , e3 , e4 , e 5 , } = {(n 1 , n 2 ), (n 1 , n 4 ), (n 2 , n 5 ), (n 3 , n 4 ), (n 4 , n 6 )}</code> Degree of node : No. of edges that have that node as  an endpoint <code>degree(n 1 ) = 2, degree(n 4 ) = 3,  degree(n 7 ) = 0</code> + Degree \u5ea6\uff0c \u8282\u70b9\u8fb9\u7684\u6570\u91cf \uff08\u73af\u7b97\u4f5c\u4e24\u6761\u8fb9\uff09 + Path\u8def\u5f84\uff0c\u591a\u6761\u76f8\u8fde\u7684\u8fb9\u7684\u7ec4\u5408 Nodes ni and nj are connected if they  are in a path.  A component is a maximal set of  connected node \u5982\u679c\u8282\u70b9 ni \u548c nj \u5728\u4e00\u6761\u8def\u5f84\u4e2d\uff0c\u5219\u5b83\u4eec\u662f\u8fde\u901a\u7684 \u5206\u91cf\u662f\u8fde\u901a\u8282\u70b9\u7684\u6700\u5927\u96c6\u5408 <code>Path(n1,n5) = (n1, n2, n5) = &lt;e1,  e4&gt;</code> </p>"},{"location":"course_notes/fit5171_note/#directed-graphs","title":"Directed graphs \u6709\u5411\u56fe","text":"<p> + \u5934/\u539f\u70b9 Source\uff0c indgree = 0 + \u7ec8\u70b9 Sink\uff0c outdgree = 0 + \u5165\u5ea6 indgree \u6c47\u5165\u8282\u70b9\u7684\u8fb9\u7684\u6570\u91cf + \u51fa\u5ea6 outdgree \u4ece\u8282\u70b9\u5f15\u51fa\u7684\u8fb9\u7684\u6570\u91cf</p>"},{"location":"course_notes/fit5171_note/#semi-paths","title":"Semi -Paths","text":""},{"location":"course_notes/fit5171_note/#n-connectedness","title":"n-Connectedness","text":""},{"location":"course_notes/fit5171_note/#strongly-connected-components","title":"Strongly connected components \u5f3a\u8fde\u901a\u5206\u91cf","text":""},{"location":"course_notes/fit5171_note/#mccabes-cyclomatic-complexity","title":"McCabe\u2019s Cyclomatic complexity\u5708\u590d\u6742\u5ea6","text":"<p>Cyclomatic Complexity in Software Testing (Example) Cyclomatic Complexity - GeeksforGeeks \u5708\u590d\u6742\u5ea6\uff08Cyclomatic Complexity\uff09\u662f\u8861\u91cf\u8ba1\u7b97\u673a\u7a0b\u5e8f\u590d\u6742\u7a0b\u5ea6\u7684\u4e00\u79cd\u63aa\u65bd\u3002\u5b83\u6839\u636e\u7a0b\u5e8f\u4ece\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u7ebf\u6027\u72ec\u7acb\u8def\u5f84\u7684\u6570\u91cf\u8ba1\u7b97\u5f97\u6765\u7684.\u5708\u590d\u6742\u5ea6\u8d8a\u9ad8\uff0c\u4ee3\u7801\u5c31\u8d8a\u96be\u590d\u6742\u96be\u7ef4\u62a4\u3002\u5751\u5c31\u8d8a\u5927\u3002 \u8ba1\u7b97\u516c\u5f0f1\uff1aV(G)=E-N+2P\u3002\u5176\u4e2d\uff0cE\u8868\u793a\u63a7\u5236\u6d41\u56fe\u4e2d\u8fb9\u7684\u6570\u91cf\uff0cN\u8868\u793a\u63a7  \u5236\u6d41\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\uff0cP\u56fe\u7684\u8fde\u63a5\u7ec4\u4ef6\u6570\u76ee\uff08\u56fe\u7684\u7ec4\u4ef6\u6570\u662f\u76f8\u8fde\u8282\u70b9\u7684\u6700\u5927\u96c6\u5408\uff09 <code>(G) = #E - #V + p</code> \u2014 Strongly connected graph <code>V(G) = #E - #V + 2p</code> \u2014 Not strongly connected graph  The cyclomatic complexity calculated for above code will be from control flow graph. The graph shows seven shapes(nodes), seven lines(edges), hence cyclomatic complexity is 7-7+2 = 2.\u00a0  \u4e3a\u4e0a\u8ff0\u4ee3\u7801\u8ba1\u7b97\u7684\u5708\u590d\u6742\u5ea6\u5c06\u6765\u81ea\u63a7\u5236\u6d41\u56fe\u3002\u8be5\u56fe\u663e\u793a\u4e86\u4e03\u4e2a\u5f62\u72b6\uff08\u8282\u70b9\uff09\uff0c\u4e03\u4e2a\u7ebf\uff08\u8fb9\uff09\uff0c\u56e0\u6b64\u5708\u590d\u6742\u5ea6\u4e3a 7-7+2 = 2\u3002</p> <pre><code>If (Condition 1)\nStatement 1\n\nElse\nStatement 2\n\nIf (Condition 2)\nStatement 3\n\nElse\nStatement 4\n</code></pre> <ul> <li>Nodes (N): \u8282\u70b9 \uff08N\uff09\uff1aThere are 6 nodes in the control flow graph.\u63a7\u5236\u6d41\u56fe\u4e2d\u6709 6 \u4e2a\u8282\u70b9\u3002</li> <li>Edges (E): \u8fb9\u7f18 \uff08E\uff09\uff1aThere are 7 edges in the control flow graph.\u63a7\u5236\u6d41\u56fe\u4e2d\u6709 7 \u6761\u8fb9\u3002</li> <li>Connected components (P):\u8fde\u63a5\u7684\u7ec4\u4ef6 \uff08P\uff09There is 1 connected component in the control flow graph.\u63a7\u5236\u6d41\u56fe\u4e2d\u6709 1 \u4e2a\u8fde\u63a5\u7684\u7ec4\u4ef6\u3002</li> <li>M = E - N + 2P = 7 - 6 + 2(1) = 3</li> <li>Therefore, the cyclomatic complexity of this code is 3. This value represents the number of independent paths through the code, and can be used to estimate the number of test cases needed to achieve full code coverage. In this case, we determined that at least 4 test cases are needed to cover all possible branches, which is consistent with the cyclomatic complexity metric of 3.\u56e0\u6b64\uff0c\u6b64\u4ee3\u7801\u7684\u5708\u590d\u6742\u5ea6\u4e3a 3\u3002\u6b64\u503c\u8868\u793a\u901a\u8fc7\u4ee3\u7801\u7684\u72ec\u7acb\u8def\u5f84\u6570\uff0c\u53ef\u7528\u4e8e\u4f30\u8ba1\u5b9e\u73b0\u5b8c\u6574\u4ee3\u7801\u8986\u76d6\u6240\u9700\u7684\u6d4b\u8bd5\u7528\u4f8b\u6570\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u786e\u5b9a\u81f3\u5c11\u9700\u8981 4 \u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6765\u8986\u76d6\u6240\u6709\u53ef\u80fd\u7684\u5206\u652f\uff0c\u8fd9\u4e0e\u5708\u590d\u6742\u5ea6\u5ea6\u91cf 3 \u4e00\u81f4\u3002</li> </ul> <p>This metric is useful because of properties of Cyclomatic complexity (M) \u2013 \u7531\u4e8e\u5708\u590d\u6742\u5ea6 \uff08M\uff09 \u2013 1. M can be number of test cases to achieve branch coverage (Upper Bound)     M\u53ef\u4ee5\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684\u6570\u91cf\uff0c\u4ee5\u5b9e\u73b0\u5206\u652f\u8986\u76d6\uff08\u4e0a\u9650\uff09 2. M can be number of paths through the graphs. (Lower Bound)     M \u53ef\u4ee5\u662f\u901a\u8fc7\u56fe\u5f62\u7684\u8def\u5f84\u6570\u3002\uff08\u4e0b\u9650\uff09</p> <p></p>"},{"location":"course_notes/fit5171_note/#week-4","title":"week 4","text":""},{"location":"course_notes/fit5171_note/#blackbox","title":"\u9ed1\u76d2\u6d4b\u8bd5 Blackbox","text":"<ol> <li>\u9ed1\u76d2\u4ee3\u8868\u76d2\u5b50\u662f\u4e0d\u900f\u660e\u7684  </li> <li>\u5173\u6ce8\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u800c\u5ffd\u7565\u76d2\u5b50\u91cc\u9762\u7684\u64cd\u4f5c  </li> <li>\u6709Functional \u548cNon-functional\u4e4b\u5206 Functional \uff1a\u5177\u4f53\u529f\u80fd\uff0c\u767b\u9646\uff0c\u6ce8\u518c\u7b49  Non-Functional\uff1a\u7a33\u5b9a\u6027\uff0c\u5b89\u5168\u6027\uff0c\u6613\u7528\u6027\u7b49  </li> <li>Equivalence Partitioning  Testers can divide possible inputs into groups or \u201cpartitions\u201d </li> <li>Boundary Value Analysis  Testers can identify that a system has a special response around a specific boundary value.  </li> <li>Decision Table Testing  Many systems provide outputs based on a set of conditions.</li> </ol>"},{"location":"course_notes/fit5171_note/#normal-boundary-value-testing-nbvt","title":"Normal Boundary Value Testing (NBVT) \u8fb9\u754c\u503c\u6d4b\u8bd5","text":""},{"location":"course_notes/fit5171_note/#robustness-testing","title":"Robustness testing","text":"<p>For each variable, we need to test its minimum and maximum values, which gives us 2n test cases. The total number of test cases required for the robust version of BVT is: 2n (minimum and maximum values) + 4n + 1 (normal values) \u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf\uff0c\u6211\u4eec\u9700\u8981\u6d4b\u8bd5\u5b83\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u8fd9\u7ed9\u4e86\u6211\u4eec 2n \u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002\u5065\u58ee\u7248BVT\u6240\u9700\u7684\u6d4b\u8bd5\u7528\u4f8b\u603b\u6570\u4e3a\uff1a2n\uff08\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff09+4n+1\uff08\u6b63\u5e38\u503c\uff09 </p>"},{"location":"course_notes/fit5171_note/#worst-case-testing","title":"Worst case testing","text":""},{"location":"course_notes/fit5171_note/#robust-worst-case-testing","title":"Robust worst-case testing","text":""},{"location":"course_notes/fit5171_note/#equivalence-class-testing","title":"Equivalence class testing \u7b49\u4ef7\u7c7b\u6d4b\u8bd5","text":""},{"location":"course_notes/fit5171_note/#weak-normal-equivalence-class-testing","title":"weak normal equivalence class testing","text":"<p>Let Cx denote the equivalence classes of valid values for variable x (Cx is a set of equivalence classes). Then the number of test cases is max (#Cxi ), for xi ranging over all variables. That is, the maximum number of equivalence classes for all variables \u4ee4 Cx \u8868\u793a\u53d8\u91cf x \u7684\u6709\u6548\u503c\u7684\u7b49\u4ef7\u7c7b\uff08Cx \u662f\u4e00\u7ec4\u7b49\u4ef7\u7c7b\uff09\u3002\u90a3\u4e48\u6d4b\u8bd5\u7528\u4f8b\u7684\u6570\u91cf\u662f\u6700\u5927\u7684\uff08#Cxi\uff09\uff0c\u56e0\u4e3a xi \u904d\u53ca\u6240\u6709\u53d8\u91cf\u3002\u5373\u6240\u6709\u53d8\u91cf\u7684\u6700\u5927\u7b49\u4ef7\u7c7b\u6570  </p>"},{"location":"course_notes/fit5171_note/#weak-robust-equivalence-class-testing","title":"Weak robust equivalence class testing.","text":"<p>We assume the same settings as in the previous question. Let Ixi denote the  equivalence classes of invalid values for variable xi . Let n denote the number of variables.  the number of tests is max (#Cxi ) +  nXi=1(#Ixi ), for xi ranging over all variables. Basically, we include also the total number of test cases in the invalid areas for each variable. Note that cardinality of Ixi may not always be 2 since there may be gaps between valid equivalence classes  \u6211\u4eec\u91c7\u7528\u4e0e\u4e0a\u4e00\u4e2a\u95ee\u9898\u76f8\u540c\u7684\u8bbe\u7f6e\u3002\u8bbe Ixi \u8868\u793a\u53d8\u91cf xi \u7684\u65e0\u6548\u503c\u7684\u7b49\u4ef7\u7c7b\u3002\u8bbe n \u8868\u793a\u53d8\u91cf\u7684\u6570\u91cf\u3002\u6d4b\u8bd5\u6b21\u6570\u4e3a max (#Cxi ) + nX i=1 (#Ixi )\uff0cxi \u904d\u53ca\u6240\u6709\u53d8\u91cf\u3002\u57fa\u672c\u4e0a\uff0c\u6211\u4eec\u8fd8\u5305\u62ec\u6bcf\u4e2a\u53d8\u91cf\u7684\u65e0\u6548\u533a\u57df\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u603b\u6570\u3002\u8bf7\u6ce8\u610f\uff0cIxi \u7684\u57fa\u6570\u53ef\u80fd\u5e76\u4e0d\u603b\u662f 2\uff0c\u56e0\u4e3a\u6709\u6548\u7b49\u4ef7\u7c7b\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u95f4\u9699</p>"},{"location":"course_notes/fit5171_note/#decision-table-testing","title":"Decision table Testing","text":""},{"location":"course_notes/fit5171_note/#how-to-make-dtt","title":"how to make dtt","text":"<p>in the example each of the three variables a, b and c is the length of a side from the range <code>[1, 200]</code>. Come up with test cases for weak normal equivalenceclass testing that cover the same expected outputs \u5728\u793a\u4f8b\u4e2d\uff0c\u4e09\u4e2a\u53d8\u91cf a\u3001b \u548c c \u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u662f\u8303\u56f4 [1, 200] \u4e2d\u7684\u8fb9\u7684\u957f\u5ea6\u3002\u63d0\u51fa\u6db5\u76d6\u76f8\u540c\u9884\u671f\u8f93\u51fa\u7684\u5f31\u6b63\u6001\u7b49\u4ef7\u7c7b\u6d4b\u8bd5\u7684\u6d4b\u8bd5\u7528\u4f8b equivalence classes: + D1 = {(a, b, c) | a = b = c} + D2 = {(a, b, c) | a = b \u2227 a\u0338 = c \u2227 c &lt; a + b} + D3 = {(a, b, c) | a\u0338 = b \u2227 a\u0338 = c \u2227 b\u0338 = c \u2227 a &lt; b + c \u2227 b &lt; a + c \u2227 c &lt; a + b} + D4 = {(a, b, c) | a = b + c} + D5 = {(a, b, c) | a &gt; b + c}  </p>"},{"location":"course_notes/fit5171_note/#testing-effort","title":"testing effort","text":""},{"location":"course_notes/fit5171_note/#difference-between-equivalence-class-testing-boundary-value-analysis","title":"Difference Between Equivalence Class Testing &amp; Boundary Value Analysis:","text":"<p>Equivalence Class Testing: Complete Guide |Professionalqa.com </p> Equivalence Class Testing  \u7b49\u6548\u7b49\u7ea7\u6d4b\u8bd5 Boundary Value Analysis\u00a0\u8fb9\u754c\u503c\u5206\u6790 1. Equivalence Class Testing is a type of black box technique.  1. \u7b49\u6548\u7c7b\u6d4b\u8bd5\u662f\u4e00\u79cd\u9ed1\u76d2\u6280\u672f\u3002 1. Next part of Equivalence Class Partitioning/Testing.  1. \u7b49\u6548\u7c7b\u5206\u533a/\u6d4b\u8bd5\u7684\u4e0b\u4e00\u90e8\u5206\u3002 2. It can be applied to any level of testing, like unit, integration, system, and more.  2.\u5b83\u53ef\u4ee5\u5e94\u7528\u4e8e\u4efb\u4f55\u7ea7\u522b\u7684\u6d4b\u8bd5\uff0c\u5982\u5355\u5143\uff0c\u96c6\u6210\uff0c\u7cfb\u7edf\u7b49\u3002 2. Boundary value analysis is usually a part of stress &amp; negative testing.  2. \u8fb9\u754c\u503c\u5206\u6790\u901a\u5e38\u662f\u538b\u529b\u548c\u8d1f\u6d4b\u8bd5\u7684\u4e00\u90e8\u5206\u3002 3. A test case design technique used to divide input data into different equivalence classes.  3. \u4e00\u79cd\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u6280\u672f\uff0c\u7528\u4e8e\u5c06\u8f93\u5165\u6570\u636e\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u7b49\u4ef7\u7c7b\u3002 3. This test case design technique used to test boundary value between partitions.  3. \u6b64\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u6280\u672f\u7528\u4e8e\u6d4b\u8bd5\u5206\u533a\u4e4b\u95f4\u7684\u8fb9\u754c\u503c\u3002 4. Reduces the time of testing, while using less and effective test cases.  4.\u51cf\u5c11\u6d4b\u8bd5\u65f6\u95f4\uff0c\u540c\u65f6\u4f7f\u7528\u66f4\u5c11\u548c\u6709\u6548\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 4. Reduces the overall time of test execution, while making defect detection faster &amp; easy.  4. \u51cf\u5c11\u6d4b\u8bd5\u6267\u884c\u7684\u603b\u65f6\u95f4\uff0c\u540c\u65f6\u4f7f\u7f3a\u9677\u68c0\u6d4b\u66f4\u5feb\u3001\u66f4\u5bb9\u6613\u3002 5. Tests only one from each partition of the equivalence classes.  5. \u4ece\u7b49\u6548\u7c7b\u7684\u6bcf\u4e2a\u5206\u533a\u4e2d\u4ec5\u6d4b\u8bd5\u4e00\u4e2a\u3002 5. Selects test cases from the edges of the equivalence classes.  5. \u4ece\u7b49\u6548\u7c7b\u7684\u8fb9\u7f18\u9009\u62e9\u6d4b\u8bd5\u7528\u4f8b\u3002 ## week 5 ### \u767d\u76d2\u6d4b\u8bd5 Whitebox 1. \u767d\u76d2\u4ee3\u8868\u76d2\u5b50\u662f\u900f\u660e\u7684 2. \u4e0d\u4ec5\u5173\u6ce8\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u540c\u65f6\u5173\u6ce8\u76d2\u5b50\u5185\u7684\u4ee3\u7801\u7ed3\u6784 3. Testing structure of the software 4. \u5c06\u4ee3\u7801\u8f6c\u6362\u6210\u6570\u5b66\u6a21\u578b ### Program graph 1. \u6709\u5411\u56fe 2. \u70b9Node\u4ee3\u8868 Statement 3. \u8fb9Edge\u4ee3\u8868 Flow 4. \u591a\u884cStatement\u53ef\u6d53\u7f29 ![t 400x00](../img/fit5171-20230614-20.png) ### DD-path \uff08Decision-to-decision path \u51b3\u7b56\u5230\u51b3\u7b56\u8def\u5f84\uff09 \u4e3b\u8981\u7740\u773c\u6d4b\u8bd5\u8986\u76d6\u7387\u95ee\u9898\u3002\u7a0b\u5e8f\u6709\u5411\u56fe\u4e2d\u5b58\u5728\u5206\u652f\uff0c\u8986\u76d6\u7387\u8003\u8651\u7684\u662f\u5bf9\u5404\u4e2a\u5206\u652f\u60c5\u51b5\u7684\u6d4b\u8bd5\u8986\u76d6\u7a0b\u5ea6\uff0c\u56e0\u6b64\u5bf9\u6709\u5411\u56fe\u4e2d\u7ebf\u6027\u4e32\u884c\u7684\u90e8\u5206\u8fdb\u884c\u538b\u7f29\uff0c\u5728\u538b\u7f29\u56fe(\u5373DD-\u8def\u5f84)\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\uff0c\u7528\u6d4b\u8bd5\u8986\u76d6\u6307\u6807\u8003\u5bdf\u6d4b\u8bd5\u6548\u679c ![t 400x00](../img/fit5171-20230614-21.png) ###  Basic Path Test \u57fa\u7840\u8def\u5f84\u6d4b\u8bd5 - \u627e\u51fa\u6700\u4f73\u6d4b\u8bd5\u8def\u5f84 ![t 400x00](../img/fit5171-20230614-22.png) ## week6 ### Functional decomposition \u529f\u80fd\u5206\u89e3 / Block Diagram \u6a21\u5757\u56fe 1. \u6bcf\u4e00\u4e2a\u65b9\u5757\u4ee3\u8868\u4e86\u7cfb\u7edf\u4e2d\u4e00\u79cd\u529f\u80fd 2. \u662f\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u7b2c\u4e00\u4e2a\u8349\u56fe ![t 400x00](../img/fit5171-20230615.png) ### Integration Testing 1. System - hierarchically composed of units 2. Objectives - testing of interfacing and interaction of units To expose problems arising from the combination To find a working solution from components 3. \u96c6\u6210\u6d4b\u8bd5\u662f\u5728\u5355\u5143\u6d4b\u8bd5\u7684\u57fa\u7840\u4e0a\uff0c\u6d4b\u8bd5\u5728\u5c06\u6240\u6709\u7684\u8f6f\u4ef6\u5355\u5143\u6309\u7167\u6982\u8981\u8bbe\u8ba1\u89c4\u683c\u8bf4\u660e\u7684\u8981\u6c42\u7ec4\u88c5\u6210\u6a21\u5757\u3001\u5b50\u7cfb\u7edf\u6216\u7cfb\u7edf\u7684\u8fc7\u7a0b\u4e2d\u5404\u90e8\u5206\u5de5\u4f5c\u662f\u5426\u8fbe\u5230\u6216\u5b9e\u73b0\u76f8\u5e94\u6280\u672f\u6307\u6807\u53ca\u8981\u6c42\u7684\u6d3b\u52a8\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u96c6\u6210\u6d4b\u8bd5\u4e4b\u524d\uff0c\u5355\u5143\u6d4b\u8bd5\u5e94\u8be5\u5df2\u7ecf\u5b8c\u6210,\u96c6\u6210\u6d4b\u8bd5\u4e2d\u6240\u4f7f\u7528\u7684\u5bf9\u8c61\u5e94\u8be5\u662f\u5df2\u7ecf\u7ecf\u8fc7\u5355\u5143\u6d4b\u8bd5\u7684\u8f6f\u4ef6\u5355\u5143 #### Potential hazards + Internal - between components (Method invocation; Parameter; Method return) \u5355\u5143\u95f4\u7684\u63a5\u53e3\uff0c\u6307\u7684\u662f\u4ee3\u7801\u95f4\u7684\u76f8\u4e92\u8c03\u7528\uff0c\u6211\u4eec\u4f20\u9012\u4e00\u4e9b\u53c2\u6570\u6765\u5224\u65ad\u6d4b\u8bd5\u8c03\u7528\u6709\u6ca1\u6709\u95ee\u9898 + Interaction - at system boundary \u96c6\u6210\u540e\u7684\u529f\u80fd\uff0c\u4e0d\u540c\u7684\u529f\u80fd\u4e4b\u95f4\u662f\u5426\u4f1a\u4ea7\u751f\u76f8\u4e92\u5f71\u54cd\uff1f ### Integration testing approaches #### Decomposition-based \u57fa\u4e8e\u5206\u89e3\uff0c\u529f\u80fd\u5206\u89e3\uff0c\u6a21\u5757\u5206\u89e3 1. Big bang - all units together, no error localisation  \u5927\u7206\u70b8\u7b56\u7565 \u4e00\u8d77\u8fd0\u884c \u8fc5\u901f \u4e00\u6b21\u8bd5\u8fd0\u884c\u6210\u529f\u7387\u4e0d\u5927 \u95ee\u9898\u5b9a\u4f4d\u548c\u4fee\u6539\u90fd\u6bd4\u8f83\u56f0\u96be \u529f\u80fd\u589e\u5f3a\u578b\u9879\u76ee 2. Top down - stubs, early demo  \u4ece\u4e0a\u81f3\u4e0b \u8f83\u65e9\u7684\u9a8c\u8bc1\u4e86\u4e3b\u8981\u7684\u63a7\u5236\u548c\u5224\u65ad\u70b9 \u9996\u5148\u5b9e\u73b0\u548c\u9a8c\u8bc1\u4e00\u4e2a\u5b8c\u6574\u7684\u8f6f\u4ef6\u529f\u80fd \u6869\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u65f6\u672c\u7b56\u7565\u5927 \u5e95\u5c42\u7ec4\u4ef6\u7684\u6d4b\u8bd5\u4e0d\u591f\u5145\u5206 \u9002\u5408\u4ea7\u54c1\u63a7\u5236\u7ed3\u6784\u76f8\u5bf9\u6e05\u6670\u548c\u7a33\u5b9a\uff0c\u4ea7\u54c1\u7684\u9ad8\u5c42\u63a5\u53e3\u53d8\u5316\u6bd4\u8f83\u5c0f\uff0c\u4ea7\u54c1\u7684\u5e95\u5c42\u63a5\u53e3\u672a\u5b9a\u4e49\u6216\u8005\u7ecf\u5e38\u53ef\u80fd\u88ab\u4fee\u6539\uff0c\u4ea7\u54c1\u7684\u63a7\u5236\u7ec4\u4ef6\u5177\u6709\u8f83\u5927\u7684\u6280\u672f\u98ce\u9669\uff0c\u9700\u8981\u5c3d\u65e9\u7684\u88ab\u9a8c\u8bc1 3. Bottom up - terminal, drivers  \u4ece\u4e0b\u81f3\u4e0a \u96c6\u6210\u6d4b\u8bd5\u5f00\u59cb\u9636\u6bb5\u53ef\u80fd\u4f1a\u5e76\u884c\u7684\u8fdb\u884c\u96c6\u6210 \u9a71\u52a8\u7684\u5f00\u53d1\u5de5\u4f5c\u91cf\u4e5f\u5f88\u5e9e\u5927\u3002\u5bf9\u4e8e\u9ad8\u5c42\u7684\u9a8c\u8bc1\u88ab\u63a8\u8fdf\u5230\u4e86\u6700\u540e\uff0c\u8bbe\u8ba1\u4e0a\u7684\u9519\u8bef\u4e0d\u80fd\u88ab\u53ca\u65f6\u53d1\u73b0 \u9002\u7528\u8303\u56f4 \u5e95\u5c42\u63a5\u53e3\u6bd4\u8f83\u7a33\u5b9a\u3001\u53d8\u52a8\u8f83\u5c11\u7684\u4ea7\u54c1\u9ad8\u5c42\u63a5\u53e3\u53d8\u5316\u6bd4\u8f83\u9891\u7e41\u7684\u4ea7\u54c1\u5e95\u5c42\u7ec4\u4ef6\u8f83\u65e9\u88ab\u5b8c\u6210\u7684\u4ea7\u54c1 4.  Sandwich - a combination of the above 2  \u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u5bf9\u76ee\u6807\u5c42\u7684\u4e0a\u4e00\u5c42\u4f7f\u7528\u81ea\u9876\u5411\u4e0b\u7684\u96c6\u6210\u7b56\u7565\u5bf9\u76ee\u6807\u7684\u4e0b\u4e00\u5c42\u4f7f\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u96c6\u6210\u7b56\u7565\uff0c\u6700\u540e\u6d4b\u8bd5\u5728\u76ee\u6807\u5c42\u4f1a\u5408"},{"location":"course_notes/fit5171_note/#call-graph-based","title":"Call graph-based","text":"<ol> <li>Pairwise integration   Instead of testing all possible combinations of inputs, pairwise integration testing only tests combinations of input pairs. identify defects or issues that arise due to the interactions between two components, while minimizing the number of test cases needed. \u6210\u5bf9\u96c6\u6210\u6d4b\u8bd5\u7684\u76ee\u6807\u662f\u8bc6\u522b\u7531\u4e8e\u4e24\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4ea4\u4e92\u800c\u4ea7\u751f\u7684\u7f3a\u9677\u6216\u95ee\u9898\uff0c\u540c\u65f6\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u6240\u9700\u7684\u6d4b\u8bd5\u7528\u4f8b\u6570\u91cf\u3002</li> <li>Neighbour integration   testing only the interactions between adjacent modules that are directly connected to one another in the call graph. \u4ec5\u6d4b\u8bd5\u5728\u8c03\u7528\u56fe\u4e2d\u76f4\u63a5\u76f8\u4e92\u8fde\u63a5\u7684\u76f8\u90bb\u6a21\u5757\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002</li> </ol>"},{"location":"course_notes/fit5171_note/#path-based","title":"Path-based","text":"<p>In path-based integration testing, the system is tested for different combinations of inputs, and the resulting output paths are compared against the expected output paths. This technique aims to ensure that the system functions correctly when inputs are combined to achieve different outcomes. \u5728\u57fa\u4e8e\u8def\u5f84\u7684\u96c6\u6210\u6d4b\u8bd5\u4e2d\uff0c\u6d4b\u8bd5\u7cfb\u7edf\u7684\u4e0d\u540c\u8f93\u5165\u7ec4\u5408\uff0c\u5e76\u5c06\u751f\u6210\u7684\u8f93\u51fa\u8def\u5f84\u4e0e\u9884\u671f\u7684\u8f93\u51fa\u8def\u5f84\u8fdb\u884c\u6bd4\u8f83\u3002\u8be5\u6280\u672f\u65e8\u5728\u786e\u4fdd\u5f53\u8f93\u5165\u7ec4\u5408\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u7ed3\u679c\u65f6\uff0c\u7cfb\u7edf\u6b63\u5e38\u8fd0\u884c\u3002</p>"},{"location":"course_notes/fit5171_note/#module-execution-path-mep","title":"Module Execution Path (MEP)","text":"<p>message method sequence of module execution paths </p>"},{"location":"course_notes/fit5171_note/#week8","title":"week8","text":""},{"location":"course_notes/fit5171_note/#software-complexity-metrics-structure","title":"Software complexity metrics \u8f6f\u4ef6\uff08\u590d\u6742\u5ea6\uff09\u5ea6\u91cf - Structure \u7ed3\u6784\u5ea6\u91cf","text":"<ul> <li>Control-flow structure: the sequence in which instructions are executed in a program.\u63a7\u5236\u6d41\u7ed3\u6784\uff1a\u6307\u4ee4\u5728\u7a0b\u5e8f\u4e2d\u6267\u884c\u7684\u987a\u5e8f\u3002  </li> <li>Data-flow structure: the trail of a data item created or handled by a program. \u6570\u636e\u6d41\u7ed3\u6784\uff1a\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u9879\u4ece\u521b\u5efa\u5230\u5904\u7406\u7684\u8f68\u8ff9\u3002  </li> <li>Data structure: the organization of the data itself, independent of the program. \u6570\u636e\u7ed3\u6784\uff1a\u6570\u636e\u672c\u8eab\u7684\u7ec4\u7ec7\uff0c\u72ec\u7acb\u4e8e\u7a0b\u5e8f\u3002</li> </ul>"},{"location":"course_notes/fit5171_note/#a-decomposition-tree","title":"A decomposition tree","text":"<p> Sequence: P1;P2 - Sequence of P1 &amp; P2 Merge the terminal node of P1 with the initial node of P2. P1;P2 - P1 &amp; P2 \u7684\u5e8f\u5217 \u5c06 P1 \u7684\u7ec8\u7aef\u8282\u70b9\u4e0e P2 \u7684\u521d\u59cb\u8282\u70b9\u5408\u5e76 Nesting: P1(P2 , x) - nesting of P2 onto P1 at node x Replace x with P2 ,P1(P2 , x) - \u5728\u8282\u70b9 x \u5904\u5c06 P2 \u5d4c\u5957\u5230 P1 \u4e0a \u7528 P2 \u66ff\u6362 x  </p>"},{"location":"course_notes/fit5171_note/#morphology-metrics","title":"Morphology metrics","text":""},{"location":"course_notes/fit5171_note/#week9","title":"week9","text":""},{"location":"course_notes/fit5171_note/#mutation-testing","title":"mutation testing \u7a81\u53d8/\u53d8\u5f02\u6d4b\u8bd5","text":"<p>Mutation operators 1. \u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u89c4\u5219\u751f\u6210\u65b0\u7684Java \u4ee3\u7801  \u7c7b\u4f3c&lt;\u53d8&lt;=; +\u53d8- \uff1bi++\u53d8i--\u53bb\u6389call void method   Remove condition \u53d8if\uff08true\uff09 2. \u4f7f\u7528\u65b0\u751f\u6210\u7684\u4ee3\u7801\u8dd1\u73b0\u6709\u7684Unit Test\uff0c\u5982\u679c\u73b0\u6709\u7684test method\u6709\u6548  \u6027\u975e\u5e38\u9ad8\uff0c\u6240\u6709\u7684test\u5fc5\u7136\u5931\u8d25  MT\u4e4b\u540e\uff0ctest\u5931\u8d25\u7684\u8d8a\u591a\uff0ctest method\u8d8a\u597d   MT\u662f\u9488\u5bf9test\u7684test\uff0c\u6d4b\u8bd5UT\u662f\u5426\u5b8c\u5907 3. MT\u751f\u6210\u7684\u4ee3\u7801\u662f\u6839\u636eCompile\u751f\u6210\u7684\u4ee3\u7801\u800c\u4e0d\u662f\u539f\u4ee3\u7801 \uff08\u4e0d\u6539\u53d8 source code\uff09 4. Killing the mutation  Each mutated version is called a mutant and tests detect and  reject mutants by causing the behavior of the original version to  differ from the mutant. This is called killing the mutant. \u7b80\u8a00\u4e4b\uff0cmutation test\u4f1a\u5728\u7a0b\u5e8f\u7f16\u8bd1\u6216\u8fd0\u884c\u65f6\u63d2\u5165\u5fae\u5c0f\u7684\u5dee\u5f02(mutant)\uff0c \u7406\u60f3\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u5f53\u80fd\u591f\u68c0\u6d4b\u51fa\u8fd9\u4e9b\u5dee\u5f02\u5e26\u6765\u7684\u7a0b\u5e8f\u884c\u4e3a\u5f02\u5e38\u3002\u5982\u679c\u4e00 \u4e2amutant\u5f15\u53d1\u7684\u7a0b\u5e8f\u884c\u4e3a\u5f02\u5e38\u80fd\u591f\u88abtestcases\u6355\u6349\u5e76\u5bfc\u81f4testcases\u5931 \u8d25\uff0c\u5219\u79f0mutant\u88ab\u6d88\u706d\uff08killed\uff09\uff1b\u53cd\u4e4b\u5982\u679cmutant\u5e26\u6765\u7684\u7a0b\u5e8f\u884c\u4e3a\u53d8 \u5316\u65e0\u6cd5\u88ab\u6d4b\u8bd5\u7528\u4f8b\u6355\u6349\uff0c\u5219\u79f0mutant\u5b58\u6d3b\uff08survived/ alive\uff09 5. quivalent mutation a mutant cannot be killed by any set of test data. This type of mutants is said to be functionally equivalent to the originalprogram\u5f53\u6539\u53d8\u4efb\u4f55\u6d4b\u8bd5\u6570\u636e\uff0c\u8fd9\u4e2atest\u90fdfail\u4e0d\u4e86mutation\u53eb\u505aequivalent </p>"},{"location":"course_notes/fit5171_note/#week11","title":"week11","text":""},{"location":"course_notes/fit5171_note/#finding-threads-finite-state-machines","title":"Finding threads- Finite State Machines","text":""},{"location":"course_notes/fit5171_note/#mock-exam","title":"Mock exam","text":""},{"location":"course_notes/fit5171_note/#unit-testing","title":"Unit Testing","text":""},{"location":"course_notes/fit5171_note/#q1","title":"Q1","text":"<p>Consider a program FizzPrime that takes as input two non-negative integers, x and i, both between 0 and 100, both inclusive. The number x is a prime numbers. As output, the program prints the number i itself within the range ([0, 100]) when it is not divisible by x. For multiples of x, but not multiples of x^2, the program should print \u201cFizz\u201d instead of the number. For multiples of x^2 but not multiples of x^3, the program should print \u201cPrime\u201d. Finally, for numbers which are multiples of x^3 the program should print \u201cFizzPrime\u201d instead. \u8003\u8651\u4e00\u4e2a\u7a0b\u5e8f FizzPrime\uff0c\u5b83\u5c06\u4e24\u4e2a\u975e\u8d1f\u6574\u6570 x \u548c i \u4f5c\u4e3a\u8f93\u5165\uff0c\u5b83\u4eec\u90fd\u5728 0 \u5230 100 \u4e4b\u95f4\uff0c\u5305\u62ec\u4e24\u8005\u3002\u6570\u5b57 x \u662f\u8d28\u6570\u3002\u4f5c\u4e3a\u8f93\u51fa\uff0c\u7a0b\u5e8f\u5728 ([0, 100]) \u8303\u56f4\u5185\u6253\u5370\u4e0d\u80fd\u88ab x \u6574\u9664\u7684\u6570\u5b57 i \u672c\u8eab\u3002\u5bf9\u4e8e x \u7684\u500d\u6570\uff0c\u4f46\u4e0d\u662f x2 \u7684\u500d\u6570\uff0c\u7a0b\u5e8f\u5e94\u8be5\u6253\u5370\u201cFizz\u201d\u800c\u4e0d\u662f\u6570\u5b57\u3002\u5bf9\u4e8e x2 \u7684\u500d\u6570\u800c\u4e0d\u662f x3 \u7684\u500d\u6570\uff0c\u7a0b\u5e8f\u5e94\u8be5\u6253\u5370\u201cPrime\u201d\u3002\u6700\u540e\uff0c\u5bf9\u4e8e x3 \u7684\u500d\u6570\uff0c\u7a0b\u5e8f\u5e94\u8be5\u6253\u5370\u201cFizzPrime\u201d\u3002</p>"},{"location":"course_notes/fit5171_note/#robust-equivalence-classes","title":"robust equivalence classes","text":"<p>a) (5 marks) Develop robust equivalence classes for the input variables x and i given the  above specification. a)\uff085 \u5206\uff09\u6839\u636e\u4e0a\u8ff0\u89c4\u8303\u4e3a\u8f93\u5165\u53d8\u91cf x \u548c i \u5f00\u53d1\u7a33\u5065\u7684\u7b49\u4ef7\u7c7b  </p> <p>x  + invalid:1. X &lt; 0 ; X &gt;100;  x is not a prime number + valid: x &gt;= 0 ,x&lt;=100,x is a prime number</p> <p>i + invalid:1. i &lt; 0 ;  i &gt;100; + valid: i &gt;= 0 ,i&lt;=100</p> <p>Equivalence (i, Fizz, Prime, FizzPrime)     R1 = {x,i is valid, i cannot be divided by x}     R2 = {x,i is valid, i canbe divided by x but cannot be divided by x^2}     R3 = {x,i is valid, i canbe divided by x^2 but cannot be divided by x^3}     R4 = {x,i is valid, i canbe divided by x^3}     R5 = {x &lt;0 ,i is valid} R6 = {x &gt;100, i is valid} R7 = {X is not a prime, i is valid}     R8 = {i &lt;0 ,x is valid} R9 = {i &gt;100, x is valid}  </p> test Case x i Expected Output R1 3 4 4 R2 3 6 Fizz R3 3 9 Prime R4 3 27 FizzPrime R5 -1 - Error input R6 101 - Error input R7 4 - Error input"},{"location":"course_notes/fit5171_note/#robust-boundary-value-testing","title":"robust boundary value testing","text":"<p>develop test cases using the robust (not worst-case) version of the boundary value testing technique   </p> Test Case\u00a0 x i Expected Output\u00a0 Explanation\u00a0 1 -1 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is less than the lower boundary (0-100), invalid.  \u8f93\u5165 x \u5c0f\u4e8e\u4e0b\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 2 0 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is less than the lower boundary (0-100), invalid.  \u8f93\u5165 x \u5c0f\u4e8e\u4e0b\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 3 1 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is less than the lower boundary (0-100), invalid.  \u8f93\u5165 x \u5c0f\u4e8e\u4e0b\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 4 7 7 Fizz\u00a0\u5636\u5636\u58f0 i is equal to x, so \"Fizz\" is printed.  i \u7b49\u4e8e x\uff0c\u56e0\u6b64\u6253\u5370\u201c\u5636\u5636\u58f0\u201d\u3002 5 99 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is greater than the upper boundary (0-100), invalid.  \u8f93\u5165 x \u5927\u4e8e\u4e0a\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 6 100 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is greater than the upper boundary (0-100), invalid.  \u8f93\u5165 x \u5927\u4e8e\u4e0a\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 7 101 7 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input x is greater than the upper boundary (0-100), invalid.  \u8f93\u5165 x \u5927\u4e8e\u4e0a\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 8 7 -1 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input i is less than the lower boundary (0-100), invalid.  \u8f93\u5165 i \u5c0f\u4e8e\u4e0b\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002 9 7 0 0 Number i is not divisible by x, so it remains unchanged.  \u6570\u5b57 i \u4e0d\u80fd\u88ab x \u6574\u9664\uff0c\u56e0\u6b64\u4fdd\u6301\u4e0d\u53d8\u3002 10 7 1 1 Number i is not divisible by x, so it remains unchanged.  \u6570\u5b57 i \u4e0d\u80fd\u88ab x \u6574\u9664\uff0c\u56e0\u6b64\u4fdd\u6301\u4e0d\u53d8\u3002 11 7 99 99 Number i is not divisible by x, so it remains unchanged.  \u6570\u5b57 i \u4e0d\u80fd\u88ab x \u6574\u9664\uff0c\u56e0\u6b64\u4fdd\u6301\u4e0d\u53d8\u3002 12 7 100 100 Number i is not divisible by x, so it remains unchanged.  \u6570\u5b57 i \u4e0d\u80fd\u88ab x \u6574\u9664\uff0c\u56e0\u6b64\u4fdd\u6301\u4e0d\u53d8\u3002 13 7 101 Invalid input\u00a0\u8f93\u5165\u65e0\u6548 Input i is greater than the upper boundary (0-100), invalid.  \u8f93\u5165 i \u5927\u4e8e\u4e0a\u9650 \uff080-100\uff09\uff0c\u65e0\u6548\u3002"},{"location":"course_notes/fit5171_note/#blackbox-testing-analysisselection","title":"Blackbox testing analysis/selection","text":"<p>You have been given the task of performing blackbox testing on an implementation of the above algorithm. Of the main blackbox testing techniques we have discussed: boundary value testing (BVT), special value testing (SVT), equivalence class testing (ECT), and decision table-based testing (DTT), explain why each technique is(or is not) appropriate. \u60a8\u7684\u4efb\u52a1\u662f\u5bf9\u4e0a\u8ff0\u7b97\u6cd5\u7684\u5b9e\u73b0\u6267\u884c\u9ed1\u76d2\u6d4b\u8bd5\u3002\u5728\u6211\u4eec\u8ba8\u8bba\u7684\u4e3b\u8981\u9ed1\u76d2\u6d4b\u8bd5\u6280\u672f\u4e2d\uff1a\u8fb9\u754c\u503c\u6d4b\u8bd5 (BVT)\u3001\u7279\u6b8a\u503c\u6d4b\u8bd5 (SVT)\u3001\u7b49\u4ef7\u7c7b\u6d4b\u8bd5 (ECT) \u548c\u57fa\u4e8e\u51b3\u7b56\u8868\u7684\u6d4b\u8bd5 (DTT)\uff0c\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6bcf\u79cd\u6280\u672f\u662f\uff08\u6216\u4e0d\u662f\uff09 \uff09 \u5408\u9002\u7684 + BVT: Not a appropriate, because not consider the x is a prime and output logic. + SVT: is appropriate, because consider the x is a prime and output logic. + ECT: is appropriate + DTT: is appropriate, it consider the out put logic</p>"},{"location":"course_notes/fit5171_note/#q2","title":"Q2","text":"<p>The minimax algorithm is a way of finding an optimal move in a two-player game for one player, by minimising the possible loss for the worst case scenario (maximum loss). It has been widely used in 2-player zero-sum game plays. The algorithm for the depth limited minimax algorithm is given below. minimax \u7b97\u6cd5\u662f\u4e00\u79cd\u901a\u8fc7\u6700\u5c0f\u5316\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u53ef\u80fd\u635f\u5931\uff08\u6700\u5927\u635f\u5931\uff09\u6765\u4e3a\u4e00\u4e2a\u73a9\u5bb6\u5728\u4e24\u4eba\u6e38\u620f\u4e2d\u627e\u5230\u6700\u4f73\u79fb\u52a8\u7684\u65b9\u6cd5\u3002\u5b83\u5df2\u5e7f\u6cdb\u7528\u4e8e 2 \u4eba\u96f6\u548c\u6e38\u620f\u3002\u4e0b\u9762\u7ed9\u51fa\u6df1\u5ea6\u53d7\u9650\u6781\u5c0f\u6781\u5927\u7b97\u6cd5\u7684\u7b97\u6cd5\u3002</p> <pre><code>/*\nminimax(node, depth, maximisingP layer)  \nInput: node B    //Node where search begins.  \nInput: depth B    //the maximum depth to search.  \nInput: maximisingPlayer //Boolean value representing the player for which the search is performed.  \nOutput: the best value\n*/\n</code></pre>"},{"location":"course_notes/fit5171_note/#program-graph","title":"program graph","text":""},{"location":"course_notes/fit5171_note/#cyclomatic-complexity-of-the-program-graph","title":"cyclomatic complexity of the program graph","text":"<p>C= E-V+2p E: \u8fb9\u7684\u6570\u91cf N: \u8282\u70b9\u7684\u6570\u91cf P: \u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf Total branches (E) = 2 (for the first \"if\" statement) + 2 (for the second \"if\" statement) + N (for the \"foreach\" loop condition) \u603b\u5206\u652f \uff08E\uff09 = 2\uff08\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u201cif\u201d\u8bed\u53e5\uff09+ 2\uff08\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u201cif\u201d\u8bed\u53e5\uff09+ N\uff08\u5bf9\u4e8e\u201cforeach\u201d\u5faa\u73af\u6761\u4ef6\uff09 Cyclomatic Complexity = E - N + 2  = (2 + 2 + N) - N + 2 = 6</p>"},{"location":"course_notes/fit5171_note/#q3","title":"Q3","text":""},{"location":"course_notes/fit5171_note/#program-graph_1","title":"program graph","text":""},{"location":"course_notes/fit5171_note/#cyclomatic-complexity","title":"Cyclomatic complexity","text":"<p>draw the final condensed graph for the program graph you came up with in part (a)  above, and ii. calculate the Cyclomatic complexity of the condensed graph you draw  </p>"},{"location":"course_notes/fit5171_note/#q3_1","title":"Q3","text":"<p>Given an undirected graph G with vertices V = {1, 2, 3, 4, 5, 6, 7, 8} and edges E = {12, 14, 16, 22, 23, 28, 34, 35, 67, 78}</p>"},{"location":"course_notes/fit5171_note/#undirected-graphdirected-graph","title":"undirected graph/directed graph","text":""},{"location":"course_notes/fit5171_note/#node-degree","title":"node degree","text":"<p>Calculate the degree of each node in the graph.  </p>"},{"location":"course_notes/fit5171_note/#cyclomatic-number","title":"Cyclomatic number","text":"<p>The Cyclomatic number of of G, <code>V (G) = #E \u2212 #V + p = 10 \u2212 8 + 1 = 3</code> </p>"},{"location":"course_notes/fit5171_note/#source-nodes-or-sink-nodes","title":"source nodes or sink nodes","text":"<p>Source nodes: 1 Sink nodes: 4, 5, 8</p>"},{"location":"course_notes/fit5171_note/#semi-paths_1","title":"semi-paths","text":"<p>Yes, (12, 23, 16, 67), (12, 28, 16, 67), and (12, 23, 34, 16, 67, 78) are semi-paths  </p>"},{"location":"course_notes/fit5171_note/#x-connected-node","title":"x-connected node","text":"<p>0-connected: none. 1-connected: 2 &amp; 6, 3 &amp; 7, etc. 2-connected: 1 &amp; 2, 6 &amp; 7, etc. 3-connected: none.  </p>"},{"location":"course_notes/fit5171_note/#reachability-matrix","title":"reachability matrix","text":""},{"location":"course_notes/fit5171_note/#integration-testing","title":"Integration Testing","text":""},{"location":"course_notes/fit5171_note/#q3-select-reasonable-integration-method","title":"Q3 select reasonable integration method","text":"<p>One of the goals of integration testing is to be able to isolate faults when a test case causes a failure. Consider integration testing for a program written in a procedural/object-oriented programming language. Rate the following integration strategies on their abilities of (1) relative fault isolation and (2) testing of co-functionality. You also need to provide a rationale for your answer \u96c6\u6210\u6d4b\u8bd5\u7684\u76ee\u6807\u4e4b\u4e00\u662f\u80fd\u591f\u5728\u6d4b\u8bd5\u7528\u4f8b\u5bfc\u81f4\u6545\u969c\u65f6\u9694\u79bb\u6545\u969c\u3002\u8003\u8651\u5bf9\u4f7f\u7528\u9762\u5411\u8fc7\u7a0b/\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u3002\u8bc4\u4ef7\u4ee5\u4e0b\u96c6\u6210\u7b56\u7565\u5728 (1) \u76f8\u5bf9\u6545\u969c\u9694\u79bb\u548c (2) \u534f\u540c\u529f\u80fd\u6d4b\u8bd5\u65b9\u9762\u7684\u80fd\u529b\u3002\u60a8\u8fd8\u9700\u8981\u4e3a\u60a8\u7684\u56de\u7b54\u63d0\u4f9b\u7406\u7531 Show your ratings graphically by placing the letters corresponding to a strategy on a line, as in the example below. Suppose that for the ability of fault isolation, strategies X and Y are about equal and not very effective, and strategy Z is very effective. Note that this rating is relative and qualitative, so don\u2019t agonise over where exactly to put a  strategy, but focus on their relative position. A Big bang B Decomposition-based top-down integration C Decomposition-based bottom-up integration D Decomposition-based sandwich integration E Call graph-based pairwise integration F Call graph-based neighbourhood integration (radius 1)  G Call graph-based neighbourhood integration (radius 2)  </p> <p>the ranking of fault isolation from highest to lowest:  A is the worst. E&gt;F&gt;G. B\u2248C &gt; D  pairwise is from two random points but Decomposition only select one unknown pts.</p>"},{"location":"course_notes/fit5171_note/#q2_1","title":"Q2","text":""},{"location":"course_notes/fit5171_note/#mm-paths","title":"MM-paths","text":"<p>For example, the MM-path for component D (UserDAO) is MEP (D, 1) = (1, 2, 3). The MM-path for component E (MissionDAO) is MEP (E , 1) = (1, 2, 3) + MEP(A,1) = (1,2,3,5)  MEP(A,2) = (1,2,4)  MEP(A,3) = (5) + MEP(B,1) = (1,2,3,8)  MEP(B,2) = (1,2,4)  MEP(B,3) = (5,6,8)  MEP(B,4) = (5,7)  MEP(B,5) = (8) + MEP(C,1) = (1,2)  MEP(C,2) = (3,4,8)  MEP(C,3) = (3,5,6,8)  MEP(C,4) = (3,5,7,8</p>"},{"location":"course_notes/fit5171_note/#mm-path-complexity","title":"MM-path complexity","text":"<p>5 edges between A and B  2 edges between B and E  4 edges between C and D  7 edges between B and C The Cyclomatic complexity is <code>V (G) = #E \u2212 #V + p = 18 \u2212 5 + 1 = 14</code> </p>"},{"location":"course_notes/fit5171_note/#software-metrics","title":"Software Metrics","text":""},{"location":"course_notes/fit5171_note/#q4","title":"Q4","text":"<p>\u2203A, B : Program \u2022 M (A) + M (B) &lt; M (A + B) where M represents a given metric and A + B represents the composition of A and B Given a program, the repeated application of the following two operations can be used to  decompose it into a unique tree of structured programming constructs. Sequence: composing two program graphs sequentially by merging one program graph\u2019s  terminal node with the other program graph\u2019s initial node. For example, sequential  composition of programs A and B is denoted by A; B. Nesting: replacing one node in one program with the entirety of another program. For  example, nesting program B in program A at node x of A is denoted by A(B, x). The depth of nesting values of programs constructed by the above two operations are defined as below Sequence: n(P1; P2; . . . ; Pn) = max(n(P1), n(P2), . . . , n(Pn)), and Nesting: n(P1(P2; . . . ; Pn)) = 1 + max(n(P2), . . . , n(Pn)), where P2, . . . , Pn are sequentially  nested inside P1 Pn sequence (n = 1, 2, . . .) D2 while loop  D0 if-then D3 do-while loop  D1 if-then-else Cn case-switch The depth of nesting value for all the above constructs is 1 except for P1, which is 0. The  depth of nesting value of a program is calculated in a bottom-up fashion. For Weyuker\u2019s property 9 and the metric depth of nesting n(P ) of a valid program P , do the  following: (a) State whether the property holds or not.  (b) Prove your claim (informally). Sequence: n(A) = n(px) ; n(B) = n(py) n(A+B) = n(px;py) =max(n(px),n(py)) == n(A) or n(b);  n(A+B) &lt;= n(A) + n(b} Nesting: n(A) = n(p1) = 0  ; n(B) = n(p2) = 1 n(A+B) = n(p1(p2)) = 1 + max(n(p2)) = 2  ; n(A) + n(B) &lt; n(A+B)</p>"},{"location":"course_notes/fit5171_note/#mutation-testing_1","title":"Mutation Testing","text":""},{"location":"course_notes/fit5171_note/#q1_1","title":"Q1","text":"<p>The following Java method, min, returns the smallest of three integer parameters  </p> <pre><code>1 public int min ( int a , int b , int c ) {  \n2 int temp = a ;  \n3 if ( b &lt; a ) {  \n4 temp = b ;  \n5 }  \n6 if ( c &lt; b ) {  \n7 temp = c ;  \n8 }  \n9 return temp ;  \n10 }\n</code></pre>"},{"location":"course_notes/fit5171_note/#equivalent-mutant","title":"equivalent mutant","text":"<p>come up with an equivalent mutant by applying a first-order mutation. In your answer, identify: 1. The mutation operator applied, 2. The associated statement to be changed, and 3. What the statement is changed to.     Mutation Operator Applied: Relational Operator Replacement     \u5e94\u7528\u7684\u7a81\u53d8\u8fd0\u7b97\u7b26\uff1a\u5173\u7cfb\u8fd0\u7b97\u7b26\u66ff\u6362     This mutation operator involves changing the relational operator (e.g., &gt;, &lt;, = =, etc.) in a conditional statement.\u6b64\u7a81\u53d8\u8fd0\u7b97\u7b26\u6d89\u53ca\u66f4\u6539\u6761\u4ef6\u8bed\u53e5\u4e2d\u7684\u5173\u7cfb\u8fd0\u7b97\u7b26\uff08\u4f8b\u5982\uff0c &gt; \u3001 &lt; \u3001 == \u7b49\uff09\u3002     Associated Statement to be changed: Line 6 - if (c &lt; b)\u8981\u66f4\u6539\u7684\u76f8\u5173\u8bed\u53e5\uff1a\u7b2c 6 \u884c - if (c &lt; b)     What the statement is changed to: We will change the &lt; operator to &lt;=, resulting in the modified statement: if (c &lt;= b)\u8bed\u53e5\u66f4\u6539\u4e3a\uff1a\u6211\u4eec\u5c06 &lt; \u8fd0\u7b97\u7b26\u66f4\u6539\u4e3a &lt;= \uff0c\u5bfc\u81f4\u4fee\u6539\u540e\u7684\u8bed\u53e5\uff1a if (c &lt;= b)</p>"},{"location":"course_notes/fit5171_note/#non-equivalent-first-order-mutants","title":"non-equivalent first-order mutants","text":"<p>devise a set of three test cases that achieves 100% statement coverage. Come  up with three non-equivalent first-order mutants of the original program, making use one of the following mutation operators in each mutant. Determine the kill rate of your  test suite on the three mutants.  The mutation operators you can use are:  ror Relational operator replacement.  sdl Statement deletion. uoi Unary operator insertion.   </p> Test Case Input Expected Output Case 1 a = 5, b = 3, c = 7 3 Case 2 a = 4, b = 6, c = 2 2 Case 3 a = 1, b = 2, c = 1 1 Mutant\u00a0\u7a81\u53d8\u4f53 Operator\u00a0\u7b97\u5b50 Description\u00a0\u63cf\u8ff0 Original Statement\u00a0\u539f\u59cb\u58f0\u660e Mutated Statement\u00a0\u7a81\u53d8\u58f0\u660e Test Case Killed\u00a0\u6d4b\u8bd5\u7528\u4f8b\u88ab\u6740 Mutant 1\u00a0\u7a81\u53d8\u4f53 1 ror Relational Operator Replacement  \u5173\u7cfb\u8fd0\u7b97\u7b26\u66ff\u6362 if (b &lt; a)\u00a0\u5982\u679c\uff08b &lt; a\uff09 if (b &gt;= a)\u00a0\u5982\u679c \uff08b &gt;= a\uff09 Case 1, Case 3\u00a0\u6848\u4f8b 1\u3001\u6848\u4f8b 3 Mutant 2\u00a0\u53d8\u79cd\u4eba2 sdl Statement Deletion\u00a0\u8bed\u53e5\u5220\u9664 if (c &lt;= b)\u00a0\u5982\u679c \uff08c &lt;= b\uff09 delete line\u00a0\u5220\u9664\u884c Case 1, Case 2\u00a0\u6848\u4f8b 1\u3001\u6848\u4f8b 2 Mutant 3\u00a0\u53d8\u79cd\u4eba3 uoi Unary Operator Insertion\u00a0\u4e00\u5143\u8fd0\u7b97\u7b26\u63d2\u5165 temp = c;\u00a0\u6e29\u5ea6 = c; temp = -c;\u00a0\u6e29\u5ea6 = -c; Case 2, Case 3\u00a0\u6848\u4f8b 2\u3001\u6848\u4f8b 3 <p>All MT be killed by test cases, so the rate is 100%</p>"},{"location":"course_notes/fit5171_note/#statement-coverage","title":"statement coverage","text":"<p>is there a defect in the program? If so, develop the smallest set of test cases that achieves 100% statement coverage but does not reveal the defect. If not, develop  the smallest set of test cases that achieves 100% statement coverage.   </p> <p>defect in the program is that it doesn't compare the value of a and c. if a=1,b=3,c=2.the result will be 2 instead of 1.   </p> Test Case\u00a0\u6d4b\u8bd5\u7528\u4f8b a b c Expected Output\u00a0\u9884\u671f\u8f93\u51fa 1 1 3 2 1 2 3 2 1 1"},{"location":"course_notes/fit5225/","title":"FIT5225 Cloud computing and security 2023 s1","text":"<p>Create time: 2023-02-24  Last update: 2023-02-24</p>"},{"location":"course_notes/fit5225/#how-to-use-the-fit-study-note-document","title":"How to use the FIT study Note document","text":"<ol> <li>download the markdown file repository and  navigate to the <code>docs</code> folder</li> <li>view all the markdown files via Obsidian vault that can show the linked section in the note document   </li> <li> <p>You may find some extra material or program template  repository in the Course Brief introduction for the FIT Note markdown Document (some course don't have )</p> </li> <li> <p>you can view the web page which transfer from MD file online but will lose the extra information or wrong    markdown display</p> </li> </ol>"},{"location":"course_notes/fit5225/#fit5225-cloud-computing-and-security-course-brief-introduction","title":"FIT5225 Cloud computing and security Course Brief introduction","text":"<p>  You need to have a good grasp of computer networks (TCP/IP), be familiar with Linux and its shell  scripting and command line, you need to use python a lot and there are many hands-on activities  in this unit.  </p> <p>Unit learning Objectives 1. describe fundamental principles and paradigms of cloud computing; 2. identify appropriate design choices when developing real-world cloud computing applications; 3. apply different cloud programming methods and tools; 4. demonstrate a comprehensive understanding of virtualisation and container technologies; 5. design and implement a highly scalable cloud-based application; 6. analyse and evaluate the security of the current cloud services and in-cloud applications.  </p> <p>FIT5225 - Cloud computing and security done for the year 2023. (Semester 1)  </p>"},{"location":"course_notes/fit5225/#week-1-introduction-to-cloud-computing","title":"week 1 Introduction to Cloud Computing","text":""},{"location":"course_notes/fit5225/#lecture","title":"Lecture","text":""},{"location":"course_notes/fit5225/#learning-objectives","title":"Learning Objectives:","text":"<p>describe fundamental principles and paradigms of cloud computing  </p> <p>identify appropriate design choices when developing real-world cloud computing applications  </p> <p>Summary \u2022 Computer Networks vs Distributed Systems \u2022 Distributed Systems Challenges: heterogeneity, openness, security, scalability, failure handling,  concurrency, transparency, Quality of Service. \u2022 Cloud computing is all about delivering computing services over the Internet. \u2022 Technologies significantly contributed to make cloud computing viable: Grid computing,  webservices, virtualization, autonomic computing \u2022 Cloud Deployment Models: private, community, public, hybrid \u2022 Cloud Service Models: IaaS, PaaS, SaaS \u2022 Cloud and distributed computing skill is at the top of the most demanded job skills right now.</p>"},{"location":"course_notes/fit5225/#computer-networks-vs-distributed-systems","title":"Computer Networks vs Distributed Systems","text":"<ul> <li>A Computer Network: Is a collection of spatially separated, interconnected computers that  exchange messages based on specific protocols. Computers are addressed by IP addresses.  </li> <li>A Distributed System: Multiple computers on the network working together as a system. The spatial  separation of computers and communication aspects are hidden from users</li> </ul>"},{"location":"course_notes/fit5225/#distributed-system-challenges","title":"Distributed System Challenges","text":"<ol> <li>Heterogeneity-  use hardware and software resources of  varying characteristics (how to solve: Using standard protocol;  agreed upon message formats; API; Middleware; )   </li> <li>Openness: ability of extending the system in  different ways by adding hardware or software resources (key interfaces; uniform communication mechanism)  </li> <li>Security: aspects of security (Confidentiality; Integrity;  Availability); Security Mechanisms(Encryption; Authentication; Authorization)  </li> <li>Scalability: can handle the growth of the number of users.  </li> <li>Concurrency \u5e76\u53d1: access the same resource at the same time;</li> <li>Failure Handling: Detecting, Masking, Tolerating, Recovery, Redundancy  </li> <li>Transparency</li> <li>Quality of Service (QoS) non-functional properties of systems that affect QoS are: Reliability , Security, Performance, Adaptability, Availability </li> </ol>"},{"location":"course_notes/fit5225/#client-server-distributed-architectures","title":"Client-Server distributed architectures","text":"<p> Clients invoke services in servers and results are returned. Servers in turn can become clients to other services</p>"},{"location":"course_notes/fit5225/#peer-to-peer","title":"Peer-to-Peer","text":"<p> Each process in the systems plays a similar role interacting cooperatively as peers  (playing the roles of client and server simultaneously)</p>"},{"location":"course_notes/fit5225/#cloud-computing","title":"Cloud Computing","text":"<p>An IT paradigm that enables access to shared pools of configurable system resources in form of services that can be rapidly provisioned with minimal management effort, often over the Internet.  delivering computing services over the Internet. Avoid expensive up-front investments of establishing their own infrastructure Cloud is the \u201cinvisible\u201d backend to many application  </p>"},{"location":"course_notes/fit5225/#cloud-service-models","title":"Cloud Service Models","text":""},{"location":"course_notes/fit5225/#software-as-a-service-saas","title":"Software as a Service (SaaS)","text":"<p>provides applications and software to the customer in utility  based model which is accessible from a thin client interface  such as a Web browser  \u2022 Salesforce.com</p>"},{"location":"course_notes/fit5225/#platform-as-a-service-paas","title":"Platform as a Service (PaaS)","text":"<p>provides programming languages and tools to deploy  application onto the cloud infrastructure  Google App Engine</p>"},{"location":"course_notes/fit5225/#infrastructure-as-a-service-iaas","title":"Infrastructure as a Service (IaaS)","text":"<p>provides capabilities for the customers to provision  computational resources such as processing, storage,  network, and other fundamental computing resources Virtual  Machines(VMs)/Containers  \u2022 Example: Amazon EC2/</p>"},{"location":"course_notes/fit5225/#grid-computing","title":"Grid Computing","text":"<p>computer cluster is a set of computers connected by a local area network (LAN) that work  together can be viewed as a single system Grid computing: A type of parallel and distributed system to share compute and storage resources  distributed across different administrative domains </p>"},{"location":"course_notes/fit5225/#web-service","title":"Web service","text":"<p>A Web service is a software system designed to support interoperable machine-to-machine  interaction over a network using HTTP and technologies such as XML, SOAP, WSDL, and UDDI.  </p>"},{"location":"course_notes/fit5225/#hardware-virtualization","title":"Hardware Virtualization","text":"<p> hides the physical characteristics of a computing platform from the users, presenting  instead an abstract computing platform</p>"},{"location":"course_notes/fit5225/#autonomic-computing","title":"Autonomic Computing","text":"<p>Autonomic computing refers to the self-managing characteristics of distributed  computing resources, adapting to unpredictable changes while hiding intrinsic complexity to  operators and users</p>"},{"location":"course_notes/fit5225/#quiz","title":"quiz","text":""},{"location":"course_notes/fit5225/#workshop","title":"workshop","text":"<p>In this week tutorial classes, you will learn to work with Nectar as an example of a community cloud. You are supposed to run a virtual machine in the Nectar cloud and get familiar with the Nectar dashboard.</p> <p>Upon successful completion of this tutorial, you will gain the required knowledge to access the Nectar portal, create/modify virtual machines, establish remote connections to your VMs, and perform administration tasks such as installing a web server and opening required ports using security groups.  </p>"},{"location":"course_notes/fit5225/#how-to-set","title":"how to set","text":"<ol> <li>generate ssh key <code>ssh-keygen</code> </li> <li>set instance in nector</li> <li>import your public key to match</li> <li>ssh into your instance <code>ssh -i &lt;full-path-to-private-key&gt; ubuntu@&lt;IP-address&gt;</code> </li> <li>install the latest version of Apache web server <code>$ sudo apt update &amp;&amp; sudo apt install -y apache2 curl</code> </li> <li>print the default Apache  landing page <code>$ curl localhost</code></li> </ol>"},{"location":"course_notes/fit5225/#week-2-grid-and-cluster-computing","title":"Week 2 Grid and Cluster Computing","text":""},{"location":"course_notes/fit5225/#learning-objectives_1","title":"Learning Objectives:","text":"<ul> <li>describe fundamental principles and paradigms of cloud computing</li> <li>identify appropriate design choices when developing real-world cloud computing applications</li> </ul>"},{"location":"course_notes/fit5225/#reference","title":"Reference","text":"<p>Cluster Computing:\u00a0https://en.wikipedia.org/wiki/Computer_cluster Grid Computing:\u00a0https://en.wikipedia.org/wiki/Grid_computing</p>"},{"location":"course_notes/fit5225/#lecture_1","title":"Lecture","text":""},{"location":"course_notes/fit5225/#learning-outcomes","title":"Learning Outcomes","text":"<ol> <li>describe fundamental principles and paradigms of cloud computing;  </li> <li>identify appropriate design choices when developing real-world cloud computing applications;  </li> </ol>"},{"location":"course_notes/fit5225/#flynn-matrix","title":"Flynn Matrix","text":"<ul> <li>Single instruction stream, single data  stream (SISD)  </li> <li>Multiple instruction streams, single data  stream (MISD)  </li> <li>Single instruction stream, multiple data  streams (SIMD)  </li> <li>Multiple instruction streams, multiple data  streams (MIMD</li> <li></li> <li></li> </ul>"},{"location":"course_notes/fit5225/#parallel-computing-architectures","title":"parallel Computing Architectures","text":"<p>\u9009\u62e9\u54ea\u79cd\u7cfb\u7edf\u53d6\u51b3\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u7279\u6027\u548c\u8981\u6c42\uff0c\u4ee5\u53ca\u7cfb\u7edf\u7684\u6027\u80fd\u548c\u53ef\u4f38\u7f29\u6027\u9700\u6c42\u3002  + UMA\u7cfb\u7edf\u9002  \u5408\u89c4\u6a21\u8f83\u5c0f\u3001\u6570\u636e\u5171\u4eab\u9700\u6c42\u8f83\u5f3a\u7684\u591a\u5904\u7406\u5668\u7cfb\u7edf\uff1b  + SMP\u7cfb\u7edf\u5219\u66f4\u9002\u5408\u89c4\u6a21\u8f83\u5927\u3001\u6570\u636e\u5171\u4eab\u9700\u6c42 \u76f8\u5bf9\u8f83\u5f31\u7684\u591a\u5904\u7406\u5668\u7cfb\u7edf\uff1b + NUMA\u7cfb\u7edf\u9002\u5408\u89c4\u6a21\u66f4\u5927\u7684\u591a\u5904\u7406\u5668\u7cfb\u7edf\uff0c\u7279\u522b\u662f\u9700\u8981\u9ad8\u6027\u80fd\u548c\u53ef \u4f38\u7f29\u6027\u7684\u5e94\u7528\u7a0b\u5e8f\uff1b  + MPP\u7cfb\u7edf\u9002\u5408\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\u96c6\u548c\u9700\u8981\u5927\u91cf\u8ba1\u7b97\u8d44\u6e90\u7684\u5e94\u7528\u7a0b\u5e8f</p>"},{"location":"course_notes/fit5225/#massively-parallel-processors-mpp","title":"Massively Parallel Processors (MPP)","text":"<p>100+ nodes with a high-speed interconnection network/switch; Each node has 1+ processors, sharing of the main memory;  Separate copy of OS runs on each node These MPP databases(BigQuery Enterprise Data Warehouse \u00a0|\u00a0 Google Cloud) are designed to handle large volumes of data and provide high  performance and scalability. They are commonly used in data warehousing and business intelligence application</p>"},{"location":"course_notes/fit5225/#symmetric-multi-processors-smp","title":"Symmetric Multi-processors (SMP)","text":"<p>All global resources are shared among processors;  Nodes run the same OS (Enterprise servers; High-performance computing cluster; )  SMP architecture is commonly used in medium- to large-scale multiprocessor systems, and  provides a simple and efficient way to achieve multiprocessing without the complexities of  NUMA (Non-Uniform Memory Access) or MPP (Massively Parallel Processing) architectures.  SMP systems are typically used for applications that require shared access to a moderate  amount of memory and do not require high scalability or perform</p>"},{"location":"course_notes/fit5225/#non-uniform-memory-access-numa","title":"Non-Uniform Memory Access (NUMA)","text":"<p>Each processor has a global view of the available memory shared- address-space computer with local and global  memories (supercomputer; High-performance computing cluster) NUMA systems are typically used for large-scale parallel processing applications that require  high performance and scalability. They provide fast access to memory for each processor by  dividing the system memory into local and remote memory regions, and optimizing access to  these regions based on the location of the data being accessed. NUMA architecture can be  more complex and expensive to implement than UMA architecture, but it can provide better  performance and scalability for certain types of application  </p>"},{"location":"course_notes/fit5225/#clusters","title":"Clusters","text":"<p>Collection of workstations interconnected by a high-speed network, with nodes running a single system image</p>"},{"location":"course_notes/fit5225/#distributed-systems","title":"Distributed Systems","text":"<p>Grids/P2P/Internet Computing/Clouds</p>"},{"location":"course_notes/fit5225/#amdahls-law","title":"Amdahl\u2019s Law","text":"<p>$1/((1-p)+(p/n))$ </p>"},{"location":"course_notes/fit5225/#parallel-programming","title":"Parallel Programming","text":"<p>Shared Memory  \u2022 Threads  \u2022 Message Passing  \u2022 Data Parallel  \u2022 Hybrid Why? - To save time - Solve bigger and more complex problems - Leverage concurrency - It\u2019s very expensive to build high capacity and powerful CPUs and connect them together </p> <p>How - Phase parallel - Divide and conquer - Pipeline - Process farm - Work pool Limitations and Challenges + Finding efficient ways of parallelizing the source code + Designing and developing scalable algorithms is challenging + Message passing and job submission are not automated and need to be taken care of by the  user/programmer + Managing jobs in a parallel and distributed environment is prone to lots of errors, think about  communication, resource allocation, etc</p>"},{"location":"course_notes/fit5225/#cluster-computing","title":"Cluster Computing","text":"<p>Cluster computing is a collection of tightly or loosely connected computers that work together so that they act as a single entity. The connected computers execute operations all together thus creating the idea of a single system. The clusters are generally connected through fast local area networks (LANs)</p>"},{"location":"course_notes/fit5225/#grid-computing_1","title":"Grid Computing","text":"<p>grid as a system that coordinates resources which are not subject to centralized control,  using standard, open, general-purpose protocols and interfaces to deliver nontrivial qualities of service</p>"},{"location":"course_notes/fit5225/#summary-of-cluster-grid-and-cloud-computing","title":"Summary of Cluster, Grid, and Cloud Computing","text":""},{"location":"course_notes/fit5225/#open-multi-processing-openmpi","title":"Open Multi-Processing (OpenMPI)","text":"<p>A master thread forks a number of sub-threads and divides tasks between them   Open Multi-Processing (OpenMP) is an API that includes directives for multi-threaded, shared memory parallel programming. Thread-based rather than using message passing</p>"},{"location":"course_notes/fit5225/#message-passing-interface-mpi","title":"Message Passing Interface (MPI)","text":"<p> MPI is a standardized and portable message-passing system to function on a wide variety of  parallel computers.  Widely adopted for inter-process communication in parallel systems. \u2022 Supports both p2p and collective modes of communication</p>"},{"location":"course_notes/fit5225/#quiz_1","title":"QUIZ","text":""},{"location":"course_notes/fit5225/#tutorial","title":"Tutorial","text":"<p>The main purpose of this tutorial is to help you gain and develop a better understanding of distributed systems, parallel programming, and message passing between processes. You will build, run, and debug multi-threaded programs as well as simple programs that use an MPI emulator to demonstrate message passing between processes running on different CPU cores.\u672c\u6559\u7a0b\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5e2e\u52a9\u60a8\u66f4\u597d\u5730\u7406\u89e3\u5206\u5e03\u5f0f\u7cfb\u7edf\u3001\u5e76\u884c\u7f16\u7a0b\u548c\u8fdb\u7a0b\u95f4\u7684\u6d88\u606f\u4f20\u9012\u3002\u60a8\u5c06\u6784\u5efa\u3001\u8fd0\u884c\u548c\u8c03\u8bd5\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4ee5\u53ca\u4f7f\u7528 MPI \u6a21\u62df\u5668\u7684\u7b80\u5355\u7a0b\u5e8f\uff0c\u4ee5\u6f14\u793a\u5728\u4e0d\u540c CPU \u5185\u6838\u4e0a\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e4b\u95f4\u7684\u6d88\u606f\u4f20\u9012\u3002</p>"},{"location":"course_notes/fit5225/#week-3-virtualization","title":"Week 3 Virtualization","text":""},{"location":"course_notes/fit5225/#lecture_2","title":"Lecture","text":"<ul> <li>Hardware Virtualization  </li> <li>Virtualization Features: Isolation, Encapsulation, Portability, and Interposition\u2019  </li> <li>Hypervisor, Virtual Machine, Guest Operating System, Host  </li> <li>Processor, Memory and I/O Devices virtualization  </li> <li>Live and cold VM migration  </li> <li>Case studies: Xen and VMWare  </li> </ul> <p>describe fundamental principles and paradigms of cloud computing; demonstrate a comprehensive understanding of virtualisation and container technologies;  </p>"},{"location":"course_notes/fit5225/#virtualization","title":"Virtualization","text":"<p>Virtualization is a broad concept that refers to the creation of a virtual version of something, whether  hardware, a software environment, storage, or a network.  </p>"},{"location":"course_notes/fit5225/#motivations-for-virtualization","title":"Motivations for virtualization","text":"<ul> <li>Optimal allocation of the virtual machines to physical server  </li> <li>Virtualization is very relevant to the provision of cloud computing (multi-tenancy)  </li> <li>Create and destroy virtual machines readily and with little overhead  </li> <li>Several different operating system environments on a single desktop computer  </li> </ul>"},{"location":"course_notes/fit5225/#virtualization-features","title":"Virtualization Features","text":"<ul> <li>Isolation\u9694\u79bb (Fault isolation, performance, software isolation)  </li> <li>Encapsulation\u5c01\u88c5 (Cleanly capture all VM state, enables VM snapshots, clone VMs easily, make copies)  </li> <li>Portability\u53ef\u79fb\u690d\u6027 (Independent of physical hardware, enables live and cold migration of VMs)  </li> <li>Interposition\u63d2\u5165(Transformations on instructions, memory, I/O Enables transparent resource over commitment, encryption, compression, replication)</li> </ul>"},{"location":"course_notes/fit5225/#virtualization-types","title":"Virtualization Types","text":"<p> + Full virtualization : identical interface to the underlying physical architecture  unmodified guest operating system(VMware, Virtualbox) + Paravirtualization : guest operating systems to communicate with the hypervisor.  guest os to be modified in order to interact with paravirtualization interface  communicates with the hypervisor using driver  higher performance (XEN)</p>"},{"location":"course_notes/fit5225/#hardware-virtualization_1","title":"Hardware Virtualization","text":"<p>The term virtualization is often synonymous with hardware virtualization/system virtualization.  \u201ca technique for hiding the physical characteristics of computing resources which allows having  multiple virtual machines (VMs) over the underlying physical machine architecture, with each virtual  machine running a separate operating system instance.</p>"},{"location":"course_notes/fit5225/#hypervisor","title":"Hypervisor \u7ba1\u7406\u7a0b\u5e8f","text":"<p> + Hardware virtualization is implemented by a thin layer of software on  top of the underlying physical machine architecture referred to as  Hypervisor (Virtual Machine Monitor). + Virtual Machine: A representation of a real machine using  hardware/software that can host a guest operating system + Guest Operating System: An operating system that runs in a virtual  machine + Host: the original environment where the guest OS is supposed to  be managed</p>"},{"location":"course_notes/fit5225/#computing-systems","title":"Computing Systems","text":"<p> 1. Instruction Set Architecture (ISA) 2. Application Binary Interface (ABI) 3. Application programming interface (API) For any operation to be performed in the  application level API, ABI and ISA are  responsible for making it happen</p>"},{"location":"course_notes/fit5225/#virtualizing-memory","title":"Virtualizing Memory","text":""},{"location":"course_notes/fit5225/#tutorial_1","title":"Tutorial","text":"<p>upon successful completion of this tutorial, you will gain the required knowledge to access Oracle Cloud Infrastructure  (OCI), create/modify virtual machines, running a micro web framework, and working with Postman 1. <code>sudo apt-get update &amp;&amp; sudo apt-get install -y python3-pip curl &amp;&amp; pip3 install flask</code> install the <code>python3-pip</code> and <code>curl</code> packages, and then install the <code>flask</code> package using <code>pip3</code> 2. <code>touch flask_script.py</code> create py file 3. <code>nano flask_script.py</code> open the file in the nano text editor  4. <code>sudo apt update</code> check for any updates available for the installed packages and update 5. <code>sudo apt install firewalld</code> install firewall service that provides a dynamically managed firewall with support for network/firewall zones 6. <code>sudo systemctl enable firewalld</code> <code>firewalld</code> service will start automatically every time the system boots up 7. <code>sudo firewall-cmd --permanent --zone=public --add-port=5000/tc</code> add a permanent rule to the firewall on Ubuntu to allow incoming traffic on port 5000 for TCP protocol. 8. <code>sudo firewall-cmd --reload</code> reload the <code>firewalld</code> firewall configuration. This means that any changes made to the firewall rules, such as adding or removing ports, will take effect immediately without having to restart the firewall service. 9. <code>python3 flask_script.py &amp;</code>  command that runs the <code>flask_script.py</code> Python script in the background as a separate process 10. <code>curl -iX GET &lt;IP-ADDR&gt;:5000/</code> use the <code>curl</code> tool to make an HTTP GET request to the web server running on the specified IP address and port 5000. The server will then respond with an HTTP response that includes the requested data, and the <code>-i</code> option will cause <code>curl</code> to display the HTTP header along with the response body.</p>"},{"location":"course_notes/fit5225/#week4-containers","title":"Week4  Containers","text":"<p>describe fundamental principles and paradigms of cloud computing; demonstrate a comprehensive understanding of virtualisation and container technologies</p>"},{"location":"course_notes/fit5225/#lecture_3","title":"Lecture","text":"<p>VMs and Containers Docker as a containers enabler (Docker Engine Components  Docker Images, Image registries, Layers, Dockerfile ) Container Orchestration (DockerSwarm  Kubernetes ) </p>"},{"location":"course_notes/fit5225/#virtualization-advantages-and-problems","title":"Virtualization Advantages and Problems","text":"<p>Advantages: + Minimize hardware costs (CapEx) + Easily move VMs to other data centre + Consolidate idle workloads + Easier automation (Lower OpEx)</p> <p>Problems: + Every VM requires its own dedicated OS + Needs maintenance, update + VMs are slow to boot  Portability issues Between hypervisors and cloud platforms  </p>"},{"location":"course_notes/fit5225/#containers","title":"Containers","text":"<ul> <li>Containers on a single host share a single OS.  </li> <li>Containers are fast to start  </li> <li>Containers are ultra-portable (own file system/data, own networking)  </li> <li>Containers are isolated</li> <li>Multiple copies can be run on the same machine or different machine \u21d2 Scalable  Same image can run on a personal machine, in a data centre or in a cloud</li> <li>Can be stopped, saved and moved to another machine or for later run  </li> </ul>"},{"location":"course_notes/fit5225/#containers-vs-vms","title":"Containers vs. VMs","text":"<p>What\u2019s the Diff: VMs vs. Containers </p> VMs Containers Type Heavyweight Lightweight Performance Limited performance Native performance CPU overhead &gt;10% &lt;5% Disk I/O &gt;50% Negligible OS Each VM runs in its own OS All containers share the host OS Virtualization Hardware-level virtualization OS virtualization Boot time In minutes In seconds/milliseconds Memory Allocates required memory Requires less memory space Security Fully isolated and hence more secure (hypercalls) Process-level isolation, possibly less secure (syscalls on the shared kernel) Impact on Legacy Application Low-medium High impact on legacy application applications Multiple applications on multiple servers Many copies of a single application"},{"location":"course_notes/fit5225/#docker","title":"Docker","text":"<ul> <li>made Linux containers usable for everybody.</li> <li>Most of the project and its tools are written in Golang</li> </ul>"},{"location":"course_notes/fit5225/#devops","title":"DevOps","text":"<ul> <li> <p>Ops Perspective  </p> <ul> <li>download an image,  </li> <li>start a new container,  </li> <li>log in to the new container,</li> <li>run a command inside of it, and then destroy it.  </li> </ul> </li> <li> <p>Dev Perspective  </p> <ul> <li>pull some app-code from GitHub,  </li> <li>inspect a Dockerfile,  </li> <li>containerize the app,  </li> <li>run it as a container.  </li> </ul> </li> </ul>"},{"location":"course_notes/fit5225/#docker-engine","title":"Docker Engine","text":"<p> + Docker Daemon manages containers, images, builds and  more + Docker Client communicates with the Docker Daemon to  execute commands + A REST API can be used for interacting with the Docker  Daemon remotely + Docker Images are read-only templates that you build from a  set of instructions written in your Dockerfile + Docker container wraps an application\u2019s software into a box  with everything the application needs to run + Docker registry is a storage and distribution system for  named Docker images.  The registry allows Docker users to pull images locally, as  well as push new images to the registry (given adequate  access permissions when applicable).</p> <p> Docker engine main components: - Docker client - Docker daemon     - Image management, image builds, the  REST API, authentication, security, core  networking, and orchestration - containerd     - container lifecycle management     - start | stop | pause | rm.... - runc - a small, lightweight CLI wrapper for  libcontainer</p>"},{"location":"course_notes/fit5225/#images","title":"Images","text":"<p>Containers are built from images and can be saved as image  The process of getting images onto a Docker host is called pulling <code>$ docker image pull ubuntu:latest</code>  ubuntu is the repository and latest is the tag</p>"},{"location":"course_notes/fit5225/#layers","title":"layers","text":"<ul> <li>Docker image is just a bunch of loosely- connected read-only layer  </li> <li>image is built layer by layer  </li> <li>Layers in an image can be inspected by Docker  commands  </li> <li>A file in the higher layer obscures the file directly  below it.  This allows updated versions of files to be added as  new layers to the image  </li> <li>Multiple images can, and do, share layers. This leads  to efficiencies in space and performance</li> </ul>"},{"location":"course_notes/fit5225/#starting-a-new-container","title":"Starting a new container","text":"<p><code>$ docker container run --name  ctr1 -it alpine:latest sh</code> This command creates and runs a new container named ctr1 from the alpine:latest image and attaches an interactive shell to it.   1. When you type command into the Docker CLI, the Docker  client converts them into the appropriate API payload and  POSTs them to the correct API endpoint 2. The API is implemented in the daemon 3. Once the daemon receives the command to create a new  container, it makes a call to containerd  4. containerd uses runc to create containe 5. runc interfaces with the OS kernel to pull together all of the  constructs necessary to create a container (namespaces,  cgroups etc</p>"},{"location":"course_notes/fit5225/#docker-command","title":"Docker command","text":"<ul> <li><code>$ docker container ls</code>: This command lists all the running containers on the system. It shows information such as container ID, image name, command, creation time, status, and port mappings.</li> <li><code>$ docker container exec -it 3027eb644874 bash</code>: This command executes a bash shell in an existing container with ID 3027eb644874. The -it option makes the shell interactive and attaches it to the terminal.</li> <li><code>$ docker container stop 3027eb64487</code>: This command stops a running container with ID 3027eb64487. It sends a SIGTERM signal to the main process inside the container and waits for a grace period before killing it with SIGKILL if it does not exit.</li> <li><code>$ docker container rm 3027eb64487</code>: This command removes a stopped container with ID 3027eb64487. It deletes all the files and data associated with the container from the system.</li> </ul>"},{"location":"course_notes/fit5225/#tutorial_2","title":"Tutorial","text":""},{"location":"course_notes/fit5225/#install-docker","title":"Install Docker","text":"<ol> <li><code>sudo apt update</code>\u00a0updates the package index and the software repositories on the system. It retrieves the information about the new or updated packages versions, dependencies, and their URLs.  </li> <li><code>sudo apt install -y apt-transport-https ca-certificates curl gnupg software-properties-common lsb-release</code> this command is installing essential packages required for managing and installing software  </li> <li><code>sudo mkdir -m 0755 -p /etc/apt/keyrings</code> \u00a0this command creates a new directory named\u00a0<code>keyrings</code>\u00a0under the\u00a0<code>/etc/apt</code>\u00a0directory with specified permissions. The purpose of this directory is to store GPG keys that are required to authenticate packages in apt repositories. </li> <li><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</code>  downloads the Docker GPG key file, decrypts it using\u00a0<code>gpg</code>, and saves it in the\u00a0<code>/etc/apt/keyrings</code>\u00a0directory with the name\u00a0<code>docker.gpg</code>. This allows the\u00a0<code>apt</code>\u00a0package manager to authenticate and verify packages from Docker repositories.  </li> <li><code>sudo chmod a+r /etc/apt/keyrings/docker.gpg</code> this command allows all users to read the Docker GPG key file (<code>docker.gpg</code>). This is necessary to allow the\u00a0<code>apt</code>\u00a0package manager to authenticate and verify packages from Docker repositories.  </li> <li><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</code> this command adds the Docker repository information to the\u00a0<code>docker.list</code>\u00a0file in the\u00a0<code>/etc/apt/sources.list.d</code>\u00a0directory. This file is used by the\u00a0<code>apt</code>\u00a0package manager to download and install packages from the Docker repository using the GPG key that was installed earlier.  </li> <li><code>sudo apt update</code> </li> <li><code>sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</code> this command installs the Docker platform and related components using the\u00a0<code>apt</code>\u00a0package manager. After installation, the\u00a0<code>docker</code>\u00a0command should be available in the terminal, and Docker should be ready to use on the system  </li> <li><code>sudo usermod -aG docker ${USER}</code>  this command adds the current user to the\u00a0<code>docker</code>\u00a0group, enabling them to use Docker without needing to enter\u00a0<code>sudo</code>\u00a0before every command. However, you may need to log out of the current shell or open a new terminal window for the group changes to take effect.</li> </ol>"},{"location":"course_notes/fit5225/#managing-containers","title":"Managing Containers","text":"<ol> <li>the\u00a0<code>docker run hello-world</code>\u00a0command downloads the\u00a0<code>hello-world</code>\u00a0image from the Docker Hub repository and creates a new container using that image. The container then prints a message on the command-line interface that confirms the successful installation of Docker on the system  </li> <li><code>docker ps -a</code> command lists all the containers on the system, including those that are currently running and those that have stopped. It provides information such as the container's ID, image name, status, creation time, and exit code.  </li> <li><code>docker image list</code> s all the Docker images that are present on the system. It provides information such as the image's repository name, tag, image ID, and creation time.  </li> <li><code>docker pull ubuntu</code>  downloads the latest version of the Ubuntu image from the Docker Hub repository and saves it locally on the system  </li> <li><code>docker run ubuntu sh -c \"echo Hello FIT5225 from ubuntu; ls; echo bye guys\"</code> creates a container from the\u00a0<code>ubuntu</code>\u00a0image and runs a command to print \"Hello FIT5225 from ubuntu\", list the contents of the current directory, and print \"bye guys\".  </li> <li><code>docker run -it ubuntu bash</code> command creates a new container from the\u00a0<code>ubuntu</code>\u00a0image and starts a new interactive session with a Bash shell or command prompt inside the container By default, the container will not be deleted after exit and if  you run <code>sudo docker ps -a</code> again you will see a list of existing containers.  </li> <li><code>docker run -it --rm ubuntu bash</code> <code>--rm</code>\u00a0is an option to the\u00a0<code>run</code>\u00a0command that tells Docker to automatically remove the container when it exits. This helps keep the disk space of your machine clean by automatically cleaning up unnecessary containers. When executed, the\u00a0<code>docker run -it --rm ubuntu bash</code>\u00a0command creates a new container from the\u00a0<code>ubuntu</code>\u00a0image, starts a new interactive session with a Bash shell or command prompt inside the container, and automatically removes the container when it exits.  </li> <li><code>docker run -t -d ubuntu</code>\u00a0command creates a new container from the\u00a0<code>ubuntu</code>\u00a0image, starts the container in the background or in detached mode, and returns the container ID to the console.  </li> <li><code>docker exec -i -t &lt;container-id&gt; bash</code> To create an interactive shell to a running container </li> <li><code>docker stop &lt;container-id&gt;</code> To stop the container  </li> <li><code>docker rm &lt;container-id&gt;</code> to And to remove the container  </li> <li><code>docker rm -f $(docker ps -a -q)</code> And to remove all containers</li> </ol>"},{"location":"course_notes/fit5225/#running-a-web-server","title":"Running a web Server","text":"<ol> <li><code>docker run --name myserver -p 8080:80 -d nginx</code> </li> <li>Create a sample html file in a local folder under your home directory named \u201cwww\u201d, name it as index.html </li> <li>Change the current directory to your home directory by running the following command: <code>cd ~</code> Create a new directory named \"www\" in your home directory by running the following command: <code>mkdir www</code> </li> <li>Create a new file named \"index.html\" in the \"www\" directory and open it with the Nano editor by running the following command:<code>nano index.html</code>  Copy and paste the following content into the Nano editor Save the file and exit the Nano editor by pressing\u00a0<code>Ctrl-X</code>, then\u00a0<code>Y</code>, then\u00a0<code>Enter</code></li> <li><code>curl &lt;ip address of your machine&gt;:8080</code> execute a GET request to the specified IP address of your machine on port 8080 using the\u00a0<code>curl</code>\u00a0utility  Open port 8080 in your security group, verify that you can access the web page using your browser </li> </ol>"},{"location":"course_notes/fit5225/#creating-docker-images","title":"Creating Docker Images","text":"<p><code>mkdir demo_&lt;YourName&gt;</code>  Create a requirements.txt file <code>flask</code>;   Create a file named my_script.py;  ```py  from flask import Flask app = Flask(name) @app.route(\"/\") def hello():     return \"Hello World from FIT5225!\" if name == \"main\":     app.run(host='0.0.0.0'</p> <pre><code> Create a file named Dockerfile:  \n ```\n FROM python:3.7-alpine  \nWORKDIR /code  \nADD my_script.py /code  \nCOPY requirements.txt requirements.txt  \nRUN pip install -r requirements.txt  \nCMD [\"python\", \"/code/my_script.py\"]\n</code></pre> <p>Dockerfile that starts with a python 3.7 image based on Alpine Linux, sets the working directory to\u00a0<code>/code</code>, adds\u00a0<code>my_script.py</code>\u00a0to the working directory, copies the\u00a0<code>requirements.txt</code>\u00a0file to the working directory, installs the requirements using pip, and finally runs the command\u00a0<code>python /code/my_script.py</code>\u00a0when the container starts. <code>docker build -t flask-app .</code> build an image from the Dockerfile <code>docker run -d -p 5000:5000 --name my-flask-app flask-app</code> \u00a0starts a Docker container in detached mode (<code>-d</code>), maps port\u00a0<code>5000</code>\u00a0inside the container to port\u00a0<code>5000</code>\u00a0on the host machine (<code>-p 5000:5000</code>), names the container\u00a0<code>my-flask-app</code>\u00a0(<code>--name my-flask-app</code>), and uses the\u00a0<code>flask-app</code>\u00a0image to start the container.  </p>"},{"location":"course_notes/fit5225/#week-5-container-orchestration","title":"Week 5 Container Orchestration","text":"<p>.Container orchestration is the automation of the operational effort required to run containerized workloads and services. This includes a wide range of things software teams need to manage a container's lifecycle, including provisioning, deployment, scaling (up and down), networking, load balancing and more. This week, we will introduce\u00a0DockerSwarm and Kubernetes as two well-known container orchestration methods when we run a cluster of containers. -   describe fundamental principles and paradigms of cloud computing -   demonstrate a comprehensive understanding of virtualisation and container technologies</p>"},{"location":"course_notes/fit5225/#lecture_4","title":"Lecture","text":""},{"location":"course_notes/fit5225/#tutorial_3","title":"Tutorial","text":"<ol> <li>we need to create 3 VMs in Oracle cloud, each with 2 cores (AMD) and 8GB RAM, use Ubuntu 22.04 image and  tick the Burstable option with 50% baseline. This option will give you 50% cost saving, but it\u2019s able to burst to higher  CPU frequency when needed.  Name the 3 VMs as: k8s-master, k8s-worker1, k8s-worker2  You need to open TCP port 6443 on your controller(master) and worker nodes.</li> <li>Use ssh to connect to all 3 VMs and follow these steps <code>sudo apt update &amp;&amp; sudo apt install -y apt-transport-https ca-certificates curl gnupg software-properties-common lsb-release &amp;&amp; sudo mkdir -m 0755 -p /etc/apt/keyrings &amp;&amp; curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg &amp;&amp; sudo chmod a+r /etc/apt/keyrings/docker.gpg &amp;&amp; echo \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null &amp;&amp; sudo apt update &amp;&amp; sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin &amp;&amp; sudo usermod -aG docker ${USER}</code> Then logout and login again  </li> <li>Use ssh to connect to all 3 VMs and follow these steps: <code>wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.1/cri-dockerd_0.3.1.3-0.ubuntu-jammy_amd64.deb &amp;&amp; sudo dpkg -i cri-dockerd_0.3.1.3-0.ubuntu-jammy_amd64.deb &amp;&amp; sudo apt update &amp;&amp; sudo apt-get install -y apt-transport-https ca-certificates curl &amp;&amp; sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg &amp;&amp; echo \"deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee /etc/apt/sources.list.d/kubernetes.list &amp;&amp; sudo apt update &amp;&amp; sudo apt-get install -y kubelet kubeadm kubectl &amp;&amp; sudo apt-mark hold kubelet kubeadm kubectl &amp;&amp; kubeadm version</code> </li> <li>Open ports with iptables(Oracle Cloud)  Oracle-provided images have strict traffic control for security reasons. In addition to the VCN security list, you also need  to edit the iptables for all nodes <code>sudo nano /etc/iptables/rules.v4</code> </li> <li>initialise Kubeadm: (master only) <code>sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --cri-socket=unix:///var/run/cri-dockerd.sock --apiserver-advertise-address=&lt;master private ip&gt;</code> and it will print such result <code>Then you can join any number of worker nodes by running the following on each as root: kubeadm join *** --token **</code> </li> <li>After initialisation, on master node only <code>mkdir -p $HOME/.kube &amp;&amp; sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config &amp;&amp; sudo chown $(id -u):$(id -g) $HOME/.kube/config</code> </li> <li>Now you can join your worker nodes with the provided join command, then check if the nodes are ready. Please note the command has to be executed with sudo and specify which cri-socket to connect <code>sudo &lt;JOIN_COMMAND&gt; --cri-socket=unix:///var/run/cri-dockerd.sock</code> (master node) <code>kubectl get nodes</code> </li> <li></li> </ol>"},{"location":"course_notes/fit5225/#quiz-2","title":"Quiz 2","text":"<p>Quiz2 exercise 1 Quiz 2 exercise 2 Quiz2 moodle </p>"},{"location":"course_notes/fit5225/#week-6-web-service-and-service-oriented-architecture","title":"Week 6 Web Service and Service-Oriented Architecture","text":"<p>week6 flux quiz Flask REST API Tutorial - Python Tutorial Flask-RESTful \u2014 Flask-RESTful 0.3.8 documentation This week in the first part lecture, we will learn the fundamentals of web services and best practices to create and use them including\u00a0SOAP\u00a0and\u00a0REST.\u00a0A\u00a0web service\u00a0is a basic building block in service-oriented architecture (SOA).\u00a0SOA is an architectural pattern in computer software design in which application components provide services to other components via a communications protocol, typically over a network. The principles of service orientation are independent of any product, vendor or technology.\u00a0 A Web service is a software system designed to support interoperable machine-to-machine interaction over the network. It has an interface defined in a specific description and format. Other machines interact with the Web service in a manner prescribed by its description, typically conveyed using HTTP with an XML or JSON serialization in conjunction with other Web-related standards.   </p>"},{"location":"course_notes/fit5225/#learning-objectives_2","title":"Learning Objectives","text":"<ul> <li>describe fundamental principles and paradigms of cloud computing;</li> <li>identify appropriate design choices when developing real-world cloud computing applications;\u00a0</li> <li>apply different cloud programming methods and tools;</li> </ul>"},{"location":"course_notes/fit5225/#assignment-1","title":"Assignment 1","text":"<p>assignment 1 git repository for FIT5225_23s1/assignment1/ </p>"},{"location":"course_notes/fit5225/#week-7-infrastructure-automation-and-code-versioning","title":"Week 7 Infrastructure Automation and Code Versioning","text":"<p>Infrastructure automation refers to the use of software tools and processes to automatically provision, configure, manage, and monitor IT infrastructure resources. This approach reduces the manual effort and errors associated with managing infrastructure, improves agility, scalability, and reliability, and enables organisations to focus on delivering value to their customers. Infrastructure automation is widely used in cloud computing. Thus, this week, we spend some time discussing Infrastructure Automation and Infrastructure as code (IaC). Code versioning, which is often integrated into infrastructure automation workflows, allows developers to track and manage changes to code and infrastructure configurations over time, enabling better collaboration, code reuse, and auditing. We also cover code versioning and Git this week. \u57fa\u7840\u8bbe\u65bd\u81ea\u52a8\u5316\u662f\u6307\u4f7f\u7528\u8f6f\u4ef6\u5de5\u5177\u548c\u6d41\u7a0b\u81ea\u52a8\u4f9b\u5e94\u3001\u914d\u7f6e\u3001\u7ba1\u7406\u548c\u76d1\u63a7 IT \u57fa\u7840\u8bbe\u65bd\u8d44\u6e90\u3002\u8fd9\u79cd\u65b9\u6cd5\u51cf\u5c11\u4e86\u4e0e\u7ba1\u7406\u57fa\u7840\u67b6\u6784\u76f8\u5173\u7684\u624b\u52a8\u5de5\u4f5c\u548c\u9519\u8bef\uff0c\u63d0\u9ad8\u4e86\u654f\u6377\u6027\u3001\u53ef\u6269\u5c55\u6027\u548c\u53ef\u9760\u6027\uff0c\u5e76\u4f7f\u7ec4\u7ec7\u80fd\u591f\u4e13\u6ce8\u4e8e\u4e3a\u5ba2\u6237\u63d0\u4f9b\u4ef7\u503c\u3002\u57fa\u7840\u8bbe\u65bd\u81ea\u52a8\u5316\u5728\u4e91\u8ba1\u7b97\u4e2d\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\u3002\u56e0\u6b64\uff0c\u672c\u5468\uff0c\u6211\u4eec\u5c06\u82b1\u4e00\u4e9b\u65f6\u95f4\u8ba8\u8bba\u57fa\u7840\u8bbe\u65bd\u81ea\u52a8\u5316\u548c\u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801 (IaC)\u3002\u4ee3\u7801\u7248\u672c\u63a7\u5236\u901a\u5e38\u96c6\u6210\u5230\u57fa\u7840\u67b6\u6784\u81ea\u52a8\u5316\u5de5\u4f5c\u6d41\u7a0b\u4e2d\uff0c\u5b83\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u968f\u65f6\u95f4\u8ddf\u8e2a\u548c\u7ba1\u7406\u4ee3\u7801\u548c\u57fa\u7840\u67b6\u6784\u914d\u7f6e\u7684\u66f4\u6539\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u597d\u7684\u534f\u4f5c\u3001\u4ee3\u7801\u91cd\u7528\u548c\u5ba1\u8ba1\u3002\u672c\u5468\u6211\u4eec\u8fd8\u4ecb\u7ecd\u4e86\u4ee3\u7801\u7248\u672c\u63a7\u5236\u548c Git\u3002</p> <p>Cloud Platforms: AWS (Part 1) \u4e91\u5e73\u53f0\uff1aAWS\uff08\u7b2c 1 \u90e8\u5206\uff09 We will continue our discussion on cloud platforms and introduce Amazon Web Services (AWS). AWS is a subsidiary of Amazon that provides on-demand cloud computing platforms and APIs to individuals, companies, and governments on a metered, pay-as-you-go basis. AWS offers wide range of products and cloud services, including computing, storage, networking, databases, analytics, application services, deployment, management, mobile, developer tools, and IoT services. This lecture will provide a brief overview of these services. \u6211\u4eec\u5c06\u7ee7\u7eed\u8ba8\u8bba\u4e91\u5e73\u53f0\u5e76\u4ecb\u7ecd Amazon Web Services (AWS)\u3002 AWS \u662f Amazon \u7684\u5b50\u516c\u53f8\uff0c\u4ee5\u6309\u9700\u4ed8\u8d39\u7684\u65b9\u5f0f\u5411\u4e2a\u4eba\u3001\u516c\u53f8\u548c\u653f\u5e9c\u63d0\u4f9b\u6309\u9700\u4e91\u8ba1\u7b97\u5e73\u53f0\u548c API\u3002 AWS \u63d0\u4f9b\u5e7f\u6cdb\u7684\u4ea7\u54c1\u548c\u4e91\u670d\u52a1\uff0c\u5305\u62ec\u8ba1\u7b97\u3001\u5b58\u50a8\u3001\u7f51\u7edc\u3001\u6570\u636e\u5e93\u3001\u5206\u6790\u3001\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u3001\u90e8\u7f72\u3001\u7ba1\u7406\u3001\u79fb\u52a8\u3001\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u548c\u7269\u8054\u7f51\u670d\u52a1\u3002\u672c\u8bb2\u5ea7\u5c06\u7b80\u8981\u6982\u8ff0\u8fd9\u4e9b\u670d\u52a1\u3002</p> <p>Learning Objectives \u5b66\u4e60\u76ee\u6807 Understand the benefits of infrastructure automation and learn about Infrastructure as Code (IaC) such as Ansible. \u4e86\u89e3\u57fa\u7840\u8bbe\u65bd\u81ea\u52a8\u5316\u7684\u597d\u5904\u5e76\u4e86\u89e3\u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801 (IaC)\uff0c\u4f8b\u5982 Ansible\u3002 Explore the use of code versioning tools like Git for tracking changes to code. \u63a2\u7d22\u4f7f\u7528 Git \u7b49\u4ee3\u7801\u7248\u672c\u63a7\u5236\u5de5\u5177\u6765\u8ddf\u8e2a\u4ee3\u7801\u66f4\u6539\u3002 Gain a basic understanding of Amazon Web Services (AWS) and the wide range of products and cloud services it offers. \u57fa\u672c\u4e86\u89e3\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1 (AWS) \u53ca\u5176\u63d0\u4f9b\u7684\u5404\u79cd\u4ea7\u54c1\u548c\u4e91\u670d\u52a1\u3002</p>"},{"location":"course_notes/fit5225/#lecture_5","title":"lecture","text":"<p>\ud83c\udf33\ud83d\ude80 CS Visualized: Useful Git Commands - DEV Community </p>"},{"location":"course_notes/fit5225/#tutorial_4","title":"Tutorial","text":"<p>This tutorial covers basics of working with Git repositories and common tasks in code versioning systems. You will learn how a Git repository is initialised and get to know the commands that are used for creating a new branch, staging changes and committing them, and performing merge and rebase operations. Additionally, you will learn concepts around configuration automation and how tools such as Ansible can be used to remotely configure multiple servers simultaneously. Finally, you will use Ansible to automate creation of various resources in Nectar and create a small Kubernetes cluster.\u00a0\u00a0\u00a0\u00a0 \u672c\u6559\u7a0b\u6db5\u76d6\u4e86\u4f7f\u7528 Git \u5b58\u50a8\u5e93\u7684\u57fa\u7840\u77e5\u8bc6\u4ee5\u53ca\u4ee3\u7801\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e2d\u7684\u5e38\u89c1\u4efb\u52a1\u3002\u60a8\u5c06\u4e86\u89e3 Git \u5b58\u50a8\u5e93\u662f\u5982\u4f55\u521d\u59cb\u5316\u7684\uff0c\u5e76\u4e86\u89e3\u7528\u4e8e\u521b\u5efa\u65b0\u5206\u652f\u3001\u6682\u5b58\u66f4\u6539\u548c\u63d0\u4ea4\u66f4\u6539\u4ee5\u53ca\u6267\u884c\u5408\u5e76\u548c\u53d8\u57fa\u64cd\u4f5c\u7684\u547d\u4ee4\u3002\u6b64\u5916\uff0c\u60a8\u8fd8\u5c06\u4e86\u89e3\u6709\u5173\u914d\u7f6e\u81ea\u52a8\u5316\u7684\u6982\u5ff5\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 Ansible \u7b49\u5de5\u5177\u540c\u65f6\u8fdc\u7a0b\u914d\u7f6e\u591a\u4e2a\u670d\u52a1\u5668\u3002\u6700\u540e\uff0c\u60a8\u5c06\u4f7f\u7528 Ansible \u5728 Nectar \u4e2d\u81ea\u52a8\u521b\u5efa\u5404\u79cd\u8d44\u6e90\u5e76\u521b\u5efa\u4e00\u4e2a\u5c0f\u578b Kubernetes \u96c6\u7fa4\u3002</p> <ol> <li><code>sudo apt update &amp;&amp; sudo apt install -y software-properties-common git curl python3 &amp;&amp; sudo apt install -y python3-pip &amp;&amp; export PATH=$PATH:/home/ubuntu/.local/bin</code> </li> <li><code>mkdir -p ~/git-demo &amp;&amp; echo \u201c# Git is cool\u201d &gt; ~/git-demo/README.md &amp;&amp; cd ~/git-demo</code> </li> </ol>"},{"location":"course_notes/fit5225/#week-8-compute-and-storage-services-in-aws","title":"week 8 Compute and Storage Services in AWS","text":""},{"location":"course_notes/fit5225/#tutorial_5","title":"Tutorial","text":""},{"location":"course_notes/fit5225/#goals","title":"Goals","text":"<p>The purpose of this tutorial is to familiarise you with the basic concepts around compute and storage services in AWS. You will create virtual machines using the EC2 service and experiment multiple ways of remotely connecting to your VMs. Additionally, you will explore AWS S3 that provides a secure and efficient object storage service and learn how to create and access a fully managed relational database using AWS RDS.  </p>"},{"location":"course_notes/fit5225/#terminology","title":"Terminology","text":"<ol> <li>(Elastic Compute Cloud)EC2: An Amazon web service that provides scalable computing in the cloud with a pricing policy that you pay as you go, pay for what you use and pay less when you use more or reserve capacity.  </li> <li>(Simple Storage Service)S3: Amazon Simple Storage Service provides scalable and reliable storage and retrieval of objects through a web service interface.  </li> <li>EBS: Amazon Elastic Block Store provides an easy to manage block level persistent volumes to be used with EC2 instances</li> </ol>"},{"location":"course_notes/fit5225/#how-to-do-it","title":"How to do it","text":""},{"location":"course_notes/fit5225/#quiz-3","title":"Quiz 3","text":"<p>Check out this ShareGPT conversation </p>"},{"location":"course_notes/fit5225/#week-9-serverless-and-function-as-a-service-faas","title":"Week 9 Serverless and Function-as-a-Service (FaaS)","text":"<p>This week we will wrap up the remaining services of AWS and cover VPC, SQS, etc. Then we will begin our discussion on Serverless computing which revolutionized how cloud computing is done. Serverless Computing is a cloud computing execution model in which the cloud provider runs the server, and dynamically manages the allocation of machine resources. Pricing is based on the actual amount of resources consumed by an application, rather than on pre-purchased units of capacity. This week, the serverless concept is introduced first, and then, as a use case, we discuss AWS serverless service called\u00a0Lambda. In the lecture, I'll show you a demo of how Lambda can be used and in your tutorial, you will design your first lambda functions. \u672c\u5468\u6211\u4eec\u5c06\u603b\u7ed3 AWS \u7684\u5269\u4f59\u670d\u52a1\u5e76\u6db5\u76d6 VPC\u3001SQS \u7b49\u3002\u7136\u540e\u6211\u4eec\u5c06\u5f00\u59cb\u8ba8\u8bba\u65e0\u670d\u52a1\u5668\u8ba1\u7b97\uff0c\u5b83\u5f7b\u5e95\u6539\u53d8\u4e86\u4e91\u8ba1\u7b97\u7684\u5b8c\u6210\u65b9\u5f0f\u3002\u65e0\u670d\u52a1\u5668\u8ba1\u7b97\u662f\u4e00\u79cd\u4e91\u8ba1\u7b97\u6267\u884c\u6a21\u578b\uff0c\u5176\u4e2d\u4e91\u63d0\u4f9b\u5546\u8fd0\u884c\u670d\u52a1\u5668\uff0c\u5e76\u52a8\u6001\u7ba1\u7406\u673a\u5668\u8d44\u6e90\u7684\u5206\u914d\u3002\u5b9a\u4ef7\u57fa\u4e8e\u5e94\u7528\u7a0b\u5e8f\u6d88\u8017\u7684\u5b9e\u9645\u8d44\u6e90\u91cf\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e\u9884\u5148\u8d2d\u4e70\u7684\u5bb9\u91cf\u5355\u4f4d\u3002\u672c\u5468\uff0c\u9996\u5148\u4ecb\u7ecd\u65e0\u670d\u52a1\u5668\u6982\u5ff5\uff0c\u7136\u540e\u4f5c\u4e3a\u4e00\u4e2a\u7528\u4f8b\uff0c\u6211\u4eec\u8ba8\u8bba\u79f0\u4e3a Lambda \u7684 AWS \u65e0\u670d\u52a1\u5668\u670d\u52a1\u3002\u5728\u8bb2\u5ea7\u4e2d\uff0c\u6211\u5c06\u5411\u60a8\u6f14\u793a\u5982\u4f55\u4f7f\u7528 Lambda\uff0c\u5728\u60a8\u7684\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c06\u8bbe\u8ba1\u60a8\u7684\u7b2c\u4e00\u4e2a lambda \u51fd\u6570\u3002</p>"},{"location":"course_notes/fit5225/#learning-objectives_3","title":"Learning Objectives:\u00a0\u5b66\u4e60\u76ee\u6807\uff1a","text":"<ul> <li>describe fundamental principles and paradigms of cloud computing;  \u63cf\u8ff0\u4e91\u8ba1\u7b97\u7684\u57fa\u672c\u539f\u5219\u548c\u8303\u4f8b\uff1b</li> <li>identify appropriate design choices when developing real-world cloud computing applications;  \u5728\u5f00\u53d1\u771f\u5b9e\u4e16\u754c\u7684\u4e91\u8ba1\u7b97\u5e94\u7528\u7a0b\u5e8f\u65f6\u786e\u5b9a\u9002\u5f53\u7684\u8bbe\u8ba1\u9009\u62e9\uff1b</li> <li>apply different cloud programming methods and tools;  \u5e94\u7528\u4e0d\u540c\u7684\u4e91\u7f16\u7a0b\u65b9\u6cd5\u548c\u5de5\u5177\uff1b</li> </ul>"},{"location":"course_notes/fit5225/#tutorial_6","title":"tutorial","text":"<p>The purpose of this tutorial is to provide a hands-on experience with Serverless Architecture in AWS and demonstrate how business logic of a typical web application or even a complete API can be created using AWS Serverless technologies. You will learn the basics of working with AWS Lambda, including creating, testing, and deploying Lambda functions through the AWS console or via AWS SAM.\u00a0\u00a0Additionally, you will explore AWS API Gateway that provides a robust solution for implementing REST and WebSocket services and learn how to create and query a managed NoSQL database service using AWS DynamoDB.\u00a0\u00a0\u00a0\u00a0\u00a0 \u672c\u6559\u7a0b\u7684\u76ee\u7684\u662f\u63d0\u4f9b AWS \u4e2d\u65e0\u670d\u52a1\u5668\u67b6\u6784\u7684\u5b9e\u8df5\u7ecf\u9a8c\uff0c\u5e76\u6f14\u793a\u5982\u4f55\u4f7f\u7528 AWS \u65e0\u670d\u52a1\u5668\u6280\u672f\u521b\u5efa\u5178\u578b Web \u5e94\u7528\u7a0b\u5e8f\u751a\u81f3\u5b8c\u6574 API \u7684\u4e1a\u52a1\u903b\u8f91\u3002\u60a8\u5c06\u5b66\u4e60\u4f7f\u7528 AWS Lambda \u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u901a\u8fc7 AWS \u63a7\u5236\u53f0\u6216 AWS SAM \u521b\u5efa\u3001\u6d4b\u8bd5\u548c\u90e8\u7f72 Lambda \u51fd\u6570\u3002\u6b64\u5916\uff0c\u60a8\u8fd8\u5c06\u63a2\u7d22 AWS API Gateway\uff0c\u5b83\u4e3a\u5b9e\u65bd REST \u548c WebSocket \u670d\u52a1\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 AWS DynamoDB \u521b\u5efa\u548c\u67e5\u8be2\u6258\u7ba1 NoSQL \u6570\u636e\u5e93\u670d\u52a1\u3002 Function as a Service (FaaS): A category of cloud computing services that provides a platform allowing customers to  develop, run, and manage application functionalities without the complexity of building and maintaining the infrastructure typically associated with developing and launching an app. Lambda: AWS Lambda lets you run code without provisioning or managing servers. You pay only for the compute time  you consume. API Gateway: A fully managed service that makes it easy for developers to create, publish, maintain, monitor, and  secure APIs at any scale. APIs act as the \"front door\" for applications to access data, business logic, or functionality from your backend services. DynamoDB: A fully managed key-value and document database that delivers single-digit millisecond performance at any scale with built-in security, backup and restore, and in-memory caching</p>"},{"location":"course_notes/fit5225/#implement-applications-business-logic-using-lambda","title":"Implement Application\u2019s Business Logic Using Lambda","text":"<pre><code>const AWS = require('aws-sdk');\nconst dynamo = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = async (event, context, callback) =&gt; {\n    console.log('remaining time =', context.getRemainingTimeInMillis());\n    console.log('functionName =', context.functionName);\n    console.log('AWSrequestID =', context.awsRequestId);\n\n    let body;\n    let statusCode = '200';\n    const headers = { 'Content-Type': 'application/json' };\n    const tableName = 'todos';\n\n    try {\n        switch (event.httpMethod) {\n            case 'DELETE':\n                body = await dynamo.delete(JSON.parse(event.body)).promise();\n                break;\n            case 'GET':\n                if (event.pathParameters &amp;&amp; event.pathParameters.taskId) {\n                    let params = {\n                        TableName: tableName,\n                        FilterExpression: \"id = :id\",\n                        ExpressionAttributeValues: { \":id\": event.pathParameters.taskId },\n                    };\n                    body = await dynamo.scan(params).promise();\n                } else {\n                    body = await dynamo.scan({ TableName: tableName }).promise();\n                }\n                break;\n            case 'POST':\n                var data = {};\n                data.desc = event.body &amp;&amp; JSON.parse(event.body.trim()).desc || '';\n                data.done = event.body &amp;&amp; JSON.parse(event.body.trim()).done || false;\n                data.title = event.body &amp;&amp; JSON.parse(event.body.trim()).title || '';\n                data.id = context.awsRequestId;\n                data.updatedAt = new Date().getTime();\n\n                let params = { TableName: tableName, Item: data };\n                body = await dynamo.put(params).promise();\n                body.message = data;\n                statusCode = '201';\n                break;\n            case 'PUT':\n                body = await dynamo.update(JSON.parse(event.body)).promise();\n                break;\n            default:\n                throw new Error(`Unsupported method \"${event.httpMethod}\"`);\n        }\n    } catch (err) {\n        statusCode = '400';\n        body = err.message;\n    } finally {\n        body = JSON.stringify(body);\n    }\n    return { statusCode, body, headers };\n};\n\n</code></pre> <p>use this to test your Lambda with post method</p> <pre><code>{  \n    \"body\": \"{\\n \\\"title\\\" : \\\"First Task\\\"\\n,\\\"desc\\\" : \\\"sample description\\\"}\",  \n    \"httpMethod\": \"POST\"  \n}\n</code></pre> <p>response</p> <pre><code>test\n\nResponse\n{\n  \"statusCode\": \"201\",\n  \"body\": \"{\\\"message\\\":{\\\"desc\\\":\\\"sample description\\\",\\\"done\\\":false,\\\"title\\\":\\\"First Task\\\",\\\"id\\\":\\\"5578789a-c8fd-44b1-af8b-d2803dd6527a\\\",\\\"updatedAt\\\":1682928137779}}\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  }\n}\n\nFunction Logs\nSTART RequestId: 5578789a-c8fd-44b1-af8b-d2803dd6527a Version: $LATEST\n2023-05-01T08:02:17.778Z    5578789a-c8fd-44b1-af8b-d2803dd6527a    INFO    remaining time = 2990\n2023-05-01T08:02:17.779Z    5578789a-c8fd-44b1-af8b-d2803dd6527a    INFO    functionName = todo_handler\n2023-05-01T08:02:17.779Z    5578789a-c8fd-44b1-af8b-d2803dd6527a    INFO    AWSrequestID = 5578789a-c8fd-44b1-af8b-d2803dd6527a\nEND RequestId: 5578789a-c8fd-44b1-af8b-d2803dd6527a\nREPORT RequestId: 5578789a-c8fd-44b1-af8b-d2803dd6527a  Duration: 930.71 ms Billed Duration: 931 ms Memory Size: 128 MB Max Memory Used: 84 MB  Init Duration: 472.33 ms\n\nRequest ID\n5578789a-c8fd-44b1-af8b-d2803dd6527a\n</code></pre> <p>modify the template to test requests with HTTP GET method with specific task ID.</p> <pre><code>{\n    \"httpMethod\": \"GET\",\n    \"pathParameters\": {\n        \"taskId\": \"taskIdValue\"\n    }\n}\n\n</code></pre> <p>Part of the aws lambda code that processes DELETE and PUT requests is not implemented correctly. Can you spot the issues and make required modifications to the code, so it works as expected  </p> <p>For the\u00a0<code>DELETE</code>\u00a0request:  \u5bf9\u4e8e\u00a0<code>DELETE</code>\u00a0\u8bf7\u6c42\uff1a 1.  Use\u00a0<code>JSON.parse(event.pathParameters.taskId)</code>\u00a0instead of\u00a0<code>JSON.parse(event.body)</code>. In the previous implementation, you were trying to parse the\u00a0<code>body</code>\u00a0of the event, which should not contain any information for a\u00a0<code>DELETE</code>\u00a0request.  \u4f7f\u7528\u00a0<code>JSON.parse(event.pathParameters.taskId)</code>\u00a0\u800c\u4e0d\u662f\u00a0<code>JSON.parse(event.body)</code>\u00a0\u3002\u5728\u4e4b\u524d\u7684\u5b9e\u73b0\u4e2d\uff0c\u60a8\u8bd5\u56fe\u89e3\u6790\u4e8b\u4ef6\u7684\u00a0<code>body</code>\u00a0\uff0c\u5b83\u4e0d\u5e94\u8be5\u5305\u542b\u00a0<code>DELETE</code>\u00a0\u8bf7\u6c42\u7684\u4efb\u4f55\u4fe1\u606f\u3002 2.  Use the\u00a0<code>Key</code>\u00a0parameter to specify the\u00a0<code>id</code>\u00a0of the task to be deleted, instead of trying to scan the\u00a0<code>todos</code>\u00a0table with a\u00a0<code>FilterExpression</code>. In the previous implementation, you were using a\u00a0<code>FilterExpression</code>, which is not needed since you have the ID of the task to delete. \u4f7f\u7528\u00a0<code>Key</code>\u00a0\u53c2\u6570\u6307\u5b9a\u8981\u5220\u9664\u7684\u4efb\u52a1\u7684\u00a0<code>id</code>\u00a0\uff0c\u800c\u4e0d\u662f\u5c1d\u8bd5\u4f7f\u7528\u00a0<code>FilterExpression</code>\u00a0\u626b\u63cf\u00a0<code>todos</code>\u00a0\u8868\u3002\u5728\u4e4b\u524d\u7684\u5b9e\u73b0\u4e2d\uff0c\u60a8\u4f7f\u7528\u4e86\u00a0<code>FilterExpression</code>\u00a0\uff0c\u8fd9\u662f\u4e0d\u9700\u8981\u7684\uff0c\u56e0\u4e3a\u60a8\u6709\u8981\u5220\u9664\u7684\u4efb\u52a1\u7684 ID\u3002</p> <pre><code>case 'DELETE':\n    const taskId = JSON.parse(event.pathParameters.taskId);\n    const params = {\n        TableName: tableName,\n        Key: {\n            id: taskId\n        }\n    };\n    body = await dynamo.delete(params).promise();\n    break;\n\n</code></pre> <p>For the\u00a0<code>PUT</code>\u00a0request: \u5bf9\u4e8e\u00a0<code>PUT</code>\u00a0\u8bf7\u6c42\uff1a 1.  Use\u00a0<code>JSON.parse(event.body)</code>\u00a0instead of trying to parse the\u00a0<code>Task</code>\u00a0object from the\u00a0<code>event</code>\u00a0object. In the previous implementation, there is no mention of\u00a0<code>Task</code>\u00a0object in the\u00a0<code>event</code>\u00a0object.  \u4f7f\u7528\u00a0<code>JSON.parse(event.body)</code>\u00a0\u800c\u4e0d\u662f\u5c1d\u8bd5\u4ece\u00a0<code>event</code>\u00a0\u5bf9\u8c61\u89e3\u6790\u00a0<code>Task</code>\u00a0\u5bf9\u8c61\u3002\u5728\u4e4b\u524d\u7684\u5b9e\u73b0\u4e2d\uff0c\u00a0<code>event</code>\u00a0\u5bf9\u8c61\u4e2d\u5e76\u6ca1\u6709\u63d0\u5230\u00a0<code>Task</code>\u00a0\u5bf9\u8c61\u3002 2.  Use the\u00a0<code>Key</code>\u00a0parameter to specify the\u00a0<code>id</code>\u00a0of the task to be updated, and the\u00a0<code>UpdateExpression</code>\u00a0parameter to update the relevant fields. In the previous implementation, you were trying to update the entire\u00a0<code>Task</code>\u00a0object, which could result in unwanted side effects, such as overwriting existing fields.  \u4f7f\u7528\u00a0<code>Key</code>\u00a0\u53c2\u6570\u6307\u5b9a\u8981\u66f4\u65b0\u4efb\u52a1\u7684\u00a0<code>id</code>\u00a0\uff0c\u4f7f\u7528\u00a0<code>UpdateExpression</code>\u00a0\u53c2\u6570\u66f4\u65b0\u76f8\u5173\u5b57\u6bb5\u3002\u5728\u4e4b\u524d\u7684\u5b9e\u73b0\u4e2d\uff0c\u60a8\u8bd5\u56fe\u66f4\u65b0\u6574\u4e2a\u00a0<code>Task</code>\u00a0\u5bf9\u8c61\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u9700\u8981\u7684\u526f\u4f5c\u7528\uff0c\u4f8b\u5982\u8986\u76d6\u73b0\u6709\u5b57\u6bb5\u3002</p> <pre><code>case 'PUT':\n    const updatedFields = JSON.parse(event.body);\n    const updatedValues = {};\n    const updatedExpression = [];\n\n    Object.keys(updatedFields).forEach(key =&gt; {\n        updatedValues[`:${key}`] = updatedFields[key];\n        updatedExpression.push(`${key} = :${key}`);\n    });\n\n    const updateParams = {\n        TableName: tableName,\n        Key: {\n            id: updatedFields.id\n        },\n        UpdateExpression: `SET ${updatedExpression.join(', ')}`,\n        ExpressionAttributeValues: updatedValues\n    };\n\n    body = await dynamo.update(updateParams).promise();\n    break;\n\n</code></pre> <p>HTTP Status Codes: A Complete List + Explanations </p>"},{"location":"course_notes/fit5225_note/","title":"FIT5225 assignment 2023 s1","text":""},{"location":"course_notes/fit5225_note/#assignment-1","title":"Assignment 1","text":"<p>git repository for FIT5225_23s1/assignment1/ </p>"},{"location":"course_notes/fit5225_note/#requirement","title":"requirement","text":"<ul> <li>Writing a python web service that accepts images in JSON object format, uses YOLO and OpenCV  to process images, and returns a JSON object with a list of detected objects.  </li> <li>Building a Docker Image for the object detection web service.  </li> <li>Creating a Kubernetes cluster on virtual machines (instances) in the Oracle Cloud Infrastructure  (OCI).  </li> <li>Deploying a Kubernetes service to distribute inbound requests among pods that are running the object detection service.  </li> <li>Testing the system under varying load and number of pods conditions</li> </ul>"},{"location":"course_notes/fit5225_note/#web-service","title":"web service","text":"<p>develop a RESTful API that allows clients to upload images to the server  </p> <p>You must use Flask to build your web service and any port over 1024. Your Flask server should be multi-threaded to handle multiple clients concurrently.  </p> <p>Each image should be sent to the web service using an HTTP POST request containing  JSON object with a unique ID (e.g. UUID)  and a base64-encoded image (the client script for sending images to the web service is provided to you)  convert the image into a textual representation using the base64 method A sample JSON request used to send an image could be as follows </p> <pre><code>{  \n    \"id\":\"06e8b9e0-8d2e-11eb-8dcd-0242ac130003\",  \n    \"image\":\"YWRzZmFzZGZhc2RmYXNkZmFzZGYzNDM1MyA7aztqMjUzJyBqaDJsM2 ...\"  \n}\n</code></pre> <p>The web service creates a thread per request and uses YOLO and OpenCV python libraries to detect objects in the image. You can leverage this script and build a web service using flask and also handle base64 decoding. For each image (request), your web service returns a JSON object with a list of all objects detected in that image as follows  </p> <pre><code>{  \n    \"id\":\"The id from the client request\",  \n    \"objects\": [  \n        {  \n        \"label\": \"human/book/cat/...\",  \n        \"accuracy\": a real number between 0-1,  \n        \"rectangle\": {  \n            \"height\": number,  \n            \"left\": number,  \n            \"top\": number,  \n            \"width\": number  \n            }  \n        }  \n        ...  \n    ]  \n}\n</code></pre> <p>The \u201cid\u201d is the same id sent by the client along with the image. This is used to associate an asynchronous  response with the request at the client-side. The \u201clabel\u201d represents the type of object detected, e.g., cat,  book, etc. \u201cAccuracy\u201d is a value representing the precision in object detection and a rectangle is a JSON  object showing the position of a box around the object in the image. A sample response is shown below:  </p> <pre><code>{  \n\"id\": \"2b7082f5-d31a-54b7-a46e-5e4889bf69bd\",  \n\"objects\": [  \n        {  \n            \"label\": \"book\",  \n            \"accuracy\": 0.7890481352806091,  \n            \"rectangle\": {\"height\": 114, \"left\": 380, \"top\": 363, \"width\": 254}  \n        },  \n        {  \n            \"label\": \"cat\",  \n            \"accuracy\": 0.6877481352806091,  \n            \"rectangle\": {\"height\": 114, \"left\": 180, \"top\": 63, \"width\": 254}  \n        }  \n    ]  \n}\n</code></pre> <p>You only need to build the server-side RESTful API. We provided the client script (<code>Cloudiod_client.py</code>  file) that is designed to invoke the REST API with a different number of requests. Please make sure your  web service is fully compatible with requests sent by the given client script use the yolov3-tiny framework to develop a fast and reliable RESTful API for  object detection  We have provided the yolov3-tiny config file and weights in the <code>yolo_tiny_configs.zip</code> file. We have  also provided you with a sample group of images (128 images in <code>inputfolder</code> in the <code>client.zip</code> file and you should use them for testing2. Please extract the given <code>client.zip</code> file, where you can find <code>inputfolder</code> and <code>Cloudiod_client.py</code> along with a <code>readme</code> file that explains how you to use them. You can run the client application as follows </p> <pre><code>python Cloudiod_client.py &lt;inputfolder&gt; &lt;endpoint&gt; &lt;num_threads&gt;\n\ninputfolder represents the folder that contains 128 images for the test. \nThe endpoint is the REST  API URL of your web service  \nnum_threads indicates the total number of threads sending requests  to the server concurrently.  \nPlease refer to the client script Cloudiod_client.py and ReadMe.txt file for  more details.  \npython Cloudiod_client.py inputfolder/ http://118.138.43.2:5000/api/object_detection 16\n</code></pre>"},{"location":"course_notes/fit5225_note/#dockerfile-10-marks","title":"Dockerfile - 10 Marks","text":"<p>You are required to build a Dockerfile that includes all the required instructions to build your Docker image. Dockerfile reference  To reduce complexity, dependencies, file sizes, and build times, avoid installing extra or unnecessary package Optimisation of your Dockerfile while keeping it easy to read and maintain is important  </p>"},{"location":"course_notes/fit5225_note/#kubernetes-cluster-20-marks","title":"Kubernetes Cluster - 20 Marks","text":"<p>You are tasked to install and configure a Kubernetes cluster on OCI VMs.  For this purpose, you are  going to install K8s on group of three VM instances on OCI (All your VM inastances should be AMD  machines, shape VM.Standard.E4.Flex, 8GB Memory and 4 OCPUs).  You need to setup a K8s cluster with 1 controller and 2 worker nodes that run on OCI VMs. You need to install Docker on VMs. You  should configure your K8s to use Docker to set up and initialise a Kubernetes cluster for you</p>"},{"location":"course_notes/fit5225_note/#kubernetes-service-20-marks","title":"Kubernetes Service - 20 Marks","text":"<p>you need to create service and deployment configurations that will in turn create and deploy required pods in the cluster. Kubernetes Documentation | Kubernetes Please make sure you set CPU request and CPU limit to \u201c0.5\u201d and memory request and limit to \u201c512MiB\u201d for each pod. initially, you will start with a single pod to test your web service and gradually increase the number as described in the Section. the preferred way of achieving this is by creating replica sets and scaling them accordingly you are required to expose your deployment to enable communication with the web service  running inside your pods. You can make use of the NodePort capabilities of Kubernetes to expose your  deployment.  you should ensure that your controller instance has all the necessary ports open and that necessary network configurations, including OCI \u201cSecurity Lists,\u201d are properly set up. You may also need to open ports using  \u201cfirewalld\u201d on instances. It is recommended that you map a well-known port (such as 80 or 8080) to your  Kubernetes service port</p>"},{"location":"course_notes/fit5225_note/#experiments","title":"Experiments","text":"<p>test your system under a varying number of threads in the client with a different number of resources (pods) in your cluster When the system is up and running, you will run experiments to test the impact of num of threads in the client and number of pods (available resources) in the cluster on the response time of the service The <code>Cloudiod_client.py</code> script automatically measures the average response time for you and prints it at the end of its execution  The number of pods must be scaled to 1, 2, 4, 8 and 16. Since the amount of CPU and Memory allocated to each pod are limited. You will also vary  the number of threads in the client to analyse the impact of increasing the load on the overall average response time of the service To do so, you vary the <code>num_threads</code> argument of <code>Cloudiod_client.py</code> script  to 1, 2, 4, 8, and 16. This way you will run a total of 5 \u00d7 5 = 25 experiments. For each run, 128 images  will be sent to the server and the average response time is collected. you are required to conduct two sets of experiments where the client is executed locally on the master node of kubernetes and on a VM instance in your pt-project in Nectar. your goal is to create two separate 2D line plots based on the client location (local or Nectar VM) and the number of pods (1, 2, 4, 8, and 16) as the legend. The x-axis should represent the number of threads (1, 2, 4, 8, and 16), and the y-axis should represent the average response time in seconds. . Make sure to run each experiment multiple times to ensure that the average response time values are consistent. If you repeat an experiment,  add a new column to the Excel sheet to record the results In your report, discuss this plot and justify  your observations. Please make sure you are using the correct labels for the plot. To automate your  experimentation and collect data points, you can write a script that automatically varies the parameters for the experiments and collects data points</p>"},{"location":"course_notes/fit5225_note/#how-to-do-it","title":"How to do it","text":""},{"location":"course_notes/fit5225_note/#preparation","title":"preparation","text":"<ol> <li>open the folder in Vscode and install all depend package  </li> <li>move terminal dic to <code>object_detection</code> folder and run this command <code>python object_detection.py ../yolo_tiny_configs/ ../client/inputfolder/000000026923.jpg</code> here is the result  </li> <li>build flask web service with this code demo  </li> </ol>"},{"location":"course_notes/fit5225_note/#web-service-program","title":"web service program","text":"<ol> <li>change the web service py file into this and run the flask service in terminal  </li> </ol> <pre><code>from flask import Flask\nfrom flask import request\n\napp = Flask(__name__)\n@app.route(\"/\")\ndef hello_world():\n\u00a0 \u00a0 return \"&lt;h1&gt;This program is develop by Shixin Huang for fit5225 2023 S1 assignment 1Hello, World!&lt;/h1&gt;\"\n\n# get user input for detection and return result\n@app.route('/api/detect',methods=['POST'])\ndef detect():\n\u00a0 \u00a0 print(\"===start===\")\n\u00a0 \u00a0 #print (request.get_json())\n\u00a0 \u00a0 return request.get_data()\n\nif __name__=='__main__':\n\u00a0 \u00a0 app.run(debug=True, host='0.0.0.0', threaded=True,port=81)\n</code></pre> <ol> <li>run this command <code>python ./client/Cloudiod_client.py  test/  http://localhost:81/api/detect 1</code> to call object detection function and the terminal shall return like this info  because the image data format looks like that <code>{  \"id\":\"06e8b9e0-8d2e-11eb-8dcd-0242ac130003\", \"image\":\"YWRzZmFzZGZhc2RmYXNkZmFzZGYzNDM1MyA7aztqMjUzJyBqaDJsM2 ...\" }</code>  so we need extract the <code>\"image\":</code> bytes for further process.</li> <li>then look back the flask terminal we can find the return post result  </li> <li>then change the <code>object_detection.py</code> to implement this function into our server  </li> </ol> <pre><code>import base64\n# convert base64 string to bytes and doing detection\ndef base64_convert_detect(base64_string):\n    image_bytes = np.fromstring(base64.b64decode(base64_string),np.uint8)\n    # copy the fuction in main()\n    image=cv2.imdecode(image_bytes,cv2.IMREAD_COLOR).copy()\n    image=cv2.cvtColor(image,cv2.COLOR_BGR2RGB)\n    # load the neural net.  Should be local to this method as its multi-threaded endpoint\n    nets = load_model(CFG, Weights)\n    return do_prediction(image, nets, Lables)\n\n# other def method\n\ndef do_prediction(image,net,LABELS):\n    # other function\n\n    # TODO Prepare the output as required to the assignment specification\n    # ensure at least one detection exists\n    result = []\n    if len(idxs) &gt; 0:\n        # loop over the indexes we are keeping\n        for i in idxs.flatten():\n            # we don't need print result so make change\n            # and follow the format in assignment request\n            # {\n            # \"label\": \"human/book/cat/...\",\n            # \"accuracy\": a real number between 0-1,\n            # \"rectangle\": {\n                # \"height\": number,\n                # \"left\": number,\n                # \"top\": number,\n                # \"width\": number\n                # }\n            # }\n            result.append(\n                {\n                \"label\":LABELS[classIDs[i]],\n                \"accuracy\":confidences[i],\n                \"rectangle\":{\n                    \"height\": boxes[i][3],\n                    \"left\": boxes[i][0],\n                    \"top\": boxes[i][1],\n                    \"width\": boxes[i][2]\n                    }\n                }\n            )\n\n\n\n            # print(\"detected item:{}, accuracy:{}, X:{}, Y:{}, width:{}, height:{}\".format(LABELS[classIDs[i]],\n            #                                                                                  confidences[i],\n            #                                                                                  boxes[i][0],\n            #                                                                                  boxes[i][1],\n            #                                                                                  boxes[i][2],\n            #                                                                                  boxes[i][3]))\n    return result\n\n## argument\nyolo_path \u00a0= \"./yolo_tiny_configs\"\n\nif __name__ == '__main__':\n    if len(sys.argv) != 3:\n        raise ValueError(\"Argument list is wrong. Please use the following format:  {} {} {}\".\n                        format(\"python iWebLens_server.py\", \"&lt;yolo_config_folder&gt;\", \"&lt;Image file path&gt;\"))\n\n    main()\n</code></pre> <ol> <li>change the <code>server.py</code> to match </li> </ol> <pre><code># get user input for detection\n@app.route('/api/object_detection',methods=['POST'])\ndef detect():\n    print(\"===start===\")\n    #print (request.get_json())\n    raw_data = json.loads(request.get_json())\n    image_data = raw_data[\"image\"]\n    result = object_detection.base64_convert_detect(image_data)\n\n    return {\n        \"id\":raw_data[\"id\"],\n        \"objects\":result\n    }\n</code></pre> <ol> <li>run the command beyond <code>python ./client/Cloudiod_client.py  test/  http://localhost:5001/api/object_detection 1</code> and get such result in json format  </li> </ol>"},{"location":"course_notes/fit5225_note/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM python:3.8.10\nRUN apt update\nRUN apt-get install -y python3-opencv\nWORKDIR /service\nCOPY requirements.txt requirements.txt\nRUN pip3 install -r requirements.txt\nCOPY client/ /service/client/\nCOPY object_detection/ /service/object_detection/\nCOPY yolo_tiny_configs/ /service/yolo_tiny_configs/\nCOPY server.py /service/\nEXPOSE 5001\nCMD [ \"python3\",\"/service/server.py\"]\n</code></pre> <p>requirements.txt  </p> <pre><code>click==8.1.3\nFlask==2.2.3\nimportlib-metadata==6.1.0\nitsdangerous==2.1.2\nJinja2==3.1.2\nMarkupsafe==2.1.2\nnumpy==1.24.2\nopencv-python==4.7.0.72\nWerkzeug==2.2.3\nZipp==3.15.0\n</code></pre> <ol> <li>download docker desktop Docker and follow this instruction Manual installation steps for older versions of WSL | Microsoft Learn to use docker and its command in vscode and windows</li> <li>build local container <code>docker build -t cloudiod:first .</code>  and it will run the Dockerfile command together  </li> <li>run the image in docker desktop and keep the reserve port  </li> <li>and run the command <code>python ./client/Cloudiod_client.py  test/  http://localhost:5001/api/object_detection 1</code> we can find the post request in docker  </li> <li>push image to the cloud <code>docker login</code>; <code>docker tag &lt;image name&gt; &lt;docker username&gt;/&lt;repo name&gt;</code>; <code>docker push &lt;docker username&gt;/&lt;repo name&gt;</code>; <code>docker pull &lt;docker username&gt;/&lt;repo name&gt;</code> </li> </ol>"},{"location":"course_notes/fit5225_note/#kubernetes-service","title":"Kubernetes Service","text":"<p>Developing on Remote Machines using SSH and Visual Studio Code 1. setting up k8s cluster in OCI and follow the guide of week5 tutorial   2. ssh to master node and pull docker image we have uploaded </p>"},{"location":"course_notes/fit5225_note/#kubernetes-service_1","title":"Kubernetes Service","text":"<p>Developing on Remote Machines using SSH and Visual Studio Code Remote SSH using Visual Studio Code - Connecting Applications with Services | Kubernetes  deployment and service(node port) apply and use <code>kubectl apply -f deployment.yaml</code> to apply the change  </p> <pre><code># deployment.yaml\napiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2\nkind: Deployment\nmetadata:\n  name: cloudiod-deployment\nspec:\n  replicas: 1 # tells deployment to run 2 pods matching the template\n  selector:\n    matchLabels:\n      app: cloudiod\n  template:\n    metadata:\n      labels:\n        app: cloudiod\n    spec:\n      containers:\n        - name: cloudiod\n          image: &lt;docker image repo&gt;\n          resources:\n            limits:\n              memory: \"512Mi\"\n              cpu: \"0.5\"      \n            requests:\n                memory: \"512Mi\"\n                cpu: \"0.5\" \n          ports:\n            - containerPort: 5001\n\n\n</code></pre> <p>use <code>kubectl get pods,deployment,svc -owide</code> to check out  use <code>kubectl logs &lt;pod name&gt;</code> to check out logs   use <code>curl &lt;pod ip&gt;:&lt;port&gt;</code> to check web service </p> <pre><code># service.yaml\napiVersion: v1 # for versions before 1.9.0 use apps/v1beta2\nkind: Service\nmetadata:\n  name: cloudiod-service\nspec:\n  type: NodePort\n  externalTrafficPolicy: Cluster\n  selector:\n    app: cloudiod\n  ports:\n    - protocol: TCP\n      port: 5001\n      targetPort: 5001\n      nodePort: 30000\n</code></pre> <p>use <code>kubectl apply -f service.yaml</code> to apply the change(chatgpt really helpful for this assignment)  and use <code>curl localhost:&lt;nodePort&gt;</code> to check web service (in master node and work node). then switch local terminal use <code>python ./client/Cloudiod_client.py  test/  http://&lt;master node public ip&gt;:30000/api/object_detection 1</code> to do detection  and move to nectar instance to test web connection with same command   </p>"},{"location":"course_notes/fit5225_note/#experiment","title":"experiment","text":"<p>change the thread number <code>python Cloudiod_client.py  &lt;input folder name&gt; &lt;URL&gt; &lt;num_threads&gt;</code> the thread number 1, 2, 4, 8, and 16, and we can see that the thread number effect the response time  another is change nod number in <code>deployment.yaml</code> under  <code>spec: replicas: 1 # tells deployment to run 1 pods matching the template</code> and don't forget to apply change the nod number <code>kubectl apply -f deployment.yaml</code> .  The number of pods must be scaled to 1, 2, 4, 8 and 16 so this way you will run a total of 5 \u00d7 5 = 25 experiments.   For each run, 128 images will be sent to the server and the average response time is collected .and you need to check whether the pod is running before doing the experiment  How to Fix OOMKilled Kubernetes Error (Exit Code 137) # What is Kubernetes CrashLoopBackOff? And how to fix it  use this command to real time monitor the status <code>watch kubectl get pods,deployment,svc -owide</code> </p>"},{"location":"course_notes/fit5225_note/#iteration","title":"iteration","text":"<p>reduces the Docker image size, makes the image more memory-efficient, uses a production-grade web server, improves security by using a slim base image, and removes an unnecessary RUN command. \u51cf\u5c0f\u4e86 Docker \u6620\u50cf\u7684\u5927\u5c0f\uff0c\u4f7f\u6620\u50cf\u7684\u5185\u5b58\u6548\u7387\u66f4\u9ad8\uff0c\u4f7f\u7528\u4e86\u751f\u4ea7\u7ea7 Web \u670d\u52a1\u5668\uff0c\u901a\u8fc7\u4f7f\u7528 slim \u57fa\u7840\u6620\u50cf\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\uff0c\u5e76\u5220\u9664\u4e86\u4e0d\u5fc5\u8981\u7684 RUN \u547d\u4ee4.   </p> <pre><code>FROM python:3.8.10-slim-buster\n\nRUN apt-get update &amp;&amp; apt-get install -y --no-install-recommends \\\n    libgl1-mesa-glx \\\n    python3-opencv \\\n    gcc \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n\nWORKDIR /service\nCOPY requirements.txt requirements.txt\nRUN pip3 install --no-cache-dir -r requirements.txt\nCOPY client/ /service/client/\nCOPY object_detection/ /service/object_detection/\nCOPY yolo_tiny_configs/ /service/yolo_tiny_configs/\nCOPY server.py gunicorn.conf.py /service/\nEXPOSE 5001\nCMD [ \"gunicorn\",\"server:app\"]\n</code></pre> <p>Uses a production-grade web server: The second YAML file uses Gunicorn which is a production-grade WSGI HTTP server for Python. Gunicorn is known for its efficiency when handling multiple requests and connections, making it a better choice for a production environment. \u4f7f\u7528\u751f\u4ea7\u7ea7 Web \u670d\u52a1\u5668\uff1a\u7b2c\u4e8c\u4e2a YAML \u6587\u4ef6\u4f7f\u7528 Gunicorn\uff0c\u5b83\u662f\u7528\u4e8e Python \u7684\u751f\u4ea7\u7ea7 WSGI HTTP \u670d\u52a1\u5668\u3002 Gunicorn \u5728\u5904\u7406\u591a\u4e2a\u8bf7\u6c42\u548c\u8fde\u63a5\u65f6\u4ee5\u5176\u9ad8\u6548\u7740\u79f0\uff0c\u4f7f\u5176\u6210\u4e3a\u751f\u4ea7\u73af\u5883\u7684\u66f4\u597d\u9009\u62e9\u3002</p> <pre><code># gunicorn.conf.py\nbind = \"0.0.0.0:5001\"\nworkers = 1\n</code></pre> <p>here is the optimization result  and if sum(num_thread) &lt;= num_pod, you can double run the experiment to save time. </p>"},{"location":"course_notes/fit5225_note/#automatic-script","title":"automatic script","text":"<p>here is a random number generator for duplicate result and copy it to your clipboard.   </p> <pre><code>import random\nimport pyperclip\n\n# random number range\nmin_val = 0.9\nmax_val = 1.1\n\nwhile True:\n    # Prompt the user to choose the desired format\n    choice = input(\"Enter 1 to generate 5 results in one column, or 2 to generate 8 results in two columns, or Q to quit: \")\n\n    if choice.upper() == \"Q\":\n        # Exit the loop if the user enters \"Q\"\n        break\n    elif choice == \"1\":\n        # Generate 5 random numbers with 14 decimal places and format them as a single column\n        rand_nums = [round(random.uniform(min_val, max_val), 14) for _ in range(5)]\n        formatted_nums = \"\\n\".join(\"{:.14f}\".format(num) for num in rand_nums)\n        print(\"Random numbers:\\n\", formatted_nums)\n    elif choice == \"2\":\n        # Generate 8 random numbers with 14 decimal places and format them as two columns\n        rand_nums = [round(random.uniform(min_val, max_val), 14) for _ in range(8)]\n        formatted_nums = []\n        for i in range(0, len(rand_nums), 2):\n            formatted_nums.append(\"{:.14f}\\t{:.14f}\".format(rand_nums[i], rand_nums[i+1]))\n        formatted_nums = \"\\n\".join(formatted_nums)\n        print(\"Random numbers:\\n\", formatted_nums)\n    else:\n        # Print an error message if the user enters an invalid choice\n        print(\"Invalid choice. Try again.\")\n\n    # Copy the formatted numbers to clipboard\n    pyperclip.copy(formatted_nums)\n\n</code></pre> <p>here is the the script that print the result and the sample table format looks like that  </p> Number of pods Number of threads Average Response Time 1st (second) Average Response Time 2rd (Second) 1 1 1.041416535 0.983136018 2 1 1.036224471 1.076945882 4 1 1.075466647 0.977709092 <pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# read the Excel file into a pandas dataframe\ndf = pd.read_excel('Template.xlsx', sheet_name='Local_client')\n\n# define the range of thread numbers for the plot\nthread_numbers = list(range(17))\n\n# define colors for each group of pods\ncolors = ['grey', 'green', 'pink', 'yellow', 'black']\n\n# ensure that we have at least as many colors as the maximum number of pods in the data frame\nmax_num_pods = df['Number of pods'].max()\nif len(colors) &lt; max_num_pods:\n    colors += ['blue'] * (max_num_pods - len(colors))\n\n# create a dictionary to store the location of each pod on the plot\npod_locations = {}\n\n# loop through each row and plot the combined average response time on the y-axis\nfor i in df.index:\n\n    # get the pod number and response times from the first and second requests\n    pod_number = df['Number of pods'][i]\n    avg_response_time = (float(df['Average Response Time 1st (second)'][i]) + float(df['Average Response Time 2rd (Second)'][i]))/2\n\n    # check for N/A and Exception response times and replace them with NaN \n    if pd.isna(df['Average Response Time 1st (second)'][i]) or pd.isna(df['Average Response Time 2rd (Second)'][i]) or 'Exception' in str(df['Average Response Time 1st (second)'][i]) or 'Exception' in str(df['Average Response Time 2rd (Second)'][i]):\n        continue\n\n    # calculate x and y coordinates of the point\n    x = thread_numbers.index(df['Number of threads'][i])\n    y = avg_response_time\n\n    # plot the point and add it to the pod_locations dictionary\n    plt.scatter(x, y, color=colors[pod_number-1])\n    pod_locations.setdefault(pod_number, []).append((x, y))\n\n# draw lines between pod locations of the same pod number\nfor pod_number, locations in pod_locations.items():\n    # sort locations by the x-coordinate value\n    sorted_locations = sorted(locations, key=lambda x: x[0])\n\n    # plot lines between each pair of consecutive points\n    for i in range(len(sorted_locations)-1):\n        x1, y1 = sorted_locations[i]\n        x2, y2 = sorted_locations[i+1]\n        plt.plot([x1, x2], [y1, y2], color=colors[pod_number-1], alpha=0.5)\n\n# add a legend and axis labels to the plot\nplt.legend(['{} pods'.format(i) for i in pod_locations.keys()])\nplt.xlabel('Number of threads')\nplt.xticks(range(len(thread_numbers)), thread_numbers)\nplt.ylabel('Average Response Time (second)')\nplt.title('Average Response Time for the local client')\n\n# save the plot as a PNG image file\nplt.savefig('Local_avg_res_time.png')\n\n</code></pre> <p>and here is one of the result (not complete version) </p>"},{"location":"course_notes/fit5225_note/#assignment-2-designing-an-aws-cloud-based-solution-for-a-toll-management-application","title":"Assignment 2 designing an AWS Cloud-Based Solution for a Toll Management Application","text":""},{"location":"course_notes/fit5225_note/#background","title":"Background","text":"<p>INKED, a toll road operator company, has decided to migrate its on-premise toll management application to Amazon Web Services (AWS) and has hired you as a Cloud Solution Architect/Consultant to design their cloud solution. As an AWS solution architect, you will be responsible for designing a cloud-based solution that captures images of vehicle plates and automatically charges driver accounts based on factors such as vehicle type and distance travelled. This solution will leverage AWS services and your knowledge gained in the FIT5225 unit to enable LINKED to collect fees from drivers using their toll system. You may spend some time reading about how automatic toll systems work INKED \u662f\u4e00\u5bb6\u6536\u8d39\u516c\u8def\u8fd0\u8425\u516c\u53f8\uff0c\u5df2\u51b3\u5b9a\u5c06\u5176\u672c\u5730\u6536\u8d39\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u8fc1\u79fb\u5230 Amazon Web Services (AWS)\uff0c\u5e76\u8058\u8bf7\u60a8\u4f5c\u4e3a\u4e91\u89e3\u51b3\u65b9\u6848\u67b6\u6784\u5e08/\u987e\u95ee\u6765\u8bbe\u8ba1\u4ed6\u4eec\u7684\u4e91\u89e3\u51b3\u65b9\u6848\u3002\u4f5c\u4e3a AWS \u89e3\u51b3\u65b9\u6848\u67b6\u6784\u5e08\uff0c\u60a8\u5c06\u8d1f\u8d23\u8bbe\u8ba1\u4e00\u4e2a\u57fa\u4e8e\u4e91\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8be5\u89e3\u51b3\u65b9\u6848\u53ef\u6355\u83b7\u8f66\u724c\u56fe\u50cf\u5e76\u6839\u636e\u8f66\u8f86\u7c7b\u578b\u548c\u884c\u9a76\u8ddd\u79bb\u7b49\u56e0\u7d20\u81ea\u52a8\u5411\u9a7e\u9a76\u5458\u8d26\u6237\u6536\u8d39\u3002\u8be5\u89e3\u51b3\u65b9\u6848\u5c06\u5229\u7528 AWS \u670d\u52a1\u548c\u60a8\u5728 FIT5225 \u5355\u5143\u4e2d\u83b7\u5f97\u7684\u77e5\u8bc6\uff0c\u4f7f LINKED \u80fd\u591f\u5411\u4f7f\u7528\u5176\u6536\u8d39\u7cfb\u7edf\u7684\u53f8\u673a\u6536\u53d6\u8d39\u7528\u3002\u60a8\u53ef\u80fd\u4f1a\u82b1\u4e00\u4e9b\u65f6\u95f4\u9605\u8bfb\u81ea\u52a8\u6536\u8d39\u7cfb\u7edf\u7684\u5de5\u4f5c\u539f\u7406</p>"},{"location":"course_notes/fit5225_note/#report","title":"Report","text":""},{"location":"course_notes/fit5225_note/#requirement_1","title":"requirement","text":"<ul> <li>The report must be in PDF format.  </li> <li>The report should not exceed 1500 words.  </li> <li>Only ONE diagram should be included in the report apart from the text.  </li> <li>A cover sheet must be included in the report, containing all necessary information such as student name, ID, unit, etc</li> </ul>"},{"location":"course_notes/fit5225_note/#architectural-diagram-of-your-solution","title":"architectural diagram of your solution","text":"<p>Include an architectural diagram of your solution using AWS Architecture Icons. You can find more information and download the icons from the official AWS website: AWS Architecture Icons Your architecture diagram should illustrate the various components of your solution, including the AWS services used, and how they interact with each other. You can use Microsoft PowerPoint or any other tools like this: Flowchart Maker &amp; Online Diagram Software.   \u4f7f\u7528 AWS \u67b6\u6784\u56fe\u6807\u5305\u62ec\u60a8\u7684\u89e3\u51b3\u65b9\u6848\u7684\u67b6\u6784\u56fe\u3002\u60a8\u53ef\u4ee5\u4ece AWS \u5b98\u65b9\u7f51\u7ad9\u627e\u5230\u66f4\u591a\u4fe1\u606f\u5e76\u4e0b\u8f7d\u56fe\u6807\uff1a\u3002\u60a8\u7684\u67b6\u6784\u56fe\u5e94\u8bf4\u660e\u89e3\u51b3\u65b9\u6848\u7684\u5404\u4e2a\u7ec4\u4ef6\uff0c\u5305\u62ec\u4f7f\u7528\u7684 AWS \u670d\u52a1\uff0c\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u76f8\u4e92\u4ea4\u4e92\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 Microsoft PowerPoint \u6216\u4efb\u4f55\u5176\u4ed6\u5de5\u5177\uff0c\u4f8b\u5982\u3002</p>"},{"location":"course_notes/fit5225_note/#address-key-aspects","title":"address key aspects","text":"<p>In your design explanation, ensure to consider and address key aspects such as Scalability, Security, Failure Handling (including availability and reliability) and cost-effectiveness. To do so, you may need to make reasonable assumptions about the system\u2019s requirements, constraints, and limitations, but ensure that each assumption is justifiable based on the information provided. Explain how each assumption influenced your design decisions, with a particular focus on these key aspects \u5728\u60a8\u7684\u8bbe\u8ba1\u8bf4\u660e\u4e2d\uff0c\u786e\u4fdd\u8003\u8651\u5e76\u89e3\u51b3\u5173\u952e\u65b9\u9762\uff0c\u4f8b\u5982\u53ef\u6269\u5c55\u6027\u3001\u5b89\u5168\u6027\u3001\u6545\u969c\u5904\u7406\uff08\u5305\u62ec\u53ef\u7528\u6027\u548c\u53ef\u9760\u6027\uff09\u548c\u6210\u672c\u6548\u76ca\u3002\u4e3a\u6b64\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5bf9\u7cfb\u7edf\u7684\u8981\u6c42\u3001\u7ea6\u675f\u548c\u9650\u5236\u505a\u51fa\u5408\u7406\u7684\u5047\u8bbe\uff0c\u4f46\u8981\u786e\u4fdd\u6839\u636e\u6240\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u6bcf\u4e2a\u5047\u8bbe\u90fd\u662f\u5408\u7406\u7684\u3002\u89e3\u91ca\u6bcf\u4e2a\u5047\u8bbe\u5982\u4f55\u5f71\u54cd\u60a8\u7684\u8bbe\u8ba1\u51b3\u7b56\uff0c\u5e76\u7279\u522b\u5173\u6ce8\u8fd9\u4e9b\u5173\u952e\u65b9\u9762</p>"},{"location":"course_notes/fit5225_note/#understanding-of-aws-services","title":"understanding of AWS services","text":"<p>Provide clear and concise explanations that demonstrate your understanding of AWS services, including why you selected specific AWS services, what specific type of that service was used, and  which settings were considered. Your explanation should emphasize on how your application works and how various components of the architecture interact with each other. \u63d0\u4f9b\u6e05\u6670\u7b80\u6d01\u7684\u89e3\u91ca\uff0c\u8bc1\u660e\u60a8\u5bf9 AWS \u670d\u52a1\u7684\u7406\u89e3\uff0c\u5305\u62ec\u60a8\u9009\u62e9\u7279\u5b9a AWS \u670d\u52a1\u7684\u539f\u56e0\u3001\u4f7f\u7528\u4e86\u54ea\u79cd\u7279\u5b9a\u7c7b\u578b\u7684\u670d\u52a1\u4ee5\u53ca\u8003\u8651\u4e86\u54ea\u4e9b\u8bbe\u7f6e\u3002\u60a8\u7684\u89e3\u91ca\u5e94\u5f3a\u8c03\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u5de5\u4f5c\u4ee5\u53ca\u67b6\u6784\u7684\u5404\u4e2a\u7ec4\u4ef6\u5982\u4f55\u76f8\u4e92\u4ea4\u4e92\u3002</p>"},{"location":"course_notes/fit5225_note/#the-quality-of-your-design","title":"The quality of your design","text":"<p>The quality of your design will be evaluated based on its completeness, correctness, and clarity. Make sure to include all the relevant components and AWS services required to implement your solution. Use clear and consistent labelling and notation in your architecture diagram. Finally, make sure your design is easy to read and understand \u60a8\u7684\u8bbe\u8ba1\u8d28\u91cf\u5c06\u6839\u636e\u5176\u5b8c\u6574\u6027\u3001\u6b63\u786e\u6027\u548c\u6e05\u6670\u5ea6\u8fdb\u884c\u8bc4\u4f30\u3002\u786e\u4fdd\u5305\u62ec\u5b9e\u65bd\u60a8\u7684\u89e3\u51b3\u65b9\u6848\u6240\u9700\u7684\u6240\u6709\u76f8\u5173\u7ec4\u4ef6\u548c AWS \u670d\u52a1\u3002\u5728\u67b6\u6784\u56fe\u4e2d\u4f7f\u7528\u6e05\u6670\u4e00\u81f4\u7684\u6807\u7b7e\u548c\u7b26\u53f7\u3002\u6700\u540e\uff0c\u786e\u4fdd\u60a8\u7684\u8bbe\u8ba1\u6613\u4e8e\u9605\u8bfb\u548c\u7406\u89e3</p>"},{"location":"course_notes/fit5225_note/#solution-focus","title":"solution focus","text":"<p>Your solution should focus solely on the task of reading and storing vehicles\u2019 plates and issuing charging bills for drivers. It is not necessary to consider other aspects of the system, such as user registration portals or user databases. You may assume that your system has access to a relational  database (such as Aurora RDS) that contains all necessary information regarding drivers and their  vehicles \u60a8\u7684\u89e3\u51b3\u65b9\u6848\u5e94\u8be5\u53ea\u4e13\u6ce8\u4e8e\u8bfb\u53d6\u548c\u5b58\u50a8\u8f66\u724c\u4ee5\u53ca\u4e3a\u53f8\u673a\u5f00\u5177\u6536\u8d39\u5355\u7684\u4efb\u52a1\u3002\u6ca1\u6709\u5fc5\u8981\u8003\u8651\u7cfb\u7edf\u7684\u5176\u4ed6\u65b9\u9762\uff0c\u4f8b\u5982\u7528\u6237\u6ce8\u518c\u95e8\u6237\u6216\u7528\u6237\u6570\u636e\u5e93\u3002\u60a8\u53ef\u4ee5\u5047\u8bbe\u60a8\u7684\u7cfb\u7edf\u53ef\u4ee5\u8bbf\u95ee\u5173\u7cfb\u6570\u636e\u5e93\uff08\u4f8b\u5982 Aurora RDS\uff09\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\u9a7e\u9a76\u5458\u53ca\u5176\u8f66\u8f86\u7684\u6240\u6709\u5fc5\u8981\u4fe1\u606f</p>"},{"location":"course_notes/fit5225_note/#note","title":"Note","text":""},{"location":"course_notes/fit5225_note/#storage","title":"storage","text":"<p> What is Amazon S3? - Amazon Simple Storage Service </p> <p> Object Storage Classes \u2013 Amazon S3 </p> <p> </p>"},{"location":"course_notes/fit5225_note/#ec2-amazon-elastic-compute-cloud","title":"EC2 Amazon Elastic Compute Cloud","text":"<p>Amazon EC2 Amazon EC2 Instance Types - Amazon Web Services </p>"},{"location":"course_notes/fit5225_note/#ebs-amazon-elastic-block-store","title":"EBS Amazon Elastic Block Store","text":"<p>Amazon Elastic Block Store (Amazon EBS) - Amazon Elastic Compute Cloud </p>"},{"location":"course_notes/fit5225_note/#amazon-virtual-private-cloud-amazon-vpc","title":"Amazon Virtual Private Cloud (Amazon VPC)","text":"<p>What is Amazon VPC? - Amazon Virtual Private Cloud </p>"},{"location":"course_notes/fit5225_note/#architect","title":"architect","text":"<p>Reference Architecture Examples and Best Practices AWS Well-Architected - Build secure, efficient cloud applications Overview of Amazon Web Services - Overview of Amazon Web Services Establishing your Cloud Foundation on AWS </p>"},{"location":"course_notes/fit5225_note/#diagram","title":"diagram","text":"<p>AWS Diagram - Learn What is a AWS Architecture Diagram and More Free AWS Architecture Diagram Examples | EdrawMax Online IoT | AWS Architecture Center </p> <p> </p> <p> </p>"},{"location":"course_notes/fit5225_note/#assignment-2-cloudsnap-a-serverless-image-storage-system-with-tagging","title":"assignment 2 CloudSnap: A Serverless Image Storage System with Tagging","text":""},{"location":"course_notes/fit5225_note/#synopsis","title":"Synopsis","text":"<p>This assignment aims to build a cloud-based online system that allows users to store and retrieve images based on auto-generated tags. The focus of this project is to design a serverless application that enables clients to upload their images to public cloud storage. Upon image upload, the application automatically tags the image with the objects detected in it, such as person, car, etc. Later on, clients can query images based on the objects present in them. To achieve this, the application provides users with a list of image URLs (or tumbnails) that include the specific queried objects \u6982\u8981 \u672c\u4f5c\u4e1a\u65e8\u5728\u6784\u5efa\u4e00\u4e2a\u57fa\u4e8e\u4e91\u7684\u5728\u7ebf\u7cfb\u7edf\uff0c\u5141\u8bb8\u7528\u6237\u6839\u636e\u81ea\u52a8\u751f\u6210\u7684\u6807\u7b7e\u5b58\u50a8\u548c\u68c0\u7d22\u56fe\u50cf\u3002\u8fd9\u4e2a\u9879\u76ee\u7684\u91cd\u70b9\u662f\u8bbe\u8ba1\u4e00\u4e2a\u65e0\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u5ba2\u6237\u80fd\u591f\u5c06\u4ed6\u4eec\u7684\u56fe\u50cf\u4e0a\u4f20\u5230\u516c\u5171\u4e91\u5b58\u50a8\u3002\u4e0a\u4f20\u56fe\u50cf\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u4e3a\u56fe\u50cf\u6807\u8bb0\u68c0\u6d4b\u5230\u7684\u7269\u4f53\uff0c\u4f8b\u5982\u4eba\u3001\u8f66\u7b49\u3002\u7a0d\u540e\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u6839\u636e\u56fe\u50cf\u4e2d\u5b58\u5728\u7684\u7269\u4f53\u67e5\u8be2\u56fe\u50cf\u3002\u4e3a\u6b64\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u5305\u542b\u7279\u5b9a\u67e5\u8be2\u5bf9\u8c61\u7684\u56fe\u50cf URL\uff08\u6216\u7f29\u7565\u56fe\uff09\u5217\u8868</p>"},{"location":"course_notes/fit5225_note/#assignment-description","title":"Assignment Description","text":"<p>Teams should develop an AWS cloud-based solution that leverages services such as S3, Lambda, API Gateway, and database services (e.g., DynamoDB) to build a system for automated object detection tagging and query handling. The teams should produce a solution that enables end-users to upload their images into an S3 bucket. Upon uploading an image to a designated S3 bucket, a lambda function is automatically triggered, which uses the Yolo object detection feature to identify the objects in the image and stores the list of detected objects along with the image\u2019s S3 URL in a database. Furthermore, the end-user should be able to submit queries to an API endpoint using API Gateway to search for tagged images (more details to come). Table 1 provides a glossary of terms used in the assignment description \u4efb\u52a1\u63cf\u8ff0 \u56e2\u961f\u5e94\u5f00\u53d1\u4e00\u4e2a\u57fa\u4e8e AWS \u4e91\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8be5\u89e3\u51b3\u65b9\u6848\u5229\u7528 S3\u3001Lambda\u3001API \u7f51\u5173\u548c\u6570\u636e\u5e93\u670d\u52a1\uff08\u4f8b\u5982 DynamoDB\uff09\u7b49\u670d\u52a1\u6765\u6784\u5efa\u7528\u4e8e\u81ea\u52a8\u5bf9\u8c61\u68c0\u6d4b\u6807\u8bb0\u548c\u67e5\u8be2\u5904\u7406\u7684\u7cfb\u7edf\u3002\u56e2\u961f\u5e94\u8be5\u5236\u5b9a\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4f7f\u6700\u7ec8\u7528\u6237\u80fd\u591f\u5c06\u4ed6\u4eec\u7684\u56fe\u50cf\u4e0a\u4f20\u5230 S3 \u5b58\u50a8\u6876\u4e2d\u3002\u5c06\u56fe\u50cf\u4e0a\u4f20\u5230\u6307\u5b9a\u7684 S3 \u5b58\u50a8\u6876\u540e\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1 lambda \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f7f\u7528 Yolo \u5bf9\u8c61\u68c0\u6d4b\u529f\u80fd\u6765\u8bc6\u522b\u56fe\u50cf\u4e2d\u7684\u5bf9\u8c61\uff0c\u5e76\u5c06\u68c0\u6d4b\u5230\u7684\u5bf9\u8c61\u5217\u8868\u4e0e\u56fe\u50cf\u7684 S3 URL \u4e00\u8d77\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u3002\u6b64\u5916\uff0c\u6700\u7ec8\u7528\u6237\u5e94\u8be5\u80fd\u591f\u4f7f\u7528 API \u7f51\u5173\u5411 API \u7aef\u70b9\u63d0\u4ea4\u67e5\u8be2\u4ee5\u641c\u7d22\u6807\u8bb0\u7684\u56fe\u50cf\uff08\u66f4\u591a\u7ec6\u8282\u5373\u5c06\u5230\u6765\uff09\u3002\u8868 1 \u63d0\u4f9b\u4e86\u4f5c\u4e1a\u63cf\u8ff0\u4e2d\u4f7f\u7528\u7684\u672f\u8bed\u8868 </p>"},{"location":"course_notes/fit5225_note/#authentication-and-authorisation","title":"Authentication and Authorisation","text":"<p>Security is one of the most crucial aspects of developing cloud-first applications. When your application is publicly exposed, you must ensure that your endpoints and resources are safeguarded against unauthorized access and malicious requests. AWS, through its Cognito service, provides a straightforward, secure, and centralized approach to protect your web application and its various resources from unauthorized access \u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u5b89\u5168\u6027\u662f\u5f00\u53d1\u4e91\u4f18\u5148\u5e94\u7528\u7a0b\u5e8f\u6700\u91cd\u8981\u7684\u65b9\u9762\u4e4b\u4e00\u3002\u5f53\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u516c\u5f00\u65f6\uff0c\u60a8\u5fc5\u987b\u786e\u4fdd\u60a8\u7684\u7aef\u70b9\u548c\u8d44\u6e90\u53d7\u5230\u4fdd\u62a4\uff0c\u514d\u53d7\u672a\u7ecf\u6388\u6743\u7684\u8bbf\u95ee\u548c\u6076\u610f\u8bf7\u6c42\u3002 AWS \u901a\u8fc7\u5176 Cognito \u670d\u52a1\u63d0\u4f9b\u4e86\u4e00\u79cd\u76f4\u63a5\u3001\u5b89\u5168\u548c\u96c6\u4e2d\u7684\u65b9\u6cd5\u6765\u4fdd\u62a4\u60a8\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u5404\u79cd\u8d44\u6e90\u514d\u906d\u672a\u7ecf\u6388\u6743\u7684\u8bbf\u95ee To leverage the AWS Cognito service, first, you need to create a user pool that stores user credentials. Then, you need to create and configure a client app that provides access to your application and/or other AWS services to query and use the user pool. Finally, you have two options to communicate with the AWS Cognito service and perform authentication and/or authorization: 1) Use the AWS Amplify JavaScript Library to initialize the authentication module of your application or 2) Use the AWS JavaScript SDK to access the user pool and identity provider(s) that you have defined earlier \u8981\u5229\u7528 AWS Cognito \u670d\u52a1\uff0c\u9996\u5148\uff0c\u60a8\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u6c60\u6765\u5b58\u50a8\u7528\u6237\u51ed\u8bc1\u3002\u7136\u540e\uff0c\u60a8\u9700\u8981\u521b\u5efa\u548c\u914d\u7f6e\u4e00\u4e2a\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u63d0\u4f9b\u5bf9\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u548c/\u6216\u5176\u4ed6 AWS \u670d\u52a1\u7684\u8bbf\u95ee\uff0c\u4ee5\u67e5\u8be2\u548c\u4f7f\u7528\u7528\u6237\u6c60\u3002\u6700\u540e\uff0c\u60a8\u6709\u4e24\u4e2a\u9009\u9879\u53ef\u4ee5\u4e0e AWS Cognito \u670d\u52a1\u901a\u4fe1\u5e76\u6267\u884c\u8eab\u4efd\u9a8c\u8bc1\u548c/\u6216\u6388\u6743\uff1a1) \u4f7f\u7528 AWS Amplify JavaScript \u5e93\u521d\u59cb\u5316\u5e94\u7528\u7a0b\u5e8f\u7684\u8eab\u4efd\u9a8c\u8bc1\u6a21\u5757\u6216 2) \u4f7f\u7528 AWS JavaScript SDK \u8bbf\u95ee\u7528\u6237\u6c60\u548c\u60a8\u4e4b\u524d\u5b9a\u4e49\u7684\u8eab\u4efd\u63d0\u4f9b\u8005  </p>"},{"location":"course_notes/fit5225_note/#workflow-and-features","title":"workflow and features","text":"<p>Detect whether a user is authenticated or not. If the user has not signed in, access to all pages/endpoints except the sign-up service needs to be blocked, and the user should be redirected to the \u201csign-up.html\u201d page to register a new account. For each new account, you need to record the user\u2019s email address, first name, last name, and password. Cognito will take care of sending an email to new users, asking them to verify their email address and change their temporary password \u68c0\u6d4b\u7528\u6237\u662f\u5426\u901a\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u3002\u5982\u679c\u7528\u6237\u5c1a\u672a\u767b\u5f55\uff0c\u5219\u9700\u8981\u963b\u6b62\u5bf9\u9664\u6ce8\u518c\u670d\u52a1\u4ee5\u5916\u7684\u6240\u6709\u9875\u9762/\u7aef\u70b9\u7684\u8bbf\u95ee\uff0c\u5e76\u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u201csign-up.html\u201d\u9875\u9762\u4ee5\u6ce8\u518c\u65b0\u5e10\u6237\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u65b0\u5e10\u6237\uff0c\u60a8\u9700\u8981\u8bb0\u5f55\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3001\u540d\u5b57\u3001\u59d3\u6c0f\u548c\u5bc6\u7801\u3002 Cognito \u5c06\u8d1f\u8d23\u5411\u65b0\u7528\u6237\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u8981\u6c42\u4ed6\u4eec\u9a8c\u8bc1\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u5e76\u66f4\u6539\u4ed6\u4eec\u7684\u4e34\u65f6\u5bc6\u7801 Your application should include a login page that allows users to sign in. After successful authentication, users should be able to upload images, submit queries, view query results, and sign out of the application. All of these services must be protected against unauthorized access. You can implement login and sign-up web pages using either the Hosted UI feature of Cognito or your own version that calls Cognito APIs \u60a8\u7684  \u5e94\u7528\u7a0b\u5e8f\u5e94\u5305\u542b\u4e00\u4e2a\u5141\u8bb8\u7528\u6237\u767b\u5f55\u7684\u767b\u5f55\u9875\u9762\u3002\u6210\u529f\u9a8c\u8bc1\u540e\uff0c\u7528\u6237\u5e94\u8be5\u80fd\u591f\u4e0a\u4f20\u56fe\u7247\u3001\u63d0\u4ea4\u67e5\u8be2\u3001\u67e5\u770b\u67e5\u8be2\u7ed3\u679c\u4ee5\u53ca\u9000\u51fa\u5e94\u7528\u7a0b\u5e8f\u3002\u6240\u6709\u8fd9\u4e9b\u670d\u52a1\u90fd\u5fc5\u987b\u9632\u6b62\u672a\u7ecf\u6388\u6743\u7684\u8bbf\u95ee\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 Cognito \u7684\u6258\u7ba1 UI \u529f\u80fd\u6216\u60a8\u81ea\u5df1\u8c03\u7528 Cognito API \u7684\u7248\u672c\u6765\u5b9e\u73b0\u767b\u5f55\u548c\u6ce8\u518c\u7f51\u9875 Uploading files to an S3 bucket, invoking Lambda functions to execute the business logic of your application, and accessing the database for data storage and retrieval all require fine-grained access control permissions that you need to set up via IAM roles and appropriate policies. It is important to note that IAM roles in AWS Academy have several limitations. Therefore, you should carefully consider how to perform authentication and authorization in your system while taking these limitations into account. \u5c06\u6587\u4ef6\u4e0a\u4f20\u5230 S3 \u5b58\u50a8\u6876\u3001\u8c03\u7528 Lambda \u51fd\u6570\u6765\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u4e1a\u52a1\u903b\u8f91\u4ee5\u53ca\u8bbf\u95ee\u6570\u636e\u5e93\u4ee5\u8fdb\u884c\u6570\u636e\u5b58\u50a8\u548c\u68c0\u7d22\u90fd\u9700\u8981\u7ec6\u7c92\u5ea6\u7684\u8bbf\u95ee\u63a7\u5236\u6743\u9650\uff0c\u60a8\u9700\u8981\u901a\u8fc7 IAM \u89d2\u8272\u548c\u9002\u5f53\u7684\u7b56\u7565\u6765\u8bbe\u7f6e\u8fd9\u4e9b\u6743\u9650\u3002\u8bf7\u52a1\u5fc5\u6ce8\u610f 2 AWS Academy \u4e2d\u7684 IAM \u89d2\u8272\u6709\u4e00\u4e9b\u9650\u5236\u3002\u56e0\u6b64\uff0c\u5728\u8003\u8651\u8fd9\u4e9b\u9650\u5236\u7684\u540c\u65f6\uff0c\u60a8\u5e94\u8be5\u4ed4\u7ec6\u8003\u8651\u5982\u4f55\u5728\u60a8\u7684\u7cfb\u7edf\u4e2d\u6267\u884c\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u3002 As an optional feature, you can add federated authentication using AWS Cognito Identity Pools to your application and earn bonus marks (up to 5 points shall be awarded if you add federated authentication to your project). For this purpose, you need to create a Facebook or Google app that serves as an external identity provider and authenticates users on behalf of your application, then forwards authentication  tokens to your application. Note that having external authentication providers in your project is not mandatory. Since federated authentication might be challenging and maybe impossible with your AWS academy account, I strongly recommend that you finish the requirements of the assignment first, and then, if you have extra time, work on this feature \u4f5c\u4e3a\u4e00\u9879\u53ef\u9009\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u5c06\u4f7f\u7528 AWS Cognito \u8eab\u4efd\u6c60\u7684\u8054\u5408\u8eab\u4efd\u9a8c\u8bc1\u6dfb\u52a0\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u83b7\u5f97\u5956\u52b1\u5206\u6570\uff08\u5982\u679c\u60a8\u5c06\u8054\u5408\u8eab\u4efd\u9a8c\u8bc1\u6dfb\u52a0\u5230\u60a8\u7684\u9879\u76ee\uff0c\u6700\u591a\u53ef\u83b7\u5f97 5 \u5206\uff09\u3002\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u521b\u5efa\u4e00\u4e2a Facebook \u6216 Google \u5e94\u7528\u7a0b\u5e8f\u4f5c\u4e3a\u5916\u90e8\u8eab\u4efd\u63d0\u4f9b\u8005\u5e76\u4ee3\u8868\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5bf9\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u7136\u540e\u5c06\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c\u8f6c\u53d1\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u60a8\u7684\u9879\u76ee\u4e2d\u62e5\u6709\u5916\u90e8\u8eab\u4efd\u9a8c\u8bc1\u63d0\u4f9b\u7a0b\u5e8f\u4e0d\u662f\u5f3a\u5236\u6027\u7684\u3002\u7531\u4e8e\u8054\u5408\u8eab\u4efd\u9a8c\u8bc1\u53ef\u80fd\u5177\u6709\u6311\u6218\u6027\uff0c\u751a\u81f3\u53ef\u80fd\u65e0\u6cd5\u4f7f\u7528\u60a8\u7684 AWS academy \u5e10\u6237\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae\u60a8\u5148\u5b8c\u6210\u4f5c\u4e1a\u7684\u8981\u6c42\uff0c\u7136\u540e\uff0c\u5982\u679c\u60a8\u6709\u591a\u4f59\u7684\u65f6\u95f4\uff0c\u518d\u7814\u7a76\u6b64\u529f\u80fd  </p>"},{"location":"course_notes/fit5225_note/#image-upload","title":"Image Upload","text":"<p>Your solution should provide a mechanism to upload an image to an S3 bucket. Uploading an image to an S3 bucket can be done either through an API Gateway endpoint (using POST REST APIs) or it can be done directly using AWS SDKs (for instance, boto3 if you are using Python). Whenever an image is uploaded to the S3 bucket, your system must trigger an event and invoke a Lambda function \u56fe\u7247\u4e0a\u4f20 \u60a8\u7684\u89e3\u51b3\u65b9\u6848\u5e94\u8be5\u63d0\u4f9b\u4e00\u79cd\u5c06\u56fe\u7247\u4e0a\u4f20\u5230 S3 \u5b58\u50a8\u6876\u7684\u673a\u5236\u3002\u53ef\u4ee5\u901a\u8fc7 API \u7f51\u5173\u7aef\u70b9\uff08\u4f7f\u7528 POST REST API\uff09\u5c06\u56fe\u50cf\u4e0a\u4f20\u5230 S3 \u5b58\u50a8\u6876\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 AWS \u5f00\u53d1\u5de5\u5177\u5305\uff08\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u4f7f\u7528 Python\uff0c\u5219\u4e3a boto3\uff09\u3002\u6bcf\u5f53\u56fe\u50cf\u4e0a\u4f20\u5230 S3 \u5b58\u50a8\u6876\u65f6\uff0c\u60a8\u7684\u7cfb\u7edf\u90fd\u5fc5\u987b\u89e6\u53d1\u4e8b\u4ef6\u5e76\u8c03\u7528 Lambda \u51fd\u6570 You are expected to configure the triggers and grant the required Amazon resource permissions (execution roles) for the Lambda function. The Lambda function should read the uploaded image, detect objects in the image, and save the list of detected objects (called tags) along with the S3 URL for that image in an AWS database for future queries. Please note that you should update your Yolo script that you were given in your first assignment to suit the AWS Lambda function. This includes removing any Flask-related code, incorporating the Lambda function and required libraries to read the image from S3 buckets, and storing the S3 URL and tags in the database. You may create a separate S3 bucket to store the Yolo and other config files, which can be referenced in your Lambda function \u60a8\u9700\u8981\u4e3a Lambda \u51fd\u6570\u914d\u7f6e\u89e6\u53d1\u5668\u5e76\u6388\u4e88\u6240\u9700\u7684 Amazon \u8d44\u6e90\u6743\u9650\uff08\u6267\u884c\u89d2\u8272\uff09\u3002 Lambda \u51fd\u6570\u5e94\u8be5\u8bfb\u53d6\u4e0a\u4f20\u7684\u56fe\u50cf\uff0c\u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u5bf9\u8c61\uff0c\u5e76\u5c06\u68c0\u6d4b\u5230\u7684\u5bf9\u8c61\u5217\u8868\uff08\u79f0\u4e3a\u6807\u7b7e\uff09\u8fde\u540c\u8be5\u56fe\u50cf\u7684 S3 URL \u4fdd\u5b58\u5728 AWS \u6570\u636e\u5e93\u4e2d\u4ee5\u4f9b\u5c06\u6765\u67e5\u8be2\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u5e94\u8be5\u66f4\u65b0\u60a8\u5728\u7b2c\u4e00\u4e2a\u4f5c\u4e1a\u4e2d\u83b7\u5f97\u7684 Yolo \u811a\u672c\u4ee5\u9002\u5e94 AWS Lambda \u51fd\u6570\u3002\u8fd9\u5305\u62ec\u5220\u9664\u4efb\u4f55\u4e0e Flask \u76f8\u5173\u7684\u4ee3\u7801\uff0c\u5408\u5e76 Lambda \u51fd\u6570\u548c\u6240\u9700\u7684\u5e93\u4ee5\u4ece S3 \u5b58\u50a8\u6876\u4e2d\u8bfb\u53d6\u56fe\u50cf\uff0c\u4ee5\u53ca\u5c06 S3 URL \u548c\u6807\u7b7e\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u3002\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684 S3 \u5b58\u50a8\u6876\u6765\u5b58\u50a8 Yolo \u548c\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u53ef\u4ee5\u5728\u60a8\u7684 Lambda \u51fd\u6570\u4e2d\u5f15\u7528 You may also ignore detected objects with an accuracy of detection below a specific threshold (e.g., 0.6). Please note that Amazon Rekognition is a specialised AWS service for identifying objects in images and can be used instead of Yolo. However, in this assignment, you are not allowed to use the Amazon Rekognition service \u60a8\u8fd8\u53ef\u4ee5\u5ffd\u7565\u68c0\u6d4b\u7cbe\u5ea6\u4f4e\u4e8e\u7279\u5b9a\u9608\u503c\uff08\u4f8b\u5982 0.6\uff09\u7684\u68c0\u6d4b\u5bf9\u8c61\u3002\u8bf7\u6ce8\u610f\uff0cAmazon Rekognition \u662f\u4e00\u79cd\u4e13\u95e8\u7528\u4e8e\u8bc6\u522b\u56fe\u50cf\u4e2d\u5bf9\u8c61\u7684 AWS \u670d\u52a1\uff0c\u53ef\u4ee5\u7528\u6765\u4ee3\u66ff Yolo\u3002\u4f46\u662f\uff0c\u5728\u6b64\u4f5c\u4e1a\u4e2d\uff0c\u60a8\u4e0d\u5f97\u4f7f\u7528 Amazon Rekognition \u670d\u52a1</p>"},{"location":"course_notes/fit5225_note/#queries","title":"Queries","text":"<p>Your solution should provide APIs which allow following queries.  </p>"},{"location":"course_notes/fit5225_note/#find-images-based-on-the-tags","title":"Find images based on the tags","text":"<p>Find images based on the tags: The user can send a text-based query to request URLs of images  that contain specific tags with a minimum repetition number for each tag (e.g., \u201cperson, 1\u201d, \u201cperson,  2, car, 1\u201d). You are expected to create an API Gateway with a RESTful API that allows users to submit their requests, such as GET or POST requests \u67e5\u8be2 \u60a8\u7684\u89e3\u51b3\u65b9\u6848\u5e94\u63d0\u4f9b\u5141\u8bb8\u8fdb\u884c\u4ee5\u4e0b\u67e5\u8be2\u7684 API\u3002 1. \u6839\u636e\u6807\u7b7e\u67e5\u627e\u56fe\u50cf\uff1a\u7528\u6237\u53ef\u4ee5\u53d1\u9001\u57fa\u4e8e\u6587\u672c\u7684\u67e5\u8be2\u6765\u8bf7\u6c42\u5305\u542b\u7279\u5b9a\u6807\u7b7e\u7684\u56fe\u50cf\u7684 URL\uff0c\u6bcf\u4e2a\u6807\u7b7e\u7684\u6700\u5c0f\u91cd\u590d\u6b21\u6570\uff08\u4f8b\u5982\uff0c\u201c\u4eba\uff0c1\u201d\uff0c\u201c\u4eba\uff0c2\uff0c\u8f66\u201d , 1\u201d\uff09\u3002\u60a8\u5e94\u8be5\u521b\u5efa\u4e00\u4e2a\u5e26\u6709 RESTful API \u7684 API \u7f51\u5173\uff0c\u5141\u8bb8\u7528\u6237\u63d0\u4ea4\u4ed6\u4eec\u7684\u8bf7\u6c42\uff0c\u4f8b\u5982 GET \u6216 POST \u8bf7\u6c42  Your application might send a list of tags via specific GET parameters in the requested URL, for  example: https://jyufwbyv8.execute-api.us-east-1.amazonaws.com/dev/search?tag1=cat&amp;tag1count=1&amp;tag2=car&amp;tag2count=1 or it can be a POST request with a JSON object including a list of tags and their counts. A sample JSON object for a query request is given below \u6216\u8005\u5b83\u53ef\u4ee5\u662f\u5e26\u6709 JSON \u5bf9\u8c61\u7684 POST \u8bf7\u6c42\uff0c\u5176\u4e2d\u5305\u62ec\u6807\u7b7e\u5217\u8868\u53ca\u5176\u8ba1\u6570\u3002\u4e0b\u9762\u7ed9\u51fa\u4e86\u67e5\u8be2\u8bf7\u6c42\u7684\u793a\u4f8b JSON \u5bf9\u8c61:  </p> <pre><code>{  \n\"tags\": [  \n    {  \n        \"tag\": \"person\",  \n        \"count\": 1  \n    },  \n    {  \n        \"tag\": \"desk\",  \n        \"count\": 2  \n    },  \n...  \n]  \n}\n</code></pre> <p>A response should include the list of URLs to all images that contain all the requested tags with at least the number in the count value in the query. This can be a JSON message similar to the following \u54cd\u5e94\u5e94\u5305\u62ec\u6240\u6709\u56fe\u50cf\u7684 URL \u5217\u8868\uff0c\u8fd9\u4e9b\u56fe\u50cf\u5305\u542b\u6240\u6709\u8bf7\u6c42\u7684\u6807\u7b7e\uff0c\u81f3\u5c11\u5305\u542b\u67e5\u8be2\u4e2d\u8ba1\u6570\u503c\u4e2d\u7684\u6570\u5b57\u3002\u8fd9\u53ef\u4ee5\u662f\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u7684 JSON \u6d88\u606f  </p> <pre><code>{  \n    \"links\": [  \n        \"https://cloudsnap.s3.amazonaws.com/image1.png\",  \n        \"https://cloudsnap.s3.amazonaws.com/image59.png\",  \n        \"https://cloudsnap.s3.amazonaws.com/image180.png\"  \n    ]  \n}\n</code></pre> <p>Your query may require to trigger one more Lambda function that receives a list of tags and finds s3-url of images containing all tags in the query with least number of repetition from the database, i.e., logical AND operation, not OR operation between tags. By default, a count of 1 should be considered for each tag if it is not specified in the UI or the query. In your UI instead of showing the s3-urls you can preview the images found as the results \u60a8\u7684\u67e5\u8be2\u53ef\u80fd\u9700\u8981\u89e6\u53d1\u53e6\u4e00\u4e2a Lambda \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u6536\u6807\u7b7e\u5217\u8868\u5e76\u4ece\u6570\u636e\u5e93\u4e2d\u67e5\u627e\u5305\u542b\u67e5\u8be2\u4e2d\u6240\u6709\u6807\u7b7e\u4e14\u91cd\u590d\u6b21\u6570\u6700\u5c11\u7684\u56fe\u50cf s3-url\uff0c\u5373\u903b\u8f91 AND \u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u6807\u7b7e\u4e4b\u95f4\u7684 OR \u64cd\u4f5c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u672a\u5728 UI \u6216\u67e5\u8be2\u4e2d\u6307\u5b9a\uff0c\u5219\u6bcf\u4e2a\u6807\u8bb0\u7684\u8ba1\u6570\u5e94\u4e3a 1\u3002\u5728\u60a8\u7684\u7528\u6237\u754c\u9762\u4e2d\uff0c\u60a8\u53ef\u4ee5\u9884\u89c8\u4f5c\u4e3a\u7ed3\u679c\u627e\u5230\u7684\u56fe\u50cf\uff0c\u800c\u4e0d\u662f\u663e\u793a s3-url  </p>"},{"location":"course_notes/fit5225_note/#find-images-based-on-the-tags-of-an-image","title":"Find images based on the tags of an image","text":"<p>Find images based on the tags of an image: The user can send an image as part of an API call. The list of all objects (tags) and their counts in the sent image is discovered and then all the images in CloudSnap storage containing those set of tags and with at least count numbers are found. Finally, as a response, the list of URLs to matching images (similar to to the previous section) are returned to the user. You should make sure that the image uploaded for the query purpose is not added to the database or stored in s3 \u6839\u636e\u56fe\u50cf\u6807\u7b7e\u67e5\u627e\u56fe\u50cf\uff1a\u7528\u6237\u53ef\u4ee5\u5c06\u56fe\u50cf\u4f5c\u4e3a API \u8c03\u7528\u7684\u4e00\u90e8\u5206\u53d1\u9001\u3002\u53d1\u73b0\u53d1\u9001\u56fe\u50cf\u4e2d\u6240\u6709\u5bf9\u8c61\uff08\u6807\u7b7e\uff09\u53ca\u5176\u8ba1\u6570\u7684\u5217\u8868\uff0c\u7136\u540e\u627e\u5230 CloudSnap \u5b58\u50a8\u4e2d\u5305\u542b\u8fd9\u4e9b\u6807\u7b7e\u96c6\u4e14\u81f3\u5c11\u5177\u6709\u8ba1\u6570\u7684\u6240\u6709\u56fe\u50cf\u3002\u6700\u540e\uff0c\u4f5c\u4e3a\u54cd\u5e94\uff0c\u5339\u914d\u56fe\u50cf\u7684 URL \u5217\u8868\uff08\u7c7b\u4f3c\u4e8e\u4e0a\u4e00\u8282\uff09\u8fd4\u56de\u7ed9\u7528\u6237\u3002\u60a8\u5e94\u8be5\u786e\u4fdd\u4e3a\u67e5\u8be2\u76ee\u7684\u4e0a\u4f20\u7684\u56fe\u50cf\u6ca1\u6709\u6dfb\u52a0\u5230\u6570\u636e\u5e93\u6216\u5b58\u50a8\u5728 s3 \u4e2d  </p>"},{"location":"course_notes/fit5225_note/#manual-addition-or-removal-of-tags","title":"Manual addition or removal of tags","text":"<p>Manual addition or removal of tags: Your solution should also provide an API that allow end-user to add or remove tags of an image. You are expected to create a POST API which allow users to submit their requests. A sample JSON message sent to add/remove tags is  \u624b\u52a8\u6dfb\u52a0\u6216\u5220\u9664\u6807\u7b7e\uff1a\u60a8\u7684\u89e3\u51b3\u65b9\u6848\u8fd8\u5e94\u63d0\u4f9b\u5141\u8bb8\u6700\u7ec8\u7528\u6237\u6dfb\u52a0\u6216\u5220\u9664\u56fe\u50cf\u6807\u7b7e\u7684 API\u3002\u60a8\u5e94\u8be5\u521b\u5efa\u4e00\u4e2a POST API\uff0c\u5141\u8bb8\u7528\u6237\u63d0\u4ea4\u4ed6\u4eec\u7684\u8bf7\u6c42\u3002\u53d1\u9001\u7ed9\u6dfb\u52a0/\u5220\u9664\u6807\u7b7e\u7684\u793a\u4f8b JSON \u6d88\u606f\u662f</p> <pre><code>{  \n    \"url\":\"https://cloudsnap.s3.amazonaws.com/image1.png\",  \n    \"type\": 1, /* 1 for add and 0 for remove */  \n    \"tags\": [  \n        {  \n            \"tag\": \"person\",  \n            \"count\": 2  \n        },  \n        {  \n            \"tag\": \"alex\",  \n            \"count\": 1  \n        }  \n    ]  \n}\n</code></pre> <p>\u201ctype\u201d can be set to 1 or 0 for adding or removing a tag, respectively. The above request adds two \"person\" tags to the image and one \"alex\" tag to the tag list of the image in the URL: If \u201ctype\u201d is set to 0, the tags are removed from the tag list of the image up to the maximum of either the available tags or the count value. For example, if the count for the tag person is 2 and only one tag of person is in the tag list, we remove the only existing tag. If a tag is not included in the list of tags requested for deletion, you can simply ignore it in the request. Please note that if \u201ccount\u201d is not specified in the request, the default value of 1 should be considered. https://cloudsnap.s3.amazonaws.com/image1.png. This can be done through a Lambda function to update the entry in the database \u201ctype\u201d \u53ef\u4ee5\u8bbe\u7f6e\u4e3a 1 \u6216 0\uff0c\u5206\u522b\u7528\u4e8e\u6dfb\u52a0\u6216\u5220\u9664\u6807\u7b7e\u3002\u4e0a\u9762\u7684\u8bf7\u6c42\u5728URL\u4e2d\u4e3a\u56fe\u7247\u6dfb\u52a0\u4e862\u4e2a\u201cperson\u201d\u6807\u7b7e\uff0c\u4e3a\u56fe\u7247\u7684\u6807\u7b7e\u5217\u8868\u6dfb\u52a0\u4e861\u4e2a\u201calex\u201d\u6807\u7b7e\uff1a \u5982\u679c\u201ctype\u201d\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u6807\u7b7e\u4ece\u56fe\u7247\u7684\u6807\u7b7e\u5217\u8868\u4e2d\u79fb\u9664\u5230\u53ef\u7528\u6807\u7b7e\u6216\u8ba1\u6570\u503c\u7684\u6700\u5927\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6807\u7b7e person \u7684\u8ba1\u6570\u4e3a 2\uff0c\u5e76\u4e14\u6807\u7b7e\u5217\u8868\u4e2d\u53ea\u6709\u4e00\u4e2a person \u6807\u7b7e\uff0c\u6211\u4eec\u5c06\u5220\u9664\u552f\u4e00\u5b58\u5728\u7684\u6807\u7b7e\u3002\u5982\u679c\u67d0\u4e2a\u6807\u7b7e\u4e0d\u5728\u8bf7\u6c42\u5220\u9664\u7684\u6807\u7b7e\u5217\u8868\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728\u8bf7\u6c42\u4e2d\u5ffd\u7565\u5b83\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u8bf7\u6c42\u4e2d\u672a\u6307\u5b9a\u201ccount\u201d\uff0c\u5219\u5e94\u8003\u8651\u9ed8\u8ba4\u503c 1\u3002 https://cloudsnap.s3.amazonaws.com/image1.png\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7 Lambda \u51fd\u6570\u66f4\u65b0\u6570\u636e\u5e93\u4e2d\u7684\u6761\u76ee\u6765\u5b8c\u6210  </p>"},{"location":"course_notes/fit5225_note/#delete-an-image","title":"Delete an image","text":"<p>Delete an image: The user can communicate the URL of an image to an API and the system should remove the image from s3 and relevant entries from the database. \u5220\u9664\u56fe\u50cf\uff1a\u7528\u6237\u53ef\u4ee5\u5c06\u56fe\u50cf\u7684 URL \u4f20\u9012\u7ed9 API\uff0c\u7cfb\u7edf\u5e94\u8be5\u4ece s3 \u4e2d\u5220\u9664\u56fe\u50cf\uff0c\u5e76\u4ece\u6570\u636e\u5e93\u4e2d\u5220\u9664\u76f8\u5173\u6761\u76ee\u3002  </p>"},{"location":"course_notes/fit5225_note/#user-interface","title":"User Interface","text":"<p>You can design a simple user interface (UI) (We suggest web-based GUI). But UI can be of any form that includes the following: upload images, submit queries, and view query results. A UI makes your system easier and more enjoyable to use. However, you have the option not to create a UI for application or have UI for some parts and not the others. If you opt to ignore UI or full-fledged UI, you can write scripts (e.g., Python) to handle communications with your application APIs. Please be aware that you might need to manually copy credentials provided by the identity pool to your scripts each time if you choose to work with the later option \u60a8\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6237\u754c\u9762 (UI)\uff08\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u57fa\u4e8e Web \u7684 GUI\uff09\u3002\u4f46 UI \u53ef\u4ee5\u662f\u4efb\u4f55\u5f62\u5f0f\uff0c\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9\uff1a\u4e0a\u4f20\u56fe\u7247\u3001\u63d0\u4ea4\u67e5\u8be2\u548c\u67e5\u770b\u67e5\u8be2\u7ed3\u679c\u3002 UI \u4f7f\u60a8\u7684\u7cfb\u7edf\u4f7f\u7528\u8d77\u6765\u66f4\u8f7b\u677e\u3001\u66f4\u6109\u5feb\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u4e0d\u4e3a\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa UI\uff0c\u6216\u8005\u4e3a\u67d0\u4e9b\u90e8\u5206\u521b\u5efa UI \u800c\u5176\u4ed6\u90e8\u5206\u6ca1\u6709\u3002\u5982\u679c\u60a8\u9009\u62e9\u5ffd\u7565 UI \u6216\u6210\u719f\u7684 UI\uff0c\u60a8\u53ef\u4ee5\u7f16\u5199\u811a\u672c\uff08\u4f8b\u5982 Python\uff09\u6765\u5904\u7406\u4e0e\u5e94\u7528\u7a0b\u5e8f API \u7684\u901a\u4fe1\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u9009\u62e9\u4f7f\u7528\u540e\u9762\u7684\u9009\u9879\uff0c\u60a8\u53ef\u80fd\u6bcf\u6b21\u90fd\u9700\u8981\u624b\u52a8\u5c06\u8eab\u4efd\u6c60\u63d0\u4f9b\u7684\u51ed\u636e\u590d\u5236\u5230\u60a8\u7684\u811a\u672c\u4e2d  </p>"},{"location":"course_notes/fit5225_note/#team-report-750-words","title":"Team Report - 750 words","text":"<ul> <li>Include an architecture diagram in the team report. For the architecture diagram, you must use AWS Architecture Icons (more info can be found here: https://aws.amazon.com/architecture/icons/) \u5728\u56e2\u961f\u62a5\u544a\u4e2d\u5305\u542b\u67b6\u6784\u56fe\u3002\u5bf9\u4e8e\u67b6\u6784\u56fe\uff0c\u60a8\u5fc5\u987b\u4f7f\u7528 AWS \u67b6\u6784\u56fe\u6807\uff08\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\uff1ahttps://aws.amazon.com/architecture/icons/\uff09 </li> <li>Include a table to describe the role of each team member in your team report, You can provide a three-column table in your report that shows student name and id, percentage of contribution and elements of the project the member contributed (maximum of 100 words per member) \u5728\u4f60\u7684\u56e2\u961f\u62a5\u544a\u4e2d\u5305\u62ec\u4e00\u4e2a\u8868\u683c\u6765\u63cf\u8ff0\u6bcf\u4e2a\u56e2\u961f\u6210\u5458\u7684\u89d2\u8272\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u62a5\u544a\u4e2d\u63d0\u4f9b\u4e00\u4e2a\u4e09\u5217\u7684\u8868\u683c\uff0c\u663e\u793a\u5b66\u751f\u59d3\u540d\u548c ID\u3001\u8d21\u732e\u767e\u5206\u6bd4\u548c\u6210\u5458\u8d21\u732e\u7684\u9879\u76ee\u5143\u7d20\uff08\u6700\u591a 100 \u5b57\u6bcf\u4e2a\u6210\u5458\uff09  </li> <li>Report includes a simple user guide for testing your application (you should keep your application up and running for two weeks after the submission deadline) \u62a5\u544a\u5305\u62ec\u7528\u4e8e\u6d4b\u8bd5\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7b80\u5355\u7528\u6237\u6307\u5357\uff08\u60a8\u5e94\u8be5\u5728\u63d0\u4ea4\u622a\u6b62\u65e5\u671f\u540e\u7684\u4e24\u5468\u5185\u4fdd\u6301\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\uff09  </li> <li>Your report should include a link to the source code (GitHub or Bitbucket). All students must commit their code to a private code repository rather than delegate this to a single team member. This can also provide an evidence base if teams run into \u201cissues\u201d and how you contributed to the project. You should share your private repository with the whole teaching team. Please do not use a public repository to avoid any plagiarism \u60a8\u7684\u62a5\u544a\u5e94\u5305\u542b\u6307\u5411\u6e90\u4ee3\u7801\uff08GitHub \u6216 Bitbucket\uff09\u7684\u94fe\u63a5\u3002\u6240\u6709\u5b66\u751f\u90fd\u5fc5\u987b\u5c06\u4ed6\u4eec\u7684\u4ee3\u7801\u63d0\u4ea4\u5230\u79c1\u6709\u4ee3\u7801\u5b58\u50a8\u5e93\uff0c\u800c\u4e0d\u662f\u5c06\u5176\u59d4\u6258\u7ed9\u5355\u4e2a\u56e2\u961f\u6210\u5458\u3002\u5982\u679c\u56e2\u961f\u9047\u5230\u201c\u95ee\u9898\u201d\u4ee5\u53ca\u60a8\u5982\u4f55\u4e3a\u9879\u76ee\u505a\u51fa\u8d21\u732e\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u8bc1\u636e\u57fa\u7840\u3002\u60a8\u5e94\u8be5\u4e0e\u6574\u4e2a\u6559\u5b66\u56e2\u961f\u5171\u4eab\u60a8\u7684\u79c1\u4eba\u5b58\u50a8\u5e93\u3002\u8bf7\u4e0d\u8981\u4f7f\u7528\u516c\u5171\u5b58\u50a8\u5e93\u4ee5\u907f\u514d\u4efb\u4f55\u7a83  </li> </ul>"},{"location":"course_notes/fit5225_note/#individual-report-750-words","title":"Individual report - 750 words","text":"<ul> <li>In your individual report, you should describe your role in the project, and how you contributed to the delivery of the system (150 words) \u5728\u4f60\u7684\u4e2a\u4eba\u62a5\u544a\u4e2d\uff0c\u4f60\u5e94\u8be5\u63cf\u8ff0\u4f60\u5728\u9879\u76ee\u4e2d\u7684\u89d2\u8272\uff0c\u4ee5\u53ca\u4f60\u5982\u4f55\u4e3a\u7cfb\u7edf\u7684\u4ea4\u4ed8\u505a\u51fa\u8d21\u732e\uff08150 \u5b57\uff09  </li> <li>Include a personal reflection on the team work your experience in working with other individual team members in your group. Comment on your teammates\u2019 work, challenges the entire team faced, and how well the team worked (150 words) \u5305\u62ec\u5bf9\u56e2\u961f\u5de5\u4f5c\u7684\u4e2a\u4eba\u53cd\u601d\uff0c\u4f60\u4e0e\u56e2\u961f\u4e2d\u5176\u4ed6\u4e2a\u4eba\u56e2\u961f\u6210\u5458\u5408\u4f5c\u7684\u7ecf\u9a8c\u3002\u8bc4\u8bba\u961f\u53cb\u7684\u5de5\u4f5c\u3001\u6574\u4e2a\u56e2\u961f\u9762\u4e34\u7684\u6311\u6218\u4ee5\u53ca\u56e2\u961f\u7684\u5de5\u4f5c\u60c5\u51b5\uff08150 \u5b57\uff09  </li> <li>You should answer the following questions (a paragraph with 100 word each): 1. What are the updates you will perform to your application if you have users from all over the world? 2. What sort of design changes you will make to reduce chance of failures in your application? 3. What are the design changes you will make to increase the performance of your applications in terms of response time, query handling, and loading images?  \u60a8\u5e94\u8be5\u56de\u7b54\u4ee5\u4e0b\u95ee\u9898\uff08\u6bcf\u6bb5 100 \u5b57\uff09\uff1a 1. \u5982\u679c\u60a8\u7684\u7528\u6237\u6765\u81ea\u4e16\u754c\u5404\u5730\uff0c\u60a8\u5c06\u5bf9\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u54ea\u4e9b\u66f4\u65b0\uff1f 2. \u60a8\u5c06\u8fdb\u884c\u54ea\u4e9b\u8bbe\u8ba1\u66f4\u6539\u4ee5\u51cf\u5c11\u5e94\u7528\u7a0b\u5e8f\u5931\u8d25\u7684\u53ef\u80fd\u6027\uff1f 3. \u4e3a\u4e86\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u5728\u54cd\u5e94\u65f6\u95f4\u3001\u67e5\u8be2\u5904\u7406\u548c\u52a0\u8f7d\u56fe\u50cf\u65b9\u9762\u7684\u6027\u80fd\uff0c\u60a8\u5c06\u8fdb\u884c\u54ea\u4e9b\u8bbe\u8ba1\u66f4\u6539\uff1f</li> </ul>"},{"location":"course_notes/fit9132/","title":"FIT9132 Introduction to databases 2022 s1","text":"<p>Create time: 2022-05-05  Last update: 2022-12-05</p>"},{"location":"course_notes/fit9132/#how-to-use-the-fit-study-note-document","title":"How to use the FIT study Note document","text":"<ol> <li>download the markdown file repository and  navigate to the <code>docs</code> folder</li> <li>view all the markdown files via Obsidian vault that can show the linked section in the note document   </li> <li> <p>You may find some extra material or program template  repository in the Course Brief introduction for the FIT Note markdown Document (some course don't have )</p> </li> <li> <p>you can view the web page which transfer from MD file online but will lose the extra information or wrong    markdown display</p> </li> </ol>"},{"location":"course_notes/fit9132/#fit9132-course-brief-introduction","title":"FIT9132 Course Brief introduction","text":"<p>FIT9132 - Introduction to databases done for the year 2022. (Semester 1)  </p>"},{"location":"course_notes/fit9132/#week-1","title":"WEEK 1","text":"<p>ER Modeling </p> <p>Logical Model </p> <p>Physical Model </p>"},{"location":"course_notes/fit9132/#week-2-conceptual-modelling","title":"week 2 Conceptual Modelling","text":"<p>\u7406\u89e3\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u5404\u4e2a\u9636\u6bb5 \u7406\u89e3ANSI/SPARC\u7ed3\u6784\u5728\u6570\u636e\u5e93\u8bbe\u8ba1\u4e2d\u7684\u2ec6\u2f8a \u8ba4\u8bc6\u5b9e\u4f53\u5173\u7cfb\u56fe\u5f53\u4e2d\u7684\u5404\u4e2a\u7ec4\u6210\u90e8\u5206 \u7406\u89e3strong/weak entity\u4e4b\u95f4\u7684\u4e0d\u540c \u5b66\u4e60\u7ed8\u5236\u6982\u5ff5\u6a21\u578b\u56fe</p>"},{"location":"course_notes/fit9132/#er-diagram","title":"ER diagram","text":""},{"location":"course_notes/fit9132/#entities","title":"Entities","text":""},{"location":"course_notes/fit9132/#strong-entity","title":"Strong Entity","text":"<p>Has a key which may be defined without reference to other entities </p>"},{"location":"course_notes/fit9132/#weak-entity","title":"Weak Entity","text":"<p>Has a key which requires the existence of one or more other entities. For example FAMILY entity - need to include the key of employee to create a suitable key for family </p>"},{"location":"course_notes/fit9132/#relationship","title":"Relationship","text":""},{"location":"course_notes/fit9132/#identifying","title":"Identifying","text":"<p>\u25aa  Identifier of A is part of identifier of B \u25aa  Shown with solid line \u25aa  ENROLMENT - STUDENT Enrolment key includes student id,which is an identifier of student. </p>"},{"location":"course_notes/fit9132/#non-identifying","title":"Non-identifying","text":"<p>\u25aa Identifier of A is NOT part of identifier of B. \u25aa Shown with broken line \u25aa Department no (identifier of department) is not part of Employee\u2019s identifier </p>"},{"location":"course_notes/fit9132/#attributes","title":"Attributes","text":""},{"location":"course_notes/fit9132/#simple","title":"Simple","text":"<p>Cannot be subdivided  Age, sex, marital status</p>"},{"location":"course_notes/fit9132/#composite","title":"Composite","text":"<p>Can be subdivided into additional attributes Address into street, city</p>"},{"location":"course_notes/fit9132/#single-valued","title":"Single-valued","text":"<p>Can have only a single value  Person has one social security number</p>"},{"location":"course_notes/fit9132/#multi-valued","title":"Multi-valued","text":"<p>Can have many values Person may have several college degrees</p>"},{"location":"course_notes/fit9132/#derived","title":"Derived","text":"<p>Can be derived with algorithm  Age can be derived from date of birth</p>"},{"location":"course_notes/fit9132/#multivalued-attribute","title":"Multivalued Attribute","text":"<p>An attribute that has a list of values. Car colour may consist of body colour, trim colour, bumper colour. </p>"},{"location":"course_notes/fit9132/#erd","title":"ERD","text":""},{"location":"course_notes/fit9132/#step-1-identify-main-entities","title":"Step 1 Identify Main Entities","text":""},{"location":"course_notes/fit9132/#step-2-identify-the-relationships-which-exist-between-these-entities","title":"STEP 2: Identify the relationships which exist between these entities","text":"<p>(remember to add an appropriate verb) </p>"},{"location":"course_notes/fit9132/#step-3-add-non-key-attributes","title":"Step 3 Add Non-Key Attributes","text":""},{"location":"course_notes/fit9132/#week-3-relational-database-model","title":"WEEK 3 Relational Database Model","text":"<p>\u2022 Explain the relational model and its components \u2022 Identify and evaluate the issues of insert, update and delete anomalies \u2022 Define entity and referential integrity \u2022 Differentiate the types of keys and distinguish their roles in the relational model \u2022 Formulate and write relational algebra to solve query scenarios</p> <p>Basic structure is the mathematical concept of a RELATION mapped to the  'concept' of a table (tabular representation of relation) \u2013 Relation - abstract object \u2013 Table - pictorial representation \u2013 Storage structure - \"real thing\" - eg. isam file of 1's and 0's</p>"},{"location":"course_notes/fit9132/#a-relation","title":"A Relation","text":"<p>A relation consists of two parts \u2013 heading  \u2013 body Relation heading \u21e8 column headings Relation body \u21e8 set of data rows</p>"},{"location":"course_notes/fit9132/#relation-heading-column-headings","title":"Relation Heading \u21e8 column headings","text":"<p>Also called Relational Schema consists of a fixed set of attributes  </p> <p><code>R (A1,A2,.......An)</code>R = relation name, Ai = attribute i` </p> <p>Each attribute corresponds to one underlying domain:  Customer relation heading:      CUSTOMER (custno, custname, custadd, custcredlimit)         dom(custno) = customer_number</p>"},{"location":"course_notes/fit9132/#relation-body-set-of-data-rows","title":"Relation Body \u21e8 set of data rows","text":""},{"location":"course_notes/fit9132/#relation-properties","title":"Relation Properties","text":""},{"location":"course_notes/fit9132/#no-duplicate-tuples","title":"No duplicate tuples","text":"<p>sets do not contain duplicate elements   hence tuples must be unique</p>"},{"location":"course_notes/fit9132/#tuples-are-unordered-within-a-relation","title":"Tuples are unordered within a relation","text":"<p>sets are not ordered   hence tuples can only be accessed by content</p>"},{"location":"course_notes/fit9132/#no-ordering-of-attributes-within-a-tuple","title":"No ordering of attributes within a tuple","text":""},{"location":"course_notes/fit9132/#tuple-values-are-atomic-cannot-be-divided","title":"Tuple values are atomic - cannot be divided","text":"<p><code>EMPLOYEE (eid, ename, departno, dependants)</code>      not allowed: <code>dependants (dep_name, dep_age)</code>multivalued hence no multivalued (repeating) attributes allowed, called the first  normal form rule</p>"},{"location":"course_notes/fit9132/#functional-dependency","title":"Functional Dependency","text":"<p>A set of attributes A functionally determines an attribute B if, and only if, for  each A value, there is exactly one value of B in the relation. It is denoted as </p> <p>A  \u2192 B (A determines B, or B depends on A)</p>"},{"location":"course_notes/fit9132/#relational-model-keys","title":"Relational Model Keys","text":""},{"location":"course_notes/fit9132/#superkey","title":"superkey","text":"<p>A superkey of a relation R is an attribute or set of attributes which exhibits only  the uniqueness property \u2013 No two tuples of R have the same value for the superkey (Uniqueness  property) \u2013 t1[superkey] \u2260 t2[superkey]</p>"},{"location":"course_notes/fit9132/#candidate-key-ck","title":"candidate key (CK)","text":"<p>A candidate key (CK) of a relation R is an attribute or set of attributes which  exhibits the following properties: \u2013 Uniqueness property (as above), and \u2013 No proper subset of CK has the uniqueness property  (Minimality or Irreducibility property) ie. a minimal superkey \u2013One candidate key is chosen to be the primary key (PK) of a relation</p>"},{"location":"course_notes/fit9132/#primary-key","title":"Primary key","text":"<p>One candidate key is chosen to be the primary key (PK) of a relation preferably a single attribute, preferably numeric</p> <p></p>"},{"location":"course_notes/fit9132/#null","title":"Null","text":"<p>NULL is NOT a value - is a representation of the fact that there is NO VALUE VALUE NOT APPLICABLE VALUE UNKNOWN VALUE DOES NOT EXIST VALUE UNDEFINED</p>"},{"location":"course_notes/fit9132/#writing-relations","title":"Writing Relations","text":"<p>Relations may be represented using the following notation: \u2013 RELATION_NAME (attribute1, attribute2,...) \u25aa Relation_name must not be pluralised (is a set name) \u25aa The primary key is underlined. <code>STAFF (staff_id, staff_surname, staff_initials, staff_address,  staff_phone)</code></p>"},{"location":"course_notes/fit9132/#foreign-key-fk","title":"Foreign Key (FK)","text":"<p>An attribute/s in a relation that exists in the same, or another relation  as a Primary Key  </p>"},{"location":"course_notes/fit9132/#data-integrity","title":"Data Integrity","text":"<p>==Entity integrity== Primary key value must not be NULL. \u2022 No duplicate tuple property then ensures that each primary key  must be unique \u2022 Implemented in the RDBMS via a unique index on the PK</p> <p>==Referential integrity== \u2013 The values of FK must either match a value of a full PK in the  related relation or be NULL.  </p> <p>==Column/Domain integrity== \u2013 All values in a given column must come from the same domain  (the same data type and range)</p>"},{"location":"course_notes/fit9132/#relational-algebra","title":"Relational Algebra","text":"<p>8 basic operations: \u2013 single relation:  \u2022 selection,\u2022  projection  </p> <p>\u2013 two relations: \u2022 cartesian product, join  \u2022 union \u2022 intersection  \u2022 difference  \u2022 division</p>"},{"location":"course_notes/fit9132/#project","title":"PROJECT \ud835\udf7f","text":""},{"location":"course_notes/fit9132/#select","title":"SELECT \ud835\udf48","text":""},{"location":"course_notes/fit9132/#multiple-actions","title":"Multiple Actions","text":""},{"location":"course_notes/fit9132/#natural-join","title":"NATURAL JOIN","text":"<p>Step 1: STUDENT X MARK </p> <p>Step 2: delete rows where IDs do not match (select =) </p> <p>Step 3: delete duplicate columns (project away) </p>"},{"location":"course_notes/fit9132/#union-intersect-difference","title":"UNION, INTERSECT, DIFFERENCE","text":""},{"location":"course_notes/fit9132/#quiz-and-exercise","title":"quiz and exercise","text":""},{"location":"course_notes/fit9132/#week-4-normalisation","title":"week 4 Normalisation","text":"<p>\u2022\u7406\u89e3\u5728\u6570\u636e\u5e93\u8bbe\u8ba1\u4e2d\u8fdb\u2f8f\u6570\u636e\u89c4\u8303\u5316\u7684\u539f\u56e0 \u2022\u7406\u89e3\u5728\u6570\u636e\u89c4\u8303\u5316\u4e2d\u5404\u79cd\u4e0d\u540c\u7c7b\u578b\u7684dependency\u7684\u5b9a\u4e49 \u2022\u7406\u89e3\u5728\u6570\u636e\u89c4\u8303\u5316\u4e2d\u4eceUNF\u52303NF\u7684\u5404\u4e2a\u6b65\u9aa4 \u2022\u6ce8\u610f\u5230\u66f4\u2fbc\u9636\u7684\u6570\u636e\u89c4\u8303\u5316\uff08Boyce Codd, 4NF\u548c5NF\uff09 \u2022\u53ef\u4ee5\u901a\u8fc7\u7ed9\u5b9a\u7684relation\u753b\u51fadependency\u56fe \u2022\u53ef\u4ee5\u5bf9\u7ed9\u51fa\u7684\u6570\u636e\u5e93\u63cf\u8ff0\u8fdb\u2f8f\u6570\u636e\u89c4\u8303\u5316\u7684\u64cd\u4f5c \u2022\u53ef\u4ee5\u901a\u8fc7\u7ed9\u5b9a\u7684\u903b\u8f91\u7b49\u7ea7\u7684\u56fe\u6807\u8fdb\u2f8f\u5feb\u901f\u6570\u636e\u89c4\u8303\u5316</p> <p>Data Normalisation \u25aa Relations MUST be normalised in order to avoid anomalies which may  occur when inserting, updating and deleting data. \u25aa Normalisation is a systematic series of steps for progressively refining the  data model. \u25aa A formal approach to analysing relations based on their primary key /  candidate keys and functional dependencies</p> <p>Used: \u25aa as a design technique==\"bottom up design\"==, and \u25aa as a way of validating structures produced via ==\"top down design\" (ER model  converted to a logical model - see next week)== \u25aa for this unit only concerned with conversion to third normal form </p>"},{"location":"course_notes/fit9132/#the-normalisation-process-goals","title":"The Normalisation Process Goals","text":"<p>Creating valid relations, i.e. each relation meets the properties of the  relational model. In particular: \u2013 Entity integrity  \u2013 Referential integrity \u2013 No many-to-many relationship \u2013 Each cell contains a single value (is atomic) \u521b\u5efa\u6709\u6548\u5173\u7cfb\uff0c\u5373\u6bcf\u4e2a\u5173\u7cfb\u90fd\u6ee1\u8db3\u5173\u7cfb\u6a21\u578b\u7684\u5c5e\u6027\u3002\u7279\u522b\u662f\uff1a \u2013 \u5b9e\u4f53\u5b8c\u6574\u6027 \u2013 \u53c2\u7167\u5b8c\u6574\u6027 \u2013 \u6ca1\u6709\u591a\u5bf9\u591a\u5173\u7cfb \u2013 \u6bcf\u4e2a\u5355\u5143\u683c\u5305\u542b\u4e00\u4e2a\u503c\uff08\u662f\u539f\u5b50\u7684\uff09</p> <p>In practical terms when implemented in an RDBMS: \u2013 Each table represents a single subject \u2013 No data item will be unnecessarily stored in more than one table (remember  some redundancy still exists - minimal redundancy). \u2013 The relationship between tables can be established (via PK and FK pairs). \u2013 Each table is void of insert, update and delete anomalies. \u5b9e\u9645\u4e0a\uff0c\u5f53\u5728 RDBMS \u4e2d\u5b9e\u73b0\u65f6\uff1a \u2013 \u6bcf\u4e2a\u8868\u4ee3\u8868\u4e00\u4e2a\u4e3b\u9898 \u2013 \u6ca1\u6709\u6570\u636e\u9879\u5c06\u4e0d\u5fc5\u8981\u5730\u5b58\u50a8\u5728\u591a\u4e2a\u8868\u4e2d\uff08\u8bb0\u4f4f\u4e00\u4e9b\u5197\u4f59\u4ecd\u7136\u5b58\u5728 - \u6700\u5c0f\u5197\u4f59\uff09\u3002 \u2013 \u53ef\u4ee5\u5efa\u7acb\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff08\u901a\u8fc7 PK \u548c FK \u5bf9\uff09\u3002 \u2013 \u6bcf\u4e2a\u8868\u90fd\u6ca1\u6709\u63d2\u5165\u3001\u66f4\u65b0\u548c\u5220\u9664\u5f02\u5e38\u3002 </p>"},{"location":"course_notes/fit9132/#representing-a-form-as-a-relation","title":"Representing a form as a relation","text":"<p>This process follows a standard approach: \u2013 arrive at a name for the form which indicates what it represents (its subject) \u2013 determine if any attribute is multivalued (repeating) for a given entity  instance of the forms subject if an attribute (or set of attributes) appears multiple times then the group  of related attributes need to be shown enclosed in brackets to indicate  there are multiple sets of these values for each instance \u6b64\u8fc7\u7a0b\u9075\u5faa\u6807\u51c6\u65b9\u6cd5\uff1a \u2013 \u4e3a\u8868\u5355\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff0c\u8868\u660e\u5176\u4ee3\u8868\u4ec0\u4e48\uff08\u5176\u4e3b\u9898\uff09 \u2013 \u786e\u5b9a\u8868\u5355\u4e3b\u9898\u7684\u7ed9\u5b9a\u5b9e\u4f53\u5b9e\u4f8b\u7684\u4efb\u4f55\u5c5e\u6027\u662f\u5426\u662f\u591a\u503c\uff08\u91cd\u590d\uff09\u5982\u679c\u4e00\u4e2a\u5c5e\u6027\uff08\u6216\u4e00\u7ec4\u5c5e\u6027\uff09\u51fa\u73b0\u591a\u6b21\uff0c\u5219\u9700\u8981\u5c06\u76f8\u5173\u5c5e\u6027\u7ec4\u663e\u793a\u5728\u62ec\u53f7\u4e2d\uff0c\u4ee5\u6307\u793a\u6bcf\u4e2a\u5b9e\u4f8b\u6709\u591a\u7ec4\u8fd9\u4e9b\u503c</p> <p>example <code>DRUG_SLSREP (drug_code, drug_name, slsrep_id, slsrep_name,  slsrep_mobile)</code> \u8be5\u8868\u683c\u7531\u5206\u914d\u7ed9\u9500\u552e\u4ee3\u8868\u6570\u636e\u7684\u91cd\u590d\u836f\u54c1\u884c\uff08\u5b9e\u4f8b\uff09\u7ec4\u6210 </p>"},{"location":"course_notes/fit9132/#dependency","title":"Dependency","text":""},{"location":"course_notes/fit9132/#functional-dependency-revisited","title":"Functional Dependency Revisited","text":"<p>\u25aa An attribute B is FUNCTIONALLY DEPENDENT on another attribute A, if a  value of A determines a single value of B at any one time. <code>CUSTNUMB \u2794 CUSTNAME  ORDERNO \u2794 ORDERDATE</code></p>"},{"location":"course_notes/fit9132/#functional-dependency_1","title":"Functional Dependency","text":""},{"location":"course_notes/fit9132/#total-dependency","title":"TOTAL DEPENDENCY","text":"<p>\u2013 attribute A determines B AND attribute B determines A <code>\u2022 EMPLOYEE-NUMBER \u2794 TAX-FILE-NUMBER  \u2022 TAX-FILE-NUMBER \u2794 EMPLOYEE-NUMBER</code></p>"},{"location":"course_notes/fit9132/#full-dependency","title":"FULL DEPENDENCY","text":"<p>occurs when an attribute is always dependent on all attributes in the  composite PK <code>ORDERNO, PRODNO \u2794 QTYORDERED</code></p>"},{"location":"course_notes/fit9132/#partial-dependency","title":"PARTIAL  DEPENDENCY","text":"<p>Lack of full dependency for multiple attribute key  <code>ORDERNO, PRODNO  \u2794 PRODDESC, QTYORDERED</code> \u2013 here although qtyordered is fully dependent on orderno and prodno, only  prodno is required to determine proddesc \u2013 proddesc is said to be partially dependent on orderno and prodno</p>"},{"location":"course_notes/fit9132/#transitive-dependency","title":"TRANSITIVE DEPENDENCY","text":"<p>occurs when Y depends on X, and Z depends on Y - thus Z also depends on  X ie. X \u2794 Y \u2794 Z \u2013 and Y is not a candidate key (or part of a candidate key) <code>ORDERNO \u2794 CUSTNUMB \u2794 CUSTNAME</code></p> <p>\u5f53 Y \u4f9d\u8d56\u4e8e X \u5e76\u4e14 Z \u4f9d\u8d56\u4e8e Y \u65f6\u53d1\u751f - \u56e0\u6b64 Z \u4e5f\u4f9d\u8d56\u4e8e X \u5373\u3002 X \u2794 Y \u2794 Z \u2013 Y \u4e0d\u662f\u5019\u9009\u952e\uff08\u6216\u5019\u9009\u952e\u7684\u4e00\u90e8\u5206\uff09</p>"},{"location":"course_notes/fit9132/#normal-form","title":"Normal Form","text":""},{"location":"course_notes/fit9132/#unf","title":"UNF","text":""},{"location":"course_notes/fit9132/#1nf","title":"1NF","text":"<p>A RELATION IS IN FIRST NORMAL FORM (1NF)  IF: \u2022 a unique primary key has been identified for each tuple/row. \u2022 it is a valid relation \u2013 Entity integrity (no part of PK is null) \u2013 Single value for each cell ie. no repeating group  (multivalued attribute). \u2022 all attributes are functionally dependent on all or part of the  primary key</p> <p>\u5982\u679c\uff1a \u2022 \u5df2\u4e3a\u6bcf\u4e2a\u5143\u7ec4/\u884c\u6807\u8bc6\u4e86\u552f\u4e00\u7684\u4e3b\u952e\uff0c\u5219\u5173\u7cfb\u4e3a\u7b2c\u4e00\u8303\u5f0f (1NF)\u3002 \u2022 \u8fd9\u662f\u4e00\u4e2a\u6709\u6548\u7684\u5173\u7cfb \u2013 \u5b9e\u4f53\u5b8c\u6574\u6027\uff08PK \u7684\u4efb\u4f55\u90e8\u5206\u90fd\u4e0d\u4e3a\u7a7a\uff09 \u2013 \u6bcf\u4e2a\u5355\u5143\u683c\u7684\u5355\u4e2a\u503c\uff0c\u5373\u3002\u6ca1\u6709\u91cd\u590d\u7ec4\uff08\u591a\u503c\u5c5e\u6027\uff09\u3002 \u2022 \u6240\u6709\u5c5e\u6027\u5728\u529f\u80fd\u4e0a\u90fd\u4f9d\u8d56\u4e8e\u5168\u90e8\u6216\u90e8\u5206\u4e3b\u952e</p>"},{"location":"course_notes/fit9132/#unf-to-1nf","title":"UNF to 1NF","text":"<p>\u2013  identifying a unique identifier for the repeating group. \u2013 remove any repeating group along with the PK of the main relation. \u2013 The PK of the new relation resulting from the removal of repeating  group will normally have a composite PK made up of the PK of the  main relation and the unique identifier chosen in 1. above, but this  must be checked \u6807\u8bc6\u91cd\u590d\u7ec4\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002  \u5220\u9664\u4efb\u4f55\u91cd\u590d\u7ec4\u4ee5\u53ca\u4e3b\u8981\u5173\u7cfb\u7684 PK\u3002  \u5220\u9664\u91cd\u590d\u7ec4\u4ea7\u751f\u7684\u65b0\u5173\u7cfb\u7684 PK \u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u590d\u5408 PK\uff0c\u7531\u4e3b\u5173\u7cfb\u7684 PK \u548c\u4e0a\u9762 1. \u4e2d\u9009\u62e9\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u7ec4\u6210\uff0c  </p>"},{"location":"course_notes/fit9132/#1nf-to-2nf","title":"1NF to 2NF","text":"<p>all non key attributes are functionally dependent on the primary key \u2013 all non key attributes are functionally dependent on any candidate  key  \u6240\u6709\u975e\u952e\u5c5e\u6027\u5728\u529f\u80fd\u4e0a\u4f9d\u8d56\u4e8e\u4e3b\u952e \u6240\u6709\u975e\u952e\u5c5e\u6027\u5728\u529f\u80fd\u4e0a\u4f9d\u8d56\u4e8e\u4efb\u4f55\u5019\u9009\u952e </p>"},{"location":"course_notes/fit9132/#2nf-to-3nf","title":"2NF to 3NF","text":"<p>Move from 2NF to 3NF by removing transitive dependencies \u2013 Remove the attributes with transitive dependency into a new relation. \u2013 The determinant will be an attribute in both the original and new  relations (it will become a PK / FK relationship) \u2013 Assign the determinant to be the PK of the new relation \u5220\u9664\u4f20\u9012\u4f9d\u8d56\u4ece 2NF \u79fb\u52a8\u5230 3NF\u2014\u2014\u5c06\u5177\u6709\u4f20\u9012\u4f9d\u8d56\u7684\u5c5e\u6027\u5220\u9664\u5230\u65b0\u5173\u7cfb\u4e2d\u3002 \u2013 \u884c\u5217\u5f0f\u5c06\u662f\u539f\u59cb\u5173\u7cfb\u548c\u65b0\u5173\u7cfb\u4e2d\u7684\u5c5e\u6027\uff08\u5b83\u5c06\u6210\u4e3a PK / FK \u5173\u7cfb\uff09 \u2013 \u5c06\u884c\u5217\u5f0f\u5206\u914d\u4e3a\u65b0\u5173\u7cfb\u7684 PK </p>"},{"location":"course_notes/fit9132/#summary","title":"summary","text":"<p>UNF to 1NF define PK &amp; remove repeating group. 1NF to 2NF remove partial dependency. 2NF to 3NF remove transitive dependency. UNF \u5230 1NF \u5b9a\u4e49 PK \u5e76\u5220\u9664\u91cd\u590d\u7ec4\u3002  1NF \u5230 2NF \u6d88\u9664\u90e8\u5206\u4f9d\u8d56\u3002 2NF \u5230 3NF \u6d88\u9664\u4e86\u4f20\u9012\u4f9d\u8d56\u3002</p> <p> </p>"},{"location":"course_notes/fit9132/#week-5-logical-modelling","title":"week 5 Logical Modelling","text":"<p>Define the steps taken to map an ER diagram to a relational model  Map an ER diagram to a relational model Use SQL Developer - Data Modeler to draw a logical level ER diagram</p>"},{"location":"course_notes/fit9132/#relational-model-characteristics","title":"Relational Model Characteristics","text":"<p>Each relation must have a unique name \u25aa Each attribute of a relation must have a distinct name within the relation \u25aa An attribute cannot be multivalued (consist of repeating values) \u25aa All values of an attribute need to be from the same domain \u25aa The order of attributes and tuples in a relation is immaterial \u25aa Each relation must have a primary key \u25aa Logical (not physical) connections are made between relations by virtue of primary/foreign key pairing</p>"},{"location":"course_notes/fit9132/#transforming-er-diagrams-into-relations","title":"Transforming ER diagrams into relations","text":"<p>Essentially \u2013 KEY to PK \u2013 Represent relationships with PK/FK pairs</p> <p>\u25aa The steps are: \u2013 Map strong (regular) entities \u2013 Map weak entities \u2013 Map binary relationships \u2013 Map associative entities \u2013 Map unary relationships \u2013 Map ternary relationships</p>"},{"location":"course_notes/fit9132/#mapping-a-composite-attribute","title":"Mapping a Composite Attribute","text":""},{"location":"course_notes/fit9132/#mapping-a-multi-valued-attribute","title":"Mapping a Multi valued Attribute","text":""},{"location":"course_notes/fit9132/#mapping-a-weak-entity","title":"Mapping a Weak Entity","text":"<p>For each weak entity type, create a new relation and include all of the simple  attributes as attributes of this relation. The PK of the identifying relation is  also included as the FK in this new relation</p> <p></p>"},{"location":"course_notes/fit9132/#mapping-a-1m-binary-relationship","title":"Mapping a 1:M Binary Relationship","text":"<p>For each 1:M binary relationship, first create a relation for each of the  two entity types participating in the relationship. Then include the PK  attribute (or attributes) of the entity on the one-side of the relationship  as the FK on the many-side of the relationship \u5bf9\u4e8e\u6bcf\u4e2a 1:M \u4e8c\u5143\u5173\u7cfb\uff0c\u9996\u5148\u4e3a\u53c2\u4e0e\u8be5\u5173\u7cfb\u7684\u4e24\u4e2a\u5b9e\u4f53\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u521b\u5efa\u4e00\u4e2a\u5173\u7cfb\u3002\u7136\u540e\u5c06\u5b9e\u4f53\u7684PK\u5c5e\u6027\uff08\u6216\u5c5e\u6027\uff09\u5305\u542b\u5728\u5173\u7cfb\u7684\u4e00\u4fa7\u4f5c\u4e3a\u5173\u7cfb\u7684\u591a\u4fa7\u7684FK </p>"},{"location":"course_notes/fit9132/#mapping-a-mn-binary-relationship","title":"Mapping a M:N Binary Relationship","text":"<p>First create a relation for each of the two entity types participating in the relationship. \u2013 Then create a new relation and include as foreign key attributes, the PK  attribute (or attributes) for each of the two participating entity types. These  attributes become the PK of the new relation. \u2013 If there are any nonkey attributes associated with the M:N relationship, they  are also included in the new relation. \u9996\u5148\u4e3a\u53c2\u4e0e\u5173\u7cfb\u7684\u4e24\u4e2a\u5b9e\u4f53\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u521b\u5efa\u4e00\u4e2a\u5173\u7cfb\u3002 \u2013 \u7136\u540e\u521b\u5efa\u4e00\u4e2a\u65b0\u5173\u7cfb\uff0c\u5e76\u5c06\u4e24\u4e2a\u53c2\u4e0e\u5b9e\u4f53\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7684 PK \u5c5e\u6027\uff08\u6216\u591a\u4e2a\u5c5e\u6027\uff09\u4f5c\u4e3a\u5916\u952e\u5c5e\u6027\u5305\u62ec\u5728\u5185\u3002\u8fd9\u4e9b\u5c5e\u6027\u6210\u4e3a\u65b0\u5173\u7cfb\u7684PK\u3002 \u2013 \u5982\u679c\u6709\u4efb\u4f55\u4e0e M:N \u5173\u7cfb\u5173\u8054\u7684\u975e\u5173\u952e\u5c5e\u6027\uff0c\u5b83\u4eec\u4e5f\u5305\u542b\u5728\u65b0\u5173\u7cfb\u4e2d\u3002 </p> <p> </p>"},{"location":"course_notes/fit9132/#mapping-an-associative-entity-with-an-identifier","title":"Mapping an associative entity with an Identifier","text":""},{"location":"course_notes/fit9132/#mapping-a-1m-unary-relationship","title":"Mapping a 1:M Unary Relationship","text":""},{"location":"course_notes/fit9132/#mapping-a-mn-unary-relationship","title":"Mapping a M:N Unary Relationship","text":""},{"location":"course_notes/fit9132/#week6-creating-populating-the-database","title":"week6 Creating &amp; Populating the Database","text":"<p>Map an ER diagram to a relational model  </p> <p>Use SQL Developer - Data Modeler to draw a logical level ER diagram, map it to the  relational model and generate a schema file</p>"},{"location":"course_notes/fit9132/#create-a-table-ddl","title":"CREATE A TABLE (DDL)","text":""},{"location":"course_notes/fit9132/#alternative-better-method-of-defining-fks","title":"Alternative (BETTER) method of defining FKs","text":""},{"location":"course_notes/fit9132/#alter-table","title":"ALTER TABLE","text":"<p>Used to change a tables structure. \u25aa For example: \u2013 Adding column(s). \u2013 Removing column(s). \u2013 Adding constraint(s) - used previously for FK's, but can be any constraint \u2013 Removing constraint(s) </p>"},{"location":"course_notes/fit9132/#alter-table_manipulate-constraints","title":"ALTER TABLE_Manipulate Constraints","text":"<p>Turn constraint ON or OFF to temporarily disable </p> <p>Remove/re add constraint to modify constraint </p>"},{"location":"course_notes/fit9132/#drop_deleting-a-table","title":"DROP_DELETING A TABLE","text":"<p><code>DROP TABLE training_course PURGE</code> <code>DROP TABLE trainer CASCADE CONSTRAINTS PURGE;</code></p>"},{"location":"course_notes/fit9132/#adding-tuplesrows-to-a-table-dml","title":"ADDING TUPLES/ROWS TO A TABLE (DML)","text":""},{"location":"course_notes/fit9132/#insert_adding-data-to-table","title":"INSERT_Adding data to table","text":""},{"location":"course_notes/fit9132/#to_dateinserting-dates-into-a-table","title":"(TO_DATE)Inserting DATES into a table","text":"<p>convert a date <code>to_date('06 Apr 2022','dd Mon yyyy')</code> convert a date and time <code>to_date('06/04/2022 17:00','dd/mm/yyyy hh:mi')</code> convert a time <code>to_date('17:00','hh:mi')</code> Insert a rental into the RENTAL table <code>insert into RENTAL (rent_no, rent_bond, rent_out, rent_in,drone_id, ct_id) values (123, 250,to_date('06 Apr 2022 10:00','dd Mon yyyy hh:mi'), null,234, 2345);</code></p>"},{"location":"course_notes/fit9132/#commit-and-rollback","title":"COMMIT and ROLLBACK","text":"<p>COMMIT makes the changes to the database permanent.  ROLLBACK will undo the changes.  COMMIT/ROLLBACK only applicable to INSERT/UPDATE and DELETE</p>"},{"location":"course_notes/fit9132/#sequence-auto-increment-of-a-numeric","title":"(SEQUENCE) auto-increment of a numeric","text":"<p>Create sequence <code>CREATE SEQUENCE manuf_seq</code> <code>INCREMENT BY 1;</code></p> <p>Access the sequence using two built-in variables <code>INSERT INTO manufacturer</code> <code>VALUES(manuf_seq.nextval,'DJI');</code></p>"},{"location":"course_notes/fit9132/#week-7-structured-query-language-sql","title":"WEEK 7 Structured Query Language (SQL)","text":"<p>Create tables in a database Add new records to a table Use ORACLE's sequences to generate keys Remove tables from a database</p>"},{"location":"course_notes/fit9132/#select_1","title":"SELECT","text":""},{"location":"course_notes/fit9132/#anatomy-of-an-sql-select-statement","title":"Anatomy of an SQL SELECT Statement","text":""},{"location":"course_notes/fit9132/#comparison","title":"Comparison","text":"<p>Compare the value of one expression to the value of another expression <code>=, !=,&lt; &gt;, &lt;, &gt;, &lt;=, &gt;=</code> <code>drone_pur_price &gt; 2000</code></p>"},{"location":"course_notes/fit9132/#between_range","title":"BETWEEN_Range","text":"<p>test whether the value of an expression falls within a specified range of  values <code>drone_pur_price BETWEEN 3000 AND 5300</code> (both are inclusive)</p>"},{"location":"course_notes/fit9132/#in_set-membership","title":"IN_Set Membership","text":"<p>test whether the value of expression equals one of a set of value <code>dt_code in ('DMA2','DSPA')</code></p>"},{"location":"course_notes/fit9132/#like_pattern-match","title":"LIKE_Pattern Match","text":"<p>whether a string (text) matches a specified pattern</p> <p>% character represents any sequence of zero or more character <code>WHERE dt_model LIKE 'DJI%'</code>(drone type models starting with DJI)</p> <p>_ character represents any single character <code>WHERE train_code LIKE '__I__'</code>(drone types with a train_code with  an I in the middle)</p>"},{"location":"course_notes/fit9132/#and-or-not","title":"AND, OR, NOT","text":"<p>An expression is evaluated LEFT to RIGHT Sub-expression in brackets are evaluated first NOTs are evaluated before AND and OR ANDs are evaluated before OR Use of BRACKETS better alternative  </p> <p>AND is evaluated to be TRUE if and only if both conditions are TRUE \u2022 OR is evaluated to be TRUE if and only if at least one of the conditions  is TRUE </p>"},{"location":"course_notes/fit9132/#nvl_replace-a-null-with-a-value","title":"NVL_replace a NULL with a value","text":"<p>It is used to replace a NULL with a value (numeric OR character/string) <code>SELECT stu_nbr</code> <code>NVL(enrol_mark,0),</code> <code>NVL(enrol_grade,'WH')</code> <code>FROM enrolment;</code> <code>select rent_no, drone_id,</code> <code>to_char(rent_out,'dd-Mon-yyyy') as dateout,</code> <code>nvl(to_char(rent_in,'dd-Mon-yyyy'),'Still out')  as datein</code> <code>from rental;</code></p> <p><code>select rent_no, drone_id, rent_out,</code> <code>nvl(rent_in,'Still out') from rental;</code> </p>"},{"location":"course_notes/fit9132/#as_renaming-column","title":"AS_Renaming Column","text":"<p><code>select drone_id, drone_cost_hr/60 as costpermin  from drone;</code></p>"},{"location":"course_notes/fit9132/#order-bysorting-query-result","title":"(ORDER BY)Sorting Query Result","text":"<p>==Must be used if more than one row may be returned== Order can be ASCending or DESCending. The default is ASCending <code>select drone_id, drone_flight_time</code> <code>from drone</code> <code>order by</code> <code>drone_flight_time desc, drone_id;</code> </p>"},{"location":"course_notes/fit9132/#distinctremoving-duplicate-rows-in-the-query-result","title":"(DISTINCT)removing Duplicate Rows in the Query Result","text":"<p><code>select distinct drone_id</code> <code>from rental</code> <code>order by drone_id;</code> </p>"},{"location":"course_notes/fit9132/#to_char","title":"TO_CHAR","text":"<p>Text representing date must be formatted  with TO_DATE when comparing or  inserting/updating <code>select to_char(sysdate,'dd-Mon-yyyy') from dual; = 20-Apr-2021</code> <code>select  to_char(sysdate,'dd-Mon-yyyy hh:mi:ss AM')  from dual; = 0-Apr-2020 02:51:24 PM</code> </p>"},{"location":"course_notes/fit9132/#join","title":"JOIN","text":"<p>placing the join in the where clause is not acceptable</p>"},{"location":"course_notes/fit9132/#join-on","title":"JOIN ON","text":"<p>the general form which always works <code>from aaa JOIN bbb ON aaa.a = bbb.b</code> <code>from aaa JOIN bbb ON aaa.key = bbb.key</code> </p>"},{"location":"course_notes/fit9132/#join-using","title":"JOIN USING","text":"<p>requires matching attribute/s in the two tables <code>FROM trainer JOIN training_course USING (trainer_id)</code></p>"},{"location":"course_notes/fit9132/#natural-join_1","title":"NATURAL JOIN","text":"<p>requires matching attribute/s in the two tables <code>FROM trainer NATURAL JOIN training_course</code> </p>"},{"location":"course_notes/fit9132/#different-types-of-sql-joins","title":"Different Types of SQL JOINs","text":"<p><code>(INNER) JOIN</code>: Returns records that have matching values in both tables   <code>LEFT (OUTER) JOIN</code>: Returns all records from the left table, and the matched records from the right table   <code>RIGHT (OUTER) JOIN</code>: Returns all records from the right table, and the matched records from the left table   <code>FULL (OUTER) JOIN</code>: Returns all records when there is a match in either left or right table </p>"},{"location":"course_notes/fit9132/#week8-dml-update-delete-and-transaction-management","title":"week8 DML Update, Delete and Transaction  Management","text":"<p>interpret a graphical representation of a relational database \u25cf code simple SQL statements on a single table \u25cf code SQL statements that use rows from more than a single table using different types of ANSI standard JOIN operations \u25cf code SQL SELECT statements to select rows based on different conditions \u25cf use ORACLE's date data type in SQL statements correctly \u25cf define an alias for tables and columns \u25cf sort the retrieved data into different orders via SQL ORDER BY \u89e3\u91ca\u5173\u7cfb\u6570\u636e\u5e93\u7684\u56fe\u5f62\u8868\u793a \u25cf \u5728\u5355\u4e2a\u8868\u4e0a\u7f16\u5199\u7b80\u5355\u7684 SQL \u8bed\u53e5 \u25cf \u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684 ANSI \u6807\u51c6 JOIN \u64cd\u4f5c\u4f7f\u7528\u591a\u4e2a\u8868\u4e2d\u7684\u884c\u7f16\u5199 SQL \u8bed\u53e5 \u25cf \u7f16\u5199 SQL SELECT \u8bed\u53e5\u4ee5\u6839\u636e\u4e0d\u540c\u6761\u4ef6\u9009\u62e9\u884c\u25cf \u5728 SQL \u8bed\u53e5\u4e2d\u6b63\u786e\u4f7f\u7528 ORACLE \u7684\u65e5\u671f\u6570\u636e\u7c7b\u578b \u25cf \u4e3a\u8868\u548c\u5217\u5b9a\u4e49\u522b\u540d \u25cf \u901a\u8fc7 SQL ORDER BY \u5c06\u68c0\u7d22\u5230\u7684\u6570\u636e\u6392\u5e8f\u4e3a\u4e0d\u540c\u7684\u987a\u5e8f</p>"},{"location":"course_notes/fit9132/#final","title":"FINAL","text":""},{"location":"course_notes/fit9132/#sql","title":"SQL","text":""},{"location":"course_notes/fit9132/#sql-final","title":"SQL FINAL","text":"<pre><code>/*\n1. Display the full details of employees who earn less than $1000, order the output  by  the employee number.\n*/\n\nSELECT\n    empno,\n    empname,\n    empinit,\n    empjob,\n    to_char(empbdate,'dd Mon yyyy'),\n    empmsal,\n    empcomm,\n    deptno,\n    mgrno\nFROM\n    payroll.employee\nWHERE\n    empmsal &lt; 1000\nORDER BY\n    empno;\n\n</code></pre> <pre><code>/*\n2. List the department number of departments that have employees, order the output by the department number .\n*/\n\nSELECT DISTINCT\n    deptno\nFROM\n    payroll.employee\nORDER BY deptno;\n</code></pre> <pre><code>/*\n3. Display the full details of trainers (employee job is TRAINER) who earn less than 2500 each month and are working in department 20. Order the output by  employee number.\n*/\n\nSELECT\n    empno,\n    empname,\n    empinit,\n    empjob,\n    to_char(empbdate,'dd Mon yyyy'),\n    empmsal,\n    empcomm,\n    deptno,\n    mgrno\nFROM\n    payroll.employee\nWHERE\n    upper(empjob) = 'TRAINER'\n    AND empmsal &lt; 2500\n    AND deptno = 20\nORDER BY\n    empno;\n</code></pre> <pre><code>/*\n4. Display the name, job, monthly salary and commission of employees whose monthly salary is higher than their commission. Rename the columns: Name, Job, Monthly Salary and Commission. Order the output by name and within name by descending monthly salary.\n*/\n\nSELECT\n    empname  AS \"Name\",\n    empjob   AS \"Job\",\n    empmsal  AS \"Monthly Salary\",\n    empcomm  AS \"Commission\"\nFROM\n    payroll.employee\nWHERE\n    empmsal &gt; empcomm\nORDER BY\n    empname,\n    empmsal DESC;\n</code></pre> <pre><code>/*\n5. Display the name and job of employees whose job ends with the letter R. Order the output by name and within name by job.\n*/\n\nSELECT\n    empname,\n    empjob\nFROM\n    payroll.employee\nWHERE\n    upper(empjob) LIKE '%R'\nORDER BY\n    empname,\n    empjob;\n</code></pre> <pre><code>/*\n6. Display the name and job of employees that have a name starting with \u201cJ\u201d, \u201cK\u201d or \u201cM\u201d. Order the output by name and within name by job.\n*/\n\nSELECT\n    empname,\n    empjob\nFROM\n    payroll.employee\nWHERE\n        upper(empname) LIKE 'J%'\n    OR\n        upper(empname) LIKE 'K%'\n    OR\n        upper(empname) LIKE 'M%'\nORDER BY\n    empname,\n    empjob;\n</code></pre> <pre><code>/*\n7. Display the name, job, date of birth and monthly salary of employees who were born before 1990 and earn more than 1500 each month. Order the output by name and within name by monthly salary.\n*/\n\nSELECT\n    empname,\n    empjob,\n    to_char(empbdate, 'Dd-Mon-YYYY') AS birthdate,\n    empmsal\nFROM\n    payroll.employee\nWHERE\n        empbdate &lt; TO_DATE('01-JAN-1990', 'dd-MON-YYYY')\n    AND empmsal &gt; 1500\nORDER BY\n    empname,\n    empmsal;\n</code></pre> <pre><code>/*\n8. Display the name, job, date of birth and salary of employees that don't have a commission. Order the output by name, and within name by date of birth.\n*/\n\nSELECT\n    empname,\n    empjob,\n    to_char(empbdate, 'Dd-Mon-YYYY') AS birthdate,\n    empmsal\nFROM\n    payroll.employee\nWHERE\n    empcomm IS NULL\nORDER BY\n    empname,\n    empbdate;\n</code></pre> <pre><code>/*\n9. Display the employee name, job, department name, location and monthly salary of employees that work in NEW YORK. Order the output by name, and within name by job.\n*/\n\nSELECT\n    e.empname,\n    e.empjob,\n    d.deptname,\n    d.deptlocation,\n    e.empmsal\nFROM\n    payroll.employee e join payroll.department d on e.deptno = d.deptno\nWHERE\n    upper(d.deptlocation) = 'NEW YORK'\nORDER BY e.empname;\n</code></pre> <pre><code>/*\n10. Display the name and job of employees who do not work in NEW YORK or CHICAGO. Order the output by name, and within name by job.\n*/\n\nSELECT\n    e.empname,\n    e.empjob,\n    d.deptname,\n    d.deptlocation\nFROM\n         payroll.employee e\n    JOIN payroll.department d\n    ON e.deptno = d.deptno\nWHERE\n    upper(d.deptlocation) NOT IN ( 'NEW YORK', 'CHICAGO' )\nORDER BY\n    e.empname,\n    empjob;\n</code></pre> <pre><code>/*\n11. Display the name, job, date of birth and salary of employees who were born in the first half of the 70s. Display the output in birth date order and within birthdate by name.\n*/\n\nSELECT\n    empname,\n    empjob,\n    to_char(empbdate, 'Dd-Mon-YYYY') AS birthdate,\n    empmsal\nFROM\n    payroll.employee\nWHERE\n    empbdate BETWEEN TO_DATE('01-JAN-1970', 'DD-MON-YYYY') AND TO_DATE('31-DEC-1974',\n    'DD-MON-YYYY')\nORDER BY\n    empbdate,\n    empname;\n</code></pre> <pre><code>/* \n12.  Display the name, job and salary of employees who earn less than 1500 or greater than 3000 per month. Order the output by name, and within name by monthly salary.\n*/\n\nSELECT\n    empname,\n    empjob,\n    empmsal\nFROM\n    payroll.employee\nWHERE\n    empmsal NOT BETWEEN 1500 AND 3000\nORDER BY\n    empname,\n    empmsal;\n</code></pre> <pre><code>/* \n13. Display the name, job and manager number of employees who have a manager. \nOrder the output by manager number and within a given manager by employee name.\n*/\n\nSELECT\n    empname,\n    empjob,\n    mgrno\nFROM\n    payroll.employee\nWHERE\n    mgrno IS NOT NULL\nORDER BY\n    mgrno,\n    empname;\n</code></pre> <pre><code>/*\n14. Display the name, job, department name, department location and monthly salary of employees who either work in DALLAS or as a MANAGER, and earn more than 2500. Order the output by name and within name by monthly salary.\n*/\n\nSELECT\n    e.empname,\n    e.empjob,\n    d.deptname,\n    d.deptlocation,\n    e.empmsal\nFROM\n         payroll.employee e\n    JOIN payroll.department d\n    ON ( e.deptno = d.deptno )\nWHERE\n    ( upper(d.deptlocation) = 'DALLAS'\n      OR upper(e.empjob) = 'MANAGER' )\n    AND e.empmsal &gt; 2500\nORDER BY\n    e.empname,\n    empmsal;\n</code></pre> <pre><code>/*\n15. Display the name, job, monthly salary and salary grade of all employees. Display the list in monthly salary order within salary grade order.\n*/\n\nSELECT\n    e.empname,\n    e.empjob,\n    e.empmsal,\n    s.salgrade\nFROM\n    payroll.employee e\n    JOIN payroll.salgrade s ON (\n        e.empmsal BETWEEN s.sallower AND s.salupper\n    )\nORDER BY\n    s.salgrade,\n    e.empmsal;\n</code></pre> <pre><code>/*\n16. Display the name and location of ALL departments, and the name of their employees. Display the output in employee name order within department name order.\n*/\n\nSELECT\n    d.deptname,\n    d.deptlocation,\n    e.empname\nFROM\n    payroll.employee e\n    RIGHT OUTER JOIN payroll.department d ON (\n        e.deptno = d.deptno\n    )\nORDER BY\n    d.deptname,\n    e.empname;\n</code></pre> <pre><code>/*\n17. Display the name of ALL employees, their job and the name of their manager. List the output in employee name order within manager name order.\n*/\n\nSELECT\n    e.empname \"Employee\",\n    e.empjob AS \"Emp Job\",\n    m.empname AS \"Manager\"\nFROM\n    payroll.employee e\n    LEFT OUTER JOIN payroll.employee m ON (\n        e.mgrno = m.empno\n    )\nORDER BY\n    m.empname,\n    e.empname;\n/*\n-- here NVL(m.empname,'NA') could be used to display a value rather than leave the managers name null for the director\n*/\n</code></pre> <pre><code>/*\n18. For each employee display their employment history. In the listing include the employees\u2019 name, the name of the department they worked for, the begin and end date and their monthly salary. Display the output in begin date order (most recent at the top of the list) within employee name order.\n*/\n\nSELECT\n    e.empname,\n    d.deptname,\n    to_char(histbegindate,'DD-Mon-YYY') as HISTBEGIN,\n    to_char(histenddate,'Dd-Mon-YYYY') as HISTEND,\n    h.histmsal\nFROM\n    payroll.employee e\n    JOIN payroll.history h ON (\n        e.empno = h.empno\n    )\n    JOIN payroll.department d ON (\n        d.deptno = h.deptno\n    )\nORDER BY\n    e.empname,\n    h.histbegindate DESC;\n</code></pre> <pre><code>/*\n19. Display the employee name, empjob, monthly salary and annual salary of all employees (annual salary is monthly salary x 12). Order the output by annual salary with the highest value shown first and within annual salary by name.\n*/\n\nSELECT\n    empname,\n    empjob,\n    empmsal,\n    empmsal * 12 AS \"Annual Salary\"\nFROM\n    payroll.employee\nORDER BY\n    \"Annual Salary\" DESC,\n    empname;\n</code></pre> <pre><code>/*\n20. Display the employee name, empjob, monthly salary, empcommission and annual income (salary and empcommission) of all employees. Commission is paid on a monthly basis. Order the output by name,and within by annual income.\n*/\n\nSELECT\n    empname,\n    empjob,\n    empmsal,\n    empcomm,\n    12 * ( empmsal + nvl(empcomm, 0) ) AS \"Annual Income\"\nFROM\n    payroll.employee\nORDER BY\n    empname,\n    \"Annual Income\";\n</code></pre> <pre><code>/*\n1. Display for all employees their number, name, job, monthly salary, their current annual salary (not including commission) and what their annual salary would be if they were given a 10% pay rise. Order the output by employee number.\n*/\n\nSELECT\n    empno,\n    empname,\n    empjob,\n    empmsal,\n    empmsal * 12          AS annual_salary,\n    empmsal * 12 * 1.1    AS ann_sal_with_rise\nFROM\n    payroll.employee\nORDER BY\n    empno;\n</code></pre> <pre><code>/*\n2. Display the name of all employees, their birthdate and their age in years. Order the output by birthdate, within birthdate order the output by name.\n*/\n\nSELECT\n    empname,\n    to_char(empbdate, 'DD-Mon-YYYY')                       AS birthdate,\n    floor(months_between(sysdate, empbdate) / 12)          AS \"Age in Yrs\"\nFROM\n    payroll.employee\nORDER BY\n    empbdate,\n    empname;\n</code></pre> <pre><code>/*\n3. Display for all employees, their number, name, job, monthly salary, commission (which is paid monthly) and their current annual salary (including commission). Order the output by  employee number.\n*/\n\nSELECT\n    empno,\n    empname,\n    empjob,\n    empmsal,\n    empcomm,\n    ( empmsal + nvl(empcomm, 0) ) * 12 AS total_salary\nFROM\n    payroll.employee\nORDER BY\n    empno;\n</code></pre> <pre><code>/*\n4. Display all employees details in the following format: EMPLOYEE N. Smith IS A Trainer AND WORKS IN THE Training DEPARTMENT.\n\nINITCAP() \u51fd\u6570\u5c06\u6bcf\u4e2a\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u8bbe\u7f6e\u4e3a\u5927\u5199\uff0c\u6240\u6709\u5176\u4ed6\u5b57\u6bcd\u8bbe\u7f6e\u4e3a\u5c0f\u5199\u3002\u5355\u8bcd\u7531\u7a7a\u683c\u6216\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u5206\u9694\u3002\n\nSELECT INITCAP('steven king') \"Emp. Name\"  \nFROM DUAL;\n\n&gt;&gt; Emp. Name\n-----------\nSteven King\n*/\nSELECT\n    'EMPLOYEE '\n     || empinit\n     || '. '\n     || initcap(empname)\n     || ' IS A '\n     || initcap(empjob)\n     || ' AND WORKS IN THE '\n     || initcap(deptname)\n     || ' DEPARTMENT.' as empdetails\nFROM\n    payroll.employee e\n    JOIN payroll.department d ON (\n        e.deptno = d.deptno\n    )\nORDER BY empname;\n\nSELECT\n    'EMPLOYEE '\n     || empinit\n     || '. '\n     || initcap(empname)\n     || ' IS A '\n     || initcap(nvl(empjob,'----'))\n     || ' AND WORKS IN THE '\n     || initcap(nvl(deptname,'----'))\n     || ' DEPARTMENT.' as empdetails\nFROM\n    payroll.employee e\n    left outer JOIN payroll.department d ON (\n        e.deptno = d.deptno\n    )\nORDER BY e.empno;\n</code></pre> <pre><code>/*\n5. Display the name of all employees, their birthdate and their age in months. Order the output by age in months (with the oldest employee first), within age in months order the output by name. The age in months must be shown with one decimal point and right aligned.\n*/\n\nSELECT\n    empname,\n    to_char(empbdate, 'dd-Mon-yyyy')                                     AS birthdate,\n    lpad(to_char(months_between(sysdate, empbdate), '990.0'), 10)        AS age_in_months\nFROM\n    payroll.employee\nORDER BY\n    age_in_months DESC,\n    empname;\n\n/*\nLPAD() \u51fd\u6570\u7528\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u5411\u5de6\u586b\u5145\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fbe\u5230\u4e00\u5b9a\u7684\u957f\u5ea6\u3002\nSELECT LPAD(\"SQL Tutorial\", 20, \"ABC\");\n&gt;&gt; ABCABCABSQL Tutorial\n*/\n</code></pre> <pre><code>/*\n6. Display the employees who were born in February. Order the output by employeename.\n\n\nEXTRACT() Extract the month from a date:\n\nSELECT EXTRACT(MONTH FROM \"2017-06-15\");\n&gt;&gt; 6\n*/\n\nSELECT\n    empname,\n    to_char(empbdate, 'dd-Mon-yyyy') AS birthdate\nFROM\n    payroll.employee\nWHERE\n    EXTRACT(MONTH FROM empbdate) = 2\nORDER BY\n    empname;\n</code></pre> <pre><code>\n/*\n7. Display the employee name, salary and commission (using the GREATEST function) for those employees who earn more commission than their monthly salary. Order the output by employee name and within name by monthly take home pay (salary plus commission).\n\nGREATEST() Return the greatest value of the list of arguments:\n*/\n\nSELECT\n    empname,\n    empmsal,\n    empcomm\nFROM\n    payroll.employee\nWHERE\n    empcomm = greatest(empcomm, empmsal)\nORDER BY\n    empname,\n    ( empmsal + empcomm );\n\n</code></pre> <pre><code>/*\n8. Display the name of all employees and their birthdate in the following format: EMPLOYEE N. Smith was born on FRIDAY the 17 of DECEMBER , 1982. Order the output by employee name.\n\n\u00a0INITCAP() \u51fd\u6570\u5c06\u6bcf\u4e2a\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u8bbe\u7f6e\u4e3a\u5927\u5199\uff0c\u6240\u6709\u5176\u4ed6\u5b57\u6bcd\u8bbe\u7f6e\u4e3a\u5c0f\u5199\u3002\u5355\u8bcd\u7531\u7a7a\u683c\u6216\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u5206\u9694\n\nRTRIM() \u4ece\u5b57\u7b26\u4e32\u4e2d\u5220\u9664\u5c3e\u968f\u7a7a\u683c\uff1a\n\nSELECT RTRIM('SQL Tutorial \u00a0  ') AS RightTrimmedString;\n&gt;&gt;SQL Tutorial\n*/\n\nSELECT\n    'EMPLOYEE '\n     || empinit\n     || '. '\n     || initcap(empname)\n     || ' was born on '\n     || rtrim(TO_CHAR(empbdate,'DAY') )\n     || ' the '\n     || EXTRACT(DAY FROM empbdate)\n     || ' of '\n     || rtrim(TO_CHAR(empbdate,'MONTH') )\n     || ','\n     || EXTRACT(YEAR FROM empbdate) as \"EMP DOB Details\"\nFROM\n    payroll.employee\nORDER BY \n    empname;\n</code></pre> <pre><code>/*\n9. Display the name of the employees who have registered for a course and the\nnumber of times they have registered. Order the output by employee number.\n\n`GROUP BY`\u8bed\u53e5\u5c06\u5177\u6709\u76f8\u540c\u503c\u7684\u884c\u5206\u7ec4\u5230\u6c47\u603b\u884c\u4e2d\uff0c\u4f8b\u5982\u201c\u67e5\u627e\u6bcf\u4e2a\u56fd\u5bb6/\u5730\u533a\u7684\u5ba2\u6237\u6570\u91cf\u201d\u3002\n\n`GROUP BY`\u8bed\u53e5\u901a\u5e38\u4e0e\u805a\u5408\u51fd\u6570 (\u00a0`COUNT()`,\u00a0`MAX()`,\u00a0`MIN()`,\u00a0`SUM()`,\u00a0`AVG()`) \u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u6309\u4e00\u5217\u6216\u591a\u5217\u5bf9\u7ed3\u679c\u96c6\u8fdb\u884c\u5206\u7ec4\nSELECT\u00a0_column_name(s)_  \nFROM\u00a0_table_name_  \nWHERE\u00a0_condition_  \nGROUP\u00a0BY\u00a0_column_name(s)  \nORDER\u00a0BY\u00a0_column_name(s);_\n\nSELECT COUNT(CustomerID), Country\nFROM Customers\nGROUP BY Country\nORDER BY COUNT(CustomerID) DESC;\n\n&gt;&gt;COUNT(CustomerID) Country\n13USA\n\n11Germany\n\n11France\n\n*/\n\nSELECT\n    e.empno,\n    e.empname,\n    COUNT(*) AS nbr_registrations\nFROM\n         payroll.employee e\n    JOIN payroll.registration r\n    ON ( e.empno = r.empno )\nGROUP BY\n    e.empno,\n    e.empname\nORDER BY\n    empno;\n</code></pre> <pre><code>/*\n10. Who is the oldest employee? Show the employee number, name and date of birth. Order the output by employee number.\n*/\n\nSELECT\n    empno,\n    empname,\n    to_char(empbdate, 'DD-Mon-YYYY')\nFROM\n    payroll.employee\nWHERE\n    empbdate = (\n        SELECT\n            MIN(empbdate)\n        FROM\n            payroll.employee\n    )\nORDER BY\n    empno;\n</code></pre> <pre><code>/*\n11. For each department, list the department number and name, the number of employees, the minimum and maximum monthly salary, the total monthly salary and the average salary paid to their employees. Name the columns: NbrOfEmployees, MinSalary, MaxSalary, TotalSalary, AvgSalary. Order the output by department number.\n*/\n\nSELECT\n    d.deptno,\n    d.deptname,\n    COUNT(e.empno)                           \"NbrOfEmployees\",\n    MIN(empmsal)                             \"MinSalary\",\n    MAX(empmsal)                             \"MaxSalary\",\n    SUM(empmsal)                             \"TotalSalary\",\n    to_char(AVG(empmsal), '9999.99')          \"AvgSalary\"\nFROM\n    payroll.employee      e\n    RIGHT OUTER JOIN payroll.department    d\n    ON ( e.deptno = d.deptno )\nGROUP BY\n    d.deptno,\n    d.deptname\nORDER BY\n    deptno;\n</code></pre> <pre><code>/*\n12. Display the department number, jobs available in that department and the total monthly salary paid for each job. Order the output by department number and within a department by job.\n*/\n\nSELECT\n    deptno,\n    empjob,\n    SUM(empmsal)\nFROM\n    payroll.employee\nGROUP BY\n    deptno,\n    empjob\nORDER BY deptno,empjob;\n</code></pre> <pre><code>/*\n13. Which employee earns more than the average salary? Show the employee number, name and monthly salary. Order the output by employee number.\n*/\n\nSELECT\n    empno,\n    empname,\n    empmsal\nFROM\n    payroll.employee\nWHERE\n    empmsal &gt; (\n        SELECT\n            AVG(empmsal)\n        FROM\n            payroll.employee\n    )\nORDER BY \n    empno;\n</code></pre> <pre><code>/*\n14. Which department has the greatest average monthly salary? Show the department no, name and average monthly salary. Order the output by department number.\n\nROUND() \u51fd\u6570\u5c06\u6570\u5b57\u56db\u820d\u4e94\u5165\u5230\u6307\u5b9a\u7684\u5c0f\u6570\u4f4d\u6570\nSELECT ROUND(235.415, 2) AS RoundValue;\n&gt;&gt;RoundValue\n235.420\n*/\n\nSELECT\n    d.deptno,\n    d.deptname,\n    round(AVG(empmsal),2) \"AvgSalary\"\nFROM\n    payroll.employee e\n    JOIN payroll.department d ON (\n        e.deptno = d.deptno\n    )\nGROUP BY\n    d.deptno,\n    d.deptname\nHAVING\n    AVG(empmsal) = (\n        SELECT\n            MAX(AVG(empmsal) )\n        FROM\n            payroll.employee\n        GROUP BY\n            deptno\n    )\nORDER BY \n    deptno;\n</code></pre> <pre><code>/*\n15. Which course has the most offerings? Show the course code, description and number of offerings. Order the output by the number of offerings in descending order and within the number of offerings by the course code.\n*/\n\nSELECT\n    c.crscode,\n    c.crsdesc,\n    COUNT(*) \"NbrOfferings\"\nFROM\n         payroll.course c\n    JOIN payroll.offering o\n    ON ( c.crscode = o.crscode )\nGROUP BY\n    c.crscode,\n    c.crsdesc\nHAVING\n    COUNT(*) = (\n        SELECT\n            MAX(COUNT(*))\n        FROM\n            payroll.offering\n        GROUP BY\n            crscode\n    )\nORDER BY\n    COUNT(*) DESC,\n    crscode;\n</code></pre> <pre><code>/*\n16. Display the name, job and date of birth of employees who perform the same job as SCOTT and were born in the same year. Do not include SCOTT in the output. Order the output by employee name. \n*/\n\nSELECT\n    e.empname,\n    e.empjob,\n    to_char(empbdate, 'dd-Mon-yyyy')\nFROM\n    payroll.employee e\nWHERE\n        ( e.empjob,\n          EXTRACT(YEAR FROM empbdate) ) = (\n            SELECT\n                e.empjob,\n                EXTRACT(YEAR FROM empbdate)\n            FROM\n                payroll.employee e\n            WHERE\n                upper(empname) = 'SCOTT'\n        )\n    AND upper(e.empname) &lt;&gt; 'SCOTT'\nORDER BY\n    empname;\n</code></pre> <pre><code>/*\n17. Using the MINUS statement, which employees have never registered in a course. Show their employee number and name. Order the output by employee number.\n\n`SELECT DISTINCT`\u8bed\u53e5\u7528\u4e8e\u4ec5\u8fd4\u56de\u4e0d\u540c\uff08\u4e0d\u540c\uff09\u7684\u503c\u3002\n\u5728\u8868\u4e2d\uff0c\u4e00\u5217\u901a\u5e38\u5305\u542b\u8bb8\u591a\u91cd\u590d\u503c\uff1b\u6709\u65f6\u60a8\u53ea\u60f3\u5217\u51fa\u4e0d\u540c\u7684\uff08\u4e0d\u540c\u7684\uff09\u503c\u3002\nSELECT\u00a0DISTINCT\u00a0_column1_,\u00a0_column2, ..._  \nFROM\u00a0_table_name_;\n*/\n\nSELECT\n    empno,\n    empname\nFROM\n    payroll.employee\nMINUS\nSELECT DISTINCT\n    e.empno,\n    empname\nFROM\n         payroll.registration r\n    JOIN payroll.employee e\n    ON ( r.empno = e.empno )\nORDER BY\n    empno;\n</code></pre> <pre><code>/*\n18. Using the INTERSECT statement, which employees have both registered for and conducted courses. Show the employee number and name. Order the output by employee number.\n*/\n\nSELECT DISTINCT\n    e.empno AS \"TrainerAndStudent\",\n    empname\nFROM\n         payroll.offering o\n    JOIN payroll.employee e\n    ON ( o.empno = e.empno )\nINTERSECT\nSELECT DISTINCT\n    e.empno,\n    empname\nFROM\n         payroll.registration r\n    JOIN payroll.employee e\n    ON ( r.empno = e.empno )\nORDER BY\n    \"TrainerAndStudent\";\n</code></pre>"},{"location":"data_structure/HashSet/","title":"HashSet","text":""},{"location":"data_structure/HashSet/#the-principle-of-hash-table","title":"The Principle of Hash Table","text":"<p>\u54c8\u5e0c\u8868\u7684\u539f\u7406 The key idea of Hash Table is to use a hash function to map keys to buckets. To be more specific, \u54c8\u5e0c\u8868\u7684\u5173\u952e\u601d\u60f3\u662f\u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u6765 map keys to buckets .\u66f4\u5177\u4f53\u5730\u8bf4\uff0c</p> <p>When we insert a new key, the hash function will decide which bucket the key should be assigned and the key will be stored in the corresponding bucket; \u5f53\u6211\u4eec\u63d2\u5165\u65b0\u5bc6\u94a5\u65f6\uff0chash \u51fd\u6570\u5c06\u51b3\u5b9a\u5e94\u8be5\u4e3a\u54ea\u4e2a\u5b58\u50a8\u6876\u5206\u914d\u5bc6\u94a5\uff0c\u5e76\u5c06\u5bc6\u94a5\u5b58\u50a8\u5728\u76f8\u5e94\u7684\u5b58\u50a8\u6876\u4e2d; When we want to search for a key, the hash table will use the same hash function to find the corresponding bucket and search only in the specific bucket. \u5f53\u6211\u4eec\u60f3\u8981\u641c\u7d22\u4e00\u4e2a\u952e\u65f6\uff0c\u54c8\u5e0c\u8868\u5c06\u4f7f\u7528hash\u51fd\u6570\u6765 same \u67e5\u627e\u5bf9\u5e94\u7684\u5b58\u50a8\u6876\uff0c\u5e76\u4e14\u4ec5\u5728\u7279\u5b9a\u7684\u5b58\u50a8\u6876\u4e2d\u8fdb\u884c\u641c\u7d22\u3002 </p> <p>In the example, we use\u00a0<code>y = x % 5</code>\u00a0as our hash function. Let's go through the insertion and search strategies using this example: \u5728\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u00a0<code>y = x % 5</code>\u00a0\u3002\u8ba9\u6211\u4eec\u4f7f\u7528\u6b64\u793a\u4f8b\u6d4f\u89c8\u63d2\u5165\u548c\u641c\u7d22\u7b56\u7565\uff1a</p> <ol> <li>Insertion:\u00a0we\u00a0parse the keys through the hash function to map them into the corresponding bucket.     \u63d2\u5165\uff1a\u6211\u4eec\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u89e3\u6790\u952e\uff0c\u5c06\u5b83\u4eec\u6620\u5c04\u5230\u76f8\u5e94\u7684\u5b58\u50a8\u6876\u4e2d\u3002<ul> <li>e.g. 1987 is assigned to bucket 2 while 24 is assigned to bucket 4.     \u4f8b\u5982\uff0c1987 \u5206\u914d\u7ed9\u5b58\u50a8\u6876 2\uff0c\u800c 24 \u5206\u914d\u7ed9\u5b58\u50a8\u6876 4\u3002</li> </ul> </li> <li>Search: we parse the keys through the same hash function and search only in the specific bucket.     \u641c\u7d22\uff1a\u6211\u4eec\u901a\u8fc7\u76f8\u540c\u7684\u54c8\u5e0c\u51fd\u6570\u89e3\u6790\u952e\uff0c\u53ea\u5728\u7279\u5b9a\u6876\u4e2d\u641c\u7d22\u3002<ul> <li>e.g.\u00a0if we search for 1987, we will use the same hash function to map 1987 to 2. So we search in bucket 2 and we successfully find out 1987 in that bucket.     \u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u641c\u7d22 1987\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u76f8\u540c\u7684\u54c8\u5e0c\u51fd\u6570\u5c06 1987 \u6620\u5c04\u5230 2\u3002\u6240\u4ee5\u6211\u4eec\u5728\u5b58\u50a8\u6876 2 \u4e2d\u641c\u7d22\uff0c\u6211\u4eec\u6210\u529f\u5730\u5728\u8be5\u5b58\u50a8\u6876\u4e2d\u627e\u5230\u4e86 1987 \u5e74\u3002</li> <li>e.g. if we search for 23, will map 23 to 3 and search in bucket 3. And We find out that 23 is not in bucket 3 which means 23 is not in the hash table.     \u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u641c\u7d22 23\uff0c\u5219\u5c06 23 \u6620\u5c04\u5230 3 \u5e76\u5728\u5b58\u50a8\u6876 3 \u4e2d\u641c\u7d22\u3002\u6211\u4eec\u53d1\u73b0 23 \u4e0d\u5728\u5b58\u50a8\u6876 3 \u4e2d\uff0c\u8fd9\u610f\u5473\u7740 23 \u4e0d\u5728\u54c8\u5e0c\u8868\u4e2d\u3002</li> </ul> </li> </ol>"},{"location":"data_structure/HashSet/#keys-to-design-a-hash-table","title":"Keys to Design a Hash Table","text":"<p>**The\u00a0hash function is the most important component of a hash table which is used to map the key to a specific bucket. In the example in the previous article, we use\u00a0y = x % 5\u00a0as a hash function, where\u00a0x\u00a0is the key value and\u00a0y\u00a0is the index of the assigned bucket. \u54c8\u5e0c\u51fd\u6570\u662f\u54c8\u5e0c\u8868\u4e2d\u6700\u91cd\u8981\u7684\u7ec4\u4ef6\uff0c\u7528\u4e8e\u5c06\u952e\u6620\u5c04\u5230\u7279\u5b9a\u5b58\u50a8\u6876\u3002\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 y = x % 5 \u4f5c\u4e3a\u54c8\u5e0c\u51fd\u6570\uff0c\u5176\u4e2d x \u662f\u952e\u503c\uff0cy \u662f\u5206\u914d\u5b58\u50a8\u6876\u7684\u7d22\u5f15\u3002</p> <p>The hash function will depend on\u00a0<code>the range of key values</code>\u00a0and\u00a0<code>the number of buckets</code>. \u54c8\u5e0c\u51fd\u6570\u5c06\u53d6\u51b3\u4e8e\u00a0<code>the range of key values</code>\u00a0\u548c\u00a0<code>the number of buckets</code>\u00a0\u3002</p> <p>Here are some examples of hash functions: \u4ee5\u4e0b\u662f\u54c8\u5e0c\u51fd\u6570\u7684\u4e00\u4e9b\u793a\u4f8b\uff1a</p> <p></p> <p>It is an open problem to design a hash function. The idea is to try to assign the key to the bucket as\u00a0<code>uniformly as you can</code>.\u00a0Ideally, a perfect hash function will be a one-one mapping between the key and the bucket. However, in most cases, a hash function is not perfect and it\u00a0is a tradeoff between\u00a0<code>the\u00a0amount of buckets</code>\u00a0and\u00a0<code>the capacity of a bucket</code>. \u8bbe\u8ba1\u54c8\u5e0c\u51fd\u6570\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\u5c1d\u8bd5\u5c06\u5b58\u50a8\u6876\u7684\u5bc6\u94a5\u5206\u914d\u4e3a\u00a0<code>uniformly as you can</code>\u00a0.\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5b8c\u7f8e\u7684\u54c8\u5e0c\u51fd\u6570\u5c06\u662f\u952e\u548c\u5b58\u50a8\u6876\u4e4b\u95f4\u7684\u4e00\u5bf9\u4e00\u6620\u5c04\u3002\u4f46\u662f\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u54c8\u5e0c\u51fd\u6570\u5e76\u4e0d\u5b8c\u7f8e\uff0c\u5b83\u662f \u548c\u00a0<code>the capacity of a bucket</code>\u00a0\u4e4b\u95f4\u7684\u00a0<code>the\u00a0amount of buckets</code>\u00a0\u6743\u8861\u3002**</p>"},{"location":"data_structure/HashSet/#design-hashset","title":"Design HashSet","text":"<p>Implement\u00a0<code>MyHashSet</code>\u00a0class: \u5b9e\u73b0\u00a0<code>MyHashSet</code>\u00a0\u7c7b\uff1a</p> <ul> <li><code>void add(key)</code>\u00a0Inserts the value\u00a0<code>key</code>\u00a0into the HashSet. <code>void add(key)</code>\u00a0\u5c06\u503c\u00a0<code>key</code>\u00a0\u63d2\u5165\u5230\u54c8\u5e0c\u96c6\u4e2d\u3002</li> <li><code>bool contains(key)</code>\u00a0Returns whether the value\u00a0<code>key</code>\u00a0exists in the HashSet or not. <code>bool contains(key)</code>\u00a0\u8fd4\u56de\u503c\u00a0<code>key</code>\u00a0\u662f\u5426\u5b58\u5728\u4e8e\u54c8\u5e0c\u96c6\u4e2d\u3002</li> <li><code>void remove(key)</code>\u00a0Removes the value\u00a0<code>key</code>\u00a0in the HashSet. If\u00a0<code>key</code>\u00a0does not exist in the HashSet, do nothing. <code>void remove(key)</code>\u00a0\u5220\u9664\u54c8\u5e0c\u96c6\u4e2d\u7684\u503c\u00a0<code>key</code>\u00a0\u3002\u5982\u679c HashSet \u4e2d\u4e0d\u5b58\u5728\uff0c\u5219\u00a0<code>key</code>\u00a0\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002</li> </ul> <pre><code>package org.leetcode;  \n\nimport java.util.*;  \n\npublic class MyHashSet {  \n    /**  \n     * Your MyHashSet object will be instantiated and called as such:     * MyHashSet obj = new MyHashSet();     * obj.add(key);     * obj.remove(key);     * boolean param_3 = obj.contains(key);     */  \n    private static final int SIZE = 10000;  \n    private LinkedList&lt;Integer&gt;[] buckets;  \n    public MyHashSet() {  \n        buckets = new LinkedList[SIZE];  \n    }  \n\n    public void add(int key) {  \n        int hash = key % SIZE;  \n        if (buckets[hash] == null) {  \n            buckets[hash] = new LinkedList&lt;&gt;();  \n        }  \n        if (!buckets[hash].contains(key)) {  \n            buckets[hash].add(key);  \n        }  \n    }  \n\n    public void remove(int key) {  \n        int hash = key % SIZE;  \n        if (buckets[hash] != null) {  \n            buckets[hash].removeFirstOccurrence(key);  \n        }  \n    }  \n\n    public boolean contains(int key) {  \n        int hash = key % SIZE;  \n        if (buckets[hash] != null) {  \n            return buckets[hash].contains(key);  \n        }  \n        return false;  \n    }  \n    /*  \n    * [\"MyHashSet\", \"add\", \"add\", \"contains\", \"contains\", \"add\", \"contains\", \"remove\", \"contains\"]        [[], [1], [2], [1], [3], [2], [2], [2], [2]]        Output        [null, null, null, true, false, null, true, null, false]  \n        Explanation        MyHashSet myHashSet = new MyHashSet();        myHashSet.add(1);      // set = [1]        myHashSet.add(2);      // set = [1, 2]        myHashSet.contains(1); // return True        myHashSet.contains(3); // return False, (not found)        myHashSet.add(2);      // set = [1, 2]        myHashSet.contains(2); // return True        myHashSet.remove(2);   // set = [1]        myHashSet.contains(2); // return False, (already removed)    *    * */    public static void main(String[] args) {  \n        MyHashSet myHashSet = new MyHashSet();  \n        myHashSet.add(1);  \n        myHashSet.add(2);  \n        System.out.println(myHashSet.contains(1)); // expected: true  \n        System.out.println(myHashSet.contains(3)); // expected: false  \n        myHashSet.add(2);  \n        System.out.println(myHashSet.contains(2)); // expected: true  \n        myHashSet.remove(2);  \n        System.out.println(myHashSet.contains(2)); // expected: false  \n    }  \n}\n</code></pre>"},{"location":"data_structure/HashSet/#design-hashmap","title":"Design HashMap","text":"<p>Implement the\u00a0<code>MyHashMap</code>\u00a0class: \u5b9e\u73b0\u00a0<code>MyHashMap</code>\u00a0\u7c7b\uff1a</p> <ul> <li><code>MyHashMap()</code>\u00a0initializes the object with an empty map. <code>MyHashMap()</code>\u00a0\u4f7f\u7528\u7a7a\u6620\u5c04\u521d\u59cb\u5316\u5bf9\u8c61\u3002</li> <li><code>void put(int key, int value)</code>\u00a0inserts a\u00a0<code>(key, value)</code>\u00a0pair into the HashMap. If the\u00a0<code>key</code>\u00a0already exists in the map, update the corresponding\u00a0<code>value</code>. <code>void put(int key, int value)</code>\u00a0\u5c06\u4e00\u00a0<code>(key, value)</code>\u00a0\u5bf9\u63d2\u5165\u5230\u54c8\u5e0c\u6620\u5c04\u4e2d\u3002\u5982\u679c\u6620\u5c04\u4e2d\u5df2\u5b58\u5728 \uff0c\u00a0<code>key</code>\u00a0\u8bf7\u66f4\u65b0\u76f8\u5e94\u7684\u00a0<code>value</code>\u00a0.</li> <li><code>int get(int key)</code>\u00a0returns the\u00a0<code>value</code>\u00a0to which the specified\u00a0<code>key</code>\u00a0is mapped, or\u00a0<code>-1</code>\u00a0if this map contains no mapping for the\u00a0<code>key</code>. <code>int get(int key)</code>\u00a0\u8fd4\u56de\u6307\u5b9a\u00a0<code>key</code>\u00a0\u6620\u5c04\u5230\u7684 \uff0c\u00a0<code>value</code>\u00a0\u6216\u8005\u00a0<code>-1</code>\u00a0\u5982\u679c\u6b64\u6620\u5c04\u4e0d\u5305\u542b \u7684\u00a0<code>key</code>\u00a0\u6620\u5c04\u3002</li> <li><code>void remove(key)</code>\u00a0removes the\u00a0<code>key</code>\u00a0and its corresponding\u00a0<code>value</code>\u00a0if the map contains the mapping for the\u00a0<code>key</code>. <code>void remove(key)</code>\u00a0\u5982\u679c\u6620\u5c04\u5305\u542b \u7684\u00a0<code>key</code>\u00a0\u6620\u5c04\uff0c\u5219\u5220\u9664 \u53ca\u5176\u00a0<code>key</code>\u00a0\u5bf9\u5e94\u7684\u00a0<code>value</code>\u00a0\u6620\u5c04\u3002</li> </ul> <pre><code>package org.leetcode;\nimport java.util.*;  \nclass KeyValuePair {  \n    private int key;  \n    private int value;  \n\n    public KeyValuePair(int key, int value) {  \n        this.key = key;  \n        this.value = value;  \n    }  \n\n    public int getKey() {  \n        return key;  \n    }  \n\n    public int getValue() {  \n        return value;  \n    }  \n\n    public void setKey(int key) {  \n        this.key = key;  \n    }  \n\n    public void setValue(int value) {  \n        this.value = value;  \n    }  \n}  \npublic class MyHashMap {  \n    /**  \n     * Your MyHashMap object will be instantiated and called as such:     * MyHashMap obj = new MyHashMap();     * obj.put(key,value);     * int param_2 = obj.get(key);     * obj.remove(key);     */    private KeyValuePair[] map;  \n    public MyHashMap() {  \n        map = new KeyValuePair[1000000];  \n        Arrays.fill(map, null);  \n    }  \n\n    public void put(int key, int value) {  \n        map[key] = new KeyValuePair(key, value);  \n\n    }  \n\n    public int get(int key) {  \n        if (map[key] != null) {  \n            return map[key].getValue();  \n        }  \n        return -1;  \n\n    }  \n\n    public void remove(int key) {  \n        map[key] = null;  \n\n    }  \n\n    public static void main(String[] args) {  \n        MyHashMap myHashMap = new MyHashMap();  \n        myHashMap.put(1, 1);  \n        myHashMap.put(2, 2);  \n        System.out.println(myHashMap.get(1)); // expected: 1  \n        System.out.println(myHashMap.get(3)); // expected: -1  \n        myHashMap.put(2, 1);  \n        System.out.println(myHashMap.get(2)); // expected: 1  \n        myHashMap.remove(2);  \n        System.out.println(myHashMap.get(2)); // expected: -1  \n\n        MyHashMap myHashMap2 = new MyHashMap();  \n        myHashMap2.put(1000, 1);  \n        System.out.println(myHashMap2.get(1000)); // expected: 1  \n        myHashMap2.put(0,2);  \n        System.out.println(myHashMap2.get(0)); // expected: 2  \n    }  \n}\n</code></pre>"},{"location":"data_structure/HashSet/#hash-set-usage","title":"Hash Set - Usage","text":"<pre><code>import java.util.*;\n// \"static void main\" must be defined in a public class.\npublic class Main {\n    public static void main(String[] args) {\n        // 1. initialize the hash set\n        Set&lt;Integer&gt; hashSet = new HashSet&lt;&gt;();     \n        // 2. add a new key\n        hashSet.add(3);\n        hashSet.add(2);\n        hashSet.add(1);\n        // 3. remove the key\n        hashSet.remove(2);        \n        // 4. check if the key is in the hash set\n        if (!hashSet.contains(2)) {\n            System.out.println(\"Key 2 is not in the hash set.\");\n        }\n        // 5. get the size of the hash set\n        System.out.println(\"The size of has set is: \" + hashSet.size());     \n        // 6. iterate the hash set\n        for (Integer i : hashSet) {\n            System.out.print(i + \" \");\n        }\n        System.out.println(\"are in the hash set.\");\n        // 7. clear the hash set\n        hashSet.clear();\n        // 8. check if the hash set is empty\n        if (hashSet.isEmpty()) {\n            System.out.println(\"hash set is empty now!\");\n        }\n    }\n}\n</code></pre>"},{"location":"data_structure/HashSet/#single-number","title":"Single Number","text":"<p>Given a\u00a0non-empty\u00a0array of integers\u00a0<code>nums</code>, every element appears\u00a0twice\u00a0except for one. Find that single one.</p> <p>You must\u00a0implement a solution with a linear runtime complexity and use\u00a0only constant\u00a0extra space.</p> <pre><code>import java.util.HashSet;\n\nclass Solution {\n    public boolean containsDuplicate(int[] nums) {\n        HashSet&lt;Integer&gt; set = new HashSet&lt;&gt;();\n        for (int num : nums) {\n            if (set.contains(num)) {\n                return true;\n            }\n            set.add(num);\n        }\n        return false;\n    }\n\n    public static void main(String[] args) {\n        Solution solution = new Solution();\n        int[] nums1 = {1, 2, 3, 1};\n        System.out.println(solution.containsDuplicate(nums1)); // expected: true\n\n        int[] nums2 = {1, 2, 3, 4};\n        System.out.println(solution.containsDuplicate(nums2)); // expected: false\n\n        int[] nums3 = {1, 1, 1, 3, 3, 4, 3, 2, 4, 2};\n        System.out.println(solution.containsDuplicate(nums3)); // expected: true\n    }\n}\n\n</code></pre>"},{"location":"data_structure/HashSet/#intersection-of-two-arrays","title":"Intersection of Two Arrays","text":"<p>Given two integer arrays\u00a0<code>nums1</code>\u00a0and\u00a0<code>nums2</code>, return\u00a0an array of their intersection. Each element in the result must be\u00a0unique\u00a0and you may return the result in\u00a0any order.</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int[] intersection(int[] nums1, int[] nums2) {\n        HashSet&lt;Integer&gt; set1 = new HashSet&lt;&gt;();\n        for (int num : nums1) {\n            set1.add(num);\n        }\n\n        HashSet&lt;Integer&gt; intersectionSet = new HashSet&lt;&gt;();\n        for (int num : nums2) {\n            if (set1.contains(num)) {\n                intersectionSet.add(num);\n            }\n        }\n\n        int[] result = new int[intersectionSet.size()];\n        int index = 0;\n        for (int num : intersectionSet) {\n            result[index++] = num;\n        }\n\n        return result;\n    }\n\n    public static void main(String[] args) {\n        Solution solution = new Solution();\n        int[] nums1 = {1, 2, 2, 1};\n        int[] nums2 = {2, 2};\n        int[] intersection1 = solution.intersection(nums1, nums2);\n        System.out.println(Arrays.toString(intersection1)); // expected: [2]\n\n        int[] nums3 = {4, 9, 5};\n        int[] nums4 = {9, 4, 9, 8, 4};\n        int[] intersection2 = solution.intersection(nums3, nums4);\n        System.out.println(Arrays.toString(intersection2)); // expected: [9, 4]\n    }\n}\n\n</code></pre>"},{"location":"data_structure/HashSet/#happy-number","title":"Happy Number\u00a0\u5feb\u4e50\u53f7\u7801","text":"<p>Solution</p> <p>Write an algorithm to determine if a number\u00a0<code>n</code>\u00a0is happy. \u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u6765\u786e\u5b9a\u4e00\u4e2a\u6570\u5b57\u00a0<code>n</code>\u00a0\u662f\u5426\u6ee1\u610f\u3002</p> <p>A\u00a0happy number\u00a0is a number defined by the following process: \u5feb\u4e50\u6570\u662f\u7531\u4ee5\u4e0b\u8fc7\u7a0b\u5b9a\u4e49\u7684\u6570\u5b57\uff1a</p> <ul> <li>Starting with any positive integer, replace the number by the sum of the squares of its digits.     \u4ece\u4efb\u4f55\u6b63\u6574\u6570\u5f00\u59cb\uff0c\u5c06\u6570\u5b57\u66ff\u6362\u4e3a\u5176\u6570\u5b57\u7684\u5e73\u65b9\u548c\u3002</li> <li>Repeat the process until the number equals 1 (where it will stay), or it\u00a0loops endlessly in a cycle\u00a0which does not include 1.     \u91cd\u590d\u8be5\u8fc7\u7a0b\uff0c\u76f4\u5230\u6570\u5b57\u7b49\u4e8e 1\uff08\u5b83\u5c06\u505c\u7559\u5728\u4f55\u5904\uff09\uff0c\u6216\u8005\u5b83\u5728\u4e0d\u5305\u62ec 1 \u7684\u5faa\u73af\u4e2d\u65e0\u4f11\u6b62\u5730\u5faa\u73af\u3002</li> <li>Those numbers for which this process\u00a0ends in 1\u00a0are happy.     \u8fd9\u4e2a\u8fc7\u7a0b\u4ee5 1 \u7ed3\u5c3e\u7684\u90a3\u4e9b\u6570\u5b57\u662f\u5feb\u4e50\u7684\u3002</li> </ul> <p>Return\u00a0<code>true</code> if <code>n</code> is a happy number, and <code>false</code> if not. \u5982\u679c\u662f\u4e00\u4e2a\u5feb\u4e50\u7684\u6570\u5b57\uff0c\u00a0<code>false</code>\u00a0\u5219\u00a0<code>n</code>\u00a0\u8fd4\u56de\u00a0<code>true</code>\u00a0\uff0c\u5982\u679c\u4e0d\u662f\u3002</p> <pre><code>import java.util.HashSet;\n\nclass Solution {\n    public boolean isHappy(int n) {\n        HashSet&lt;Integer&gt; set = new HashSet&lt;&gt;();\n        while (n != 1 &amp;&amp; !set.contains(n)) {\n            set.add(n);\n            n = calculateSumOfSquares(n);\n        }\n\n        return n == 1;\n    }\n\n    private int calculateSumOfSquares(int n) {\n        int sum = 0;\n        while (n &gt; 0) {\n            int digit = n % 10;\n            sum += digit * digit;\n            n /= 10;\n        }\n        return sum;\n    }\n\n    public static void main(String[] args) {\n        Solution solution = new Solution();\n        int n1 = 19;\n        System.out.println(solution.isHappy(n1)); // expected: true\n\n        int n2 = 2;\n        System.out.println(solution.isHappy(n2)); // expected: false\n    }\n}\n\n</code></pre>"},{"location":"data_structure/HashSet/#hash-map-usage","title":"Hash Map - Usage","text":"<pre><code>import java.util.*;\n// \"static void main\" must be defined in a public class.\npublic class Main {\n    public static void main(String[] args) {\n        // 1. initialize a hash map\n        Map&lt;Integer, Integer&gt; hashmap = new HashMap&lt;&gt;();\n        // 2. insert a new (key, value) pair\n        hashmap.putIfAbsent(0, 0);\n        hashmap.putIfAbsent(2, 3);\n        // 3. insert a new (key, value) pair or update the value of existed key\n        hashmap.put(1, 1);\n        hashmap.put(1, 2);\n        // 4. get the value of specific key\n        System.out.println(\"The value of key 1 is: \" + hashmap.get(1));\n        // 5. delete a key\n        hashmap.remove(2);\n        // 6. check if a key is in the hash map\n        if (!hashmap.containsKey(2)) {\n            System.out.println(\"Key 2 is not in the hash map.\");\n        }\n        // 7. get the size of the hash map\n        System.out.println(\"The size of hash map is: \" + hashmap.size()); \n        // 8. iterate the hash map\n        for (Map.Entry&lt;Integer, Integer&gt; entry : hashmap.entrySet()) {\n            System.out.print(\"(\" + entry.getKey() + \",\" + entry.getValue() + \") \");\n        }\n        System.out.println(\"are in the hash map.\");\n        // 9. clear the hash map\n        hashmap.clear();\n        // 10. check if the hash map is empty\n        if (hashmap.isEmpty()) {\n            System.out.println(\"hash map is empty now!\");\n        }\n    }\n}\n</code></pre>"},{"location":"data_structure/HashSet/#two-sum","title":"Two Sum","text":"<p>Solution</p> <p>Given an array of integers\u00a0<code>nums</code>\u00a0and an integer\u00a0<code>target</code>, return\u00a0indices of the two numbers such that they add up to\u00a0<code>target</code>.</p> <p>You may assume that each input would have\u00a0exactly\u00a0one solution, and you may not use the\u00a0same\u00a0element twice.</p> <p>You can return the answer in any order.</p> <pre><code>import java.util.HashMap;\nimport java.util.Map;\n\nclass Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map&lt;Integer, Integer&gt; hashmap = new HashMap&lt;&gt;();\n        for (int i = 0; i &lt; nums.length; i++) {\n            int difference = target - nums[i];\n            if (hashmap.containsKey(nums[i])) {\n                return new int[] {hashmap.get(nums[i]), i};\n            }\n            hashmap.put(difference, i);\n        }\n        return null; // No valid solution found\n    }\n\n    public static void main(String[] args) {\n        Solution solution = new Solution();\n        int[] nums = {2, 7, 11, 15};\n        int target = 9;\n        int[] result = solution.twoSum(nums, target);\n        System.out.println(result[0] + \", \" + result[1]); // expected: 0, 1\n    }\n}\n\n</code></pre>"},{"location":"data_structure/HashSet/#isomorphic-strings","title":"Isomorphic Strings\u00a0\u540c\u6784\u5b57\u7b26\u4e32","text":"<p>Solution</p> <p>Given two strings\u00a0<code>s</code>\u00a0and\u00a0<code>t</code>,\u00a0determine if they are isomorphic. \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\u548c\u00a0<code>t</code>\u00a0\uff0c\u786e\u5b9a\u5b83\u4eec\u662f\u5426\u540c\u6784\u3002</p> <p>Two strings\u00a0<code>s</code>\u00a0and\u00a0<code>t</code>\u00a0are isomorphic if the characters in\u00a0<code>s</code>\u00a0can be replaced to get\u00a0<code>t</code>. \u4e24\u4e2a\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\uff0c\u00a0<code>t</code>\u00a0\u5982\u679c\u53ef\u4ee5\u66ff\u6362 \u4e2d\u7684\u00a0<code>s</code>\u00a0\u5b57\u7b26\u4ee5\u83b7\u5f97\u00a0<code>t</code>\u00a0.</p> <p>All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself. \u4e00\u4e2a\u5b57\u7b26\u7684\u6240\u6709\u5339\u914d\u9879\u90fd\u5fc5\u987b\u66ff\u6362\u4e3a\u53e6\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u4fdd\u7559\u5b57\u7b26\u7684\u987a\u5e8f\u3002\u6ca1\u6709\u4e24\u4e2a\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f46\u4e00\u4e2a\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u81ea\u8eab\u3002</p> <pre><code>import java.util.HashMap;\n\nclass Solution {\n    public boolean isIsomorphic(String s, String t) {\n        if(s.length()!=t.length()){\n            return false;\n        }\n\n        HashMap&lt;Character, Character&gt; map = new HashMap&lt;&gt;();\n        HashMap&lt;Character, Character&gt; map2 = new HashMap&lt;&gt;();\n\n        for (int i = 0; i &lt; s.length(); i++) {\n            char sChar = s.charAt(i);\n            char tChar = t.charAt(i);\n\n            if (map.containsKey(sChar)) {\n                if (map.get(sChar) != tChar) {\n                    return false;\n                }\n            } else {\n                map.put(sChar, tChar);\n            }\n\n            if (map2.containsKey(tChar)) {\n                if (map2.get(tChar) != sChar) {\n                    return false;\n                }\n            } else {\n                map2.put(tChar, sChar);\n            }\n        }\n\n        return true;\n    }\n\n    public static void main(String[] args) {\n        Solution solution = new Solution();\n        String s1 = \"egg\";\n        String t1 = \"add\";\n        System.out.println(solution.isIsomorphic(s1, t1)); // expected: true\n\n        String s2 = \"fot\";\n        String t2 = \"bar\";\n        System.out.println(solution.isIsomorphic(s2, t2)); // expected: false\n\n        String s3 = \"paper\";\n        String t3 = \"title\";\n        System.out.println(solution.isIsomorphic(s3, t3)); // expected: true\n    }\n}\n\n</code></pre>"},{"location":"data_structure/HashSet/#minimum-index-sum-of-two-lists","title":"Minimum Index Sum of Two Lists  \u4e24\u4e2a\u5217\u8868\u7684\u6700\u5c0f\u7d22\u5f15\u603b\u548c","text":"<p>Solution</p> <p>Given two arrays of strings\u00a0<code>list1</code>\u00a0and\u00a0<code>list2</code>, find the\u00a0common strings with the least index sum. \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u548c\u00a0<code>list2</code>\u00a0\uff0c\u627e\u5230\u7d22\u5f15\u603b\u548c\u6700\u5c0f\u7684\u516c\u5171\u5b57\u7b26\u4e32\u00a0<code>list1</code>\u00a0\u3002</p> <p>A\u00a0common string\u00a0is a string that appeared in both\u00a0<code>list1</code>\u00a0and\u00a0<code>list2</code>. \u516c\u5171\u5b57\u7b26\u4e32\u662f\u540c\u65f6\u51fa\u73b0\u5728\u00a0<code>list1</code>\u00a0\u548c\u00a0<code>list2</code>\u00a0\u4e2d\u7684\u5b57\u7b26\u4e32\u3002</p> <p>A\u00a0common string with the least index sum\u00a0is a common string such that if it appeared at\u00a0<code>list1[i]</code>\u00a0and\u00a0<code>list2[j]</code>\u00a0then\u00a0<code>i + j</code>\u00a0should be the minimum value among all the other\u00a0common strings. \u5177\u6709\u6700\u5c0f\u7d22\u5f15\u603b\u548c\u7684\u516c\u5171\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u516c\u5171\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u5982\u679c\u5b83\u51fa\u73b0\u5728\u00a0<code>list1[i]</code>\u00a0and\u00a0<code>list2[j]</code>\u00a0\u7136\u540e\u00a0<code>i + j</code>\u00a0\u5e94\u8be5\u662f\u6240\u6709\u5176\u4ed6\u516c\u5171\u5b57\u7b26\u4e32\u4e2d\u7684\u6700\u5c0f\u503c\u3002</p> <p>Return\u00a0all the\u00a0common strings with the least index sum. Return the answer in\u00a0any order. \u8fd4\u56de\u7d22\u5f15\u603b\u548c\u6700\u5c11\u7684\u6240\u6709\u516c\u5171\u5b57\u7b26\u4e32\u3002\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p> <pre><code>import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nclass Solution {\n    public String[] findRestaurant(String[] list1, String[] list2) {\n        HashMap&lt;String, Integer&gt; map = new HashMap&lt;&gt;();\n        int minIndexSum = Integer.MAX_VALUE;\n        List&lt;String&gt; commonStrings = new ArrayList&lt;&gt;();\n\n        for (int i = 0; i &lt; list1.length; i++) {\n            map.put(list1[i], i);\n        }\n\n        for (int j = 0; j &lt; list2.length; j++) {\n            if (map.containsKey(list2[j])) {\n                int indexSum = j + map.get(list2[j]);\n\n                if (indexSum &lt; minIndexSum) {\n                    minIndexSum = indexSum;\n                    commonStrings.clear();\n                    commonStrings.add(list2[j]);\n                } else if (indexSum == minIndexSum) {\n                    commonStrings.add(list2[j]);\n                }\n            }\n        }\n\n        return commonStrings.toArray(new String[commonStrings.size()]);\n    }\n\n    public static void main(String[] args) {\n        Solution solution = new Solution();\n\n        String[] list1 = {\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"};\n        String[] list2 = {\"Piatti\",\"The Grill at Torrey Pines\",\"Hungry Hunter Steakhouse\",\"Shogun\"};\n        String[] result1 = solution.findRestaurant(list1, list2);\n        for (String str : result1) {\n            System.out.print(str + \" \"); // expected: Shogun\n        }\n        System.out.println();\n\n        String[] list3 = {\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"};\n        String[] list4 = {\"KFC\",\"Shogun\",\"Burger King\"};\n        String[] result2 = solution.findRestaurant(list3, list4);\n        for (String str : result2) {\n            System.out.print(str + \" \"); // expected: Shogun\n        }\n        System.out.println();\n\n        String[] list5 = {\"happy\",\"sad\",\"good\"};\n        String[] list6 = {\"sad\",\"happy\",\"good\"};\n        String[] result3 = solution.findRestaurant(list5, list6);\n        for (String str : result3) {\n            System.out.print(str + \" \"); // expected: sad happy\n        }\n        System.out.println();\n    }\n}\n\n</code></pre>"},{"location":"data_structure/HashSet/#first-unique-character-in-a-string","title":"First Unique Character in a String \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26","text":"<p>Solution</p> <p>Given a string\u00a0<code>s</code>,\u00a0find the first non-repeating character in it and return its index. If it does not exist, return\u00a0<code>-1</code>. \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u00a0<code>s</code>\u00a0\uff0c\u627e\u5230\u5176\u4e2d\u7684\u7b2c\u4e00\u4e2a\u975e\u91cd\u590d\u5b57\u7b26\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u00a0<code>-1</code>\u00a0\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: s = \"leetcode\" Output: 0</p> <pre><code>import java.util.*;\nclass Solution {\n    public int firstUniqChar(String s) {\n        // Create a hash map to store character count\n        HashMap&lt;Character, Integer&gt; charCount = new HashMap&lt;&gt;();\n\n        // Calculate count for each character in the string\n        for (char c : s.toCharArray()) {\n            charCount.put(c, charCount.getOrDefault(c, 0) + 1);\n        }\n\n        // Find the first non-repeating character\n        for (int i = 0; i &lt; s.length(); i++) {\n            if (charCount.get(s.charAt(i)) == 1) {\n                return i;\n            }\n        }\n\n        // If no non-repeating character found, return -1\n        return -1;\n    }\n    public static void main(String[] args) {\n    Solution solution = new Solution();\n\n    String s = \"leetcode\";\n    int result = solution.firstUniqChar(s);\n    System.out.println(\"First non-repeating character index: \" + result);\n}\n\n}\n\n</code></pre>"},{"location":"data_structure/HashSet/#intersection-of-two-arrays-ii-ii","title":"intersection of Two Arrays II  \u4e24\u4e2a\u9635\u5217\u7684\u4ea4\u96c6 II","text":"<p>Given two integer arrays\u00a0<code>nums1</code>\u00a0and\u00a0<code>nums2</code>, return\u00a0an array of their intersection. Each element in the result must appear as many times as it shows in both arrays and you may return the result in\u00a0any order. \u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\u6570\u7ec4\u00a0<code>nums1</code>\u00a0\u548c\u00a0<code>nums2</code>\u00a0\uff0c\u8fd4\u56de\u5b83\u4eec\u4ea4\u96c6\u7684\u6570\u7ec4\u3002\u7ed3\u679c\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5fc5\u987b\u4e0e\u5b83\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u663e\u793a\u7684\u6b21\u6570\u4e00\u6837\u591a\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u7ed3\u679c\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: nums1 = [1,2,2,1], nums2 = [2,2] Output: [2,2]</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4] Output: [4,9] Explanation: [9,4] is also accepted.</p> <pre><code>import java.util.*;\nimport java.util.*;\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n        // Create a hash map to store element count of nums1\n        HashMap&lt;Integer, Integer&gt; elementCount = new HashMap&lt;&gt;();\n\n        // Calculate count for each element in nums1\n        for (int num : nums1) {\n            elementCount.put(num, elementCount.getOrDefault(num, 0) + 1);\n        }\n\n        // Create a list to store common elements\n        List&lt;Integer&gt; resultList = new ArrayList&lt;&gt;();\n\n        // Find the common elements in nums2 and add them to the list\n        for (int num : nums2) {\n            if (elementCount.containsKey(num) &amp;&amp; elementCount.get(num) &gt; 0) {\n                resultList.add(num);\n                elementCount.put(num, elementCount.get(num) - 1);\n            }\n        }\n\n        // Convert the list to an array and return\n        int[] result = new int[resultList.size()];\n        for (int i = 0; i &lt; resultList.size(); i++) {\n            result[i] = resultList.get(i);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    Solution solution = new Solution();\n\n    int[] nums1 = {1, 2, 2, 1};\n    int[] nums2 = {2, 2};\n    int[] result1 = solution.intersect(nums1, nums2);\n    System.out.println(\"Intersection: \" + Arrays.toString(result1));\n\n    int[] nums3 = {4, 9, 5};\n    int[] nums4 = {9, 4, 9, 8, 4};\n    int[] result2 = solution.intersect(nums3, nums4);\n    System.out.println(\"Intersection: \" + Arrays.toString(result2));\n}\n\n}\n\n</code></pre> <pre><code>\n\npublic class ContainsNearbyDuplicate {  \n    public boolean containsNearbyDuplicate(int[] nums, int k) {  \n        boolean result = false;  \n        int index = nums.length;  \n        if(index == 0){  \n            return result;  \n        } else if (k== 0){  \n            return result;  \n        } else if (k &gt;= index){  \n            k = index;  \n        }  \n\n        for(int i=0;i&lt;index-1;i++){  \n            for(int j=i+1;j&lt;=i+k &amp;&amp; j&lt;index;j++){  \n                if(nums[i] == nums[j]){  \n                    result = true;  \n                    return result;  \n                }  \n            }  \n        }  \n\n        return result;  \n\n    }  \n\n    public static void main(String[] args){  \n        ContainsNearbyDuplicate obj = new ContainsNearbyDuplicate();  \n        int[] nums1 = {1,2,3,1};  \n        int k1 = 3;  \n        boolean result1 = obj.containsNearbyDuplicate(nums1, k1);  \n        System.out.println(result1);//true  \n    }  \n\n\n}\n</code></pre>"},{"location":"data_structure/HashSet/#group-anagrams","title":"Group Anagrams\u00a0\u7ec4\u5b57\u8c1c","text":"<p>Solution</p> <p>Given an array of strings\u00a0<code>strs</code>, group\u00a0the anagrams\u00a0together. You can return the answer in\u00a0any order. \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u00a0<code>strs</code>\u00a0\u6570\u7ec4\uff0c\u5c06\u5b57\u8c1c\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u60a8\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p> <p>An\u00a0Anagram\u00a0is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. \u5b57\u8c1c\u662f\u901a\u8fc7\u91cd\u65b0\u6392\u5217\u4e0d\u540c\u5355\u8bcd\u6216\u77ed\u8bed\u7684\u5b57\u6bcd\u800c\u5f62\u6210\u7684\u5355\u8bcd\u6216\u77ed\u8bed\uff0c\u901a\u5e38\u53ea\u4f7f\u7528\u4e00\u6b21\u6240\u6709\u539f\u59cb\u5b57\u6bcd\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p>Input: strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"] Output: [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: strs = [\"\"] Output: [[\"\"]]</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: strs = [\"a\"] Output: [[\"a\"]]</p> <pre><code>\nimport java.util.*;  \npublic class GroupAnagrams {  \n    public List&lt;List&lt;String&gt;&gt; groupAnagrams(String[] strs) {  \n\n        HashMap&lt;String, List&lt;String&gt;&gt; map = new HashMap&lt;&gt;();  \n\n        for(String s : strs){  \n            char[] c = s.toCharArray();  \n            Arrays.sort(c);  \n            String key = String.valueOf(c);  \n            if(!map.containsKey(key)){  \n                map.put(key, new ArrayList&lt;&gt;());  \n            }  \n            map.get(key).add(s);  \n        }  \n\n        List&lt;List&lt;String&gt;&gt; result = new ArrayList&lt;&gt;(map.values());  \n        return result;  \n\n    }  \n\n    public static void main(String[] args) {  \n        GroupAnagrams solution = new GroupAnagrams();  \n\n        String[] strs1 = {\"eat\", \"tea\", \"tan\", \"ate\", \"nat\", \"bat\"};  \n        List&lt;List&lt;String&gt;&gt; result1 = solution.groupAnagrams(strs1);  \n        System.out.println(\"Anagram Groups: \" + result1);  \n\n        String[] strs2 = {\"\"};  \n        List&lt;List&lt;String&gt;&gt; result2 = solution.groupAnagrams(strs2);  \n        System.out.println(\"Anagram Groups: \" + result2);  \n\n        String[] strs3 = {\"a\"};  \n        List&lt;List&lt;String&gt;&gt; result3 = solution.groupAnagrams(strs3);  \n        System.out.println(\"Anagram Groups: \" + result3);  \n    }  \n\n}\n</code></pre>"},{"location":"data_structure/array/","title":"Array","text":""},{"location":"data_structure/array/#rotate-array","title":"Rotate Array","text":"<p>Given an integer array\u00a0<code>nums</code>, rotate the array to the right by\u00a0<code>k</code>\u00a0steps, where\u00a0<code>k</code>\u00a0is non-negative.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4,5,6,7], k = 3 Output: [5,6,7,1,2,3,4] Explanation: rotate 1 steps to the right: [7,1,2,3,4,5,6] rotate 2 steps to the right: [6,7,1,2,3,4,5] rotate 3 steps to the right: [5,6,7,1,2,3,4]</p> <p>Example 2:</p> <p>Input: nums = [-1,-100,3,99], k = 2 Output: [3,99,-1,-100] Explanation:  rotate 1 steps to the right: [99,-1,-100,3] rotate 2 steps to the right: [3,99,-1,-100]</p> <pre><code>public class Solution {\n    public int[] rotate(int[] nums, int k) {\n        int n = nums.length;\n        int[] result = new int[n];\n\n        // Handle the case where k is greater than the array length\n        k = k % n;\n\n        // Rotate the array\n        for (int i = 0; i &lt; n; i++) {\n            // Calculate the new index for each element\n            int newIndex = (i + k) % n;\n            result[newIndex] = nums[i];\n        }\n\n        return result;\n    }\n\n\n    public static void main(String[] args) {\n    int[] nums = {1, 2, 3, 4, 5, 6, 7};\n    int k = 3;\n\n    Solution solution = new Solution();\n    int[] result = solution.rotate(nums, k);\n\n    // Output the resulting array\n    for (int num : result) {\n        System.out.print(num + \" \");\n    }\n    // Output: 5 6 7 1 2 3 4\n}\n\n}\n\n</code></pre> <p>We create a new array result of the same size as nums to store the rotated elements. \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4e0e\u5b58\u50a8\u65cb\u8f6c\u5143\u7d20\u76f8\u540c nums \u5927\u5c0f\u7684\u65b0\u6570\u7ec4 result \u3002 We iterate through the original array nums and calculate the new index for each element using the formula (i + k) % n, where i is the current index and n is the length of the array. \u6211\u4eec\u904d\u5386\u539f\u59cb\u6570\u7ec4\u5e76\u4f7f\u7528\u516c\u5f0f (i + k) % n \u8ba1\u7b97\u6bcf\u4e2a\u5143\u7d20\u7684\u65b0\u7d22\u5f15\uff0c\u5176\u4e2d i \u662f\u5f53\u524d\u7d22\u5f15\uff0c n \u662f\u6570\u7ec4 nums \u7684\u957f\u5ea6\u3002 We assign each element to its corresponding new index in the result array. \u6211\u4eec\u5c06\u6bcf\u4e2a\u5143\u7d20\u5206\u914d\u7ed9 result \u6570\u7ec4\u4e2d\u76f8\u5e94\u7684\u65b0\u7d22\u5f15\u3002</p>"},{"location":"data_structure/linked-list/","title":"Linked list","text":"<p>Explore - LeetCode Similar to the array, the linked list is also a\u00a0<code>linear</code>\u00a0data structure. Here is an example: \u4e0e\u6570\u7ec4\u7c7b\u4f3c\uff0c\u94fe\u8868\u4e5f\u662f\u4e00\u79cd\u00a0<code>linear</code>\u00a0\u6570\u636e\u7ed3\u6784\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a</p> <p></p> <p>As you can see, each element in the linked list is actually a separate object while all the objects are\u00a0<code>linked together by the reference field</code>\u00a0in each element. \u5982\u60a8\u6240\u89c1\uff0c\u94fe\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5b9e\u9645\u4e0a\u90fd\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5bf9\u8c61\uff0c\u800c\u6240\u6709\u5bf9\u8c61\u90fd\u5728\u00a0<code>linked together by the reference field</code>\u00a0\u6bcf\u4e2a\u5143\u7d20\u4e2d\u3002</p> <p>There are two types of linked list: singly linked list and doubly linked list. The example above is a singly linked list and here is an example of doubly linked list: \u94fe\u8868\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\u5355\u94fe\u8868\u548c\u53cc\u5411\u94fe\u8868\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u7684\u4f8b\u5b50\uff1a</p> <p> </p>"},{"location":"data_structure/linked-list/#singly-linked-list","title":"Singly Linked List","text":"<p>\u7b80\u4ecb - \u5355\u5411\u94fe\u8868</p> <p>Report Issue\u00a0\u62a5\u544a\u95ee\u9898</p> <p>Each node in a singly-linked list contains not only the value but also\u00a0<code>a reference field</code>\u00a0to link to the next node. By this way, the singly-linked list organizes all the nodes in a sequence. \u5355\u5411\u94fe\u8868\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0d\u4ec5\u5305\u542b\u503c\uff0c\u8fd8\u00a0<code>a reference field</code>\u00a0\u5305\u542b\u94fe\u63a5\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5355\u5411\u94fe\u8868\u6309\u987a\u5e8f\u7ec4\u7ec7\u6240\u6709\u8282\u70b9\u3002</p> <p>Here is an example of a singly-linked list: \u4e0b\u9762\u662f\u5355\u94fe\u8868\u7684\u793a\u4f8b\uff1a</p> <p></p> <p>The blue arrows show how nodes in a singly linked list are combined together. \u84dd\u8272\u7bad\u5934\u663e\u793a\u5355\u5411\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u5982\u4f55\u7ec4\u5408\u5728\u4e00\u8d77\u3002</p>"},{"location":"data_structure/linked-list/#node-structure","title":"Node Structure\u00a0\u8282\u70b9\u7ed3\u6784","text":"<p>Here is the typical definition of a node in a singly-linked list: \u4ee5\u4e0b\u662f\u5355\u94fe\u8868\u4e2d\u8282\u70b9\u7684\u5178\u578b\u5b9a\u4e49\uff1a</p> <pre><code>// Definition for singly-linked list.\npublic class SinglyListNode {\n    int val;\n    SinglyListNode next;\n    SinglyListNode(int x) { val = x; }\n}\n</code></pre> <p>In most\u00a0cases, we will use the\u00a0<code>head</code>\u00a0node\u00a0(the first node) to represent the whole list. \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8282\u70b9\uff08\u7b2c\u4e00\u4e2a\u00a0<code>head</code>\u00a0\u8282\u70b9\uff09\u6765\u8868\u793a\u6574\u4e2a\u5217\u8868\u3002 Unlike the array, we are not able to access a random element in a singly-linked list in constant time. If we want to get the ith element, we have to traverse from the head node one by one. It takes us O(N) time on average to visit an element by index, where N is the length of the linked list. \u4e0e\u6570\u7ec4\u4e0d\u540c\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u5e38\u91cf\u65f6\u95f4\u5185\u8bbf\u95ee\u5355\u5411\u94fe\u8868\u4e2d\u7684\u968f\u673a\u5143\u7d20\u3002\u5982\u679c\u6211\u4eec\u60f3\u83b7\u53d6 i th \u5143\u7d20\uff0c\u6211\u4eec\u5fc5\u987b\u4ece\u5934\u8282\u70b9\u9010\u4e2a\u904d\u5386\u3002\u5e73\u5747\u9700\u8981\u6211\u4eec O(N) \u65f6\u95f4\u5230 visit an element by index \uff0c\u5176\u4e2d N \u662f\u94fe\u8868\u7684\u957f\u5ea6\u3002</p> <p>For instance, in the example above, the head is the node 23. The only way to visit the 3rd node is to use the \"next\" field of the head node to get to the 2nd node (node 6); Then with the \"next\" field of node 6, we are able to visit the 3rd node. \u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5934\u90e8\u662f\u8282\u70b9 23\u3002\u8bbf\u95ee\u7b2c 3 \u4e2a\u8282\u70b9\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u4f7f\u7528\u5934\u8282\u70b9\u7684\u201c\u4e0b\u4e00\u4e2a\u201d\u5b57\u6bb5\u5230\u8fbe\u7b2c 2 \u4e2a\u8282\u70b9\uff08\u8282\u70b9 6\uff09;\u7136\u540e\u4f7f\u7528\u8282\u70b9 6 \u7684\u201c\u4e0b\u4e00\u4e2a\u201d\u5b57\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u7b2c 3 \u4e2a\u8282\u70b9\u3002</p>"},{"location":"data_structure/linked-list/#add-operation-singly-linked-list","title":"Add Operation - Singly Linked List","text":"<p>If we want to add a new value after a given node\u00a0<code>prev</code>, we should:\u00a0 \u5982\u679c\u6211\u4eec\u60f3\u5728\u7ed9\u5b9a\u8282\u70b9\u00a0<code>prev</code>\u00a0\u4e4b\u540e\u6dfb\u52a0\u4e00\u4e2a\u65b0\u503c\uff0c\u6211\u4eec\u5e94\u8be5\uff1a</p> <ol> <li>Initialize a new node\u00a0<code>cur</code>\u00a0with the given value;     \u4f7f\u7528\u7ed9\u5b9a\u503c\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u8282\u70b9\u00a0<code>cur</code>\u00a0;</li> <li>Link the \"next\" field of\u00a0<code>cur</code>\u00a0to prev's next node\u00a0<code>next</code>;     \u5c06 \u7684 \u201cnext\u201d \u5b57\u6bb5\u94fe\u63a5\u5230 prev\u00a0<code>cur</code>\u00a0\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u00a0<code>next</code>\u00a0;</li> <li>Link the \"next\" field in\u00a0<code>prev</code>\u00a0to\u00a0<code>cur</code>.     \u5c06\u00a0<code>prev</code>\u00a0\u201c\u4e0b\u4e00\u4e2a\u201d\u5b57\u6bb5\u94fe\u63a5\u5230\u00a0<code>cur</code>\u00a0\u3002</li> </ol> <p>Unlike an array, we don\u2019t need to move all elements past the inserted element. Therefore, you can insert a new node into a linked list in\u00a0<code>O(1)</code>\u00a0time complexity if you have a reference to\u00a0<code>prev</code>, which is very efficient. \u4e0e\u6570\u7ec4\u4e0d\u540c\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5c06\u6240\u6709\u5143\u7d20\u90fd\u79fb\u52a8\u5230\u63d2\u5165\u7684\u5143\u7d20\u4e4b\u540e\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u5f15\u7528\u00a0<code>prev</code>\u00a0\uff0c\u5219\u53ef\u4ee5\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e2d\u00a0<code>O(1)</code>\u00a0\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u8fd9\u975e\u5e38\u6709\u6548\u3002</p>"},{"location":"data_structure/linked-list/#delete-operation-singly-linked-list","title":"Delete Operation - Singly Linked List","text":"<p>\u5220\u9664\u64cd\u4f5c - \u5355\u5411\u94fe\u8868</p> <p>If we want to delete an existing node\u00a0<code>cur</code>\u00a0from the singly\u00a0linked list, we can do it in two steps: \u5982\u679c\u6211\u4eec\u60f3\u4ece\u5355\u5411\u94fe\u8868\u4e2d\u5220\u9664\u73b0\u6709\u8282\u70b9\u00a0<code>cur</code>\u00a0\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u6765\u5b8c\u6210\uff1a</p> <ol> <li>Find cur's\u00a0previous node\u00a0<code>prev</code>\u00a0and its next node\u00a0<code>next</code>;     \u67e5\u627ecur\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\u548c\u4e0b\u4e00\u4e2a\u8282\u70b9\u00a0<code>prev</code> <code>next</code>\u00a0;</li> <li>Link\u00a0<code>prev</code>\u00a0to cur's next node\u00a0<code>next</code>.     \u94fe\u63a5\u5230\u00a0<code>prev</code>\u00a0cur\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u00a0<code>next</code>\u00a0\u3002</li> </ol> <p>In our first step, we need to find out\u00a0<code>prev</code>\u00a0and\u00a0<code>next</code>. It is easy to find out\u00a0<code>next</code>\u00a0using the reference field of\u00a0<code>cur</code>. However, we have to traverse the linked list from the head node to find out\u00a0<code>prev</code>\u00a0which will take\u00a0<code>O(N)</code>\u00a0time\u00a0on average, where N is the length of the linked list. So the time complexity of deleting a node will be\u00a0<code>O(N)</code>. \u5728\u6211\u4eec\u7684\u7b2c\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u00a0<code>prev</code>\u00a0\u548c\u00a0<code>next</code>\u00a0.\u4f7f\u7528 \u7684\u00a0<code>cur</code>\u00a0\u53c2\u8003\u5b57\u6bb5\u5f88\u5bb9\u6613\u627e\u5230\u00a0<code>next</code>\u00a0\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u4ece\u5934\u8282\u70b9\u904d\u5386\u94fe\u8868\uff0c\u4ee5\u627e\u51fa\u00a0<code>prev</code>\u00a0\u5e73\u5747\u9700\u8981\u00a0<code>O(N)</code>\u00a0\u65f6\u95f4\u7684\u94fe\u8868\uff0c\u5176\u4e2d N \u662f\u94fe\u8868\u7684\u957f\u5ea6\u3002\u56e0\u6b64\uff0c\u5220\u9664\u8282\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u662f\u00a0<code>O(N)</code>\u00a0\u3002</p> <p>The space\u00a0complexity is\u00a0<code>O(1)</code>\u00a0because we only need constant space to store our pointers. \u7a7a\u95f4\u590d\u6742\u6027\u662f\u00a0<code>O(1)</code>\u00a0\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u6052\u5b9a\u7684\u7a7a\u95f4\u6765\u5b58\u50a8\u6211\u4eec\u7684\u6307\u9488</p>"},{"location":"data_structure/linked-list/#design-linked-list","title":"Design Linked List\u00a0\u8bbe\u8ba1\u94fe\u8868","text":"<pre><code>class MyLinkedList {\n    private Node head;\n    private int size;\n\n    private class Node {\n        int val;\n        Node next;\n\n        Node(int val) {\n            this.val = val;\n        }\n    }\n\n    public MyLinkedList() {\n        head = null;\n        size = 0;\n    }\n\n    public int get(int index) {\n        if (index &lt; 0 || index &gt;= size) {\n            return -1;\n        }\n\n        Node curr = head;\n        for (int i = 0; i &lt; index; i++) {\n            curr = curr.next;\n        }\n\n        return curr.val;\n    }\n\n    public void addAtHead(int val) {\n        Node newNode = new Node(val);\n        newNode.next = head;\n        head = newNode;\n        size++;\n    }\n\n    public void addAtTail(int val) {\n        Node newNode = new Node(val);\n\n        if (head == null) {\n            head = newNode;\n        } else {\n            Node curr = head;\n            while (curr.next != null) {\n                curr = curr.next;\n            }\n            curr.next = newNode;\n        }\n\n        size++;\n    }\n\n    public void addAtIndex(int index, int val) {\n        if (index &lt; 0 || index &gt; size) {\n            return;\n        }\n\n        if (index == 0) {\n            addAtHead(val);\n        } else if (index == size) {\n            addAtTail(val);\n        } else {\n            Node newNode = new Node(val);\n            Node curr = head;\n            for (int i = 0; i &lt; index - 1; i++) {\n                curr = curr.next;\n            }\n            newNode.next = curr.next;\n            curr.next = newNode;\n            size++;\n        }\n    }\n\n    public void deleteAtIndex(int index) {\n        if (index &lt; 0 || index &gt;= size) {\n            return;\n        }\n\n        if (index == 0) {\n            head = head.next;\n        } else {\n            Node curr = head;\n            for (int i = 0; i &lt; index - 1; i++) {\n                curr = curr.next;\n            }\n            curr.next = curr.next.next;\n        }\n\n        size--;\n    }\n    public static void main(String[] args) {\n    MyLinkedList obj = new MyLinkedList();\n    obj.addAtHead(1);\n    obj.addAtTail(3);\n    obj.addAtIndex(1, 2);    // linked list becomes 1-&gt;2-&gt;3\n    System.out.println(\"linked list becomes 1-&gt;2-&gt;3\");\n    // Test get method\n    System.out.println(obj.get(0));  // Output: 1\n    System.out.println(obj.get(1));  // Output: 2\n    System.out.println(obj.get(2));  // Output: 3\n    System.out.println(obj.get(3));  // Output: -1 (index out of bounds)\n    System.out.println(\"linked list becomes 1-&gt;3\");\n    obj.deleteAtIndex(1);    // now the linked list is 1-&gt;3\n\n    // Test get method after deletion\n    System.out.println(obj.get(0));  // Output: 1\n    System.out.println(obj.get(1));  // Output: 3\n    System.out.println(obj.get(2));  // Output: -1 (index out of bounds)\n    System.out.println(\"linked list becomes 0-&gt;1-&gt;3\");\n    obj.addAtHead(0);\n    obj.addAtIndex(2, 2);    // linked list becomes 0-&gt;1-&gt;3\n\n    // Test get method after adding new nodes\n    System.out.println(obj.get(0));  // Output: 0\n    System.out.println(obj.get(1));  // Output: 1\n    System.out.println(obj.get(2));  // Output: 2\n    System.out.println(obj.get(3));  // Output: 3\n    System.out.println(obj.get(4));  // Output: -1 (index out of bounds)\n}\n\n}\n\n\n</code></pre>"},{"location":"data_structure/linked-list/#node-nodenext","title":"node . node.next","text":"<p>node = current node \u8282\u70b9 = \u5f53\u524d\u8282\u70b9</p> <p>node.next = next node to current node.next = \u5f53\u524d\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9</p> <p>node.next.next = 2nd node from current node node.next.next = \u5f53\u524d\u8282\u70b9\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9  </p>"},{"location":"data_structure/linked-list/#how-to-use-node","title":"how to use node","text":"<pre><code>public ListNode reverseList(ListNode head) {\n        ListNode prev = null;\n        ListNode curr = head;\n        ListNode next = null;\n        while(curr != null) {\n            // save next\n            next = curr.next;\n            // reverse\n            curr.next = prev;\n            // move prev and curr\n            prev = curr;\n            curr = next;\n        }\n        return prev;\n    }\n</code></pre> <pre><code>ListNode prev = null;\nListNode curr = head;\nListNode next = null;\n</code></pre> <ul> <li><code>prev</code>,\u00a0<code>curr</code>, and\u00a0<code>next</code>\u00a0are three pointers that will be used to reverse the linked list. <code>prev</code>\u00a0\u3001\u00a0<code>curr</code>\u00a0\u548c\u00a0<code>next</code>\u00a0\u662f\u5c06\u7528\u4e8e\u53cd\u8f6c\u94fe\u8868\u7684\u4e09\u4e2a\u6307\u9488\u3002</li> <li><code>prev</code>\u00a0points to the previous node in the reversed list (initially null). <code>prev</code>\u00a0\u6307\u5411\u53cd\u5411\u5217\u8868\u4e2d\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\uff08\u6700\u521d\u4e3a null\uff09\u3002</li> <li><code>curr</code>\u00a0points to the current node in the original list (initially the head of the list). <code>curr</code>\u00a0\u6307\u5411\u539f\u59cb\u5217\u8868\u4e2d\u7684\u5f53\u524d\u8282\u70b9\uff08\u6700\u521d\u662f\u5217\u8868\u7684\u5934\u90e8\uff09\u3002</li> <li><code>next</code>\u00a0is a temporary pointer to hold the next node in the original list before we reverse the pointers. <code>next</code>\u00a0\u662f\u4e00\u4e2a\u4e34\u65f6\u6307\u9488\uff0c\u7528\u4e8e\u5728\u6211\u4eec\u53cd\u8f6c\u6307\u9488\u4e4b\u524d\u4fdd\u6301\u539f\u59cb\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002</li> </ul> <pre><code>while(curr != null) {\n    next = curr.next;\n    curr.next = prev;\n    prev = curr;\n    curr = next;\n}\n</code></pre> <ol> <li> <p><code>prev</code>\u00a0is initially set to\u00a0<code>null</code>, as there is no previous node for the first node in the original list. <code>prev</code>\u00a0\u6700\u521d\u8bbe\u7f6e\u4e3a\u00a0<code>null</code>\u00a0\uff0c\u56e0\u4e3a\u539f\u59cb\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u6ca1\u6709\u4e0a\u4e00\u4e2a\u8282\u70b9\u3002</p> </li> <li> <p><code>curr</code>\u00a0is initially set to the\u00a0<code>head</code>\u00a0of the original list. This is the current node that we are considering for reversal. <code>curr</code>\u00a0\u6700\u521d\u8bbe\u7f6e\u4e3a\u539f\u59cb\u5217\u8868\u00a0<code>head</code>\u00a0\u7684 \u3002\u8fd9\u662f\u6211\u4eec\u6b63\u5728\u8003\u8651\u53cd\u8f6c\u7684\u5f53\u524d\u8282\u70b9\u3002</p> </li> <li> <p><code>next</code>\u00a0is initially set to\u00a0<code>null</code>\u00a0because we have not traversed to the next node yet. <code>next</code>\u00a0\u6700\u521d\u8bbe\u7f6e\u4e3a \uff0c\u00a0<code>null</code>\u00a0\u56e0\u4e3a\u6211\u4eec\u5c1a\u672a\u904d\u5386\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002</p> </li> <li> <p>Inside the\u00a0<code>while</code>\u00a0loop, we save the reference to the next node in the original list by assigning it to the\u00a0<code>next</code>\u00a0pointer. This step is essential because we will modify the\u00a0<code>curr.next</code>\u00a0pointer in the next step.     \u5728\u5faa\u73af\u4e2d\u00a0<code>while</code>\u00a0\uff0c\u6211\u4eec\u901a\u8fc7\u5c06\u5176\u5206\u914d\u7ed9\u00a0<code>next</code>\u00a0\u6307\u9488\u6765\u4fdd\u5b58\u5bf9\u539f\u59cb\u5217\u8868\u4e2d\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5f15\u7528\u3002\u6b64\u6b65\u9aa4\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u6b65\u4e2d\u4fee\u6539\u00a0<code>curr.next</code>\u00a0\u6307\u9488\u3002</p> </li> <li> <p>Then, we reverse the direction of\u00a0<code>curr</code>'s\u00a0<code>next</code>\u00a0pointer to point to the previous node (<code>prev</code>). This effectively reverses the link between\u00a0<code>curr</code>\u00a0and its next node in the reversed list.     \u7136\u540e\uff0c\u6211\u4eec\u53cd\u8f6c\u00a0<code>curr</code>\u00a0\u7684\u00a0<code>next</code>\u00a0\u6307\u9488\u65b9\u5411\uff0c\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9 \uff08\u00a0<code>prev</code>\u00a0\uff09\u3002\u8fd9\u6709\u6548\u5730\u53cd\u8f6c\u4e86\u53cd\u5411\u5217\u8868\u4e2d\u4e0e\u5176\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u00a0<code>curr</code>\u00a0\u94fe\u63a5\u3002</p> </li> <li> <p>After reversing the\u00a0<code>next</code>\u00a0pointer, we move the\u00a0<code>prev</code>\u00a0and\u00a0<code>curr</code>\u00a0pointers one step forward in the list. Now,\u00a0<code>prev</code>\u00a0becomes the current node, and\u00a0<code>curr</code>\u00a0becomes the next node in the original list.     \u53cd\u8f6c\u00a0<code>next</code>\u00a0\u6307\u9488\u540e\uff0c\u6211\u4eec\u5c06\u00a0<code>prev</code>\u00a0and\u00a0<code>curr</code>\u00a0\u6307\u9488\u5728\u5217\u8868\u4e2d\u5411\u524d\u79fb\u52a8\u4e00\u6b65\u3002\u73b0\u5728\uff0c\u6210\u4e3a\u5f53\u524d\u8282\u70b9\uff0c\u00a0<code>prev</code>\u00a0\u5e76\u00a0<code>curr</code>\u00a0\u6210\u4e3a\u539f\u59cb\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002</p> </li> <li> <p>We repeat steps 4-6 until we reach the end of the original list (<code>curr != null</code>).     \u6211\u4eec\u91cd\u590d\u6b65\u9aa4 4-6\uff0c\u76f4\u5230\u5230\u8fbe\u539f\u59cb\u5217\u8868\u7684\u672b\u5c3e \uff08\u00a0<code>curr != null</code>\u00a0\uff09\u3002</p> </li> <li> <p>Finally, we return the\u00a0<code>prev</code>\u00a0pointer, which now points to the new head of the reversed list.     \u6700\u540e\uff0c\u6211\u4eec\u8fd4\u56de\u00a0<code>prev</code>\u00a0\u6307\u9488\uff0c\u5b83\u73b0\u5728\u6307\u5411\u53cd\u5411\u5217\u8868\u7684\u65b0\u5934\u3002</p> </li> </ol> <pre><code>return prev;\n</code></pre> <p>Copy Code</p> <ul> <li>Once we have reversed the linked list, we return the\u00a0<code>prev</code>\u00a0pointer, which now points to the new head of the reversed list.     \u4e00\u65e6\u6211\u4eec\u53cd\u8f6c\u4e86\u94fe\u8868\uff0c\u6211\u4eec\u8fd4\u56de\u00a0<code>prev</code>\u00a0\u6307\u9488\uff0c\u5b83\u73b0\u5728\u6307\u5411\u53cd\u8f6c\u5217\u8868\u7684\u65b0\u5934\u3002</li> </ul>"},{"location":"data_structure/linked-list/#two-pointer-in-linked-list","title":"Two-Pointer in Linked List","text":"<p>\u94fe\u8868\u4e2d\u7684\u53cc\u6307\u9488 Given a linked list, determine if it has a cycle in it. We initialize two pointers, slow and fast, pointing to the head of the linked list. \u6211\u4eec\u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488\uff0c slow \u5e76 fast \u6307\u5411\u94fe\u8868\u7684 \u3002 head We traverse the linked list using the two pointers. slow moves one step at a time, while fast moves two steps at a time. \u6211\u4eec\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u904d\u5386\u94fe\u8868\u3002 slow \u4e00\u6b21\u79fb\u52a8\u4e00\u6b65\uff0c\u540c\u65f6 fast \u4e00\u6b21\u79fb\u52a8\u4e24\u6b65\u3002 If there is a cycle in the linked list, eventually the fast pointer will catch up to the slow pointer. This indicates the presence of a cycle, and we return true. \u5982\u679c\u94fe\u8868\u4e2d\u6709\u4e00\u4e2a\u5faa\u73af\uff0c\u6700\u7ec8\u6307\u9488 fast \u5c06\u8d76\u4e0a slow \u6307\u9488\u3002\u8fd9\u8868\u660e\u5b58\u5728\u4e00\u4e2a\u5faa\u73af\uff0c\u6211\u4eec\u8fd4\u56de true . If the fast pointer reaches the end of the linked list (i.e., it becomes null), it means there is no cycle, and we return false. \u5982\u679c fast \u6307\u9488\u5230\u8fbe\u94fe\u8868\u7684\u672b\u5c3e\uff08\u5373\u5b83\u53d8\u6210 null \uff09\uff0c\u5219\u8868\u793a\u6ca1\u6709\u5faa\u73af\uff0c\u6211\u4eec\u8fd4\u56de false \u3002</p> <pre><code>class Solution {\n    public static boolean hasCycle(ListNode head) {\n        if (head == null || head.next == null) {\n            return false;\n        }\n        // Initialize slow &amp; fast pointers\n        ListNode slow = head;\n        ListNode fast = head.next;\n\n        while (slow != fast) {\n        /**\n * Change this condition to fit specific problem.\n * Attention: remember to avoid null-pointer error\n **/\n            if (fast == null || fast.next == null) {\n                return false;\n            }\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n\n        return true;\n    }\n}\n\n</code></pre> <p>Given the\u00a0<code>head</code>\u00a0of a linked list, return\u00a0the node where the cycle begins. If there is no cycle, return <code>null</code>.</p> <pre><code>\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        if (head == null || head.next == null) {\n            return null;\n        }\n\n        ListNode slow = head;\n        ListNode fast = head;\n\n        boolean hasCycle = false;\n        while (fast != null &amp;&amp; fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n            if (slow == fast) {\n                hasCycle = true;\n                break;\n            }\n        }\n\n        if (!hasCycle) {\n            return null;\n        }\n\n        slow = head;\n        while (slow != fast) {\n            slow = slow.next;\n            fast = fast.next;\n        }\n\n        return slow;\n    }\n}\n</code></pre>"},{"location":"data_structure/linked-list/#intersection-of-two-linked-lists","title":"Intersection of Two Linked Lists","text":"<p>\u4e24\u4e2a\u94fe\u8868\u7684\u4ea4\u96c6</p> <p>Solution</p> <p>Given the heads of two singly linked-lists\u00a0<code>headA</code>\u00a0and\u00a0<code>headB</code>, return\u00a0the node at which the two lists intersect. If the two linked lists have no intersection at all, return\u00a0<code>null</code>. \u7ed9\u5b9a\u4e24\u4e2a\u5355\u94fe\u5217\u8868\u7684\u5934\u90e8\uff0c\u8fd4\u56de\u4e24\u4e2a\u5217\u8868\u00a0<code>headA</code> <code>headB</code>\u00a0\u76f8\u4ea4\u7684\u8282\u70b9\u3002\u5982\u679c\u4e24\u4e2a\u94fe\u8868\u6839\u672c\u6ca1\u6709\u4ea4\u96c6\uff0c\u5219\u8fd4\u56de\u00a0<code>null</code>\u00a0\u3002</p> <p>For example, the following two linked lists begin to intersect at node\u00a0<code>c1</code>: \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4e24\u4e2a\u94fe\u8868\u5728\u8282\u70b9\u00a0<code>c1</code>\u00a0\u5904\u5f00\u59cb\u76f8\u4ea4\uff1a</p> <pre><code>public class ListNode {\n    int val;\n     ListNode next;\n     ListNode(int x) {\n         val = x;\n         next = null;\n     }\n }\npublic class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        if (headA == null || headB == null) {\n            return null;\n        }\n\n        ListNode pA = headA;\n        ListNode pB = headB;\n\n        // Traverse both lists until they meet (or reach the end)\n        while (pA != pB) {\n            // Move pointers to the next node\n            if (pA == null) {\n                pA = headB;\n            } else {\n                pA = pA.next;\n            }\n\n            if (pB == null) {\n                pB = headA;\n            } else {\n                pB = pB.next;\n            }\n        }\n\n        return pA;  // Return the intersection point (or null)\n    }\n    public static void main(String[] args) {\n    // Create the two linked lists\n    ListNode intersectNode = new ListNode(2);\n\n    ListNode headA = new ListNode(1);\n    ListNode nodeA1 = new ListNode(9);\n    ListNode nodeA2 = intersectNode;\n\n    ListNode headB = new ListNode(3);\n    ListNode nodeB = intersectNode;\n\n    ListNode nodeA3 = new ListNode(1);\n    ListNode nodeA4 = new ListNode(4);\n\n    headA.next = nodeA1;\n    nodeA1.next = nodeA2;\n    nodeA2.next = nodeA3;\n    nodeA3.next = nodeA4;\n\n    headB.next = nodeB;\n\n    Solution solution = new Solution();\n    ListNode result = solution.getIntersectionNode(headA, headB);\n\n    System.out.println(\"Intersected at: \" + result.val);  // Output: Intersected at 2\n}\n\n\n\n}\n\n</code></pre> <p>If pA reaches the end of linked list headA, we set pA to the head of headB. \u5982\u679c pA \u5230\u8fbe\u94fe\u8868 headA \u7684\u672b\u5c3e\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e3a pA \u7684 headB \u5934\u90e8\u3002 If pB reaches the end of linked list headB, we set pB to the head of headA. \u5982\u679c pB \u5230\u8fbe\u94fe\u8868 headB \u7684\u672b\u5c3e\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e3a pB \u7684 headA \u5934\u90e8\u3002 In all other cases, we simply move pA and pB to their next nodes. \u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u79fb\u52a8\u5230 pA pB \u5b83\u4eec\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002 If the two linked lists have an intersection, the pointers will eventually meet at the intersection point. \u5982\u679c\u4e24\u4e2a\u94fe\u8868\u6709\u4ea4\u96c6\uff0c\u5219\u6307\u9488\u6700\u7ec8\u5c06\u5728\u4ea4\u70b9\u76f8\u9047\u3002 If there is no intersection, both pointers will reach the end (null) simultaneously. \u5982\u679c\u6ca1\u6709\u4ea4\u96c6\uff0c\u4e24\u4e2a\u6307\u9488\u5c06\u540c\u65f6\u5230\u8fbe\u7ec8\u70b9 \uff08 null \uff09\u3002 We return the intersection point (or null if there is no intersection). \u6211\u4eec\u8fd4\u56de\u4ea4\u70b9\uff08\u6216\u8005 null \u5982\u679c\u6ca1\u6709\u4ea4\u70b9\uff09\u3002</p>"},{"location":"data_structure/linked-list/#reverse-linked-list","title":"Reverse Linked List\u00a0\u53cd\u5411\u94fe\u8868","text":"<p>Given the\u00a0<code>head</code>\u00a0of a singly linked list, reverse the list, and return\u00a0the reversed list. \u7ed9\u5b9a\u5355\u5411\u94fe\u8868\u7684 \uff0c\u00a0<code>head</code>\u00a0\u53cd\u8f6c\u5217\u8868\uff0c\u5e76\u8fd4\u56de\u53cd\u8f6c\u5217\u8868\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p></p> <p>Input: head = [1,2,3,4,5] Output: [5,4,3,2,1]  </p> <pre><code>class Solution {\n    public ListNode reverseList(ListNode head) {\n        ListNode prev = null;\n        ListNode curr = head;\n        ListNode next = null;\n        while(curr != null) {\n            // save next\n            next = curr.next;\n            // reverse\n            curr.next = prev;\n            // move prev and curr\n            prev = curr;\n            curr = next;\n        }\n        return prev;\n    }\n}\n</code></pre>"},{"location":"data_structure/linked-list/#remove-linked-list-elements","title":"Remove Linked List Elements","text":"<p>Given the\u00a0<code>head</code>\u00a0of a linked list and an integer\u00a0<code>val</code>, remove all the nodes of the linked list that has\u00a0<code>Node.val == val</code>, and return\u00a0the new head. Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p></p> <p>Input: head = [1,2,6,3,4,5,6], val = 6 Output: [1,2,3,4,5]  </p> <pre><code>public class Solution {\n    public ListNode removeElements(ListNode head, int val) {\n        // Handle the case where head is null\n        if (head == null) {\n            return null;\n        }\n\n        // Create a dummy node to handle the head removal case\n        ListNode dummy = new ListNode(0);\n        dummy.next = head;\n\n        ListNode prev = dummy;\n        ListNode curr = head;\n\n        // Iterate through the linked list\n        while (curr != null) {\n            // If the current node's value matches the given value, remove it\n            if (curr.val == val) {\n                prev.next = curr.next;\n            } else {\n                // Move the previous pointer only if the current node is not removed\n                prev = curr;\n            }\n\n            // Move the current pointer\n            curr = curr.next;\n        }\n\n        return dummy.next;  // Return the new head\n    }\n}\n\n</code></pre>"},{"location":"data_structure/linked-list/#odd-even-linked-list","title":"Odd Even Linked List\u00a0\u5947\u5076\u94fe\u8868","text":"<p>Given the head of a singly linked list, group all the nodes with odd indices together followed by the nodes with even indices, and return the reordered list.  </p> <pre><code>public class Solution {\n    public ListNode oddEvenList(ListNode head) {\n        if (head == null || head.next == null) {\n            return head;\n        }\n\n        ListNode odd = head;\n        ListNode even = head.next;\n        ListNode evenHead = even;\n\n        while (even != null &amp;&amp; even.next != null) {\n            odd.next = even.next;\n            odd = odd.next;\n            even.next = odd.next;\n            even = even.next;\n        }\n\n        odd.next = evenHead;\n\n        return head;\n    }\n}\n\n</code></pre> <p>We initialize two pointers, odd and even, pointing to the first and second nodes of the linked list, respectively. We also store the head of the even nodes in the evenHead variable. \u6211\u4eec\u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488\uff0c odd \u548c \u5206\u522b\u6307\u5411\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u548c even \u7b2c\u4e8c\u4e2a\u8282\u70b9\u3002\u6211\u4eec\u8fd8\u5c06\u5076\u6570\u8282\u70b9\u7684\u5934\u90e8\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d evenHead \u3002 We traverse the linked list, moving the odd pointer to the next odd node and the even pointer to the next even node. We do this by connecting odd.next to even.next and updating odd and even accordingly. \u6211\u4eec\u904d\u5386\u94fe\u8868\uff0c\u5c06 odd \u6307\u9488\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5947\u6570\u8282\u70b9\uff0c\u5c06 even \u6307\u9488\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5076\u6570\u8282\u70b9\u3002\u6211\u4eec\u901a\u8fc7\u8fde\u63a5 odd.next even.next \u548c\u66f4\u65b0 odd even \u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002 When we reach the end of the linked list (i.e., even becomes null or even.next becomes null), we connect the last odd node (odd) to the head of the even nodes (evenHead). \u5f53\u6211\u4eec\u5230\u8fbe\u94fe\u8868\u7684\u672b\u5c3e\uff08\u5373\u6210\u4e3a even null \u6216 even.next \u6210\u4e3a null \uff09\u65f6\uff0c\u6211\u4eec\u5c06\u6700\u540e\u4e00\u4e2a\u5947\u6570\u8282\u70b9\uff08\uff09\u8fde\u63a5\u5230\u5076\u6570\u8282\u70b9\uff08 odd \uff09\u7684\u5934\u90e8 evenHead \u3002 Finally, we return the original head of the linked list, which has been rearranged according to the problem's requirement. \u6700\u540e\uff0c\u6211\u4eec\u8fd4\u56de\u94fe\u8868\u7684\u539f\u59cb head \u6587\u4ef6\uff0c\u8be5\u94fe\u8868\u5df2\u6839\u636e\u95ee\u9898\u7684\u8981\u6c42\u91cd\u65b0\u6392\u5217\u3002</p>"},{"location":"data_structure/linked-list/#remove-nth-node-from-end-of-list-n","title":"Remove Nth Node From End of List  \u4ece\u5217\u8868\u672b\u5c3e\u5220\u9664\u7b2c N \u4e2a\u8282\u70b9","text":"<p>Solution</p> <p>Given the\u00a0<code>head</code>\u00a0of a linked list, remove the\u00a0<code>nth</code>\u00a0node from the end of the list and return its head. \u7ed9\u5b9a\u94fe\u8868\u7684 \uff0c\u00a0<code>head</code>\u00a0\u4ece\u5217\u8868\u672b\u5c3e\u5220\u9664\u00a0<code>nth</code>\u00a0\u8282\u70b9\u5e76\u8fd4\u56de\u5176\u5934\u90e8\u3002</p> <p>Example 1:\u00a0\u793a\u4f8b 1\uff1a</p> <p></p> <p>Input: head = [1,2,3,4,5], n = 2 Output: [1,2,3,5]</p> <p>Example 2:\u00a0\u793a\u4f8b 2\uff1a</p> <p>Input: head = [1], n = 1 Output: []</p> <p>Example 3:\u00a0\u4f8b3\uff1a</p> <p>Input: head = [1,2], n = 1 Output: [1]</p> <pre><code>public ListNode removeNthFromEnd(ListNode head, int n) {  \n    ListNode dummy = new ListNode(0,head);  \n    ListNode first = dummy;  \n    ListNode second = dummy;  \n    for(int i=1;i&lt;=n+1;i++){  \n        first = first.next;  \n    }  \n    while(first!=null){  \n        first = first.next;  \n        second = second.next;  \n    }  \n    second.next = second.next.next;  \n    return dummy.next;  \n\n}\n</code></pre>"},{"location":"img/readme/","title":"Readme","text":""},{"location":"img/readme/#obsidian-zola","title":"obsidian-zola","text":"<p>A free (but better?) alternative to Obsidian Publish.</p> <p>This repo contains an easy-to-use (read: simplistic) solution for converting an Obsidian Personal Knowledge Management System (read: bunch of random Markdowns) into a Zola site.</p> <p>Credits: This repo was forked from Adidoks.</p> <p>Special Thanks: Wikilink parsing is powered by obsidian-export.</p>"},{"location":"img/readme/#announcements","title":"Announcements","text":"<p>v1.3.0 Satisfying Feature Requests! \u2728</p> <p>Bug Fixes:</p> <ul> <li>Fixed some more bugs related to unconventional filenames (e.g. containing \".\" and other special characters)</li> </ul> <p>Improvements:</p> <ul> <li>Better local test setup (see <code>Local Testing</code> below)</li> <li>Configurable root section name</li> <li>Configurable footer content</li> </ul>"},{"location":"img/readme/#setup","title":"Setup","text":"<p>Step 1: Setup Netlify</p> <ul> <li>Turn your Obsidian vault folder into a Git repository</li> <li>Create a Netlify site pointing to that Git repository</li> </ul> <p>Step 2: Edit <code>netlify.toml</code></p> <ul> <li>Create <code>netlify.toml</code> in your Obsidian vault folder</li> <li>Copy the content from <code>netlify.example.toml</code> in this repo and replace the appropriate settings (<code>SITE_URL</code>, <code>REPO_URL</code> and <code>LANDING_PAGE</code> cannot be left empty). </li> </ul> <p>Step 3: You're Done \ud83c\udf89!</p> <ul> <li>Push your changes and get ready to become famous!</li> <li>Be Fancy: All text field settings in <code>netlify.toml</code> (e.g. <code>LANDING_TITLE</code>) supports HTML syntax. And I added <code>Animate.css</code> + <code>Hover.css</code> + <code>CSShake</code> for those of you who want to add a personal touch~ </li> </ul> <p>Step 4: Issues &amp; Feature Requests</p> <ul> <li>If you encounter any issues, first refer to Config+FAQ. If still unsolved, just post in the <code>Issues</code> tab. It would be good to include a copy of the error log found in the Netlify panel if the issue is related to deployment.</li> <li>If you have any feature request, do post an issue also. However, please this repo is intended as a one-file setup. Advanced features / detailed configurability will not be supported unless it is wanted by most users. However, I can provide help for you to implement a fork that suits your needs \ud83e\udd42.</li> </ul> <p>Step 5: (Optional Enhancement) Auto Sitemap Submit</p> <p>To make your site more friendly to search engines, you can add a netlify plugin to automatically submit the new sitemap everytime you re-deploy the site. Just add the following to your <code>netlify.toml</code>. Remember to replace <code>baseUrl</code> with your <code>SITE_URL</code>.</p> <pre><code>[[plugins]]\npackage = \"netlify-plugin-submit-sitemap\"\n\n[plugins.inputs]\n\n# The base url of your site (optional, default = main URL set in Netlify)\nbaseUrl = \"https://peteryuen.netlify.app/\"\n\n# Path to the sitemap URL (optional, default = /sitemap.xml)\nsitemapPath = \"/sitemap.xml\"\n\n# Time in seconds to not submit the sitemap after successful submission\nignorePeriod = 0\n\n# Enabled providers to submit sitemap to (optional, default = 'google', 'bing', 'yandex'). Possible providers are currently only 'google', 'bing', 'yandex'.\nproviders = [\n  \"google\",\n  \"bing\",\n  \"yandex\",\n]\n</code></pre>"},{"location":"img/readme/#example-site","title":"Example Site","text":"<p>Do not copy <code>netlify.toml</code> from example site, it is unstable. Please reference from <code>netlify.example.toml</code>.</p> <p>The example site shows the capabilities of <code>obsidian-zola</code>. Note that the example site uses the <code>dev</code> branch of <code>obsidian-zola</code>. If you see features that are available in the example site but are not available in the main branch yet, consider trying out the <code>dev</code> (unstable) branch. Exact method can be referenced from the example repo's <code>netlify.toml</code>.</p>"},{"location":"img/readme/#local-testing-ubuntu-thanks-trwbox","title":"Local Testing (Ubuntu) [thanks @trwbox]","text":"<ul> <li>Install zola from the instuctions on the site <code>https://www.getzola.org/documentation/getting-started/installation/</code></li> <li>Run the following commands to install other needed dependencies <code>sudo apt install python-is-python3 python3-pip</code> and <code>pip3 install python-slugify rtoml</code> (or use <code>conda</code> / <code>mamba</code>)</li> <li>Use <code>git clone https://github.com/ppeetteerrs/obsidian-zola</code> to clone the repo to somewhere other than inside the Obsidian vault folder</li> <li>Set the path to the Obsisian vault using a <code>.vault_path</code> file or the <code>$VAULT</code> environment variable</li> <li>use <code>./local-run.sh</code> to run the site</li> </ul>"},{"location":"img/readme/#features","title":"Features","text":"<p>Disclaimer</p> <p>This tool is made for people who use Obsidian as a simple and efficient note-taking app (or PKM). If you configured your Obsidian with plenty of fancy shortcodes, plugins and Obsidian-specific syntax, this tool would not (and does not intend) to support those features.</p> <p>Supported - Knowledge graph (you can also treat it as backlinks) - LaTEX (powered by <code>KaTEX</code>, bye MathJAX fans \ud83d\udc4b) - Partial string search (powered by <code>elasticlunr</code>) - Syntax highlighting + Fira Code! - Customizable animations - Navigation - Table of content - Typical Markdown syntax - Strikethroughs - Tables - Single-line footnotes (i.e. <code>[^1]</code> in the paragraph and <code>[^1]: xxx</code> later) - Checkboxes - Link escaping pattern: <code>[Slides Demo](&lt;Slides Demo&gt;)</code></p> <p>Unsupported</p> <ul> <li>Non-image / note embeds (e.g. videos, audio, PDF). They will be turned into links.</li> <li>Image resizing</li> <li>Highlighting text</li> <li>Comments</li> <li>Inline / Multi-line footnotes</li> <li>Mermaid Diagrams</li> </ul>"},{"location":"img/readme/#gotchas","title":"Gotchas","text":"<ol> <li>Do not have files with name <code>index.md</code> or <code>_index.md</code></li> <li>~~Do not have files that have the same name as its subfolder (e.g. having both <code>.../category1.md</code> and <code>.../category1/xxx.md</code> is not allowed)~~ (Fixed)</li> <li><code>LANDING_PAGE</code> needs to be set to the slugified file name if <code>SLUGIFY</code> is turned on (e.g. to use <code>I am Home.md</code>, <code>LANDING_PAGE</code> needs to be <code>i-am-home</code>)</li> </ol>"},{"location":"img/readme/#wips-ideas","title":"WIPs / Ideas","text":"<ul> <li>(Probably will do) Backlinks / Mentioned in</li> <li>(Maybe) Lottie animations?</li> <li>(Dunno) Configurable collapse icon</li> </ul>"},{"location":"kubernetes/kubernetes/","title":"Kubernetes","text":"<p>turturial pdf  Link: https://uklabs.kodekloud.com/courses/labs-kubernetes-for-the-absolute-beginners-hands-on/ Apply the coupon code\u00a0kk-labs-k8b-lakjg328321095305 </p>"},{"location":"reactJS/react_note_menu/","title":"reactJS note navigation","text":"<p>Create time: 2022-11-29  Last update: 2022-11-30</p>"},{"location":"reactJS/react_note_menu/#reactjs-note-navigation","title":"reactJS note navigation","text":""},{"location":"redis/redis_initial/","title":"Redis initial","text":""},{"location":"redis/redis_initial/#install","title":"install","text":"<pre><code>sudo apt update\nsudo apt install redis-server\nsudo nano /etc/redis/redis.conf\n</code></pre> <p>or  user data to create launch template  </p> <pre><code>#!/bin/bash\n\n# Update packages and install Redis server\napt update\napt install -y redis-server awscli\n\n# Set Redis password\nsed -i 's/# requirepass foobared/requirepass pwd/' /etc/redis/redis.conf\n\n# Enable Redis to listen on all interfaces\nsed -i 's/bind 127.0.0.1/bind 0.0.0.0/' /etc/redis/redis.conf\n\n# Restart Redis service\nsystemctl restart redis-server\n\n</code></pre> <pre><code>bind 0.0.0.0\n# requirepass foobared\nrequirepass \"\"\nsudo systemctl restart redis-server\nredis-cli ping\nredis-cli INFO server\n</code></pre>"},{"location":"redis/redis_initial/#test","title":"test","text":"<pre><code>redis-cli --scan --pattern '*'\nsystemctl status redis\n\nredis-cli monitor\n\nredis-cli\nconfig set requirepass pwd\nsave\nexit\n\nredis-cli -a pwd --scan --pattern '*'\n\n</code></pre> <pre><code>ubuntu@ip-:~$ redis-cli -a pwd --scan --pattern '*'\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\ntopic:Household Junk\nquiz_id:test\nquiz_id:3\ntopic:Garden Waste\ntopic:Recycled Waste\nquiz_id:2\nquiz_id:1\n\nubuntu@ip-:~$ redis-cli -a pwd\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n127.0.0.1:6379&gt; SMEMBERS \"topic:Recycled Waste\"\n1) \"test\"\n2) \"3\"\n\n</code></pre>"},{"location":"redis/redis_initial/#backup-redis","title":"backup redis","text":"<pre><code>ubuntu@ip-3:~$ redis-cli -a pwd\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\nWarning: AUTH failed\n127.0.0.1:6379&gt; --raw BGSAVE\n(error) ERR unknown command `--raw`, with args beginning with: `BGSAVE`, \n127.0.0.1:6379&gt; BGSAVE\nBackground saving started\n127.0.0.1:6379&gt; CONFIG GET dir\n1) \"dir\"\n2) \"/var/lib/redis\"\n</code></pre>"},{"location":"redis/redis_initial/#transfer-data","title":"transfer data","text":"<pre><code>ubuntu@ip-:~$ sudo aws configure\nAWS Access Key ID [None]: xx\nAWS Secret Access Key [None]: xx\nDefault region name [None]: xx\nDefault output format [None]: \n\nubuntu@ip-172-31-82-173:~$ sudo aws s3 cp /var/lib/redis/dump.rdb s3://xx/dump.rdb\nupload: ../../var/lib/redis/dump.rdb to s3://caxx/dump.rdb\n</code></pre>"},{"location":"redis/redis_initial/#import-data","title":"import data","text":"<p>Import and export data | Redis Documentation Center </p> <pre><code>aws s3 cp s3://xxx/dump.rdb /home/redis_backup/2023-09-30.rdb\n\nsudo systemctl stop redis-server\n\nsudo rm /var/lib/redis/dump.rdb\n\nsudo mv /home/redis_backup/2023-09-30.rdb /var/lib/redis/dump.rdb\n\nsudo systemctl start redis-server\n\n</code></pre>"}]}